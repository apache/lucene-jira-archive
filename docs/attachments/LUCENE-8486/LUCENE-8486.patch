From 497fb1906c78031c06f9e3ee7fdee9d8f8b6eacd Mon Sep 17 00:00:00 2001
From: Namgyu Kim <kng0828@gmail.com>
Date: Thu, 6 Sep 2018 02:06:06 +0900
Subject: [PATCH] LUCENE-8486: Code Refactoring in Field

Signed-off-by: Namgyu Kim <kng0828@gmail.com>
---
 .../src/java/org/apache/lucene/document/Field.java | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/lucene/core/src/java/org/apache/lucene/document/Field.java b/lucene/core/src/java/org/apache/lucene/document/Field.java
index 467fec7c23..eafbedc039 100644
--- a/lucene/core/src/java/org/apache/lucene/document/Field.java
+++ b/lucene/core/src/java/org/apache/lucene/document/Field.java
@@ -354,7 +354,7 @@ public class Field implements IndexableField {
     if (!(fieldsData instanceof Byte)) {
       throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName() + " to Byte");
     }
-    fieldsData = Byte.valueOf(value);
+    fieldsData = value;
   }
 
   /**
@@ -365,7 +365,7 @@ public class Field implements IndexableField {
     if (!(fieldsData instanceof Short)) {
       throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName() + " to Short");
     }
-    fieldsData = Short.valueOf(value);
+    fieldsData = value;
   }
 
   /**
@@ -376,7 +376,7 @@ public class Field implements IndexableField {
     if (!(fieldsData instanceof Integer)) {
       throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName() + " to Integer");
     }
-    fieldsData = Integer.valueOf(value);
+    fieldsData = value;
   }
 
   /**
@@ -387,7 +387,7 @@ public class Field implements IndexableField {
     if (!(fieldsData instanceof Long)) {
       throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName() + " to Long");
     }
-    fieldsData = Long.valueOf(value);
+    fieldsData = value;
   }
 
   /**
@@ -398,7 +398,7 @@ public class Field implements IndexableField {
     if (!(fieldsData instanceof Float)) {
       throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName() + " to Float");
     }
-    fieldsData = Float.valueOf(value);
+    fieldsData = value;
   }
 
   /**
@@ -409,7 +409,7 @@ public class Field implements IndexableField {
     if (!(fieldsData instanceof Double)) {
       throw new IllegalArgumentException("cannot change value type from " + fieldsData.getClass().getSimpleName() + " to Double");
     }
-    fieldsData = Double.valueOf(value);
+    fieldsData = value;
   }
 
   /**
@@ -597,7 +597,7 @@ public class Field implements IndexableField {
   }
 
   /** Specifies whether and how a field should be stored. */
-  public static enum Store {
+  public enum Store {
 
     /** Store the original field value in the index. This is useful for short texts
      * like a document's title which should be displayed with the results. The
-- 
2.18.0.windows.1

