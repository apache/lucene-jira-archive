Index: lucene/core/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum.java	(revision 1606765)
+++ lucene/core/src/java/org/apache/lucene/index/MultiDocsAndPositionsEnum.java	(working copy)
@@ -31,7 +31,7 @@
 public final class MultiDocsAndPositionsEnum extends DocsAndPositionsEnum {
   private final MultiTermsEnum parent;
   final DocsAndPositionsEnum[] subDocsAndPositionsEnum;
-  private EnumWithSlice[] subs;
+  private final EnumWithSlice[] subs;
   int numSubs;
   int upto;
   DocsAndPositionsEnum current;
@@ -42,6 +42,10 @@
   public MultiDocsAndPositionsEnum(MultiTermsEnum parent, int subReaderCount) {
     this.parent = parent;
     subDocsAndPositionsEnum = new DocsAndPositionsEnum[subReaderCount];
+    this.subs = new EnumWithSlice[subReaderCount];
+    for (int i = 0; i < subs.length; i++) {
+      subs[i] = new EnumWithSlice();
+    }
   }
 
   /** Returns {@code true} if this instance can be reused by
@@ -53,9 +57,7 @@
   /** Rre-use and reset this instance on the provided slices. */
   public MultiDocsAndPositionsEnum reset(final EnumWithSlice[] subs, final int numSubs) {
     this.numSubs = numSubs;
-    this.subs = new EnumWithSlice[subs.length];
-    for(int i=0;i<subs.length;i++) {
-      this.subs[i] = new EnumWithSlice();
+    for(int i=0;i<numSubs;i++) {
       this.subs[i].docsAndPositionsEnum = subs[i].docsAndPositionsEnum;
       this.subs[i].slice = subs[i].slice;
     }
Index: lucene/core/src/java/org/apache/lucene/index/MultiDocsEnum.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/MultiDocsEnum.java	(revision 1606765)
+++ lucene/core/src/java/org/apache/lucene/index/MultiDocsEnum.java	(working copy)
@@ -31,7 +31,7 @@
 public final class MultiDocsEnum extends DocsEnum {
   private final MultiTermsEnum parent;
   final DocsEnum[] subDocsEnum;
-  private EnumWithSlice[] subs;
+  private final EnumWithSlice[] subs;
   int numSubs;
   int upto;
   DocsEnum current;
@@ -44,14 +44,16 @@
   public MultiDocsEnum(MultiTermsEnum parent, int subReaderCount) {
     this.parent = parent;
     subDocsEnum = new DocsEnum[subReaderCount];
+    this.subs = new EnumWithSlice[subReaderCount];
+    for (int i = 0; i < subs.length; i++) {
+      subs[i] = new EnumWithSlice();
+    }
   }
 
   MultiDocsEnum reset(final EnumWithSlice[] subs, final int numSubs) {
     this.numSubs = numSubs;
 
-    this.subs = new EnumWithSlice[subs.length];
-    for(int i=0;i<subs.length;i++) {
-      this.subs[i] = new EnumWithSlice();
+    for(int i=0;i<numSubs;i++) {
       this.subs[i].docsEnum = subs[i].docsEnum;
       this.subs[i].slice = subs[i].slice;
     }
