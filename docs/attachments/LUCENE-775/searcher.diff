Index: Searcher.java
===================================================================
--- Searcher.java	(revision 495792)
+++ Searcher.java	(arbetskopia)
@@ -34,24 +34,24 @@
    * @throws BooleanQuery.TooManyClauses
    */
   public final Hits search(Query query) throws IOException {
-    return search(query, (Filter)null);
+    return search(query, (Filter)null, (Sort)null);
   }
 
   /** Returns the documents matching <code>query</code> and
    * <code>filter</code>.
    * @throws BooleanQuery.TooManyClauses
    */
-  public Hits search(Query query, Filter filter) throws IOException {
-    return new Hits(this, query, filter);
+  public final Hits search(Query query, Filter filter) throws IOException {
+    return search(query, filter, (Sort)null);
   }
 
   /** Returns documents matching <code>query</code> sorted by
    * <code>sort</code>.
    * @throws BooleanQuery.TooManyClauses
    */
-  public Hits search(Query query, Sort sort)
+  public final Hits search(Query query, Sort sort)
     throws IOException {
-    return new Hits(this, query, null, sort);
+    return search(query, (Filter)null, sort);
   }
 
   /** Returns documents matching <code>query</code> and <code>filter</code>,
@@ -91,7 +91,7 @@
    * between 0 and 1.
    * @throws BooleanQuery.TooManyClauses
    */
-  public void search(Query query, HitCollector results)
+  public final void search(Query query, HitCollector results)
     throws IOException {
     search(query, (Filter)null, results);
   }
Index: IndexSearcher.java
===================================================================
--- IndexSearcher.java	(revision 495792)
+++ IndexSearcher.java	(arbetskopia)
@@ -38,6 +38,10 @@
   IndexReader reader;
   private boolean closeReader;
 
+  /** Sub class ad hoc IndexReader coupling */
+  protected IndexSearcher() {      
+  }
+
   /** Creates a searcher searching the index in the named directory. */
   public IndexSearcher(String path) throws IOException {
     this(IndexReader.open(path), true);
