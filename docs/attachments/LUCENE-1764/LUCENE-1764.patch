Index: src/java/org/apache/lucene/search/SortComparator.java
===================================================================
--- src/java/org/apache/lucene/search/SortComparator.java	(revision 799881)
+++ src/java/org/apache/lucene/search/SortComparator.java	(working copy)
@@ -32,6 +32,13 @@
  * Comparable for each unique term in the field - if
  * some documents have the same term in the field, the cache
  * array will have entries which reference the same Comparable.
+ * 
+ * This class will be part of a key to the cache, so you must implement
+ * hashCode and equals to avoid an explosion in RAM usage if you use
+ * instances are not the same reference. If you are searching using
+ * the Remote contrib, the same instance on the client will be a new
+ * instance on every call to the server, so hashCode/equals is very 
+ * important in that situation.
  *
  * <p>Created: Apr 21, 2004 5:08:38 PM
  *
Index: src/java/org/apache/lucene/search/SortComparatorSource.java
===================================================================
--- src/java/org/apache/lucene/search/SortComparatorSource.java	(revision 799881)
+++ src/java/org/apache/lucene/search/SortComparatorSource.java	(working copy)
@@ -26,6 +26,12 @@
  *
  * <p>Created: Apr 21, 2004 3:49:28 PM
  * 
+ * This class will be part of a key to the cache, so you must implement
+ * hashCode and equals to avoid an explosion in RAM usage if you use
+ * instances that are not the same reference. If you are searching using
+ * the Remote contrib, the same instance on the client will be a new
+ * instance on every call to the server, so hashCode/equals is very 
+ * important in that situation.
  *
  * @version $Id$
  * @since   1.4

