Index: lucene/src/java/org/apache/lucene/util/BitUtil.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/BitUtil.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/BitUtil.java	(working copy)
@@ -20,8 +20,10 @@
 /**  A variety of high efficiency bit twiddling routines.
  * @lucene.internal
  */
-public class BitUtil {
+public final class BitUtil {
 
+  private BitUtil() {} // no instance
+
   /** Returns the number of bits set in the long */
   public static int pop(long x) {
   /* Hacker's Delight 32 bit pop function:
Index: lucene/src/java/org/apache/lucene/util/CodecUtil.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/CodecUtil.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/CodecUtil.java	(working copy)
@@ -31,6 +31,8 @@
  */
 
 public final class CodecUtil {
+  private CodecUtil() {} // no instance
+
   private final static int CODEC_MAGIC = 0x3fd76c17;
 
   public static IndexOutput writeHeader(IndexOutput out, String codec, int version)
Index: lucene/src/java/org/apache/lucene/util/English.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/English.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/English.java	(working copy)
@@ -20,8 +20,10 @@
 /**
  * @lucene.internal
  */ 
-public class English {
+public final class English {
 
+  private English() {} // no instance
+
   public static String longToEnglish(long i) {
     StringBuilder result = new StringBuilder();
     longToEnglish(i, result);
Index: lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/IndexableBinaryStringTools.java	(working copy)
@@ -53,7 +53,7 @@
  *
  * @lucene.experimental
  */
-public class IndexableBinaryStringTools {
+public final class IndexableBinaryStringTools {
 
   private static final CodingCase[] CODING_CASES = {
     // CodingCase(int initialShift, int finalShift)
Index: lucene/src/java/org/apache/lucene/util/IOUtils.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/IOUtils.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/IOUtils.java	(working copy)
@@ -21,7 +21,10 @@
 import java.io.IOException;
 
 /** @lucene.internal */
-public class IOUtils {
+public final class IOUtils {
+
+  private IOUtils() {} // no instance
+
   /**
    * <p>Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions. Some of the <tt>Closeable</tt>s
    * may be null, they are ignored. After everything is closed, method either throws <tt>priorException</tt>,
Index: lucene/src/java/org/apache/lucene/util/ReaderUtil.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/ReaderUtil.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/ReaderUtil.java	(working copy)
@@ -28,8 +28,10 @@
  *
  * @lucene.internal
  */
-public class ReaderUtil {
+public final class ReaderUtil {
 
+  private ReaderUtil() {} // no instance
+
   public static class Slice {
     public static final Slice[] EMPTY_ARRAY = new Slice[0];
     public final int start;
Index: lucene/src/java/org/apache/lucene/util/ToStringUtils.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/ToStringUtils.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/ToStringUtils.java	(working copy)
@@ -20,7 +20,10 @@
 /**
  * Helper methods to ease implementing {@link Object#toString()}.
  */
-public class ToStringUtils {
+public final class ToStringUtils {
+
+  private ToStringUtils() {} // no instance
+
   /**
    * for printing boost only if not 1.0
    */
Index: lucene/src/java/org/apache/lucene/util/UnicodeUtil.java
===================================================================
--- lucene/src/java/org/apache/lucene/util/UnicodeUtil.java	(revision 1029505)
+++ lucene/src/java/org/apache/lucene/util/UnicodeUtil.java	(working copy)
@@ -93,8 +93,10 @@
  * @lucene.internal
  */
 
-final public class UnicodeUtil {
+public final class UnicodeUtil {
 
+  private UnicodeUtil() {} // no instance
+
   public static final int UNI_SUR_HIGH_START = 0xD800;
   public static final int UNI_SUR_HIGH_END = 0xDBFF;
   public static final int UNI_SUR_LOW_START = 0xDC00;
