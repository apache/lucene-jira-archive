diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter.java
index c69bcca9cf..39c8df5ba1 100644
--- a/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter.java
+++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestFlattenGraphFilter.java
@@ -135,6 +135,28 @@ public class TestFlattenGraphFilter extends BaseTokenStreamTestCase {
                               12);
     
   }
+  
+  public void testWTF3() throws Exception {
+    int flags = 1 | 4 ;
+    org.apache.lucene.analysis.CharArraySet stopwords = new org.apache.lucene.analysis.CharArraySet(1, false);
+    stopwords.add("op");
+    
+    Analyzer a = new Analyzer() {
+        @Override
+        protected TokenStreamComponents createComponents(String fieldName) {
+          Tokenizer tokenizer = new org.apache.lucene.analysis.core.WhitespaceTokenizer();
+          TokenStream ts = new org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter(tokenizer, flags, new org.apache.lucene.analysis.CharArraySet(1, false));
+          ts = new org.apache.lucene.analysis.core.StopFilter(ts, stopwords);
+          ts = new FlattenGraphFilter(ts);
+          ts = new org.apache.lucene.analysis.minhash.MinHashFilter(ts, 1, 512, 1, true);
+          
+          return new TokenStreamComponents(tokenizer, ts);
+        }
+      };
+      
+    assertAnalyzesTo(a, "halen/op O-c",
+                     new String[] {"halen", "op", "o", "c"});
+  }
 
   public void testNonGreedySynonyms() throws Exception {
     // This is just "hypothetical" for Lucene today, because SynFilter is
