# This patch file was generated by NetBeans IDE
# Following Index: paths are relative to: D:\solr\lucene_solr_3_1\lucene\src\java\org\apache\lucene\search\spans
# This patch can be applied using context Tools: Patch action on respective folder.
# It uses platform neutral UTF-8 encoding and \n newlines.
# Above lines and this line are ignored by the patching process.
Index: NearSpansUnordered.java
--- NearSpansUnordered.java Base (BASE)
+++ NearSpansUnordered.java Locally Modified (Based On LOCAL)
@@ -59,7 +59,7 @@
     @Override
     protected final boolean lessThan(SpansCell spans1, SpansCell spans2) {
       if (spans1.doc() == spans2.doc()) {
-        return NearSpansOrdered.docSpansOrdered(spans1, spans2);
+        return docSpansOrdered(spans1, spans2);
       } else {
         return spans1.doc() < spans2.doc();
       }
@@ -224,6 +224,21 @@
     return more && (atMatch() ||  next());
   }
 
+  /** Check whether two Spans in the same document are ordered.
+   * @param spans1
+   * @param spans2
+   * @return true iff spans1 starts before spans2
+   *              or the spans start at the same position,
+   *              and spans1 ends before spans2.
+   */
+  static final boolean docSpansOrdered(Spans spans1, Spans spans2) {
+    assert spans1.doc() == spans2.doc() : "doc1 " + spans1.doc() + " != doc2 " + spans2.doc();
+    int start1 = spans1.start();
+    int start2 = spans2.start();
+    /* Do not call docSpansOrdered(int,int,int,int) to avoid invoking .end() : */
+    return (start1 == start2) ? (spans1.end() < spans2.end()) : (start1 < start2);
+  }
+
   private SpansCell min() { return queue.top(); }
 
   @Override
