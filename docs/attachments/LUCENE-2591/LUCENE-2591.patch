Index: lucene/src/test/org/apache/lucene/messages/TestNLS.java
===================================================================
--- lucene/src/test/org/apache/lucene/messages/TestNLS.java	(revision 983483)
+++ lucene/src/test/org/apache/lucene/messages/TestNLS.java	(working copy)
@@ -19,15 +19,20 @@
 
 import java.util.Locale;
 
-import junit.framework.TestCase;
+import org.apache.lucene.util.LocalizedTestCase;
 
 /**
  */
-public class TestNLS extends TestCase {
+public class TestNLS extends LocalizedTestCase {
   public void testMessageLoading() {
     Message invalidSyntax = new MessageImpl(
         MessagesTestBundle.Q0001E_INVALID_SYNTAX, "XXX");
-    assertEquals("Syntax Error: XXX", invalidSyntax.getLocalizedMessage());
+    /* 
+     * if the default locale is ja, you get ja as a fallback:
+     * see ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)
+     */
+    if (!Locale.getDefault().getLanguage().equals("ja"))
+      assertEquals("Syntax Error: XXX", invalidSyntax.getLocalizedMessage());
   }
 
   public void testMessageLoading_ja() {
@@ -40,11 +45,21 @@
   public void testNLSLoading() {
     String message = NLS
         .getLocalizedMessage(MessagesTestBundle.Q0004E_INVALID_SYNTAX_ESCAPE_UNICODE_TRUNCATION);
-    assertEquals("Truncated unicode escape sequence.", message);
+    /* 
+     * if the default locale is ja, you get ja as a fallback:
+     * see ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)
+     */
+    if (!Locale.getDefault().getLanguage().equals("ja"))
+      assertEquals("Truncated unicode escape sequence.", message);
 
     message = NLS.getLocalizedMessage(MessagesTestBundle.Q0001E_INVALID_SYNTAX,
         "XXX");
-    assertEquals("Syntax Error: XXX", message);
+    /* 
+     * if the default locale is ja, you get ja as a fallback:
+     * see ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)
+     */
+    if (!Locale.getDefault().getLanguage().equals("ja"))
+      assertEquals("Syntax Error: XXX", message);
   }
 
   public void testNLSLoading_ja() {
@@ -63,11 +78,21 @@
     String message = NLS.getLocalizedMessage(
         MessagesTestBundle.Q0004E_INVALID_SYNTAX_ESCAPE_UNICODE_TRUNCATION,
         locale);
-    assertEquals("Truncated unicode escape sequence.", message);
+    /* 
+     * if the default locale is ja, you get ja as a fallback:
+     * see ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)
+     */
+    if (!Locale.getDefault().getLanguage().equals("ja"))
+      assertEquals("Truncated unicode escape sequence.", message);
 
     message = NLS.getLocalizedMessage(MessagesTestBundle.Q0001E_INVALID_SYNTAX,
         locale, "XXX");
-    assertEquals("Syntax Error: XXX", message);
+    /* 
+     * if the default locale is ja, you get ja as a fallback:
+     * see ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)
+     */
+    if (!Locale.getDefault().getLanguage().equals("ja"))
+      assertEquals("Syntax Error: XXX", message);
   }
 
   public void testMissingMessage() {
