From f8e3e1efbffda999f5f8d5cab25ab970e3c36abc Mon Sep 17 00:00:00 2001
From: Adrien Gallou <adriengallou@gmail.com>
Date: Sun, 28 Jul 2019 20:00:42 +0200
Subject: [PATCH] LUCENE-8937: Avoid agressive stemming on numbers in the
 FrenchMinimalStemmer

---
 .../analysis/fr/FrenchMinimalStemmer.java     |  2 +-
 .../fr/TestFrenchMinimalStemFilter.java       | 19 ++++++++++++++++++-
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchMinimalStemmer.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchMinimalStemmer.java
index 4aca5da468..b181af4506 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchMinimalStemmer.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/fr/FrenchMinimalStemmer.java
@@ -74,7 +74,7 @@ public class FrenchMinimalStemmer {
     if (s[len-1] == 'r') len--;
     if (s[len-1] == 'e') len--;
     if (s[len-1] == 'é') len--;
-    if (s[len-1] == s[len-2]) len--;
+    if (s[len-1] == s[len-2] && Character.isLetter(s[len-1])) len--;
     return len;
   }
 }
diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchMinimalStemFilter.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchMinimalStemFilter.java
index 99f95661d4..bf0fc0326f 100644
--- a/lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchMinimalStemFilter.java
+++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/fr/TestFrenchMinimalStemFilter.java
@@ -67,7 +67,24 @@ public class TestFrenchMinimalStemFilter extends BaseTokenStreamTestCase {
     checkOneTerm(analyzer, "barons", "baron");
     checkOneTerm(analyzer, "baron", "baron");
   }
-  
+
+  public void testIntergerWithLastCharactersEqual() throws IOException {
+    // Trailing repeated char elision :
+    checkOneTerm(analyzer, "1234555", "1234555");
+    // Repeated char within numbers with more than 6 characters :
+    checkOneTerm(analyzer, "12333345", "12333345");
+    // Short numbers weren't affected already:
+    checkOneTerm(analyzer, "1234", "1234");
+    // Ensure behaviour is preserved for words!
+    // Trailing repeated char elision :
+    checkOneTerm(analyzer, "abcdeff", "abcdef");
+    // Repeated char within words with more than 6 characters :
+    checkOneTerm(analyzer, "abcccddeef", "abcccddeef");
+    checkOneTerm(analyzer, "créées", "cré");
+    // Combined letter and digit repetition
+    checkOneTerm(analyzer, "22hh00", "22hh00"); // 10:00pm
+  }
+
   public void testKeyword() throws IOException {
     final CharArraySet exclusionSet = new CharArraySet( asSet("chevaux"), false);
     Analyzer a = new Analyzer() {
-- 
2.18.0

