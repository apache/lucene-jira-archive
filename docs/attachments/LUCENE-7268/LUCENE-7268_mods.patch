diff --git a/lucene/core/src/java/org/apache/lucene/geo/Polygon2D.java b/lucene/core/src/java/org/apache/lucene/geo/Polygon2D.java
index 320d71a..8341827 100644
--- a/lucene/core/src/java/org/apache/lucene/geo/Polygon2D.java
+++ b/lucene/core/src/java/org/apache/lucene/geo/Polygon2D.java
@@ -20,6 +20,7 @@ import java.util.Arrays;
 
 import org.apache.lucene.geo.Polygon;
 import org.apache.lucene.index.PointValues.Relation;
+import org.apache.lucene.util.ArrayUtil;
 
 /**
  * 2D polygon implementation represented as a balanced interval tree of edges.
@@ -212,7 +213,7 @@ public final class Polygon2D {
     } else if (low < high) {
       // TODO: do one sort instead! there are better algorithms!
       if (splitX) {
-        Arrays.sort(components, low, high+1, (left, right) -> {
+        ArrayUtil.introSort(components, low, high+1, (left, right) -> {
           int ret = Double.compare(left.minLon, right.minLon);
           if (ret == 0) {
             ret = Double.compare(left.maxX, right.maxX);
@@ -220,7 +221,7 @@ public final class Polygon2D {
           return ret;
         });
       } else {
-        Arrays.sort(components, low, high+1, (left, right) -> {
+        ArrayUtil.introSort(components, low, high+1, (left, right) -> {
           int ret = Double.compare(left.minLat, right.minLat);
           if (ret == 0) {
             ret = Double.compare(left.maxY, right.maxY);
@@ -420,6 +421,7 @@ public final class Polygon2D {
       edges[i - 1] = new Edge(lat1, lon1, lat2, lon2, Math.min(lat1, lat2), Math.max(lat1, lat2));
     }
     // sort the edges then build a balanced tree from them
+    // if you use ArrayUtil.timSort here it gets slower!!!
     Arrays.sort(edges, (left, right) -> {
       int ret = Double.compare(left.low, right.low);
       if (ret == 0) {
diff --git a/lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointInPolygonQuery.java b/lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointInPolygonQuery.java
index 9c0ac77..d3dfbe9 100644
--- a/lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointInPolygonQuery.java
+++ b/lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointInPolygonQuery.java
@@ -90,7 +90,10 @@ final class LatLonPointInPolygonQuery extends Query {
     NumericUtils.intToSortableBytes(encodeLongitude(box.minLon), minLon, 0);
     NumericUtils.intToSortableBytes(encodeLongitude(box.maxLon), maxLon, 0);
 
+    long startTime = System.currentTimeMillis();
     final Polygon2D tree = Polygon2D.create(polygons);
+    long endTime = System.currentTimeMillis();
+    System.out.println("tree construction: " + (endTime - startTime) + " ms");
 
     return new ConstantScoreWeight(this) {
 
