From 1242d581519cb01e12a8f32eec89bfdccecad1d8 Mon Sep 17 00:00:00 2001
Date: Fri, 19 Jun 2015 13:42:54 +0200
Subject: [PATCH] Test score calculation

test whether all hits have scores when there are some deleted child
documents (LUCENE-6588)
---
 .../apache/lucene/search/join/TestBlockJoin.java   | 39 ++++++++++++++++++++++
 1 file changed, 39 insertions(+)

diff --git a/lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin.java b/lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin.java
index b37554a..64a29e5 100644
--- a/lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin.java
+++ b/lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin.java
@@ -1551,4 +1551,43 @@ public class TestBlockJoin extends LuceneTestCase {
     r.close();
     dir.close();
   }
+  
+  //LUCENE-6588
+  public void testParentScoringBug() throws Exception {
+    final Directory dir = newDirectory();
+    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);
+
+    final List<Document> docs = new ArrayList<>();
+    docs.add(makeJob("java", 2007));
+    docs.add(makeJob("python", 2010));
+    docs.add(makeResume("Lisa", "United Kingdom"));
+    w.addDocuments(docs);
+
+    docs.clear();
+    docs.add(makeJob("java", 2006));
+    docs.add(makeJob("ruby", 2005));
+    docs.add(makeResume("Frank", "United States"));
+    w.addDocuments(docs);
+    w.deleteDocuments(new Term("skill", "java")); // delete the first child of every parent
+
+    IndexReader r = w.getReader();
+    w.close();
+    IndexSearcher s = newSearcher(r);
+
+    // Create a filter that defines "parent" documents in the index - in this case resumes
+    BitDocIdSetFilter parentsFilter = new BitDocIdSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term("docType", "resume"))));
+    Query parentQuery = new PrefixQuery(new Term("country", "United"));
+    
+    ToChildBlockJoinQuery toChildQuery = new ToChildBlockJoinQuery(parentQuery, parentsFilter);
+    
+    TopDocs hits = s.search(toChildQuery, 10);
+    assertEquals(hits.scoreDocs.length, 2);
+    for (int i = 0; i < hits.scoreDocs.length; i++) {
+      if (hits.scoreDocs[i].score == 0.0)
+        fail("Failed to calculate score for hit #"+i);
+    }
+    
+    r.close();
+    dir.close();
+  }
 }
-- 
1.9.5.github.0

