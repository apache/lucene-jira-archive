Index: lucene/tools/junit4/tests.policy
===================================================================
--- lucene/tools/junit4/tests.policy	(revision 1508714)
+++ lucene/tools/junit4/tests.policy	(working copy)
@@ -26,8 +26,9 @@
 grant {
   // permissions for file access, write access only to sandbox:
   permission java.io.FilePermission "<<ALL FILES>>", "read,execute";
-  permission java.io.FilePermission "${junit4.childvm.cwd}", "read,execute,write";
-  permission java.io.FilePermission "${junit4.childvm.cwd}${/}-", "read,execute,write,delete";
+  permission java.io.FilePermission "${junit4.childvm.cwd}", "read,execute";
+  permission java.io.FilePermission "${junit4.childvm.cwd}${/}temp", "read,execute,write,delete";
+  permission java.io.FilePermission "${junit4.childvm.cwd}${/}temp${/}-", "read,execute,write,delete";
   permission java.io.FilePermission "${junit4.tempDir}${/}*", "read,execute,write,delete";
   permission java.io.FilePermission "${clover.db.dir}${/}-", "read,execute,write,delete";
   
Index: lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/cl2o/TestCharBlockArray.java
===================================================================
--- lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/cl2o/TestCharBlockArray.java	(revision 1508714)
+++ lucene/facet/src/test/org/apache/lucene/facet/taxonomy/writercache/cl2o/TestCharBlockArray.java	(working copy)
@@ -11,6 +11,7 @@
 
 import org.apache.lucene.facet.FacetTestCase;
 import org.apache.lucene.util.IOUtils;
+import org.apache.lucene.util._TestUtil;
 import org.junit.Test;
 
 /*
@@ -83,7 +84,8 @@
 
     assertEqualsInternal("GrowingCharArray<->StringBuilder mismatch.", builder, array);
 
-    File f = new File("GrowingCharArrayTest.tmp");
+    File tempDir = _TestUtil.getTempDir("growingchararray");
+    File f = new File(tempDir, "GrowingCharArrayTest.tmp");
     BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(f));
     array.flush(out);
     out.flush();
Index: lucene/common-build.xml
===================================================================
--- lucene/common-build.xml	(revision 1508714)
+++ lucene/common-build.xml	(working copy)
@@ -926,8 +926,8 @@
             <sysproperty key="tests.multiplier" value="@{tests.multiplier}"/>
             
             <!-- Temporary directory in the cwd. -->
-            <sysproperty key="tempDir" value="." />
-            <sysproperty key="java.io.tmpdir" value="." />
+            <sysproperty key="tempDir" value="./temp" />
+            <sysproperty key="java.io.tmpdir" value="./temp" />
 
             <!-- Restrict access to certain Java features and install security manager: -->
             <sysproperty key="junit4.tempDir" file="@{workDir}/temp" />
Index: solr/core/src/test/org/apache/solr/handler/TestCSVLoader.java
===================================================================
--- solr/core/src/test/org/apache/solr/handler/TestCSVLoader.java	(revision 1508714)
+++ solr/core/src/test/org/apache/solr/handler/TestCSVLoader.java	(working copy)
@@ -17,6 +17,7 @@
 
 package org.apache.solr.handler;
 
+import org.apache.lucene.util._TestUtil;
 import org.apache.solr.SolrTestCaseJ4;
 import org.apache.solr.request.LocalSolrQueryRequest;
 import org.apache.solr.common.params.CommonParams;
@@ -39,9 +40,9 @@
     initCore("solrconfig.xml","schema12.xml");
   }
 
-  String filename = "solr_tmp.csv";
+  String filename;
   String def_charset = "UTF-8";
-  File file = new File(filename);
+  File file;
 
   @Override
   @Before
@@ -49,6 +50,9 @@
     // if you override setUp or tearDown, you better call
     // the super classes version
     super.setUp();
+    File tempDir = _TestUtil.getTempDir("TestCSVLoader");
+    file = new File(tempDir, "solr_tmp.csv");
+    filename = file.getPath();
     cleanup();
   }
   
