diff --git a/lucene/core/src/java/org/apache/lucene/util/fst/FST.java b/lucene/core/src/java/org/apache/lucene/util/fst/FST.java
index 31ee2b7..82305fe 100644
--- a/lucene/core/src/java/org/apache/lucene/util/fst/FST.java
+++ b/lucene/core/src/java/org/apache/lucene/util/fst/FST.java
@@ -161,10 +161,6 @@ public final class FST<T> implements Accountable {
     public int label;
     public T output;
 
-    // From node (ord or address); currently only used when
-    // building an FST w/ willPackFST=true:
-    long node;
-
     /** To node (ord or address) */
     public long target;
 
@@ -193,7 +189,6 @@ public final class FST<T> implements Accountable {
 
     /** Returns this */
     public Arc<T> copyFrom(Arc<T> other) {
-      node = other.node;
       label = other.label;
       target = other.target;
       flags = other.flags;
@@ -224,7 +219,6 @@ public final class FST<T> implements Accountable {
     @Override
     public String toString() {
       StringBuilder b = new StringBuilder();
-      b.append("node=" + node);
       b.append(" target=" + target);
       b.append(" label=0x" + Integer.toHexString(label));
       if (flag(BIT_FINAL_ARC)) {
@@ -770,7 +764,6 @@ public final class FST<T> implements Accountable {
       return arc;
     } else {
       in.setPosition(follow.target);
-      arc.node = follow.target;
       final byte b = in.readByte();
       if (b == ARCS_AS_FIXED_ARRAY) {
         // array: jump straight to end
@@ -842,7 +835,6 @@ public final class FST<T> implements Accountable {
       if (follow.target <= 0) {
         arc.flags |= BIT_LAST_ARC;
       } else {
-        arc.node = follow.target;
         // NOTE: nextArc is a node (not an address!) in this case:
         arc.nextArc = follow.target;
       }
@@ -860,7 +852,6 @@ public final class FST<T> implements Accountable {
     //System.out.println("  readFirstRealTargtArc address="
     //+ address);
     //System.out.println("   flags=" + arc.flags);
-    arc.node = node;
 
     if (in.readByte() == ARCS_AS_FIXED_ARRAY) {
       //System.out.println("  fixedArray");
@@ -1035,7 +1026,6 @@ public final class FST<T> implements Accountable {
       assert cachedArc.label == result.label;
       assert cachedArc.nextArc == result.nextArc;
       assert cachedArc.nextFinalOutput.equals(result.nextFinalOutput);
-      assert cachedArc.node == result.node;
       assert cachedArc.numArcs == result.numArcs;
       assert cachedArc.output.equals(result.output);
       assert cachedArc.posArcsStart == result.posArcsStart;
@@ -1066,7 +1056,6 @@ public final class FST<T> implements Accountable {
           arc.flags = 0;
           // NOTE: nextArc is a node (not an address!) in this case:
           arc.nextArc = follow.target;
-          arc.node = follow.target;
         }
         arc.output = follow.nextFinalOutput;
         arc.label = END_LABEL;
@@ -1098,8 +1087,6 @@ public final class FST<T> implements Accountable {
 
     in.setPosition(follow.target);
 
-    arc.node = follow.target;
-
     // System.out.println("fta label=" + (char) labelToMatch);
 
     if (in.readByte() == ARCS_AS_FIXED_ARRAY) {
diff --git a/lucene/core/src/java/org/apache/lucene/util/fst/Util.java b/lucene/core/src/java/org/apache/lucene/util/fst/Util.java
index 2f83dd1..ba2ff74 100644
--- a/lucene/core/src/java/org/apache/lucene/util/fst/Util.java
+++ b/lucene/core/src/java/org/apache/lucene/util/fst/Util.java
@@ -620,8 +620,7 @@ public final class Util {
    * 
    * <p>
    * Note: larger FSTs (a few thousand nodes) won't even
-   * render, don't bother.  If the FST is &gt; 2.1 GB in size
-   * then this method will throw strange exceptions.
+   * render, don't bother.
    * 
    * @param sameRank
    *          If <code>true</code>, the resulting <code>dot</code> file will try
@@ -945,7 +944,6 @@ public final class Util {
           arc.flags = 0;
           // NOTE: nextArc is a node (not an address!) in this case:
           arc.nextArc = follow.target;
-          arc.node = follow.target;
         }
         arc.output = follow.nextFinalOutput;
         arc.label = FST.END_LABEL;
