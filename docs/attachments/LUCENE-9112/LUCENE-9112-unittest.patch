diff --git a/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPTokenizerFactory.java b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPTokenizerFactory.java
index 59a522040f4..deff2a5db95 100644
--- a/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPTokenizerFactory.java
+++ b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPTokenizerFactory.java
@@ -35,6 +35,9 @@ import org.junit.Test;
  */
 public class TestOpenNLPTokenizerFactory extends BaseTokenStreamTestCase {
 
+  static private String SENTENCE_funky = "Sir David Frederick Attenborough OM CH CVO CBE FRS FRSA FLS FZS FSA (/ˈætənbrə/; born 8 May 1926) is an English broadcaster and natural historian. He was best known for writing and presenting, in conjunction with the BBC Natural History Unit, the nine natural history documentary series forming the Life collection that together constitute a comprehensive survey of animal and plant life on Earth. He was a former senior manager at the BBC, having served as controller of BBC Two and director of programming for BBC Television in the 1960s and 1970s. He is the only person to have won BAFTAs for programmes in each of black and white, colour, HD, 3D and 4K. In 2018 and 2019, he received Primetime Emmy Awards for Outstanding Narrator. Attenborough is widely considered a national treasure in the UK, although he himself does not like the term. In 2002, he was named among the 100 Greatest Britons following a UK-wide poll for the BBC. He is the younger brother of the director, producer and actor Richard Attenborough, Baron Attenborough, and older brother of the motor executive John Attenborough.";
+  static private String[] TOKENS_funky = {"Sir", "David", "Frederick", "Attenborough", "OM", "CH", "CVO", "CBE", "FRS", "FRSA", "FLS", "FZS", "FSA", "(", "/ˈætənbrə/", ";", "born", "8", "May", "1926", ")", "is", "an", "English", "broadcaster", "and", "natural", "historian", ".", "He", "was", "best", "known", "for", "writing", "and", "presenting", ",", "in", "conjunction", "with", "the", "BBC", "Natural", "History", "Unit", ",", "the", "nine", "natural", "history", "documentary", "series", "forming", "the", "Life", "collection", "that", "together", "constitute", "a", "comprehensive", "survey", "of", "animal", "and", "plant", "life", "on", "Earth", ".", "He", "was", "a", "former", "senior", "manager", "at", "the", "BBC", ",", "having", "served", "as", "controller", "of", "BBC", "Two", "and", "director", "of", "programming", "for", "BBC", "Television", "in", "the", "1960s", "and", "1970s", ".", "He", "is", "the", "only", "person", "to", "have", "won", "BAFTAs", "for", "programmes", "in", "each", "of", "black", "and", "white", ",", "colour", ",", "HD", ",", "3D", "and", "4K", ".", "In", "2018", "and", "2019", ",", "he", "received", "Primetime", "Emmy", "Awards", "for", "Outstanding", "Narrator", ".", "Attenborough", "is", "widely", "considered", "a", "national", "treasure", "in", "the", "UK", ",", "although", "he", "himself", "does", "not", "like", "the", "term", ".", "In", "2002", ",", "he", "was", "named", "among", "the", "100", "Greatest", "Britons", "following", "a", "UK-", "wide", "poll", "for", "the", "BBC", ".", "He", "is", "the", "younger", "brother", "of", "the", "director", ",", "producer", "and", "actor", "Richard", "Attenborough", ",", "Baron", "Attenborough", ",", "and", "older", "brother", "of", "the", "motor", "executive", "John", "Attenborough", "."};
+  
   static private String SENTENCES = "Sentence number 1 has 6 words. Sentence number 2, 5 words.";
   static private String[] SENTENCES_punc = {"Sentence", "number", "1", "has", "6", "words", ".", "Sentence", "number", "2", ",", "5", "words", "."};
   static private int[] SENTENCES_startOffsets = {0, 9, 16, 18, 22, 24, 29, 31, 40, 47, 48, 50, 52, 57};
@@ -42,6 +45,14 @@ public class TestOpenNLPTokenizerFactory extends BaseTokenStreamTestCase {
 
   static private String SENTENCE1 = "Sentence number 1 has 6 words.";
   static private String[] SENTENCE1_punc = {"Sentence", "number", "1", "has", "6", "words", "."};
+  
+  @Test
+  public void testFunky() throws IOException {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "sentenceModel", "en-sent.bin", "tokenizerModel", "en-token.bin")
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCE_funky, TOKENS_funky);
+  }
 
   @Test
   public void testTokenizer() throws IOException {
