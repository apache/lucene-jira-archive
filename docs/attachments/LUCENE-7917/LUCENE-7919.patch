From 573b8305a014b97d59f9e120803eb365c39373bf Mon Sep 17 00:00:00 2001
From: Yegor Dovganich <edovne@gmail.com>
Date: Wed, 2 Aug 2017 14:46:14 +0300
Subject: [PATCH] Add boosts support to getWildcardQuery of
 MultiFieldQueryParser

---
 .../queryparser/classic/MultiFieldQueryParser.java      | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser.java
index 3ee9c6ced0..a590071ed5 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/MultiFieldQueryParser.java
@@ -236,11 +236,20 @@ public class MultiFieldQueryParser extends QueryParser
   @Override
   protected Query getWildcardQuery(String field, String termStr) throws ParseException {
     if (field == null) {
-      List<Query> clauses = new ArrayList<>();
-      for (int i = 0; i < fields.length; i++) {
-        clauses.add(getWildcardQuery(fields[i], termStr));
+      List<Query> clauses = new ArrayList();
+      for(int i = 0; i < this.fields.length; ++i) {
+        Query q = this.getWildcardQuery(this.fields[i], termStr);
+        if (q != null) {
+          if (this.boosts != null) {
+            Float boost = this.boosts.get(this.fields[i]);
+            if (boost != null) {
+              q = new BoostQuery(q, boost);
+            }
+          }
+          clauses.add(q);
+        }
       }
-      return getMultiFieldQuery(clauses);
+      return this.getMultiFieldQuery(clauses);
     }
     return super.getWildcardQuery(field, termStr);
   }
-- 
2.11.0.windows.3

