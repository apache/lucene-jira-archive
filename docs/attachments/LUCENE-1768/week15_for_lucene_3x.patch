Index: lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/RangeQueryNodeBuilder.java
===================================================================
--- lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/RangeQueryNodeBuilder.java	(revision 1166524)
+++ lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/builders/RangeQueryNodeBuilder.java	(working copy)
@@ -28,7 +28,10 @@
 
 /**
  * Builds a {@link TermRangeQuery} object from a {@link RangeQueryNode} object.
+ * 
+ * @deprecated this builder will be removed in future together with {@link RangeQueryNode}
  */
+@Deprecated
 public class RangeQueryNodeBuilder implements StandardQueryBuilder {
 
   public RangeQueryNodeBuilder() {
Index: lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/AbstractRangeQueryNode.java
===================================================================
--- lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/AbstractRangeQueryNode.java	(revision 1166524)
+++ lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/nodes/AbstractRangeQueryNode.java	(working copy)
@@ -148,8 +148,9 @@
       String lowerField = StringUtils.toString(lower.getField());
       String upperField = StringUtils.toString(upper.getField());
       
-      if ((upperField == null && lowerField == null)
-          || (upperField != null && !upperField.equals(lowerField))) {
+      if ((upperField != null || lowerField != null)
+          && ((upperField != null && !upperField.equals(lowerField)) || !lowerField
+              .equals(upperField))) {
         throw new IllegalArgumentException(
             "lower and upper bounds should have the same field name!");
       }
