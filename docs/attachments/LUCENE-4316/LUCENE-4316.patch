Index: lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader.java
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader.java	(revision 1375119)
+++ lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader.java	(working copy)
@@ -807,7 +807,7 @@
   
     DirectoryReader r = DirectoryReader.open(dir);
     AtomicReader r1 = getOnlySegmentReader(r);
-    assertEquals(36, r1.getUniqueTermCount());
+    assertEquals(36, r1.fields().getUniqueTermCount());
     writer.addDocument(doc);
     writer.commit();
     DirectoryReader r2 = DirectoryReader.openIfChanged(r);
@@ -815,7 +815,7 @@
     r.close();
   
     for(AtomicReaderContext s : r2.leaves()) {
-      assertEquals(36, s.reader().getUniqueTermCount());
+      assertEquals(36, s.reader().fields().getUniqueTermCount());
     }
     r2.close();
     writer.close();
Index: lucene/core/src/java/org/apache/lucene/index/AtomicReader.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/AtomicReader.java	(revision 1375119)
+++ lucene/core/src/java/org/apache/lucene/index/AtomicReader.java	(working copy)
@@ -188,17 +188,6 @@
     }
     return null;
   }
-
-  /** Returns the number of unique terms (across all fields)
-   *  in this reader.
-   */
-  public final long getUniqueTermCount() throws IOException {
-    final Fields fields = fields();
-    if (fields == null) {
-      return 0;
-    }
-    return fields.getUniqueTermCount();
-  }
   
   /**
    * Returns {@link DocValues} for this field.
Index: lucene/core/src/java/org/apache/lucene/index/Fields.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/Fields.java	(revision 1375119)
+++ lucene/core/src/java/org/apache/lucene/index/Fields.java	(working copy)
@@ -41,8 +41,13 @@
   /** Returns the number of terms for all fields, or -1 if this 
    *  measure isn't stored by the codec. Note that, just like 
    *  other term measures, this measure does not take deleted 
-   *  documents into account. */
-  // TODO: deprecate?
+   *  documents into account. 
+   *  @deprecated iterate fields and add their size() instead. 
+   *   this method is only provided as a transition mechanism
+   *   to access this statistic for 3.x indexes, which do not
+   *   have this statistic per-field.
+   *  @see Terms#size() */
+  @Deprecated
   public long getUniqueTermCount() throws IOException {
     long numTerms = 0;
     for (String field : this) {
