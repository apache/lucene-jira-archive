Index: lucene/core/src/java/org/apache/lucene/index/DocValues.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/DocValues.java	(revision 1606661)
+++ lucene/core/src/java/org/apache/lucene/index/DocValues.java	(working copy)
@@ -19,6 +19,7 @@
 
 import java.io.IOException;
 
+import org.apache.lucene.util.ArrayUtil;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.util.BytesRef;
 
@@ -320,4 +321,57 @@
       return dv;
     }
   }
+
+  /**
+   * If <code>dv</code> is an instance of {@link RandomAccessOrds}, then return
+   * it, otherwise wrap it into a slow wrapper that implements random access.
+   */
+  public static RandomAccessOrds maybeSlowRandomAccessOrds(final SortedSetDocValues dv) {
+    if (dv instanceof RandomAccessOrds) {
+      return (RandomAccessOrds) dv;
+    } else {
+      return new RandomAccessOrds() {
+
+        int cardinality;
+        long[] ords = new long[0];
+        int ord;
+
+        @Override
+        public void setDocument(int docID) {
+          cardinality = 0;
+          dv.setDocument(docID);
+          for (long ord = dv.nextOrd(); ord != SortedSetDocValues.NO_MORE_ORDS; ord = dv.nextOrd()) {
+            ords = ArrayUtil.grow(ords, cardinality + 1);
+            ords[cardinality++] = ord;
+          }
+          ord = 0;
+        }
+
+        @Override
+        public long nextOrd() {
+          return ords[ord++];
+        }
+
+        @Override
+        public BytesRef lookupOrd(long ord) {
+          return dv.lookupOrd(ord);
+        }
+
+        @Override
+        public long getValueCount() {
+          return dv.getValueCount();
+        }
+
+        @Override
+        public long ordAt(int index) {
+          return ords[index];
+        }
+
+        @Override
+        public int cardinality() {
+          return cardinality;
+        }
+      };
+    }
+  }
 }
