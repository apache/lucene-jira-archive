Index: lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.java
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.java	(revision 1301155)
+++ lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.java	(working copy)
@@ -1517,4 +1517,20 @@
     iw.close();
     dir.close();
   }
+  
+  public void testLegalbutVeryLargePositions() throws Exception {
+    Directory dir = newDirectory();
+    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));
+    Document doc = new Document();
+    Token t1 = new Token("foo", 0, 3);
+    t1.setPositionIncrement(Integer.MAX_VALUE-500);
+    TokenStream overflowingTokenStream = new CannedTokenStream(
+        new Token[] { t1 }
+    );
+    Field field = new TextField("foo", overflowingTokenStream);
+    doc.add(field);
+    iw.addDocument(doc);
+    iw.close();
+    dir.close();
+  }
 }
Index: lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField.java	(revision 1301154)
+++ lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField.java	(working copy)
@@ -486,7 +486,7 @@
 
             if (readPositions) {
               final int code = prox.readVInt();
-              position += code >> 1;
+              position += code >>> 1;
 
               if ((code & 1) != 0) {
 
