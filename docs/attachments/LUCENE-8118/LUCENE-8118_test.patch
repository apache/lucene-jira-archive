diff --git a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java
index bbedc20..8978d9d 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java
@@ -35,6 +35,7 @@ import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.NoSuchElementException;
 import java.util.Random;
 import java.util.Set;
 import java.util.concurrent.CountDownLatch;
@@ -2979,4 +2980,41 @@ public class TestIndexWriter extends LuceneTestCase {
     }
   }
 
+  public void testAddDocumentsMassive() throws Exception {
+    Directory dir = newFSDirectory(createTempDir("addDocumentsMassive"));
+    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig());
+    StringBuilder sb = new StringBuilder();
+    // same doc with lots of duplicated terms to put pressure on FreqProxTermsWriter instead of terms dict.
+    for (int i = 0; i < 1024; i++) {
+      sb.append(Integer.toString(i));
+      sb.append(' ');
+    }
+    Document doc = new Document();
+    doc.add(new TextField("text", sb.toString(), Field.Store.NO));
+    w.addDocuments(new Iterable<Document>() {
+      @Override
+      public Iterator<Document> iterator() {
+        return new Iterator<Document>() {
+          int count = 0;
+
+          @Override
+          public boolean hasNext() {
+            return count < 100_000_000;
+          }
+
+          @Override
+          public Document next() {
+            if (!hasNext()) {
+              throw new NoSuchElementException();
+            }
+            count++;
+            return doc;
+          }
+        };
+      }
+    });
+    w.commit();
+    w.close();
+    dir.close();
+  }
 }
