Index: lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs.java	(revision 1374693)
+++ lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgs.java	(revision )
@@ -35,10 +35,6 @@
   private Shape shape;
   private double distPrecision = DEFAULT_DIST_PRECISION;
 
-  // Useful for 'distance' calculations
-  private Double min;
-  private Double max;
-
   public SpatialArgs(SpatialOperation operation) {
     this.operation = operation;
   }
@@ -60,12 +56,6 @@
     StringBuilder str = new StringBuilder();
     str.append(operation.getName()).append('(');
     str.append(shape.toString());
-    if (min != null) {
-      str.append(" min=").append(min);
-    }
-    if (max != null) {
-      str.append(" max=").append(max);
-    }
     str.append(" distPrec=").append(String.format(Locale.ROOT, "%.2f%%", distPrecision / 100d));
     str.append(')');
     return str.toString();
@@ -111,19 +101,4 @@
       this.distPrecision = distPrecision;
   }
 
-  public Double getMin() {
-    return min;
-  }
-
-  public void setMin(Double min) {
-    this.min = min;
-  }
-
-  public Double getMax() {
-    return max;
-  }
-
-  public void setMax(Double max) {
-    this.max = max;
-  }
 }
Index: lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgsParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgsParser.java	(revision 1374693)
+++ lucene/spatial/src/java/org/apache/lucene/spatial/query/SpatialArgsParser.java	(revision )
@@ -75,8 +75,6 @@
       body = v.substring(edx + 1).trim();
       if (body.length() > 0) {
         Map<String, String> aa = parseMap(body);
-        args.setMin(readDouble(aa.remove("min")));
-        args.setMax(readDouble(aa.remove("max")));
         args.setDistPrecision(readDouble(aa.remove("distPrec")));
         if (!aa.isEmpty()) {
           throw new InvalidSpatialArgument("unused parameters: " + aa, null);
