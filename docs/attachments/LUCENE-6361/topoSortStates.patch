Index: lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java	(revision 1667014)
+++ lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java	(revision )
@@ -276,22 +276,22 @@
     int numStates = a.getNumStates();
     int[] states = new int[numStates];
     final BitSet visited = new BitSet(numStates);
-    final LinkedList<Integer> worklist = new LinkedList<>();
-    worklist.add(0);
+    final BitSet work = new BitSet(numStates);
     visited.set(0);
+    work.set(0);
     int upto = 0;
-    states[upto] = 0;
-    upto++;
+    states[upto++] = 0;
     Transition t = new Transition();
-    while (worklist.size() > 0) {
-      int s = worklist.removeFirst();
-      int count = a.initTransition(s, t);
-      for (int i=0;i<count;i++) {
+    for (int s, next = 0; (s = next != 0? next : work.nextSetBit(0)) >= 0; work.clear(s)) {
+      next = 0;
+      for (int i=0, count = a.initTransition(s, t);i<count;i++) {
         a.getNextTransition(t);
-        if (!visited.get(t.dest)) {
-          visited.set(t.dest);
-          worklist.add(t.dest);
-          states[upto++] = t.dest;
+        int dest = t.dest;
+        if (!visited.get(dest)) {
+          visited.set(dest);
+          work.set(dest);
+          states[upto++] = dest;
+          next = dest;
         }
       }
     }
