Index: lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java
===================================================================
--- lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java	(revision 1682615)
+++ lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java	(working copy)
@@ -274,24 +274,28 @@
           throw new IllegalStateException("child query must only match non-parent docs, but parent docID=" + nextChildDoc + " matched childScorer=" + childScorer.getClass());
         }
 
-        //System.out.println("  parentDoc=" + parentDoc);
-        assert parentDoc != DocIdSetIterator.NO_MORE_DOCS;
-
-        //System.out.println("  nextChildDoc=" + nextChildDoc);
-        if (acceptDocs != null && !acceptDocs.get(parentDoc)) {
-          // Parent doc not accepted; skip child docs until
-          // we hit a new parent doc:
-          do {
-            nextChildDoc = childScorer.nextDoc();
-          } while (nextChildDoc < parentDoc);
-
-          // Parent & child docs are supposed to be
-          // orthogonal:
-          if (nextChildDoc == parentDoc) {
-            throw new IllegalStateException("child query must only match non-parent docs, but parent docID=" + nextChildDoc + " matched childScorer=" + childScorer.getClass());
+        try {
+          //System.out.println("  parentDoc=" + parentDoc);
+          assert parentDoc != DocIdSetIterator.NO_MORE_DOCS;
+  
+          //System.out.println("  nextChildDoc=" + nextChildDoc);
+          if (acceptDocs != null && !acceptDocs.get(parentDoc)) {
+            // Parent doc not accepted; skip child docs until
+            // we hit a new parent doc:
+            do {
+              nextChildDoc = childScorer.nextDoc();
+            } while (nextChildDoc < parentDoc);
+  
+            // Parent & child docs are supposed to be
+            // orthogonal:
+            if (nextChildDoc == parentDoc) {
+              throw new IllegalStateException("child query must only match non-parent docs, but parent docID=" + nextChildDoc + " matched childScorer=" + childScorer.getClass());
+            }
+  
+            continue;
           }
-
-          continue;
+        } catch (IndexOutOfBoundsException iobe) {
+          throw new IllegalStateException("child query and parent query are not orthogonal.", iobe);
         }
 
         float totalScore = 0;
