Index: src/java/org/apache/lucene/util/automaton/Operations.java
===================================================================
--- src/java/org/apache/lucene/util/automaton/Operations.java	(revision 1637445)
+++ src/java/org/apache/lucene/util/automaton/Operations.java	(working copy)
@@ -174,6 +174,10 @@
    * Complexity: linear in number of states.
    */
   static public Automaton repeat(Automaton a) {
+    if (a.getNumStates() == 0) {
+      // Repeating the empty automata will still only accept the empty automata.
+      return a;
+    }
     Automaton.Builder builder = new Automaton.Builder();
     builder.createState();
     builder.setAccept(0, true);
Index: src/test/org/apache/lucene/util/automaton/TestRegExp.java
===================================================================
--- src/test/org/apache/lucene/util/automaton/TestRegExp.java	(revision 1637445)
+++ src/test/org/apache/lucene/util/automaton/TestRegExp.java	(working copy)
@@ -55,4 +55,16 @@
     // paranoia:
     assertTrue(a.toString().length() > 0);
   }
+
+  public void testRepeatWithEmptyLanguage() throws Exception {
+    Automaton a = new RegExp("#*").toAutomaton(1000);
+    // paranoia:
+    assertTrue(a.toString().length() > 0);
+    a = new RegExp("#+").toAutomaton(1000);
+    assertTrue(a.toString().length() > 0);
+    a = new RegExp("#{2,10}").toAutomaton(1000);
+    assertTrue(a.toString().length() > 0);
+    a = new RegExp("#?").toAutomaton(1000);
+    assertTrue(a.toString().length() > 0);
+  }
 }
