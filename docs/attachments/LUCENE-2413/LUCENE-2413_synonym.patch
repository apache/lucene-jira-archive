Index: solr/src/test/org/apache/solr/analysis/TestMultiWordSynonyms.java
===================================================================
--- solr/src/test/org/apache/solr/analysis/TestMultiWordSynonyms.java	(revision 942709)
+++ solr/src/test/org/apache/solr/analysis/TestMultiWordSynonyms.java	(working copy)
@@ -1,6 +1,8 @@
 package org.apache.solr.analysis;
 
 import org.apache.lucene.analysis.WhitespaceTokenizer;
+import org.apache.lucene.analysis.synonym.SynonymFilter;
+import org.apache.lucene.analysis.synonym.SynonymMap;
 import org.junit.Test;
 
 import java.io.IOException;
Index: solr/src/test/org/apache/solr/analysis/TestSynonymFilter.java (deleted)
===================================================================
Index: solr/src/test/org/apache/solr/analysis/TestSynonymMap.java
===================================================================
--- solr/src/test/org/apache/solr/analysis/TestSynonymMap.java	(revision 942709)
+++ solr/src/test/org/apache/solr/analysis/TestSynonymMap.java	(working copy)
@@ -25,6 +25,7 @@
 import junit.framework.TestCase;
 
 import org.apache.lucene.analysis.Token;
+import org.apache.lucene.analysis.synonym.SynonymMap;
 
 public class TestSynonymMap extends TestCase {
 
Index: solr/src/java/org/apache/solr/analysis/SynonymFilter.java (deleted)
===================================================================
Index: solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java	(revision 942709)
+++ solr/src/java/org/apache/solr/analysis/SynonymFilterFactory.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.analysis;
 
 import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.synonym.SynonymFilter;
+import org.apache.lucene.analysis.synonym.SynonymMap;
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 import org.apache.solr.common.ResourceLoader;
 import org.apache.solr.common.util.StrUtils;
Index: solr/src/java/org/apache/solr/analysis/SynonymMap.java (deleted)
===================================================================
Index: modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter.java
===================================================================
--- modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter.java	(revision 0)
+++ modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymFilter.java	(working copy)
@@ -15,8 +15,9 @@
  * limitations under the License.
  */
 
-package org.apache.solr.analysis;
+package org.apache.lucene.analysis.synonym;
 
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
 import org.apache.lucene.analysis.Token;
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.Tokenizer;
@@ -38,7 +39,7 @@
 /**
  * @version $Id$
  */
-public class TestSynonymFilter extends BaseTokenTestCase {
+public class TestSynonymFilter extends BaseTokenStreamTestCase {
 
   static List<String> strings(String str) {
     String[] arr = str.split(" ");
@@ -47,14 +48,14 @@
 
   static void assertTokenizesTo(SynonymMap dict, String input,
       String expected[]) throws IOException {
-    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, new StringReader(input));
+    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input));
     SynonymFilter stream = new SynonymFilter(tokenizer, dict);
     assertTokenStreamContents(stream, expected);
   }
   
   static void assertTokenizesTo(SynonymMap dict, String input,
       String expected[], int posIncs[]) throws IOException {
-    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, new StringReader(input));
+    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input));
     SynonymFilter stream = new SynonymFilter(tokenizer, dict);
     assertTokenStreamContents(stream, expected, posIncs);
   }
Index: modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter.java
===================================================================
--- modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter.java	(revision 0)
+++ modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymFilter.java	(working copy)
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.apache.solr.analysis;
+package org.apache.lucene.analysis.synonym;
 
 import org.apache.lucene.analysis.Token;
 import org.apache.lucene.analysis.TokenFilter;
@@ -38,8 +38,6 @@
  * to retain absolute positions after merging with the synonym tokenstream.
  * <p>
  * Generated synonyms will start at the same position as the first matched source token.
- *
- * @version $Id$
  */
 public final class SynonymFilter extends TokenFilter {
 
Index: modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.java
===================================================================
--- modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.java	(revision 0)
+++ modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/SynonymMap.java	(working copy)
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package org.apache.solr.analysis;
+package org.apache.lucene.analysis.synonym;
 
 import org.apache.lucene.analysis.CharArrayMap;
 import org.apache.lucene.analysis.Token;
@@ -23,13 +23,13 @@
 
 import java.util.*;
 
-/** Mapping rules for use with {@link org.apache.solr.analysis.SynonymFilter}
- *
- * @version $Id$
+/** Mapping rules for use with {@link SynonymFilter}
  */
 public class SynonymMap {
-  CharArrayMap<SynonymMap> submap; // recursive: Map<String, SynonymMap>
-  Token[] synonyms;
+  /** @lucene.internal */
+  public CharArrayMap<SynonymMap> submap; // recursive: Map<String, SynonymMap>
+  /** @lucene.internal */
+  public Token[] synonyms;
   int flags;
 
   static final int INCLUDE_ORIG=0x01;
