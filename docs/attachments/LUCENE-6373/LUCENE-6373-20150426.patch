diff --git a/lucene/core/src/java/org/apache/lucene/search/DisiPriorityQueue.java b/lucene/core/src/java/org/apache/lucene/search/DisiPriorityQueue.java
index 55f61b5..7222f4f 100644
--- a/lucene/core/src/java/org/apache/lucene/search/DisiPriorityQueue.java
+++ b/lucene/core/src/java/org/apache/lucene/search/DisiPriorityQueue.java
@@ -46,6 +46,7 @@ implements Iterable<DisiWrapper<Iter>> {
   private final DisiWrapper<Iter>[] heap;
   private int size;
 
+  @SuppressWarnings({"unchecked","rawtypes"})
   public DisiPriorityQueue(int maxSize) {
     heap = new DisiWrapper[maxSize];
     size = 0;
diff --git a/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java b/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java
index 36714ea..84ed726 100644
--- a/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java
+++ b/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java
@@ -98,6 +98,7 @@ final class MinShouldMatchSumScorer extends Scorer {
   final Collection<ChildScorer> childScorers;
   final long cost;
 
+  @SuppressWarnings({"unchecked","rawtypes"})
   MinShouldMatchSumScorer(Weight weight, Collection<Scorer> scorers, int minShouldMatch, float[] coord) {
     super(weight);
 
diff --git a/lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.java b/lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.java
index eca3635..9d0d09a 100644
--- a/lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.java
+++ b/lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.java
@@ -288,8 +288,6 @@ public class SpanOrQuery extends SpanQuery implements Cloneable {
         
       @Override
       public int nextStartPosition() throws IOException {
-        DisiWrapper<Spans> topDocSpans = byDocQueue.top();
-        assert topDocSpans.doc != NO_MORE_DOCS;
         if (topPositionSpans == null) {
           byPositionQueue.clear();
           fillPositionQueue(); // fills byPositionQueue at first position
