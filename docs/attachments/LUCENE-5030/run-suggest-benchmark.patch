Index: lucene/test-framework/src/java/org/apache/lucene/util/TestRuleAssertionsRequired.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/util/TestRuleAssertionsRequired.java	(revision 1494929)
+++ lucene/test-framework/src/java/org/apache/lucene/util/TestRuleAssertionsRequired.java	(working copy)
@@ -30,6 +30,8 @@
     return new Statement() {
       @Override
       public void evaluate() throws Throwable {
+        // nocommit
+        /*
         try {
           assert false;
           String msg = "Test class requires enabled assertions, enable globally (-ea)" +
@@ -39,6 +41,7 @@
         } catch (AssertionError e) {
           // Ok, enabled.
         }
+        */
 
         base.evaluate();
       }
Index: lucene/common-build.xml
===================================================================
--- lucene/common-build.xml	(revision 1494929)
+++ lucene/common-build.xml	(working copy)
@@ -890,10 +890,11 @@
             <classpath refid="clover.classpath" />
 
             <!-- Assertions. -->
-            <assertions>
+	    <!-- nocommit-->
+            <!--<assertions>
               <enable package="org.apache.lucene"/>
               <enable package="org.apache.solr"/>
-            </assertions>  
+            </assertions>  -->
 
             <!-- JVM arguments and system properties. -->
             <jvmarg line="${args}"/>
Index: lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest.java
===================================================================
--- lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest.java	(revision 1494929)
+++ lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest.java	(working copy)
@@ -48,7 +48,8 @@
 /**
  * Benchmarks tests for implementations of {@link Lookup} interface.
  */
-@Ignore("COMMENT ME TO RUN BENCHMARKS!")
+// nocommit
+//@Ignore("COMMENT ME TO RUN BENCHMARKS!")
 public class LookupBenchmarkTest extends LuceneTestCase {
   @SuppressWarnings("unchecked")
   private final List<Class<? extends Lookup>> benchmarkClasses = Arrays.asList(
