From 8ec68c9e54182b5698f1573f8d993d50b82ad823 Mon Sep 17 00:00:00 2001
From: Amish Shah <shahamish150294@gmail.com>
Date: Sun, 15 Sep 2019 11:31:36 -0500
Subject: [PATCH] LUCENE-8945 Select the output file delimiter of export terms
 feature

Move Delimiter resolution to enum, populate enum values only when export terms dialog is opened and change Space to Whitespace
---
 .../components/dialog/menubar/Delimiter.java       | 58 ++++++++++++++++++++++
 .../dialog/menubar/ExportTermsDialogFactory.java   | 24 ++++++++-
 .../lucene/luke/models/tools/IndexTools.java       |  3 +-
 .../lucene/luke/models/tools/IndexToolsImpl.java   |  4 +-
 4 files changed, 84 insertions(+), 5 deletions(-)
 create mode 100644 lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/Delimiter.java

diff --git a/lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/Delimiter.java b/lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/Delimiter.java
new file mode 100644
index 00000000000..1041c9a03aa
--- /dev/null
+++ b/lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/Delimiter.java
@@ -0,0 +1,58 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.luke.app.desktop.components.dialog.menubar;
+
+/**
+ * Delimiters that can be selected
+ */
+public enum Delimiter {
+  COMMA("Comma", ","), WHITESPACE("Whitespace", " "), TAB("Tab", "\t");
+
+  private final String description;
+  private final String separator;
+
+  private Delimiter(final String description, final String separator) {
+    this.description = description;
+    this.separator = separator;
+  }
+
+  String getDescription() {
+    return this.description;
+  }
+
+  String getSeparator() {
+    return this.separator;
+  }
+
+  static String getSelectedDelimiterValue(String delimiter) {
+    String delimiterValue = "";
+    switch (delimiter) {
+      case "Comma":
+        delimiterValue = COMMA.getSeparator();
+        break;
+      case "Tab":
+        delimiterValue = TAB.getSeparator();
+        break;
+      case "Whitespace":
+        delimiterValue = WHITESPACE.getSeparator();
+        break;
+    }
+
+    return delimiterValue;
+  }
+}
diff --git a/lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/ExportTermsDialogFactory.java b/lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/ExportTermsDialogFactory.java
index 07fe3cf4ce9..9549726faec 100644
--- a/lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/ExportTermsDialogFactory.java
+++ b/lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/ExportTermsDialogFactory.java
@@ -40,6 +40,7 @@ import java.io.IOException;
 import java.lang.invoke.MethodHandles;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
+import java.util.stream.Stream;
 
 import org.apache.logging.log4j.Logger;
 import org.apache.lucene.luke.app.IndexHandler;
@@ -59,6 +60,8 @@ import org.apache.lucene.luke.util.LoggerFactory;
 import org.apache.lucene.util.NamedThreadFactory;
 import org.apache.lucene.util.SuppressForbidden;
 
+import static org.apache.lucene.luke.app.desktop.components.dialog.menubar.Delimiter.*;
+
 /**
  * Factory of export terms dialog
  */
@@ -76,6 +79,8 @@ public final class ExportTermsDialogFactory implements DialogOpener.DialogFactor
 
   private final JComboBox<String> fieldCombo = new JComboBox<String>();
 
+  private final JComboBox<String> delimiterCombo = new JComboBox<String>();
+
   private final JTextField destDir = new JTextField();
 
   private final JLabel statusLbl = new JLabel();
@@ -88,6 +93,8 @@ public final class ExportTermsDialogFactory implements DialogOpener.DialogFactor
 
   private IndexTools toolsModel;
 
+  private String selectedDelimiter;
+
   public synchronized static ExportTermsDialogFactory getInstance() throws IOException {
     if (instance == null) {
       instance = new ExportTermsDialogFactory();
@@ -99,6 +106,8 @@ public final class ExportTermsDialogFactory implements DialogOpener.DialogFactor
     this.prefs = PreferencesFactory.getInstance();
     this.indexHandler = IndexHandler.getInstance();
     indexHandler.addObserver(new Observer());
+    Stream.of(Delimiter.values()).forEachOrdered(delimiterVal -> delimiterCombo.addItem(delimiterVal.getDescription()));
+    delimiterCombo.setSelectedItem(COMMA.getDescription());//Set default delimiter
   }
 
   @Override
@@ -120,6 +129,7 @@ public final class ExportTermsDialogFactory implements DialogOpener.DialogFactor
     panel.add(currentOpenIndexPanel());
     panel.add(fieldComboPanel());
     panel.add(destinationDirPanel());
+    panel.add(delimiterComboPanel());
     panel.add(statusPanel());
     panel.add(actionButtonsPanel());
 
@@ -138,6 +148,14 @@ public final class ExportTermsDialogFactory implements DialogOpener.DialogFactor
     return panel;
   }
 
+  private JPanel delimiterComboPanel() {
+    JPanel panel = new JPanel(new GridLayout(2, 1));
+    panel.setOpaque(false);
+    panel.add(new JLabel("Select Delimiter: "));
+    panel.add(delimiterCombo);
+    return panel;
+  }
+
   private JPanel fieldComboPanel() {
     JPanel panel = new JPanel(new GridLayout(2, 1));
     panel.setOpaque(false);
@@ -225,9 +243,11 @@ public final class ExportTermsDialogFactory implements DialogOpener.DialogFactor
           statusLbl.setText("Exporting...");
           indicatorLbl.setVisible(true);
           String field = (String) fieldCombo.getSelectedItem();
+          selectedDelimiter = Delimiter.getSelectedDelimiterValue((String) delimiterCombo.getSelectedItem());
+
           String directory = destDir.getText();
           try {
-            filename = toolsModel.exportTerms(directory, field);
+            filename = toolsModel.exportTerms(directory, field, selectedDelimiter);
           } catch (LukeException e) {
             log.error("Error while exporting terms from field " + field, e);
             statusLbl.setText(MessageUtils.getLocalizedMessage("export.terms.label.error", e.getMessage()));
@@ -245,7 +265,7 @@ public final class ExportTermsDialogFactory implements DialogOpener.DialogFactor
         protected void done() {
           indicatorLbl.setVisible(false);
           if (filename != null) {
-            statusLbl.setText(MessageUtils.getLocalizedMessage("export.terms.label.success", filename, "[term],[doc frequency]"));
+            statusLbl.setText(MessageUtils.getLocalizedMessage("export.terms.label.success", filename, "[term]" + selectedDelimiter + "[doc frequency]"));
           }
         }
       };
diff --git a/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexTools.java b/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexTools.java
index 72d5384c2e0..a4f4d12052e 100644
--- a/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexTools.java
+++ b/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexTools.java
@@ -100,7 +100,8 @@ public interface IndexTools {
    * Export terms from given field into a new file on the destination directory
    * @param destDir - destination directory
    * @param field - field name
+   * @param delimiter - delimiter to separate terms and their frequency
    * @return The file containing the export
    */
-  String exportTerms(String destDir, String field);
+  String exportTerms(String destDir, String field, String delimiter);
 }
diff --git a/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexToolsImpl.java b/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexToolsImpl.java
index f4ca89ed811..4fdd6e3f96a 100644
--- a/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexToolsImpl.java
+++ b/lucene/luke/src/java/org/apache/lucene/luke/models/tools/IndexToolsImpl.java
@@ -193,7 +193,7 @@ public final class IndexToolsImpl extends LukeModel implements IndexTools {
     }
   }
 
-  public String exportTerms(String destDir, String field) {
+  public String exportTerms(String destDir, String field, String delimiter) {
     String filename = "terms_" + field + "_" + System.currentTimeMillis() + ".out";
     Path path = Paths.get(destDir, filename);
     try {
@@ -205,7 +205,7 @@ public final class IndexToolsImpl extends LukeModel implements IndexTools {
         TermsEnum termsEnum = terms.iterator();
         BytesRef term;
         while (!Thread.currentThread().isInterrupted() && (term = termsEnum.next()) != null) {
-          writer.write(String.format(Locale.US, "%s,%d\n", term.utf8ToString(), +termsEnum.docFreq()));
+          writer.write(String.format(Locale.US, "%s%s%d\n", term.utf8ToString(), delimiter, +termsEnum.docFreq()));
         }
         return path.toString();
       }
-- 
2.12.2.windows.1

