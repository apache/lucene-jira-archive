Index: lucene/core/src/java/org/apache/lucene/store/RateLimiter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/RateLimiter.java	(revision c8276add47d2548b7dbd9e8812456cac437ee1c1)
+++ lucene/core/src/java/org/apache/lucene/store/RateLimiter.java	(revision )
@@ -66,6 +66,7 @@
     /** mbPerSec is the MB/sec max IO rate */
     public SimpleRateLimiter(double mbPerSec) {
       setMbPerSec(mbPerSec);
+      lastNS = System.nanoTime();
     }
 
     /**
Index: lucene/core/src/test/org/apache/lucene/store/TestRateLimiter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/test/org/apache/lucene/store/TestRateLimiter.java	(revision c8276add47d2548b7dbd9e8812456cac437ee1c1)
+++ lucene/core/src/test/org/apache/lucene/store/TestRateLimiter.java	(revision )
@@ -35,7 +35,6 @@
 
   public void testPause() {
     SimpleRateLimiter limiter = new SimpleRateLimiter(10); // 10 MB / Sec
-    limiter.pause(2);//init
     long pause = 0;
     for (int i = 0; i < 3; i++) {
       pause += limiter.pause(4 * 1024 * 1024); // fire up 3 * 4 MB 
