Index: lucene/src/test/org/apache/lucene/index/TestCompoundFile.java
===================================================================
--- lucene/src/test/org/apache/lucene/index/TestCompoundFile.java	(revision 1228729)
+++ lucene/src/test/org/apache/lucene/index/TestCompoundFile.java	(working copy)
@@ -682,7 +682,7 @@
     try {
       newDir.copy(csw, "d1", "d1", newIOContext(random));
       fail("file does already exist");
-    } catch (IOException e) {
+    } catch (IllegalArgumentException e) {
       //
     }
     out.close();
Index: lucene/src/java/org/apache/lucene/store/ChecksumIndexOutput.java
===================================================================
--- lucene/src/java/org/apache/lucene/store/ChecksumIndexOutput.java	(revision 1228729)
+++ lucene/src/java/org/apache/lucene/store/ChecksumIndexOutput.java	(working copy)
@@ -68,7 +68,7 @@
 
   @Override
   public void seek(long pos) {
-    throw new RuntimeException("not allowed");    
+    throw new UnsupportedOperationException();    
   }
 
   /**
Index: lucene/src/java/org/apache/lucene/store/SimpleFSLockFactory.java
===================================================================
--- lucene/src/java/org/apache/lucene/store/SimpleFSLockFactory.java	(revision 1228729)
+++ lucene/src/java/org/apache/lucene/store/SimpleFSLockFactory.java	(working copy)
@@ -121,6 +121,7 @@
         throw new IOException("Cannot create directory: " +
                               lockDir.getAbsolutePath());
     } else if (!lockDir.isDirectory()) {
+      // TODO: NoSuchDirectoryException instead?
       throw new IOException("Found regular file where directory expected: " + 
                             lockDir.getAbsolutePath());
     }
Index: lucene/src/java/org/apache/lucene/store/CompoundFileWriter.java
===================================================================
--- lucene/src/java/org/apache/lucene/store/CompoundFileWriter.java	(revision 1228729)
+++ lucene/src/java/org/apache/lucene/store/CompoundFileWriter.java	(working copy)
@@ -153,7 +153,7 @@
    */
   public void close() throws IOException {
     if (closed) {
-      throw new IllegalStateException("already closed");
+      return;
     }
     IOException priorException = null;
     IndexOutput entryTableOut = null;
@@ -192,7 +192,7 @@
 
   private final void ensureOpen() {
     if (closed) {
-      throw new IllegalStateException("CFS Directory is already closed");
+      throw new AlreadyClosedException("CFS Directory is already closed");
     }
   }
 
@@ -262,7 +262,7 @@
       } else {
         entry.dir = this.directory;
         if (directory.fileExists(name)) {
-          throw new IOException("File already exists");
+          throw new IllegalArgumentException("File " + name + " already exists");
         }
         out = new DirectCFSIndexOutput(directory.createOutput(name, context), entry,
             true);
Index: lucene/src/java/org/apache/lucene/store/ChecksumIndexInput.java
===================================================================
--- lucene/src/java/org/apache/lucene/store/ChecksumIndexInput.java	(revision 1228729)
+++ lucene/src/java/org/apache/lucene/store/ChecksumIndexInput.java	(working copy)
@@ -67,7 +67,7 @@
 
   @Override
   public void seek(long pos) {
-    throw new RuntimeException("not allowed");
+    throw new UnsupportedOperationException();
   }
 
   @Override
Index: lucene/src/java/org/apache/lucene/store/NativeFSLockFactory.java
===================================================================
--- lucene/src/java/org/apache/lucene/store/NativeFSLockFactory.java	(revision 1228729)
+++ lucene/src/java/org/apache/lucene/store/NativeFSLockFactory.java	(working copy)
@@ -171,6 +171,7 @@
         throw new IOException("Cannot create directory: " +
                               lockDir.getAbsolutePath());
     } else if (!lockDir.isDirectory()) {
+      // TODO: NoSuchDirectoryException instead?
       throw new IOException("Found regular file where directory expected: " + 
                             lockDir.getAbsolutePath());
     }
