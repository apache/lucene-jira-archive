Index: lucene/core/src/test/org/apache/lucene/store/TestFilterDirectory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/test/org/apache/lucene/store/TestFilterDirectory.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/core/src/test/org/apache/lucene/store/TestFilterDirectory.java	(revision )
@@ -29,7 +29,7 @@
 
   @Override
   protected Directory getDirectory(Path path) throws IOException {
-    return new FilterDirectory(new RAMDirectory());
+    return new FilterDirectory(new RAMDirectory()) {};
   }
   
   @Test
@@ -48,7 +48,7 @@
 
   public void testUnwrap() throws IOException {
     Directory dir = FSDirectory.open(createTempDir());
-    FilterDirectory dir2 = new FilterDirectory(dir);
+    FilterDirectory dir2 = new FilterDirectory(dir) {};
     assertEquals(dir, dir2.getDelegate());
     assertEquals(dir, FilterDirectory.unwrap(dir2));
     dir2.close();
Index: lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/core/src/test/org/apache/lucene/index/TestFilterLeafReader.java	(revision )
@@ -196,7 +196,7 @@
     w.addDocument(new Document());
     DirectoryReader dr = w.getReader();
     LeafReader r = dr.leaves().get(0).reader();
-    FilterLeafReader r2 = new FilterLeafReader(r);
+    FilterLeafReader r2 = new FilterLeafReader(r) {};
     assertEquals(r, r2.getDelegate());
     assertEquals(r, FilterLeafReader.unwrap(r2));
     w.close();
Index: lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileChannel.java	(revision )
@@ -31,7 +31,7 @@
  * source of data, possibly transforming the data along the 
  * way or providing additional functionality. 
  */
-public class FilterFileChannel extends FileChannel {
+public abstract class FilterFileChannel extends FileChannel {
   
   /** 
    * The underlying {@code FileChannel} instance. 
Index: lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileStore.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileStore.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileStore.java	(revision )
@@ -28,7 +28,7 @@
  * source of data, possibly transforming the data along the 
  * way or providing additional functionality. 
  */
-public class FilterFileStore extends FileStore {
+public abstract class FilterFileStore extends FileStore {
   
   /** 
    * The underlying {@code FileStore} instance. 
Index: lucene/core/src/java/org/apache/lucene/index/FilterCodecReader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/FilterCodecReader.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/core/src/java/org/apache/lucene/index/FilterCodecReader.java	(revision )
@@ -32,7 +32,7 @@
  * uses as its basic source of data, possibly transforming the data along the
  * way or providing additional functionality.
  */
-public class FilterCodecReader extends CodecReader {
+public abstract class FilterCodecReader extends CodecReader {
   /** 
    * The underlying CodecReader instance. 
    */
Index: lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/core/src/java/org/apache/lucene/index/FilterLeafReader.java	(revision )
@@ -44,7 +44,7 @@
  * overridden as well if the {@link #getLiveDocs() live docs} are not changed
  * either.
  */
-public class FilterLeafReader extends LeafReader {
+public abstract class FilterLeafReader extends LeafReader {
 
   /** Get the wrapped instance by <code>reader</code> as long as this reader is
    *  an instance of {@link FilterLeafReader}.  */
@@ -57,7 +57,7 @@
 
   /** Base class for filtering {@link Fields}
    *  implementations. */
-  public static class FilterFields extends Fields {
+  public abstract static class FilterFields extends Fields {
     /** The underlying Fields instance. */
     protected final Fields in;
 
@@ -93,7 +93,7 @@
    * these terms are going to be intersected with automata, you could consider
    * overriding {@link #intersect} for better performance.
    */
-  public static class FilterTerms extends Terms {
+  public abstract static class FilterTerms extends Terms {
     /** The underlying Terms instance. */
     protected final Terms in;
 
@@ -160,7 +160,7 @@
   }
 
   /** Base class for filtering {@link TermsEnum} implementations. */
-  public static class FilterTermsEnum extends TermsEnum {
+  public abstract static class FilterTermsEnum extends TermsEnum {
     /** The underlying TermsEnum instance. */
     protected final TermsEnum in;
 
@@ -223,7 +223,7 @@
   }
 
   /** Base class for filtering {@link PostingsEnum} implementations. */
-  public static class FilterPostingsEnum extends PostingsEnum {
+  public abstract static class FilterPostingsEnum extends PostingsEnum {
     /** The underlying PostingsEnum instance. */
     protected final PostingsEnum in;
 
Index: lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileSystemProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileSystemProvider.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileSystemProvider.java	(revision )
@@ -48,7 +48,7 @@
  * source of data, possibly transforming the data along the 
  * way or providing additional functionality. 
  */
-public class FilterFileSystemProvider extends FileSystemProvider {
+public abstract class FilterFileSystemProvider extends FileSystemProvider {
   
   /** 
    * The underlying {@code FileSystemProvider}. 
Index: lucene/core/src/java/org/apache/lucene/search/FilterCollector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/java/org/apache/lucene/search/FilterCollector.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/core/src/java/org/apache/lucene/search/FilterCollector.java	(revision )
@@ -26,7 +26,7 @@
  *
  * @lucene.experimental
  */
-public class FilterCollector implements Collector {
+public abstract class FilterCollector implements Collector {
 
   protected final Collector in;
 
Index: lucene/test-framework/src/java/org/apache/lucene/index/MockRandomMergePolicy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/index/MockRandomMergePolicy.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/test-framework/src/java/org/apache/lucene/index/MockRandomMergePolicy.java	(revision )
@@ -159,7 +159,7 @@
             if (LuceneTestCase.VERBOSE) {
               System.out.println("NOTE: MockRandomMergePolicy now swaps in a SlowCodecReaderWrapper for merging reader=" + readers.get(i));
             }
-            readers.set(i, SlowCodecReaderWrapper.wrap(new FilterLeafReader(readers.get(i))));
+            readers.set(i, SlowCodecReaderWrapper.wrap(new FilterLeafReader(readers.get(i)) {}));
           } else if (thingToDo == 1) {
             // renumber fields
             // NOTE: currently this only "blocks" bulk merges just by
Index: lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterOutputStream2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterOutputStream2.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterOutputStream2.java	(revision )
@@ -34,7 +34,7 @@
  * that just overrides {@code close} will not force bytes to be 
  * written one-at-a-time.
  */
-public class FilterOutputStream2 extends OutputStream {
+public abstract class FilterOutputStream2 extends OutputStream {
   
   /** 
    * The underlying {@code OutputStream} instance. 
Index: lucene/core/src/java/org/apache/lucene/store/FilterDirectory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/FilterDirectory.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/core/src/java/org/apache/lucene/store/FilterDirectory.java	(revision )
@@ -29,7 +29,7 @@
  *  {@link Directory} or {@link BaseDirectory} rather than try to reuse
  *  functionality of existing {@link Directory}s by extending this class.
  *  @lucene.internal */
-public class FilterDirectory extends Directory {
+public abstract class FilterDirectory extends Directory {
 
   /** Get the wrapped instance by <code>dir</code> as long as this reader is
    *  an instance of {@link FilterDirectory}.  */
Index: lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileSystem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileSystem.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/test-framework/src/java/org/apache/lucene/mockfile/FilterFileSystem.java	(revision )
@@ -131,7 +131,7 @@
 
         @Override
         public FileStore next() {
-          return new FilterFileStore(iterator.next(), parent.getScheme());
+          return new FilterFileStore(iterator.next(), parent.getScheme()) {};
         }
         
         @Override
Index: lucene/core/src/java/org/apache/lucene/search/FilterLeafCollector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/java/org/apache/lucene/search/FilterLeafCollector.java	(revision 9617d3d400ea4d6b3e00cf0b3a2c94598647bb4e)
+++ lucene/core/src/java/org/apache/lucene/search/FilterLeafCollector.java	(revision )
@@ -24,7 +24,7 @@
  *
  * @lucene.experimental
  */
-public class FilterLeafCollector implements LeafCollector {
+public abstract class FilterLeafCollector implements LeafCollector {
 
   protected final LeafCollector in;
 
