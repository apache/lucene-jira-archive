Index: src/test/org/apache/lucene/queryParser/TestComplexPhraseQuery.java
===================================================================
--- src/test/org/apache/lucene/queryParser/TestComplexPhraseQuery.java	(revision 795147)
+++ src/test/org/apache/lucene/queryParser/TestComplexPhraseQuery.java	(working copy)
@@ -39,7 +39,7 @@
 
   DocData docsContent[] = { new DocData("john smith", "1"),
       new DocData("johathon smith", "2"),
-      new DocData("john percival smith", "3"),
+      new DocData("john percival smith goes on  a b c vacation", "3"),
       new DocData("jackson waits tom", "4") };
 
   private IndexSearcher searcher;
@@ -47,7 +47,12 @@
   String defaultFieldName = "name";
 
   public void testComplexPhrases() throws Exception {
-    checkMatches("\"john smith\"", "1"); // Simple multi-term still works
+	// example to show that is difficult for a user to predict what a query will return
+	// in this case doc 3 is returned for both queries, but I'm not sure why.
+	checkMatches("\"(goos~0.5 AND (mike OR smith) AND NOT ( percival AND john) ) vacation\"~3","3"); // proximity with fuzzy, OR, AND, NOT
+	checkMatches("\"(goos~0.5 AND (mike OR smith) AND ( percival AND john) ) vacation\"~3","3"); // proximity with fuzzy, OR, AND
+	
+	checkMatches("\"john smith\"", "1"); // Simple multi-term still works
     checkMatches("\"j*   smyth~\"", "1,2"); // wildcards and fuzzies are OK in
     // phrases
     checkMatches("\"(jo* -john)  smith\"", "2"); // boolean logic works
