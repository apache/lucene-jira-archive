Index: lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java	(revision 1620137)
+++ lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java	(working copy)
@@ -72,6 +72,8 @@
 import org.apache.lucene.store.MockDirectoryWrapper;
 import org.apache.lucene.store.NoLockFactory;
 import org.apache.lucene.store.RAMDirectory;
+import org.apache.lucene.store.RateLimitedDirectoryWrapper;
+import org.apache.lucene.store.RateLimiter;
 import org.apache.lucene.store.SimpleFSLockFactory;
 import org.apache.lucene.store.SingleInstanceLockFactory;
 import org.apache.lucene.util.Bits;
@@ -2870,5 +2872,37 @@
       ids.add(id);
     }
   }
+  
+  public void testAfterAbortedMerge() throws Exception {
+    MockDirectoryWrapper dir = newMockDirectory();
+    // make merge extremely slow:
+    RateLimitedDirectoryWrapper wrapper = new RateLimitedDirectoryWrapper(dir);
+    wrapper.setRateLimiter(new RateLimiter.SimpleRateLimiter(0.0001D), IOContext.Context.MERGE);
+    
+    IndexWriterConfig conf = new IndexWriterConfig(null);
+    conf.setCommitOnClose(false);
+    LogMergePolicy mp = new LogDocMergePolicy();
+    mp.setMergeFactor(2);
+    conf.setMergePolicy(mp);
+    IndexWriter writer = new IndexWriter(wrapper, conf);
+    writer.addDocument(new Document());
+    writer.commit(); // _0
+    writer.addDocument(new Document());
+    writer.commit(); // _1
+    // now force a very slow merge to happen (which will never finish).
+    writer.addDocument(new Document());
+    writer.getReader().close();
+    // close without waiting for merges
+    writer.close();
+    
+    // will double-write _2
+    writer = new IndexWriter(dir, new IndexWriterConfig(null));
+    writer.addDocument(new Document());
+    writer.addDocument(new Document());
+    writer.commit();
+    writer.close();
+    
+    dir.close();
+  }
 }
 
