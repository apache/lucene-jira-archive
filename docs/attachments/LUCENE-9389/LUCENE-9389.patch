diff --git lucene/luke/src/java/org/apache/lucene/luke/app/IndexHandler.java lucene/luke/src/java/org/apache/lucene/luke/app/IndexHandler.java
index 17e407043e1..885c34a2e8b 100644
--- lucene/luke/src/java/org/apache/lucene/luke/app/IndexHandler.java
+++ lucene/luke/src/java/org/apache/lucene/luke/app/IndexHandler.java
@@ -68,7 +68,7 @@ public final class IndexHandler extends AbstractHandler<IndexObserver> {
     try {
       reader = IndexUtils.openIndex(indexPath, dirImpl);
     } catch (Exception e) {
-      log.error(e.getMessage(), e);
+      log.error("Error opening index", e);
       throw new LukeException(MessageUtils.getLocalizedMessage("openindex.message.index_path_invalid", indexPath), e);
     }
 
diff --git lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.java lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.java
index 1b9508f79eb..906f80c95b3 100644
--- lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.java
+++ lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.java
@@ -357,10 +357,10 @@ public final class AddDocumentDialogFactory implements DialogOpener.DialogFactor
           doc.add(toIndexableField(nf));
         }
       } catch (NumberFormatException ex) {
-        log.error(ex.getMessage(), e);
+        log.error("Error converting field value", e);
         throw new LukeException("Invalid value: " + ex.getMessage(), ex);
       } catch (Exception ex) {
-        log.error(ex.getMessage(), e);
+        log.error("Error converting field value", e);
         throw new LukeException(ex.getMessage(), ex);
       }
 
diff --git lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/CheckIndexDialogFactory.java lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/CheckIndexDialogFactory.java
index 0c9ad37bc72..17c13076d1b 100644
--- lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/CheckIndexDialogFactory.java
+++ lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/CheckIndexDialogFactory.java
@@ -296,7 +296,7 @@ public final class CheckIndexDialogFactory implements DialogOpener.DialogFactory
             }
             status = st;
           } catch (Exception e) {
-            log.error(e.getMessage(), e);
+            log.error("Error checking index", e);
             statusLbl.setText(MessageUtils.getLocalizedMessage("message.error.unknown"));
           }
         }
diff --git lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/OpenIndexDialogFactory.java lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/OpenIndexDialogFactory.java
index 782827d9744..7dfe3c8e26d 100644
--- lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/OpenIndexDialogFactory.java
+++ lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/OpenIndexDialogFactory.java
@@ -352,7 +352,7 @@ public final class OpenIndexDialogFactory implements DialogOpener.DialogFactory
         JOptionPane.showMessageDialog(dialog, message, "Invalid index path", JOptionPane.ERROR_MESSAGE);
       } catch (Throwable cause) {
         JOptionPane.showMessageDialog(dialog, MessageUtils.getLocalizedMessage("message.error.unknown"), "Unknown Error", JOptionPane.ERROR_MESSAGE);
-        log.error(cause.getMessage(), cause);
+        log.error("Error opening index or directory", cause);
       }
     }
 
diff --git lucene/luke/src/java/org/apache/lucene/luke/app/desktop/util/ExceptionHandler.java lucene/luke/src/java/org/apache/lucene/luke/app/desktop/util/ExceptionHandler.java
index b989748f52a..60a4bd1372a 100644
--- lucene/luke/src/java/org/apache/lucene/luke/app/desktop/util/ExceptionHandler.java
+++ lucene/luke/src/java/org/apache/lucene/luke/app/desktop/util/ExceptionHandler.java
@@ -33,10 +33,10 @@ public final class ExceptionHandler {
     if (t instanceof LukeException) {
       Throwable cause = t.getCause();
       String message = (cause == null) ? t.getMessage() : t.getMessage() + " " + cause.getMessage();
-      log.warn(t.getMessage(), t);
+      log.warn("Uncaught LukeException", t);
       messageBroker.showStatusMessage(message);
     } else {
-      log.error(t.getMessage(), t);
+      log.error("Uncaught Exception", t);
       messageBroker.showUnknownErrorMessage();
     }
   }
diff --git lucene/luke/src/java/org/apache/lucene/luke/models/util/IndexUtils.java lucene/luke/src/java/org/apache/lucene/luke/models/util/IndexUtils.java
index 9b98e92b9ed..13046350ebc 100644
--- lucene/luke/src/java/org/apache/lucene/luke/models/util/IndexUtils.java
+++ lucene/luke/src/java/org/apache/lucene/luke/models/util/IndexUtils.java
@@ -83,7 +83,7 @@ public final class IndexUtils {
           DirectoryReader dr = DirectoryReader.open(dir);
           readers.add(dr);
         } catch (IOException e) {
-          log.warn(e.getMessage(), e);
+          log.warn("Error opening directory", e);
         }
         return FileVisitResult.CONTINUE;
       }
@@ -142,7 +142,7 @@ public final class IndexUtils {
           dir = (Directory) constr.newInstance(path, null);
         }
       } catch (Exception e) {
-        log.warn(e.getMessage(), e);
+        log.warn("Invalid directory implementation class: {}", dirImpl, e);
         throw new IllegalArgumentException("Invalid directory implementation class: " + dirImpl);
       }
     }
@@ -161,7 +161,7 @@ public final class IndexUtils {
         log.info("Directory successfully closed.");
       }
     } catch (IOException e) {
-      log.error(e.getMessage(), e);
+      log.error("Error closing directory", e);
     }
   }
 
@@ -182,7 +182,7 @@ public final class IndexUtils {
         }
       }
     } catch (IOException e) {
-      log.error(e.getMessage(), e);
+      log.error("Error closing index reader", e);
     }
   }
 
