Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Writer.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Writer.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/Writer.java	(working copy)
@@ -36,8 +36,6 @@
  * Document IDs passed to this API must always be increasing unless stated
  * otherwise.
  * </p>
- * 
- * @lucene.experimental
  */
 abstract class Writer extends DocValuesConsumer {
   protected final Counter bytesUsed;
Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.java	(working copy)
@@ -38,7 +38,6 @@
 /**
  * Stores integers using {@link PackedInts}
  * 
- * @lucene.experimental
  * */
 class PackedIntValues {
 
Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarDerefBytesImpl.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarDerefBytesImpl.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarDerefBytesImpl.java	(working copy)
@@ -32,12 +32,10 @@
 import org.apache.lucene.util.PagedBytes;
 import org.apache.lucene.util.packed.PackedInts;
 
-// Stores variable-length byte[] by deref, ie when two docs
-// have the same value, they store only 1 byte[] and both
-// docs reference that single source
-
 /**
- * @lucene.experimental
+ * Stores variable-length byte[] by deref, ie when two docs
+ * have the same value, they store only 1 byte[] and both
+ * docs reference that single source
  */
 class VarDerefBytesImpl {
 
Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarStraightBytesImpl.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarStraightBytesImpl.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarStraightBytesImpl.java	(working copy)
@@ -43,10 +43,8 @@
 import org.apache.lucene.util.packed.PackedInts.ReaderIterator;
 import org.apache.lucene.util.packed.PackedInts;
 
-// Variable length byte[] per document, no sharing
-
 /**
- * @lucene.experimental
+ * Variable length byte[] per document, no sharing
  */
 class VarStraightBytesImpl {
 
Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedStraightBytesImpl.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedStraightBytesImpl.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedStraightBytesImpl.java	(working copy)
@@ -42,10 +42,9 @@
 
 import static org.apache.lucene.util.ByteBlockPool.BYTE_BLOCK_SIZE;
 
-// Simplest storage: stores fixed length byte[] per
-// document, with no dedup and no sorting.
 /**
- * @lucene.experimental
+ * Simplest storage: stores fixed length byte[] per
+ * document, with no dedup and no sorting.
  */
 class FixedStraightBytesImpl {
 
Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedDerefBytesImpl.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedDerefBytesImpl.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedDerefBytesImpl.java	(working copy)
@@ -32,10 +32,9 @@
 import org.apache.lucene.util.PagedBytes;
 import org.apache.lucene.util.packed.PackedInts;
 
-// Stores fixed-length byte[] by deref, ie when two docs
-// have the same value, they store only 1 byte[]
 /**
- * @lucene.experimental
+ * Stores fixed-length byte[] by deref, ie when two docs
+ * have the same value, they store only 1 byte[]
  */
 class FixedDerefBytesImpl {
 
Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarSortedBytesImpl.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarSortedBytesImpl.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/VarSortedBytesImpl.java	(working copy)
@@ -41,12 +41,10 @@
 import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.packed.PackedInts;
 
-// Stores variable-length byte[] by deref, ie when two docs
-// have the same value, they store only 1 byte[] and both
-// docs reference that single source
-
 /**
- * @lucene.experimental
+ * Stores variable-length byte[] by deref, ie when two docs
+ * have the same value, they store only 1 byte[] and both
+ * docs reference that single source
  */
 final class VarSortedBytesImpl {
 
Index: lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedSortedBytesImpl.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedSortedBytesImpl.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/FixedSortedBytesImpl.java	(working copy)
@@ -41,11 +41,9 @@
 import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.packed.PackedInts;
 
-// Stores fixed-length byte[] by deref, ie when two docs
-// have the same value, they store only 1 byte[]
-
 /**
- * @lucene.experimental
+ * Stores fixed-length byte[] by deref, ie when two docs
+ * have the same value, they store only 1 byte[]
  */
 class FixedSortedBytesImpl {
 
Index: lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListReader.java	(working copy)
@@ -27,8 +27,6 @@
 /**
  * Implements the skip list reader for the default posting list format
  * that stores positions and payloads.
- *
- * @lucene.experimental
  */
 
 // TODO: rewrite this as recursive classes?
Index: lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListWriter.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListWriter.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/codecs/sep/SepSkipListWriter.java	(working copy)
@@ -30,8 +30,6 @@
 /**
  * Implements the skip list writer for the default posting list format
  * that stores positions and payloads.
- *
- * @lucene.experimental
  */
 class SepSkipListWriter extends MultiLevelSkipListWriter {
   private int[] lastSkipDoc;
Index: lucene/core/src/java/org/apache/lucene/search/Collector.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/search/Collector.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/search/Collector.java	(working copy)
@@ -116,8 +116,6 @@
  * negative custom scores, could cause it to happen).  If
  * you need that behavior, use {@link
  * PositiveScoresOnlyCollector}.</p>
- *
- * @lucene.experimental
  * 
  * @since 2.9
  */
Index: lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java	(working copy)
@@ -22,8 +22,6 @@
  * This class tracks the number and position / offset parameters of terms
  * being added to the index. The information collected in this class is
  * also used to calculate the normalization factor for a field.
- * 
- * @lucene.experimental
  */
 public final class FieldInvertState {
   String name;
Index: lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/index/PrefixCodedTerms.java	(working copy)
@@ -28,7 +28,6 @@
 
 /**
  * Prefix codes term instances (prefixes are shared)
- * @lucene.experimental
  */
 class PrefixCodedTerms implements Iterable<Term> {
   final RAMFile buffer;
Index: lucene/core/src/java/org/apache/lucene/index/FieldInfo.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/FieldInfo.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/index/FieldInfo.java	(working copy)
@@ -49,7 +49,6 @@
 
   /**
    * Controls how much information is stored in the postings lists.
-   * @lucene.experimental
    */
   public static enum IndexOptions { 
     // NOTE: order is important here; FieldInfo uses this
Index: lucene/core/src/java/org/apache/lucene/index/Norm.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/Norm.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/index/Norm.java	(working copy)
@@ -38,9 +38,6 @@
  * value types are not permitted within a single field. All values set must be
  * fixed size values ie. all values passed to {@link Norm#setBytes(BytesRef)}
  * must have the same length per field.
- * 
- * @lucene.experimental
- * @lucene.internal
  */
 public final class Norm  {
   private Field field;
Index: lucene/core/src/java/org/apache/lucene/util/Bits.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/util/Bits.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/util/Bits.java	(working copy)
@@ -19,7 +19,6 @@
 
 /**
  * Interface for Bitset-like structures.
- * @lucene.experimental
  */
 
 public interface Bits {
Index: lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor.java	(revision 1376530)
+++ lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor.java	(working copy)
@@ -31,9 +31,7 @@
  *  <p>
  *  This is used by {@link IndexReader#document(int)} to load a
  *  document.
- *
- * @lucene.experimental */
-
+ */
 public class DocumentStoredFieldVisitor extends StoredFieldVisitor {
   private final Document doc = new Document();
   private final Set<String> fieldsToAdd;
Index: lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java
===================================================================
--- lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java	(revision 1376530)
+++ lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java	(working copy)
@@ -38,7 +38,6 @@
  * getRuleStatus(): 
  * http://bugs.icu-project.org/trac/ticket/4730: Thai RBBI, no boundary type
  * tags
- * @lucene.experimental
  */
 abstract class BreakIteratorWrapper {
   protected final CharArrayIterator textIterator = new CharArrayIterator();
Index: lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ScriptIterator.java
===================================================================
--- lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ScriptIterator.java	(revision 1376530)
+++ lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ScriptIterator.java	(working copy)
@@ -48,7 +48,6 @@
  *  <li>Non-spacing marks inherit the script of their base character, following 
  *  recommendations from UTR #24.
  * </ul>
- * @lucene.experimental
  */
 final class ScriptIterator {
   private char text[];
Index: lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java
===================================================================
--- lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java	(revision 1376530)
+++ lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java	(working copy)
@@ -34,7 +34,6 @@
  * associated with a piece of text.
  * <p>
  * See also UAX #29, UTR #24
- * @lucene.experimental
  */
 final class CompositeBreakIterator {
   private final ICUTokenizerConfig config;
Index: lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CharArrayIterator.java
===================================================================
--- lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CharArrayIterator.java	(revision 1376530)
+++ lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CharArrayIterator.java	(working copy)
@@ -21,7 +21,6 @@
 
 /**
  * Wraps a char[] as CharacterIterator for processing with a BreakIterator
- * @lucene.experimental
  */
 final class CharArrayIterator implements CharacterIterator {
   private char array[];
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser.java
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser.java	(revision 1376530)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSolrSynonymParser.java	(working copy)
@@ -31,7 +31,6 @@
 
 /**
  * Tests parser for the Solr synonyms format
- * @lucene.experimental
  */
 public class TestSolrSynonymParser extends BaseTokenStreamTestCase {
   
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/NormalizeCharMap.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/NormalizeCharMap.java	(revision 1376530)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/NormalizeCharMap.java	(working copy)
@@ -74,7 +74,6 @@
    * Builds an NormalizeCharMap.
    * <p>
    * Call add() until you have added all the mappings, then call build() to get a NormalizeCharMap
-   * @lucene.experimental
    */
   public static class Builder {
 
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/el/GreekStemmer.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/el/GreekStemmer.java	(revision 1376530)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/el/GreekStemmer.java	(working copy)
@@ -29,7 +29,6 @@
  * NOTE: Input is expected to be casefolded for Greek (including folding of final
  * sigma to sigma), and with diacritics removed. This can be achieved with 
  * either {@link GreekLowerCaseFilter} or ICUFoldingFilter.
- * @lucene.experimental
  */
 public class GreekStemmer {
   public int stem(char s[], int len) {
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/el/GreekStemFilter.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/el/GreekStemFilter.java	(revision 1376530)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/el/GreekStemFilter.java	(working copy)
@@ -37,7 +37,6 @@
  * NOTE: Input is expected to be casefolded for Greek (including folding of final
  * sigma to sigma), and with diacritics removed. This can be achieved by using 
  * either {@link GreekLowerCaseFilter} or ICUFoldingFilter before GreekStemFilter.
- * @lucene.experimental
  */
 public final class GreekStemFilter extends TokenFilter {
   private final GreekStemmer stemmer = new GreekStemmer();
