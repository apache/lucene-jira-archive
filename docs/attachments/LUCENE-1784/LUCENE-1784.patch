Index: src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
===================================================================
--- src/java/org/apache/lucene/search/DisjunctionMaxQuery.java	(revision 802803)
+++ src/java/org/apache/lucene/search/DisjunctionMaxQuery.java	(working copy)
@@ -85,11 +85,19 @@
     return disjuncts.iterator();
   }
 
-  /* The Weight for DisjunctionMaxQuery's, used to normalize, score and explain these queries */
-  private class DisjunctionMaxWeight extends QueryWeight {
+  /**
+   * The Weight for DisjunctionMaxQuery's, used to normalize, score and explain these queries.
+   *
+   * <p>EXPERT NOTE: overriding this class is for expert use only.</p>
+   *
+   * <p>The implementation of this class is subject to change in future releases.</p>
+   */
+  protected class DisjunctionMaxWeight extends QueryWeight {
+    /** The similarity which we are associated. */
+    protected Similarity similarity;
 
-    private Similarity similarity;   // The similarity which we are associated.
-    private ArrayList weights = new ArrayList();  // The Weight's for our subqueries, in 1-1 correspondence with disjuncts
+    /** The Weight's for our subqueries, in 1-1 correspondence with disjuncts */
+    protected ArrayList weights = new ArrayList();
 
     /* Construct the Weight for this Query searched by searcher.  Recursively construct subquery weights. */
     public DisjunctionMaxWeight(Searcher searcher) throws IOException {
Index: src/java/org/apache/lucene/search/BooleanQuery.java
===================================================================
--- src/java/org/apache/lucene/search/BooleanQuery.java	(revision 802803)
+++ src/java/org/apache/lucene/search/BooleanQuery.java	(working copy)
@@ -172,8 +172,18 @@
   /** Returns the list of clauses in this query. */
   public List clauses() { return clauses; }
 
-  private class BooleanWeight extends QueryWeight {
+  /**
+   * The Weight implementation for BooleanQuery, used to normalize, score and explain these queries.
+   *
+   * <p>EXPERT NOTE: overriding this class is for expert use only.</p>
+   *
+   * <p>The implementation of this class is subject to change in future releases.</p>
+   */
+  protected class BooleanWeight extends QueryWeight {
+    /** The similarity Implementation. */
     protected Similarity similarity;
+
+    /** The Weight's for our subqueries, in 1-1 correspondence with clauses */
     protected ArrayList weights;
 
     public BooleanWeight(Searcher searcher)
