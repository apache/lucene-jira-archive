Index: src/java/org/apache/lucene/search/BooleanQuery.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/BooleanQuery.java,v
retrieving revision 1.27
diff -u -u -U5 -r1.27 BooleanQuery.java
--- src/java/org/apache/lucene/search/BooleanQuery.java	24 Nov 2004 22:06:12 -0000	1.27
+++ src/java/org/apache/lucene/search/BooleanQuery.java	30 Nov 2004 11:06:01 -0000
@@ -241,11 +241,11 @@
         return result;
       }
     }
   }
 
-  protected Weight createWeight(Searcher searcher) {
+  public Weight createWeight(Searcher searcher) {
     return new BooleanWeight(searcher);
   }
 
   public Query rewrite(IndexReader reader) throws IOException {
     if (clauses.size() == 1) {                    // optimize 1-clause queries
Index: src/java/org/apache/lucene/search/BooleanScorer.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/BooleanScorer.java,v
retrieving revision 1.13
diff -u -u -U5 -r1.13 BooleanScorer.java
--- src/java/org/apache/lucene/search/BooleanScorer.java	13 Oct 2004 17:12:04 -0000	1.13
+++ src/java/org/apache/lucene/search/BooleanScorer.java	1 Dec 2004 05:52:48 -0000
@@ -88,11 +88,11 @@
 
   public void score(HitCollector hc) throws IOException {
     score(hc, Integer.MAX_VALUE);
   }
 
-  protected boolean score(HitCollector hc, int max) throws IOException {
+  public boolean score(HitCollector hc, int max) throws IOException {
     if (coordFactors == null)
       computeCoordFactors();
 
     boolean more;
     do {
Index: src/java/org/apache/lucene/search/ConjunctionScorer.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/ConjunctionScorer.java,v
retrieving revision 1.6
diff -u -u -U5 -r1.6 ConjunctionScorer.java
--- src/java/org/apache/lucene/search/ConjunctionScorer.java	6 Sep 2004 12:07:04 -0000	1.6
+++ src/java/org/apache/lucene/search/ConjunctionScorer.java	30 Nov 2004 11:10:48 -0000
@@ -18,20 +18,22 @@
 
 import java.io.IOException;
 import java.util.*;
 
 /** Scorer for conjunctions, sets of queries, all of which are required. */
+public 
 final class ConjunctionScorer extends Scorer {
   private LinkedList scorers = new LinkedList();
   private boolean firstTime = true;
   private boolean more = true;
   private float coord;
 
   public ConjunctionScorer(Similarity similarity) {
     super(similarity);
   }
 
+  public
   final void add(Scorer scorer) {
     scorers.addLast(scorer);
   }
 
   private Scorer first() { return (Scorer)scorers.getFirst(); }
Index: src/java/org/apache/lucene/search/FilteredQuery.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/FilteredQuery.java,v
retrieving revision 1.5
diff -u -u -U5 -r1.5 FilteredQuery.java
--- src/java/org/apache/lucene/search/FilteredQuery.java	18 Jun 2004 09:52:25 -0000	1.5
+++ src/java/org/apache/lucene/search/FilteredQuery.java	30 Nov 2004 11:06:06 -0000
@@ -54,11 +54,11 @@
 
   /**
    * Returns a Weight that applies the filter to the enclosed query's Weight.
    * This is accomplished by overriding the Scorer returned by the Weight.
    */
-  protected Weight createWeight (final Searcher searcher) {
+  public Weight createWeight (final Searcher searcher) {
     final Weight weight = query.createWeight (searcher);
     return new Weight() {
 
       // pass these methods through to enclosed query's weight
       public float getValue() { return weight.getValue(); }
Index: src/java/org/apache/lucene/search/MultiPhraseQuery.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/MultiPhraseQuery.java,v
retrieving revision 1.1
diff -u -u -U5 -r1.1 MultiPhraseQuery.java
--- src/java/org/apache/lucene/search/MultiPhraseQuery.java	10 Oct 2004 15:27:15 -0000	1.1
+++ src/java/org/apache/lucene/search/MultiPhraseQuery.java	30 Nov 2004 11:06:12 -0000
@@ -223,11 +223,11 @@
 
       return result;
     }
   }
 
-  protected Weight createWeight(Searcher searcher) {
+  public Weight createWeight(Searcher searcher) {
     if (termArrays.size() == 1) {                 // optimize one-term case
       Term[] terms = (Term[])termArrays.get(0);
       BooleanQuery boq = new BooleanQuery();
       for (int i=0; i<terms.length; i++) {
         boq.add(new TermQuery(terms[i]), BooleanClause.Occur.SHOULD);
Index: src/java/org/apache/lucene/search/PhrasePrefixQuery.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/PhrasePrefixQuery.java,v
retrieving revision 1.18
diff -u -u -U5 -r1.18 PhrasePrefixQuery.java
--- src/java/org/apache/lucene/search/PhrasePrefixQuery.java	10 Oct 2004 15:27:15 -0000	1.18
+++ src/java/org/apache/lucene/search/PhrasePrefixQuery.java	30 Nov 2004 11:06:18 -0000
@@ -224,11 +224,11 @@
 
       return result;
     }
   }
 
-  protected Weight createWeight(Searcher searcher) {
+  public Weight createWeight(Searcher searcher) {
     if (termArrays.size() == 1) {                 // optimize one-term case
       Term[] terms = (Term[])termArrays.get(0);
       BooleanQuery boq = new BooleanQuery();
       for (int i=0; i<terms.length; i++) {
         boq.add(new TermQuery(terms[i]), BooleanClause.Occur.SHOULD);
Index: src/java/org/apache/lucene/search/PhraseQuery.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/PhraseQuery.java,v
retrieving revision 1.17
diff -u -u -U5 -r1.17 PhraseQuery.java
--- src/java/org/apache/lucene/search/PhraseQuery.java	15 Sep 2004 21:09:00 -0000	1.17
+++ src/java/org/apache/lucene/search/PhraseQuery.java	30 Nov 2004 11:06:23 -0000
@@ -226,11 +226,11 @@
 
       return result;
     }
   }
 
-  protected Weight createWeight(Searcher searcher) {
+  public Weight createWeight(Searcher searcher) {
     if (terms.size() == 1) {			  // optimize one-term case
       Term term = (Term)terms.elementAt(0);
       Query termQuery = new TermQuery(term);
       termQuery.setBoost(getBoost());
       return termQuery.createWeight(searcher);
Index: src/java/org/apache/lucene/search/Query.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/Query.java,v
retrieving revision 1.18
diff -u -u -U5 -r1.18 Query.java
--- src/java/org/apache/lucene/search/Query.java	15 Oct 2004 19:50:58 -0000	1.18
+++ src/java/org/apache/lucene/search/Query.java	30 Nov 2004 11:05:51 -0000
@@ -79,11 +79,11 @@
 
   /** Expert: Constructs an appropriate Weight implementation for this query.
    *
    * <p>Only implemented by primitive queries, which re-write to themselves.
    */
-  protected Weight createWeight(Searcher searcher) {
+  public Weight createWeight(Searcher searcher) {
     throw new UnsupportedOperationException();
   }
 
   /** Expert: Constructs an initializes a Weight for a top-level query. */
   public Weight weight(Searcher searcher)
Index: src/java/org/apache/lucene/search/Scorer.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/Scorer.java,v
retrieving revision 1.8
diff -u -u -U5 -r1.8 Scorer.java
--- src/java/org/apache/lucene/search/Scorer.java	10 Oct 2004 18:43:18 -0000	1.8
+++ src/java/org/apache/lucene/search/Scorer.java	30 Nov 2004 11:00:06 -0000
@@ -55,11 +55,11 @@
    * @param hc The collector to which all matching documents are passed through
    * {@link HitCollector#collect(int, float)}.
    * @param max Do not score documents past this.
    * @return true if more matching documents may remain.
    */
-  protected boolean score(HitCollector hc, int max) throws IOException {
+  public boolean score(HitCollector hc, int max) throws IOException {
     while (doc() < max) {
       hc.collect(doc(), score());
       if (!next())
         return false;
     }
Index: src/java/org/apache/lucene/search/TermQuery.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/TermQuery.java,v
retrieving revision 1.13
diff -u -u -U5 -r1.13 TermQuery.java
--- src/java/org/apache/lucene/search/TermQuery.java	6 Sep 2004 22:09:13 -0000	1.13
+++ src/java/org/apache/lucene/search/TermQuery.java	30 Nov 2004 11:06:28 -0000
@@ -132,11 +132,11 @@
   }
 
   /** Returns the term of this query. */
   public Term getTerm() { return term; }
 
-  protected Weight createWeight(Searcher searcher) {
+  public Weight createWeight(Searcher searcher) {
     return new TermWeight(searcher);
   }
 
   /** Prints a user-readable version of this query. */
   public String toString(String field) {
Index: src/java/org/apache/lucene/search/TermScorer.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/TermScorer.java,v
retrieving revision 1.15
diff -u -u -U5 -r1.15 TermScorer.java
--- src/java/org/apache/lucene/search/TermScorer.java	6 Oct 2004 21:01:12 -0000	1.15
+++ src/java/org/apache/lucene/search/TermScorer.java	30 Nov 2004 11:02:44 -0000
@@ -58,11 +58,11 @@
   public void score(HitCollector hc) throws IOException {
     next();
     score(hc, Integer.MAX_VALUE);
   }
 
-  protected boolean score(HitCollector c, int end) throws IOException {
+  public boolean score(HitCollector c, int end) throws IOException {
     Similarity similarity = getSimilarity();      // cache sim in local
     float[] normDecoder = Similarity.getNormDecoder();
     while (doc < end) {                           // for docs in window
       int f = freqs[pointer];
       float score =                               // compute tf(f)*weight
Index: src/java/org/apache/lucene/search/spans/SpanQuery.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/search/spans/SpanQuery.java,v
retrieving revision 1.2
diff -u -u -U5 -r1.2 SpanQuery.java
--- src/java/org/apache/lucene/search/spans/SpanQuery.java	2 Feb 2004 13:27:52 -0000	1.2
+++ src/java/org/apache/lucene/search/spans/SpanQuery.java	30 Nov 2004 11:06:34 -0000
@@ -35,11 +35,11 @@
   public abstract String getField();
 
   /** Returns a collection of all terms matched by this query.*/
   public abstract Collection getTerms();
 
-  protected Weight createWeight(Searcher searcher) {
+  public Weight createWeight(Searcher searcher) {
     return new SpanWeight(this, searcher);
   }
 
 }
 
