Index: lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/util/TestUnescapedCharSequence.java
===================================================================
--- lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/util/TestUnescapedCharSequence.java	(revision 0)
+++ lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/util/TestUnescapedCharSequence.java	(revision 0)
@@ -0,0 +1,40 @@
+package org.apache.lucene.queryparser.flexible.core.util;
+
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Locale;
+
+import org.apache.lucene.util.LuceneTestCase;
+
+public class TestUnescapedCharSequence extends LuceneTestCase {
+ 
+  /* LUCENE-6358 bug in UnescapedCharSequence.toLowerCase() */
+  public void testToLowerCase() throws Exception {
+    Locale locale = new Locale("lt");
+    //generate an input string that gets longer when lowercased
+    UnescapedCharSequence input = new UnescapedCharSequence(new char[]{'\u00cc', '*'}, new boolean[]{false, true}, 0, 2);
+    UnescapedCharSequence output = (UnescapedCharSequence) UnescapedCharSequence.toLowerCase(input, locale);
+    
+    assertEquals(output.toString(), input.toString().toLowerCase(locale));
+    assertEquals(output.wasEscaped(0), false);
+    assertEquals(output.wasEscaped(1), false);
+    assertEquals(output.wasEscaped(2), false);
+    assertEquals(output.wasEscaped(3), true);
+  }
+  
+}
