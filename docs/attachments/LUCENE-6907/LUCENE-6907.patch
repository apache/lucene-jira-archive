diff --git a/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/NumericRangeQuery.xml b/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/NumericRangeQuery.xml
new file mode 100644
index 0000000..933ab1e
--- /dev/null
+++ b/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/NumericRangeQuery.xml
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<BooleanQuery fieldName="contents">
+  <Clause occurs="should">
+    <TermQuery>merger</TermQuery>
+  </Clause>
+  <Clause occurs="mustnot">
+    <TermQuery >sumitomo</TermQuery>    
+  </Clause>
+  <Clause occurs="must">
+    <TermQuery>bank</TermQuery>
+  </Clause>
+  <Clause occurs="must">
+    <NumericRangeQuery fieldName="date2" lowerTerm="19870409" upperTerm="19870412"/>
+  </Clause>
+</BooleanQuery>
diff --git a/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/NumericRangeQueryQuery.xml b/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/NumericRangeQueryQuery.xml
deleted file mode 100644
index 933ab1e..0000000
--- a/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/NumericRangeQueryQuery.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Licensed to the Apache Software Foundation (ASF) under one or more
- contributor license agreements.  See the NOTICE file distributed with
- this work for additional information regarding copyright ownership.
- The ASF licenses this file to You under the Apache License, Version 2.0
- (the "License"); you may not use this file except in compliance with
- the License.  You may obtain a copy of the License at
-
-     http://www.apache.org/licenses/LICENSE-2.0
-
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<BooleanQuery fieldName="contents">
-  <Clause occurs="should">
-    <TermQuery>merger</TermQuery>
-  </Clause>
-  <Clause occurs="mustnot">
-    <TermQuery >sumitomo</TermQuery>    
-  </Clause>
-  <Clause occurs="must">
-    <TermQuery>bank</TermQuery>
-  </Clause>
-  <Clause occurs="must">
-    <NumericRangeQuery fieldName="date2" lowerTerm="19870409" upperTerm="19870412"/>
-  </Clause>
-</BooleanQuery>
diff --git a/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestParser.java b/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestParser.java
index 1d33f28..f3f7599 100644
--- a/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestParser.java
+++ b/lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestParser.java
@@ -50,7 +50,8 @@ import java.util.List;
 
 public class TestParser extends LuceneTestCase {
 
-  private static CoreParser builder;
+  private static Analyzer analyzer;
+  private static CoreParser coreParser;
   private static Directory dir;
   private static IndexReader reader;
   private static IndexSearcher searcher;
@@ -58,9 +59,9 @@ public class TestParser extends LuceneTestCase {
   @BeforeClass
   public static void beforeClass() throws Exception {
     // TODO: rewrite test (this needs to set QueryParser.enablePositionIncrements, too, for work with CURRENT):
-    Analyzer analyzer = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true, MockTokenFilter.ENGLISH_STOPSET);
+    analyzer = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, true, MockTokenFilter.ENGLISH_STOPSET);
     //initialize the parser
-    builder = new CorePlusExtensionsParser("contents", analyzer);
+    coreParser = new CorePlusExtensionsParser("contents", analyzer);
 
     BufferedReader d = new BufferedReader(new InputStreamReader(
         TestParser.class.getResourceAsStream("reuters21578.txt"), StandardCharsets.US_ASCII));
@@ -92,7 +93,8 @@ public class TestParser extends LuceneTestCase {
     reader = null;
     searcher = null;
     dir = null;
-    builder = null;
+    coreParser = null;
+    analyzer = null;
   }
 
   public void testSimpleXML() throws ParserException, IOException {
@@ -181,16 +183,24 @@ public class TestParser extends LuceneTestCase {
     dumpResults("Nested Boolean query", q, 5);
   }
 
-  public void testNumericRangeQueryQueryXML() throws ParserException, IOException {
-    Query q = parse("NumericRangeQueryQuery.xml");
+  public void testNumericRangeQueryXML() throws ParserException, IOException {
+    Query q = parse("NumericRangeQuery.xml");
     dumpResults("NumericRangeQuery", q, 5);
   }
 
   //================= Helper methods ===================================
 
+  protected Analyzer analyzer() {
+    return analyzer;
+  }
+
+  protected CoreParser coreParser() {
+    return coreParser;
+  }
+
   private Query parse(String xmlFileName) throws ParserException, IOException {
     InputStream xmlStream = TestParser.class.getResourceAsStream(xmlFileName);
-    Query result = builder.parse(xmlStream);
+    Query result = coreParser().parse(xmlStream);
     xmlStream.close();
     return result;
   }
