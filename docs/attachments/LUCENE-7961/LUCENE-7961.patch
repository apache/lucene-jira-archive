diff --git a/lucene/core/src/java/org/apache/lucene/store/SimpleFSLockFactory.java b/lucene/core/src/java/org/apache/lucene/store/SimpleFSLockFactory.java
index 101ff5e..a467a1c 100644
--- a/lucene/core/src/java/org/apache/lucene/store/SimpleFSLockFactory.java
+++ b/lucene/core/src/java/org/apache/lucene/store/SimpleFSLockFactory.java
@@ -80,9 +80,11 @@ public final class SimpleFSLockFactory extends FSLockFactory {
     // create the file: this will fail if it already exists
     try {
       Files.createFile(lockFile);
-    } catch (FileAlreadyExistsException | AccessDeniedException e) {
-      // convert optional specific exception to our optional specific exception
-      throw new LockObtainFailedException("Lock held elsewhere: " + lockFile, e);
+    } catch (IOException e) {
+      // Files.createFile gives no guarantees: can't determine if lock is truly held elsewhere from exc type.
+      // On windows, we'll also sporatically get AccessDenied instead of FileAlreadyExists under "pressure"
+      // Finally, it might be the case the file is just a leftover from abnormal JVM exit, OS crash, etc.
+      throw new LockObtainFailedException("Lock held elsewhere, orphaned after crash, or inaccessible: " + lockFile, e);
     }
     
     // used as a best-effort check, to see if the underlying file has changed
