Index: solr/src/java/org/apache/solr/analysis/IndonesianStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/IndonesianStemFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/IndonesianStemFilterFactory.java	(working copy)
@@ -22,7 +22,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.id.IndonesianStemFilter;
 
-/** Factory for {@link IndonesianStemFilter} */
+/** 
+ * Factory for {@link IndonesianStemFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_idstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.IndonesianStemFilterFactory" stemDerivational="true"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$  
+ */
 public class IndonesianStemFilterFactory extends BaseTokenFilterFactory {
   private boolean stemDerivational = true;
 
Index: solr/src/java/org/apache/solr/analysis/ItalianLightStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/ItalianLightStemFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/ItalianLightStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.it.ItalianLightStemFilter;
 
-/** Factory for {@link ItalianLightStemFilter} */
+/** 
+ * Factory for {@link ItalianLightStemFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_itlgtstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.ItalianLightStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ */
 public class ItalianLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new ItalianLightStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/NGramFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/NGramFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/NGramFilterFactory.java	(working copy)
@@ -22,7 +22,15 @@
 import org.apache.lucene.analysis.ngram.NGramTokenFilter;
 
 /**
- * Creates new instances of {@link NGramTokenFilter}.
+ * Factory for {@link NGramTokenFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_ngrm" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.NGramFilterFactory" minGramSize="1" maxGramSize="2"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
  */
 public class NGramFilterFactory extends BaseTokenFilterFactory {
   private int maxGramSize = 0;
Index: solr/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/LowerCaseTokenizerFactory.java	(working copy)
@@ -23,6 +23,13 @@
 import java.util.Map;
 
 /**
+ * Factory for {@link LowerCaseTokenizer}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_lwrcase" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.LowerCaseTokenizerFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
  * @version $Id$
  */
 public class LowerCaseTokenizerFactory extends BaseTokenizerFactory {
Index: solr/src/java/org/apache/solr/analysis/LengthFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/LengthFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/LengthFilterFactory.java	(working copy)
@@ -23,6 +23,14 @@
 import java.util.Map;
 
 /**
+ * Factory for {@link LengthFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_lngth" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.LengthFilterFactory" min="0" max="1" enablePositionIncrements="false"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
  * @version $Id$
  */
 public class LengthFilterFactory extends BaseTokenFilterFactory {
Index: solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory.java	(working copy)
@@ -32,7 +32,14 @@
 import org.apache.solr.util.plugin.ResourceLoaderAware;
 
 /**
- *
+ * Factory for {@link MappingCharFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_map" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;charFilter class="solr.MappingCharFilterFactory" mapping="mapping.txt"/&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
  * @version $Id$
  * @since Solr 1.4
  *
Index: solr/src/java/org/apache/solr/analysis/IndicNormalizationFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/IndicNormalizationFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/IndicNormalizationFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.in.IndicNormalizationFilter;
 
-/** Factory for {@link IndicNormalizationFilter} */
+/** 
+ * Factory for {@link IndicNormalizationFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_innormal" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.IndicNormalizationFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$   
+ */
 public class IndicNormalizationFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new IndicNormalizationFilter(input);
Index: solr/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/KeywordTokenizerFactory.java	(working copy)
@@ -22,6 +22,13 @@
 import java.io.Reader;
 
 /**
+ * Factory for {@link KeywordTokenizer}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_keyword" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.KeywordTokenizerFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
  * @version $Id$
  */
 public class KeywordTokenizerFactory extends BaseTokenizerFactory {
Index: solr/src/java/org/apache/solr/analysis/NumericPayloadTokenFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/NumericPayloadTokenFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/NumericPayloadTokenFilterFactory.java	(working copy)
@@ -23,7 +23,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import java.util.Map;
 
-/** Factory for {@link NumericPayloadTokenFilter} */
+/** 
+ * Factory for {@link NumericPayloadTokenFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_numpayload" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.NumericPayloadTokenFilterFactory" payload="24" typeMatch="word"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$  
+ */
 public class NumericPayloadTokenFilterFactory extends BaseTokenFilterFactory {
   private float payload;
   private String typeMatch;
Index: solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/KeepWordFilterFactory.java	(working copy)
@@ -28,6 +28,14 @@
 import java.io.IOException;
 
 /**
+ * Factory for {@link KeepWordFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_keepword" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.KeepWordFilterFactory" words="keepwords.txt" ignoreCase="false" enablePositionIncrements="false"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
  * @version $Id$
  */
 public class KeepWordFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
Index: solr/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/LowerCaseFilterFactory.java	(working copy)
@@ -23,6 +23,14 @@
 import org.apache.lucene.analysis.core.LowerCaseFilter;
 
 /**
+ * Factory for {@link LowerCaseFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_lwrcase" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.LowerCaseFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
  * @version $Id$
  */
 public class LowerCaseFilterFactory extends BaseTokenFilterFactory {
Index: solr/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/LetterTokenizerFactory.java	(working copy)
@@ -23,6 +23,13 @@
 import java.util.Map;
 
 /**
+ * Factory for {@link LetterTokenizer}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_letter" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.LetterTokenizerFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
  * @version $Id$
  */
 public class LetterTokenizerFactory extends BaseTokenizerFactory {
Index: solr/src/java/org/apache/solr/analysis/KeywordMarkerFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/KeywordMarkerFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/KeywordMarkerFilterFactory.java	(working copy)
@@ -26,7 +26,15 @@
  */
 
 /**
- * Factory for {@link KeywordMarkerFilter}
+ * Factory for {@link KeywordMarkerFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_keyword" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.KeywordMarkerFilterFactory" protected="protectedkeyword.txt" ignoreCase="false"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
  */
 public class KeywordMarkerFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
   public static final String PROTECTED_TOKENS = "protected";
Index: solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory.java	(working copy)
@@ -22,6 +22,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilter;
 
+/**
+ * Factory for {@link LimitTokenCountFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_lngthcnt" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.LimitTokenCountFilterFactory" maxTokenCount="10"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ */
 public class LimitTokenCountFilterFactory extends BaseTokenFilterFactory {
 
   int maxTokenCount;
Index: solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java	(revision 1072887)
+++ solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory.java	(working copy)
@@ -24,7 +24,14 @@
 import java.util.Map;
 
 /**
- * Creates new instances of {@link NGramTokenizer}.
+ * Factory for {@link NGramTokenizer}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_ngrm" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.NGramTokenizerFactory" minGramSize="1" maxGramSize="2"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
  */
 public class NGramTokenizerFactory extends BaseTokenizerFactory {
     private int maxGramSize = 0;
