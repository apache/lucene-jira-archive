Index: solr/src/java/org/apache/solr/analysis/ClassicTokenizerFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/ClassicTokenizerFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/ClassicTokenizerFactory.java	(working copy)
@@ -24,6 +24,13 @@
 import java.util.Map;
 
 /**
+ * Factory for {@link ClassicTokenizer}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_clssc" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.ClassicTokenizerFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
  * @version $Id$
  */
 
Index: solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory.java	(working copy)
@@ -27,7 +27,15 @@
 import org.apache.solr.util.plugin.ResourceLoaderAware;
 
 /**
- * Constructs a CommonGramsFilter
+ * Constructs a CommonGramsFilter.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_cmmngrms" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.CommonGramsFilterFactory" words="commongramsstopwords.txt" ignoreCase="false"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
  */
 
 /*
Index: solr/src/java/org/apache/solr/analysis/CJKTokenizerFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/CJKTokenizerFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/CJKTokenizerFactory.java	(working copy)
@@ -22,7 +22,16 @@
 import org.apache.lucene.analysis.cjk.CJKTokenizer;
 import java.io.Reader;
 
-/** Factory for {@link CJKTokenizer} */
+/** 
+ * Factory for {@link CJKTokenizer}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_cjk" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.CJKTokenizerFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ **/
 public class CJKTokenizerFactory extends BaseTokenizerFactory {
   public CJKTokenizer create(Reader in) {
     return new CJKTokenizer(in);
Index: solr/src/java/org/apache/solr/analysis/BulgarianStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/BulgarianStemFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/BulgarianStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.bg.BulgarianStemFilter;
 
-/** Factory for {@link BulgarianStemFilter} */
+/** 
+ * Factory for {@link BulgarianStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_bgstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.BulgarianStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ **/
 public class BulgarianStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new BulgarianStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/CollationKeyFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/CollationKeyFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/CollationKeyFilterFactory.java	(working copy)
@@ -56,7 +56,15 @@
  *  <li>strength: 'primary','secondary','tertiary', or 'identical' (optional)
  *  <li>decomposition: 'no','canonical', or 'full' (optional)
  * </ul>
- *
+ * 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_clltnky" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.CollationKeyFilterFactory" language="ja" country="JP"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * 
  * @see Collator
  * @see Locale
  * @see RuleBasedCollator
Index: solr/src/java/org/apache/solr/analysis/BrazilianStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/BrazilianStemFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/BrazilianStemFilterFactory.java	(working copy)
@@ -21,7 +21,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.br.BrazilianStemFilter;
 
-/** Factory for {@link BrazilianStemFilter} */
+/** 
+ * Factory for {@link BrazilianStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_brstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.BrazilianStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ **/
 public class BrazilianStemFilterFactory extends BaseTokenFilterFactory {
   public BrazilianStemFilter create(TokenStream in) {
     return new BrazilianStemFilter(in);
Index: solr/src/java/org/apache/solr/analysis/ASCIIFoldingFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/ASCIIFoldingFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/ASCIIFoldingFilterFactory.java	(working copy)
@@ -21,7 +21,17 @@
 import org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter;
 import org.apache.lucene.analysis.TokenStream;
 
-/** Factory for {@link ASCIIFoldingFilter} */
+/** 
+ * Factory for {@link ASCIIFoldingFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_ascii" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.ASCIIFoldingFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ */
 public class ASCIIFoldingFilterFactory extends BaseTokenFilterFactory {
   public ASCIIFoldingFilter create(TokenStream input) {
     return new ASCIIFoldingFilter(input);
Index: solr/src/java/org/apache/solr/analysis/ArabicStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/ArabicStemFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/ArabicStemFilterFactory.java	(working copy)
@@ -21,7 +21,15 @@
 
 
 /**
- * Factory for {@link ArabicStemFilter}
+ * Factory for {@link ArabicStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_arstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.ArabicStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
  **/
 public class ArabicStemFilterFactory extends BaseTokenFilterFactory{
 
Index: solr/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/CapitalizationFilterFactory.java	(working copy)
@@ -43,6 +43,16 @@
  * "maxWordCount" - if the token contains more then maxWordCount words, the capitalization is
  * assumed to be correct.<br/>
  *
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_cptlztn" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.CapitalizationFilterFactory" onlyFirstWord="true"
+ *     	     keep="java solr lucene" keepIgnoreCase="false"
+ *     	     okPrefix="McK McD McA"/&gt;   
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ *
  * @version $Id$
  * @since solr 1.3
  */
Index: solr/src/java/org/apache/solr/analysis/ClassicFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/ClassicFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/ClassicFilterFactory.java	(working copy)
@@ -22,6 +22,14 @@
 import org.apache.lucene.analysis.standard.ClassicFilter;
 
 /**
+ * Factory for {@link ClassicFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_clssc" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.ClassicFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
  * @version $Id$
  */
 public class ClassicFilterFactory extends BaseTokenFilterFactory {
Index: solr/src/java/org/apache/solr/analysis/CommonGramsQueryFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/CommonGramsQueryFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/CommonGramsQueryFilterFactory.java	(working copy)
@@ -31,8 +31,16 @@
 /**
  * Construct CommonGramsQueryFilter
  * 
- * This is pretty close to a straight copy from StopFilterFactory
+ * This is pretty close to a straight copy from StopFilterFactory.
  * 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_cmmngrmsqry" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.CommonGramsQueryFilterFactory" words="commongramsquerystopwords.txt" ignoreCase="false"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
  */
 public class CommonGramsQueryFilterFactory extends BaseTokenFilterFactory
     implements ResourceLoaderAware {
Index: solr/src/java/org/apache/solr/analysis/CzechStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/CzechStemFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/CzechStemFilterFactory.java	(working copy)
@@ -20,7 +20,16 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.cz.CzechStemFilter;
 
-/** Factory for {@link CzechStemFilter} */
+/**
+ *  Factory for {@link CzechStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_czstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.CzechStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ **/
 public class CzechStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new CzechStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/ArabicNormalizationFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/ArabicNormalizationFilterFactory.java	(revision 1072815)
+++ solr/src/java/org/apache/solr/analysis/ArabicNormalizationFilterFactory.java	(working copy)
@@ -21,7 +21,15 @@
 
 
 /**
- * Factory for {@link ArabicNormalizationFilter}
+ * Factory for {@link ArabicNormalizationFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_arnormal" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.ArabicNormalizationFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
  **/
 public class ArabicNormalizationFilterFactory extends BaseTokenFilterFactory{
 
