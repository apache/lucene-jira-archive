Index: solr/src/java/org/apache/solr/analysis/DoubleMetaphoneFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/DoubleMetaphoneFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/DoubleMetaphoneFilterFactory.java	(working copy)
@@ -21,6 +21,18 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.phonetic.DoubleMetaphoneFilter;
 
+/**
+* Factory for {@link DoubleMetaphoneFilter}.
+* <pre class="prettyprint" >
+* &lt;fieldType name="text_dblmtphn" class="solr.TextField" positionIncrementGap="100"&gt;
+*   &lt;analyzer&gt;
+*     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+*     &lt;filter class="solr.DoubleMetaphoneFilterFactory" inject="true" maxCodeLength="4"/&gt;
+*   &lt;/analyzer&gt;
+* &lt;/fieldType&gt;</pre>
+* @version $Id$
+**/
+
 public class DoubleMetaphoneFilterFactory extends BaseTokenFilterFactory 
 {
   public static final String INJECT = "inject"; 
Index: solr/src/java/org/apache/solr/analysis/EnglishPossessiveFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/EnglishPossessiveFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/EnglishPossessiveFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.en.EnglishPossessiveFilter;
 
-/** Factory for {@link EnglishPossessiveFilter} */
+/**
+ * Factory for {@link EnglishPossessiveFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_enpossessive" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.EnglishPossessiveFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class EnglishPossessiveFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new EnglishPossessiveFilter(input);
Index: solr/src/java/org/apache/solr/analysis/FrenchLightStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/FrenchLightStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/FrenchLightStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.fr.FrenchLightStemFilter;
 
-/** Factory for {@link FrenchLightStemFilter} */
+/**
+ * Factory for {@link FrenchLightStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_frlgtstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.FrenchLightStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class FrenchLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new FrenchLightStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/GermanLightStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/GermanLightStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/GermanLightStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.de.GermanLightStemFilter;
 
-/** Factory for {@link GermanLightStemFilter} */
+/**
+ * Factory for {@link GermanLightStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_delgtstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.GermanLightStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class GermanLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new GermanLightStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/HindiNormalizationFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/HindiNormalizationFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/HindiNormalizationFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.hi.HindiNormalizationFilter;
 
-/** Factory for {@link HindiNormalizationFilter} */
+/** 
+ * Factory for {@link HindiNormalizationFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_hinormal" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.HindiNormalizationFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$  
+ **/
 public class HindiNormalizationFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new HindiNormalizationFilter(input);
Index: solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/GreekLowerCaseFilterFactory.java	(working copy)
@@ -26,7 +26,17 @@
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.SolrException.ErrorCode;
 
-/** Factory for {@link GreekLowerCaseFilter} */
+/** 
+ * Factory for {@link GreekLowerCaseFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_ellwr" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.GreekLowerCaseFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class GreekLowerCaseFilterFactory extends BaseTokenFilterFactory 
 {
  
Index: solr/src/java/org/apache/solr/analysis/FrenchMinimalStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/FrenchMinimalStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/FrenchMinimalStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.fr.FrenchMinimalStemFilter;
 
-/** Factory for {@link FrenchMinimalStemFilter} */
+/** 
+ * Factory for {@link FrenchMinimalStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_frminstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.FrenchMinimalStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class FrenchMinimalStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new FrenchMinimalStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/HyphenatedWordsFilterFactory.java	(working copy)
@@ -22,7 +22,15 @@
 import org.apache.solr.analysis.BaseTokenFilterFactory;
 
 /**
- * Factory for {@link HyphenatedWordsFilter}
+ * Factory for {@link HyphenatedWordsFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_hyphn" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.HyphenatedWordsFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
  */
 public class HyphenatedWordsFilterFactory extends BaseTokenFilterFactory {
 	public HyphenatedWordsFilter create(TokenStream input) {
Index: solr/src/java/org/apache/solr/analysis/GermanMinimalStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/GermanMinimalStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/GermanMinimalStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.de.GermanMinimalStemFilter;
 
-/** Factory for {@link GermanMinimalStemFilter} */
+/**
+ * Factory for {@link GermanMinimalStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_deminstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.GermanMinimalStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class GermanMinimalStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new GermanMinimalStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/HindiStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/HindiStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/HindiStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.hi.HindiStemFilter;
 
-/** Factory for {@link HindiStemFilter} */
+/** 
+ * Factory for {@link HindiStemFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_histem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.HindiStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$   
+ **/
 public class HindiStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new HindiStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/EnglishMinimalStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/EnglishMinimalStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/EnglishMinimalStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.en.EnglishMinimalStemFilter;
 
-/** Factory for {@link EnglishMinimalStemFilter} */
+/** 
+ * Factory for {@link EnglishMinimalStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_enminstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.EnglishMinimalStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ **/
 public class EnglishMinimalStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new EnglishMinimalStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/EdgeNGramFilterFactory.java	(working copy)
@@ -23,6 +23,14 @@
 
 /**
  * Creates new instances of {@link EdgeNGramTokenFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_edgngrm" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.EdgeNGramFilterFactory" side="front" minGramSize="1" maxGramSize="1"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
  */
 public class EdgeNGramFilterFactory extends BaseTokenFilterFactory {
   private int maxGramSize = 0;
Index: solr/src/java/org/apache/solr/analysis/GermanStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/GermanStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/GermanStemFilterFactory.java	(working copy)
@@ -22,7 +22,17 @@
 import org.apache.lucene.analysis.de.GermanStemFilter;
 import org.apache.lucene.analysis.TokenStream;
 
-/** Factory for {@link GermanStemFilter} */
+/** 
+ * Factory for {@link GermanStemFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_destem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.GermanStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class GermanStemFilterFactory extends BaseTokenFilterFactory {
   public GermanStemFilter create(TokenStream in) {
     return new GermanStemFilter(in);
Index: solr/src/java/org/apache/solr/analysis/HungarianLightStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/HungarianLightStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/HungarianLightStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.hu.HungarianLightStemFilter;
 
-/** Factory for {@link HungarianLightStemFilter} */
+/** 
+ * Factory for {@link HungarianLightStemFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_hulgtstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.HungarianLightStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class HungarianLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new HungarianLightStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/GalicianStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/GalicianStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/GalicianStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.gl.GalicianStemFilter;
 
-/** Factory for {@link GalicianStemFilter} */
+/**
+ * Factory for {@link GalicianStemFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_glstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.GalicianStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class GalicianStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new GalicianStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/ElisionFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/ElisionFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/ElisionFilterFactory.java	(working copy)
@@ -27,7 +27,17 @@
 import java.io.IOException;
 import org.apache.lucene.analysis.TokenStream;
 
-/** Factory for {@link ElisionFilter} */
+/**
+ * Factory for {@link ElisionFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_elsn" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.ElisionFilterFactory" articles="stopwordarticles.txt"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ **/
 public class ElisionFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
 
   private CharArraySet articles;
Index: solr/src/java/org/apache/solr/analysis/DictionaryCompoundWordTokenFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/DictionaryCompoundWordTokenFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/DictionaryCompoundWordTokenFilterFactory.java	(working copy)
@@ -28,7 +28,18 @@
 import java.util.Map;
 import java.io.IOException;
 
-/** Factory for {@link DictionaryCompoundWordTokenFilter} */
+/** 
+ * Factory for {@link DictionaryCompoundWordTokenFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_dictcomp" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.DictionaryCompoundWordTokenFilterFactory" dictionary="dictionary.txt"
+ *     	     minWordSize="5" minSubwordSize="2" maxSubwordSize="15" onlyLongestMatch="true"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ **/
 public class DictionaryCompoundWordTokenFilterFactory extends BaseTokenFilterFactory  implements ResourceLoaderAware {
   private CharArraySet dictionary;
   private String dictFile;
Index: solr/src/java/org/apache/solr/analysis/DelimitedPayloadTokenFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/DelimitedPayloadTokenFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/DelimitedPayloadTokenFilterFactory.java	(working copy)
@@ -31,7 +31,16 @@
 
 /**
  *
- * Factory for {@link DelimitedPayloadTokenFilter}
+ * Factory for {@link DelimitedPayloadTokenFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_dlmtd" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.DelimitedPayloadTokenFilterFactory" encoder="float" delimiter="|"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
+ * 
  **/
 public class DelimitedPayloadTokenFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
   public static final String ENCODER_ATTR = "encoder";
Index: solr/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory.java	(working copy)
@@ -24,6 +24,13 @@
 
 /**
  * Creates new instances of {@link EdgeNGramTokenizer}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_edgngrm" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.EdgeNGramTokenizerFactory" side="front" minGramSize="1" maxGramSize="1"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
  */
 public class EdgeNGramTokenizerFactory extends BaseTokenizerFactory {
     private int maxGramSize = 0;
Index: solr/src/java/org/apache/solr/analysis/FinnishLightStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/FinnishLightStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/FinnishLightStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.fi.FinnishLightStemFilter;
 
-/** Factory for {@link FinnishLightStemFilter} */
+/** 
+ * Factory for {@link FinnishLightStemFilter}.
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_filgtstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.FinnishLightStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre> 
+ * @version $Id$
+ **/
 public class FinnishLightStemFilterFactory extends BaseTokenFilterFactory {
   public TokenStream create(TokenStream input) {
     return new FinnishLightStemFilter(input);
Index: solr/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/HTMLStripCharFilterFactory.java	(working copy)
@@ -21,7 +21,18 @@
 import org.apache.lucene.analysis.CharStream;
 import org.apache.lucene.analysis.charfilter.HTMLStripCharFilter;
 
-public class HTMLStripCharFilterFactory extends BaseCharFilterFactory {
+/**
+* Factory for {@link HTMLStripCharFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_html" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;charFilter class="solr.HTMLStripCharFilterFactory"/&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre
+ * @version $Id$  
+ */
+ public class HTMLStripCharFilterFactory extends BaseCharFilterFactory {
 
   public HTMLStripCharFilter create(CharStream input) {
     return new HTMLStripCharFilter(input);
Index: solr/src/java/org/apache/solr/analysis/GreekStemFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/GreekStemFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/GreekStemFilterFactory.java	(working copy)
@@ -20,7 +20,17 @@
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.el.GreekStemFilter;
 
-/** Factory for {@link GreekStemFilter} */
+/** 
+ * Factory for {@link GreekStemFilter}. 
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_elstem" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.GreekStemFilterFactory"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$  
+ **/
 public class GreekStemFilterFactory extends BaseTokenFilterFactory {
 
   public TokenStream create(TokenStream input) {
Index: solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory.java
===================================================================
--- solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory.java	(revision 1072828)
+++ solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory.java	(working copy)
@@ -33,7 +33,7 @@
 import org.xml.sax.InputSource;
 
 /**
- * Factory for {@link HyphenationCompoundWordTokenFilter}
+ * Factory for {@link HyphenationCompoundWordTokenFilter}.
  * <p>
  * This factory accepts the following parameters:
  * <ul>
@@ -48,6 +48,15 @@
  *    to the stream. defaults to false.
  * </ul>
  * <p>
+ * <pre class="prettyprint" >
+ * &lt;fieldType name="text_hyphncomp" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.HyphenationCompoundWordTokenFilterFactory" hyphenator="hyphenator.xml" encoding="UTF-8"
+ *     	     dictionary="dictionary.txt" minWordSize="5" minSubwordSize="2" maxSubwordSize="15" onlyLongestMatch="false"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @version $Id$
  * @see HyphenationCompoundWordTokenFilter
  */
 public class HyphenationCompoundWordTokenFilterFactory extends BaseTokenFilterFactory implements ResourceLoaderAware {
