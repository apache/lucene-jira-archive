From 5cf5371c1d6febf1a6423aa65aecde8be7eed77c Mon Sep 17 00:00:00 2001
From: Johannes Kloos <johannes.kloos@diffblue.com>
Date: Thu, 24 Jan 2019 16:54:20 +0000
Subject: [PATCH] Fix NullPointerException.

---
 .../src/java/org/apache/lucene/search/spans/SpanNearQuery.java     | 2 ++
 .../lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java | 7 ++++++-
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/lucene/core/src/java/org/apache/lucene/search/spans/SpanNearQuery.java b/lucene/core/src/java/org/apache/lucene/search/spans/SpanNearQuery.java
index 17b9e51..a312ad2 100644
--- a/lucene/core/src/java/org/apache/lucene/search/spans/SpanNearQuery.java
+++ b/lucene/core/src/java/org/apache/lucene/search/spans/SpanNearQuery.java
@@ -130,6 +130,8 @@ public class SpanNearQuery extends SpanQuery implements Cloneable {
    * @param inOrder true if order is important
    */
   public SpanNearQuery(SpanQuery[] clausesIn, int slop, boolean inOrder) {
+    if (clausesIn.length == 0)
+      throw new IllegalArgumentException("SpanNearQuery with no clauses");
     this.clauses = new ArrayList<>(clausesIn.length);
     for (SpanQuery clause : clausesIn) {
       if (this.field == null) {                               // check field
diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
index ffe0066..574589f 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
@@ -344,11 +344,16 @@ public class ComplexPhraseQueryParser extends QueryParser {
           .toArray(new SpanQuery[positiveClauses.size()]);
 
       SpanQuery include = null;
-      if (includeClauses.length == 1) {
+      if (includeClauses.length == 0) {
+        // Invent a positive clause out of thin air.
+        include = new SpanTermQuery(new Term(field,
+            "Dummy clause because no terms found - must match nothing"));
+      } else if (includeClauses.length == 1) {
         include = includeClauses[0]; // only one positive clause
       } else {
         // need to increase slop factor based on gaps introduced by
         // negatives
+        assert (includeClauses.length >= 2);
         include = new SpanNearQuery(includeClauses, slopFactor + numNegatives,
             inOrder);
       }
-- 
2.7.4

