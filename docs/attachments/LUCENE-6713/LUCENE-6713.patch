Index: lucene/core/src/java/org/apache/lucene/util/automaton/TooComplexToDeterminizeException.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/util/automaton/TooComplexToDeterminizeException.java	(revision 1694069)
+++ lucene/core/src/java/org/apache/lucene/util/automaton/TooComplexToDeterminizeException.java	(working copy)
@@ -22,9 +22,9 @@
  * has too many states.
  */
 public class TooComplexToDeterminizeException extends RuntimeException {
-  private final Automaton automaton;
-  private final RegExp regExp;
-  private final int maxDeterminizedStates;
+  private transient final Automaton automaton;
+  private transient final RegExp regExp;
+  private transient final int maxDeterminizedStates;
 
   /** Use this constructor when the RegExp failed to convert to an automaton. */
   public TooComplexToDeterminizeException(RegExp regExp, TooComplexToDeterminizeException cause) {
@@ -37,7 +37,7 @@
 
   /** Use this constructor when the automaton failed to determinize. */
   public TooComplexToDeterminizeException(Automaton automaton, int maxDeterminizedStates) {
-    super("Determinizing automaton would result in more than " + maxDeterminizedStates + " states.");
+    super("Determinizing automaton with " + automaton.getNumStates() + " states and " + automaton.getNumTransitions() + " transitions would result in more than " + maxDeterminizedStates + " states.");
     this.automaton = automaton;
     this.regExp = null;
     this.maxDeterminizedStates = maxDeterminizedStates;
Index: lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp.java
===================================================================
--- lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp.java	(revision 1694069)
+++ lucene/core/src/test/org/apache/lucene/util/automaton/TestRegExp.java	(working copy)
@@ -19,6 +19,10 @@
 
 import org.apache.lucene.util.LuceneTestCase;
 
+import java.io.ByteArrayOutputStream;
+import java.io.ObjectOutput;
+import java.io.ObjectOutputStream;
+
 public class TestRegExp extends LuceneTestCase {
 
   /**
@@ -49,6 +53,23 @@
     }
   }
 
+  // LUCENE-6713
+  public void testSerializeTooManyStatesToDeterminizeExc() throws Exception {
+    // LUCENE-6046
+    String source = "[ac]*a[ac]{50,200}";
+    try {
+      new RegExp(source).toAutomaton();
+      fail();
+    } catch (TooComplexToDeterminizeException e) {
+      assert(e.getMessage().contains(source));
+
+      ByteArrayOutputStream bos = new ByteArrayOutputStream();
+      ObjectOutput out = new ObjectOutputStream(bos);   
+      out.writeObject(e);
+      byte[] bytes = bos.toByteArray();
+    }
+  }
+
   // LUCENE-6046
   public void testRepeatWithEmptyString() throws Exception {
     Automaton a = new RegExp("[^y]*{1,2}").toAutomaton(1000);
