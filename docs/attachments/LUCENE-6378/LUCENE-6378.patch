Index: lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.java	(revision 1670282)
+++ lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentValueSourceDictionary.java	(revision )
@@ -145,7 +145,7 @@
         try {
           currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));
         } catch (IOException e) {
-          throw new RuntimeException();
+          throw new RuntimeException(e);
         }
       }
       return currentWeightValues.longVal(docId - starts[subIndex]);
Index: lucene/facet/src/java/org/apache/lucene/facet/RandomSamplingFacetsCollector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/facet/src/java/org/apache/lucene/facet/RandomSamplingFacetsCollector.java	(revision 1670282)
+++ lucene/facet/src/java/org/apache/lucene/facet/RandomSamplingFacetsCollector.java	(revision )
@@ -215,7 +215,7 @@
       
       return new MatchingDocs(docs.context, new BitDocIdSet(sampleDocs), docs.totalHits, null);
     } catch (IOException e) {
-      throw new RuntimeException();
+      throw new RuntimeException(e);
     }
   }
   
Index: solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory.java	(revision 1670282)
+++ solr/core/src/java/org/apache/solr/spelling/suggest/DocumentExpressionDictionaryFactory.java	(revision )
@@ -99,7 +99,7 @@
     try {
       expression = JavascriptCompiler.compile(weightExpression);
     } catch (ParseException e) {
-      throw new RuntimeException();
+      throw new RuntimeException(e);
     }
     SimpleBindings bindings = new SimpleBindings();
     for (SortField sortField : sortFields) {
Index: lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase.java	(revision 1670282)
+++ lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase.java	(revision )
@@ -2681,7 +2681,7 @@
                 }
               }
             } catch (Throwable e) {
-              throw new RuntimeException();
+              throw new RuntimeException(e);
             }
           }
         };
Index: lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.java	(revision 1670282)
+++ lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.java	(revision )
@@ -113,7 +113,7 @@
     try {
       return new FileIterator();
     } catch (IOException e) {
-      throw new RuntimeException();
+      throw new RuntimeException(e);
     }
   }
 
Index: lucene/core/src/test/org/apache/lucene/index/TestFieldsReader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/TestFieldsReader.java	(revision 1670282)
+++ lucene/core/src/test/org/apache/lucene/index/TestFieldsReader.java	(revision )
@@ -172,7 +172,7 @@
       try {
         i.seek(getFilePointer());
       } catch (IOException e) {
-        throw new RuntimeException();
+        throw new RuntimeException(e);
       }
       return i;
     }
Index: solr/core/src/java/org/apache/solr/spelling/suggest/FileDictionaryFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- solr/core/src/java/org/apache/solr/spelling/suggest/FileDictionaryFactory.java	(revision 1670282)
+++ solr/core/src/java/org/apache/solr/spelling/suggest/FileDictionaryFactory.java	(revision )
@@ -55,7 +55,7 @@
       return new FileDictionary(new InputStreamReader(
           core.getResourceLoader().openResource(sourceLocation), StandardCharsets.UTF_8), fieldDelimiter);
     } catch (IOException e) {
-      throw new RuntimeException();
+      throw new RuntimeException(e);
     }
   }
   
Index: solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/RegexRulesPasswordProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/RegexRulesPasswordProvider.java	(revision 1670282)
+++ solr/contrib/extraction/src/java/org/apache/solr/handler/extraction/RegexRulesPasswordProvider.java	(revision )
@@ -103,7 +103,7 @@
       }
       is.close();
     } catch (IOException e) {
-      throw new RuntimeException();
+      throw new RuntimeException(e);
     }
     return rules;
   }
Index: solr/core/src/java/org/apache/solr/spelling/suggest/fst/AnalyzingInfixLookupFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- solr/core/src/java/org/apache/solr/spelling/suggest/fst/AnalyzingInfixLookupFactory.java	(revision 1670282)
+++ solr/core/src/java/org/apache/solr/spelling/suggest/fst/AnalyzingInfixLookupFactory.java	(revision )
@@ -135,7 +135,7 @@
         }
         };
     } catch (IOException e) {
-      throw new RuntimeException();
+      throw new RuntimeException(e);
     }
   }
 
Index: solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.java	(revision 1670282)
+++ solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.java	(revision )
@@ -1494,7 +1494,7 @@
       try {
         queryFields = DisMaxQParser.parseQueryFields(req.getSchema(), solrParams);  // req.getSearcher() here causes searcher refcount imbalance
       } catch (SyntaxError e) {
-        throw new RuntimeException();
+        throw new RuntimeException(e);
       }
       // Phrase slop array
       int pslop[] = new int[4];
Index: lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds.java	(revision 1670282)
+++ lucene/misc/src/java/org/apache/lucene/uninverting/DocTermOrds.java	(revision )
@@ -895,7 +895,7 @@
       try {
         return getOrdTermsEnum(reader);
       } catch (IOException e) {
-        throw new RuntimeException();
+        throw new RuntimeException(e);
       }
     }
   }
Index: solr/core/src/java/org/apache/solr/util/SimplePostTool.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- solr/core/src/java/org/apache/solr/util/SimplePostTool.java	(revision 1670282)
+++ solr/core/src/java/org/apache/solr/util/SimplePostTool.java	(revision )
@@ -518,7 +518,7 @@
         Thread.sleep(delay * 1000);
         filesPosted++;
       } catch (InterruptedException e) {
-        throw new RuntimeException();
+        throw new RuntimeException(e);
       }
     }
     return filesPosted;
@@ -610,7 +610,7 @@
       } catch (IOException e) {
         warn("Caught exception when trying to open connection to "+u+": "+e.getMessage());
       } catch (InterruptedException e) {
-        throw new RuntimeException();
+        throw new RuntimeException(e);
       }
     }
     if(!subStack.isEmpty()) {
@@ -1209,7 +1209,7 @@
       } catch (IOException e) {
         warn("IOException opening URL "+url+": "+e.getMessage());
       } catch (Exception e) {
-        throw new RuntimeException();
+        throw new RuntimeException(e);
       }
       return l;
     }
