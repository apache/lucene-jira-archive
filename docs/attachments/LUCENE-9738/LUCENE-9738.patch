diff --git a/lucene/test-framework/src/test/org/apache/lucene/TestPermissionsInsanity.java b/lucene/test-framework/src/test/org/apache/lucene/TestPermissionsInsanity.java
new file mode 100644
index 00000000000..fdb07a512cc
--- /dev/null
+++ b/lucene/test-framework/src/test/org/apache/lucene/TestPermissionsInsanity.java
@@ -0,0 +1,60 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.lucene;
+
+import com.carrotsearch.randomizedtesting.RandomizedTest;
+import org.junit.Test;
+
+import java.security.AccessController;
+import java.security.PrivilegedAction;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.ForkJoinPool;
+import java.util.concurrent.ForkJoinTask;
+
+public class TestPermissionsInsanity extends RandomizedTest {
+  @Test
+  public void testInsanity() throws ExecutionException, InterruptedException {
+    // This is fine.
+    System.getProperty("line.separator");
+
+    // But this fails with access denied?! Seems like fj threads get some all-forbidding
+    // protection domain.
+    // https://stackoverflow.com/questions/63059618/how-to-handle-accesscontrolexception-with-protectiondomain-null
+    ForkJoinTask<String> task =
+        ForkJoinPool.commonPool().submit(() -> System.getProperty("line.separator"));
+
+    // Wait a bit to avoid job stealing.
+    Thread.sleep(1000);
+    task.get();
+  }
+
+  @Test
+  public void testAccessControllerEscape() throws ExecutionException, InterruptedException {
+    // Going through AccessController works.
+    ForkJoinTask<String> task =
+        ForkJoinPool.commonPool()
+            .submit(
+                () -> {
+                  return AccessController.doPrivileged(
+                      (PrivilegedAction<String>) () -> System.getProperty("line.separator"));
+                });
+
+    // Wait a bit to avoid job stealing.
+    Thread.sleep(1000);
+    task.get();
+  }
+}
