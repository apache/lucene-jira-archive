Index: src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictReader.java
===================================================================
--- src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictReader.java	(revision 915858)
+++ src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictReader.java	(working copy)
@@ -553,7 +553,7 @@
         }
         DocsEnum docsEnum = postingsReader.docs(fieldInfo, state, skipDocs, reuse);
         if (Codec.DEBUG) {
-          docsEnum.desc = fieldInfo.name + ":" + bytesReader.term.toString();
+          docsEnum.desc = fieldInfo.name + ":" + bytesReader.term.utf8ToString();
         }
         return docsEnum;
       }
@@ -569,7 +569,7 @@
           DocsAndPositionsEnum postingsEnum = postingsReader.docsAndPositions(fieldInfo, state, skipDocs, reuse);
           if (Codec.DEBUG) {
             if (postingsEnum != null) {
-              postingsEnum.desc = fieldInfo.name + ":" + bytesReader.term.toString();
+              postingsEnum.desc = fieldInfo.name + ":" + bytesReader.term.utf8ToString();
             }
           }
           if (Codec.DEBUG) {
Index: src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter.java
===================================================================
--- src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter.java	(revision 915858)
+++ src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter.java	(working copy)
@@ -173,8 +173,8 @@
     public PostingsConsumer startTerm(BytesRef text) throws IOException {
       postingsWriter.startTerm();
       if (Codec.DEBUG) {
-        postingsWriter.desc = fieldInfo.name + ":" + text.toString();
-        System.out.println("stdw.startTerm term=" + fieldInfo.name + ":" + text.toString() + " seg=" + segment);
+        postingsWriter.desc = fieldInfo.name + ":" + text.utf8ToString();
+        System.out.println("stdw.startTerm term=" + fieldInfo.name + ":" + text.utf8ToString() + " seg=" + segment);
       }
       return postingsWriter;
     }
@@ -183,7 +183,7 @@
     public void finishTerm(BytesRef text, int numDocs) throws IOException {
 
       if (Codec.DEBUG) {
-        Codec.debug("finishTerm seg=" + segment + " text=" + fieldInfo.name + ":" + text.toString() + " numDocs=" + numDocs + " numTerms=" + numTerms);
+        Codec.debug("finishTerm seg=" + segment + " text=" + fieldInfo.name + ":" + text.utf8ToString() + " numDocs=" + numDocs + " numTerms=" + numTerms);
       }
 
       if (numDocs > 0) {
@@ -191,7 +191,7 @@
 
         if (Codec.DEBUG) {
           Codec.debug("  tis.fp=" + out.getFilePointer() + " isIndexTerm?=" + isIndexTerm);
-          System.out.println("  term bytes=" + text.toString());
+          System.out.println("  term bytes=" + text.utf8ToString());
         }
         termWriter.write(text);
         out.writeVInt(numDocs);
Index: contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort.java
===================================================================
--- contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort.java	(revision 915858)
+++ contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort.java	(working copy)
@@ -220,7 +220,7 @@
     public void setNextReader(IndexReader reader, int docBase) throws IOException {
       docValues = FieldCache.DEFAULT.getInts(reader, "parser", new FieldCache.IntParser() {
           public final int parseInt(BytesRef termRef) {
-            return (termRef.toString().charAt(0)-'A') * 123456;
+            return (termRef.utf8ToString().charAt(0)-'A') * 123456;
           }
         });
     }
Index: contrib/misc/src/java/org/apache/lucene/index/TermVectorAccessor.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/index/TermVectorAccessor.java	(revision 915858)
+++ contrib/misc/src/java/org/apache/lucene/index/TermVectorAccessor.java	(working copy)
@@ -122,7 +122,7 @@
           if (docID == documentNumber) {
 
             frequencies.add(Integer.valueOf(docs.freq()));
-            tokens.add(text.toString());
+            tokens.add(text.utf8ToString());
 
             if (!mapper.isIgnoringPositions()) {
               int[] positions = new int[docs.freq()];
Index: contrib/misc/src/java/org/apache/lucene/misc/HighFreqTerms.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/misc/HighFreqTerms.java	(revision 915858)
+++ contrib/misc/src/java/org/apache/lucene/misc/HighFreqTerms.java	(working copy)
@@ -61,7 +61,7 @@
         while(true) {
           BytesRef term = termsEnum.next();
           if (term != null) {
-            tiq.insertWithOverflow(new TermInfo(new Term(field, term.toString()), termsEnum.docFreq()));
+            tiq.insertWithOverflow(new TermInfo(new Term(field, term.utf8ToString()), termsEnum.docFreq()));
           } else {
             break;
           }    
