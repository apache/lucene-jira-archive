Index: lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest.java	(revision 361d1e84ce927c2cdc3d732da65cfd755800ad0a)
+++ lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest.java	(date 1554906404000)
@@ -1908,7 +1908,6 @@
     //POINT(179.99999999999983 -5.021400461974724E-11)
     final GeoPoint point = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-5.021400461974724E-11), Geo3DUtil.fromDegrees(179.99999999999983));
     assertTrue(polygon.isWithin(point) == largePolygon.isWithin(point));
-
   }
   
   //@AwaitsFix(bugUrl="https://issues.apache.org/jira/browse/LUCENE-8512")
@@ -1927,6 +1926,23 @@
     //POINT(179.99999999999983 -5.021400461974724E-11)
     final GeoPoint point = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-5.021400461974724E-11), Geo3DUtil.fromDegrees(179.99999999999983));
     assertTrue(polygon.isWithin(point) == largePolygon.isWithin(point));
+  }
+
+  public void testLUCENE8761() {
+    //POLYGON((-89.62573319562668 2.263E-321,-89.62571809310927 -2.3608607771424413E-5,-89.62567265420576 2.6953154147745272E-5,-89.62576623172276 5.775087350441979E-5,-89.62579291514281 2.875155905775134E-5,-89.62573319562668 2.263E-321)
+    final List<GeoPoint> points = new ArrayList<>();
+    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(2.263E-321), Geo3DUtil.fromDegrees(-89.62573319562668)));
+    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-2.3608607771424413E-5), Geo3DUtil.fromDegrees(-89.62571809310927)));
+    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(2.6953154147745272E-5), Geo3DUtil.fromDegrees(-89.62567265420576)));
+    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(5.775087350441979E-5), Geo3DUtil.fromDegrees(-89.62576623172276)));
+    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(2.875155905775134E-5), Geo3DUtil.fromDegrees(-89.62579291514281)));
 
+    final GeoPolygonFactory.PolygonDescription description = new GeoPolygonFactory.PolygonDescription(points);
+    final GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, description);
+    final GeoPolygon largePolygon = GeoPolygonFactory.makeLargeGeoPolygon(PlanetModel.SPHERE, Collections.singletonList(description));
+
+    //POINT(4.318577677694212E-71 1.6446951866383562E-6)
+    final GeoPoint point = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(1.6446951866383562E-6), Geo3DUtil.fromDegrees(4.318577677694212E-71));
+    assertTrue(polygon.isWithin(point) == largePolygon.isWithin(point));
   }
 }
