Index: lucene/src/test/org/apache/lucene/index/TestDuelingCodecs.java
===================================================================
--- lucene/src/test/org/apache/lucene/index/TestDuelingCodecs.java	(revision 1214160)
+++ lucene/src/test/org/apache/lucene/index/TestDuelingCodecs.java	(working copy)
@@ -35,6 +35,7 @@
 import org.apache.lucene.util.FixedBitSet;
 import org.apache.lucene.util.LineFileDocs;
 import org.apache.lucene.util.LuceneTestCase;
+import org.apache.lucene.util.ReaderUtil;
 import org.apache.lucene.util.automaton.AutomatonTestUtil;
 import org.apache.lucene.util.automaton.CompiledAutomaton;
 import org.apache.lucene.util.automaton.RegExp;
@@ -530,15 +531,15 @@
       assertNotNull(info, rightDocValues);
       assertEquals(info, leftDocValues.type(), rightDocValues.type());
       assertEquals(info, leftDocValues.getValueSize(), rightDocValues.getValueSize());
-      assertDocValuesSource(leftDocValues.getDirectSource(), rightDocValues.getDirectSource());
-      assertDocValuesSource(leftDocValues.getSource(), rightDocValues.getSource());
+      assertDocValuesSource(field, leftDocValues.getDirectSource(), rightDocValues.getDirectSource());
+      assertDocValuesSource(field, leftDocValues.getSource(), rightDocValues.getSource());
     }
   }
   
   /**
    * checks source API
    */
-  public void assertDocValuesSource(DocValues.Source left, DocValues.Source right) throws Exception {
+  public void assertDocValuesSource(String field, DocValues.Source left, DocValues.Source right) throws Exception {
     DocValues.Type leftType = left.type();
     assertEquals(info, leftType, right.type());
     switch(leftType) {
@@ -566,6 +567,18 @@
         for (int i = 0; i < leftReader.maxDoc(); i++) {
           left.getBytes(i, b1);
           right.getBytes(i, b2);
+          if (b1.length != b2.length) {
+            System.out.println(b1.length);
+            System.out.println(b2.length);
+            IndexReader realLeftReader = ReaderUtil.subReader(i, leftReader);
+            IndexReader realRightReader = ReaderUtil.subReader(i, rightReader);
+            DocValues realLeftDV = realLeftReader.docValues(field);
+            DocValues realRightDV = realRightReader.docValues(field);
+            if (realLeftDV != null && realRightDV == null) {
+              fail("how did this happen");
+            }
+          }
+          assertEquals(info, b1.length, b2.length);
           assertEquals(info, b1, b2);
         }
         break;
