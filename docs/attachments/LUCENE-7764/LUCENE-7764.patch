diff --git a/lucene/build.xml b/lucene/build.xml
index 9397000..360617f 100644
--- a/lucene/build.xml
+++ b/lucene/build.xml
@@ -78,7 +78,7 @@
   </target>
 
   <!-- Validation (license/notice/api checks). -->
-  <target name="validate" depends="check-licenses,rat-sources,check-forbidden-apis" description="Validate stuff." />
+  <target name="validate" depends="findbugs-precommit,check-licenses,rat-sources,check-forbidden-apis" description="Validate stuff." />
 
   <!-- Validation here depends on compile-tools: but we want to compile modules' tools too -->
   <target name="compile-tools" depends="common.compile-tools">
@@ -262,6 +262,67 @@
     <modules-crawl target="rat-sources"/>
   </target>
 
+  <target name="findbugs" depends="findbugs-typedef,jar" description="Run FindBugs on Lucene">
+    <sequential>
+      <mkdir dir="${common.build.dir}/findbugs"/>
+      <findbugs output="html"
+                outputFile="${common.build.dir}/findbugs/lucene.html"
+                failonerror="true">
+        <auxClasspath>
+          <fileset dir=".">
+            <include name="**/lib/*.jar"/>
+          </fileset>
+        </auxClasspath>
+        <classpath refid="findbugs.classpath"/>
+        <fileset dir="${common.build.dir}" >
+          <include name="**/*.jar" />
+        </fileset>
+      </findbugs>
+    </sequential>
+  </target>
+  <target name="findbugs-precommit" depends="findbugs-typedef,jar">
+    <sequential>
+      <findbugs output="text"
+                failonerror="true"
+                warningsProperty="findbugs.warnings"
+                excludeFilter="tools/findbugs/findbugs-exclude.xml">
+        <auxClasspath>
+          <fileset dir=".">
+            <include name="**/lib/*.jar"/>
+          </fileset>
+        </auxClasspath>
+        <classpath refid="findbugs.classpath"/>
+        <fileset dir="${common.build.dir}" >
+          <include name="**/*.jar" />
+        </fileset>
+      </findbugs>
+      <fail message="New FindBugs warnings were found!">
+        <condition>
+          <istrue value="${findbugs.warnings}"/>
+        </condition>
+      </fail>
+    </sequential>
+  </target>
+  <target name="findbugs-exclude" depends="findbugs-typedef,jar" description="make filter file for precommit containing all current bugs">
+    <sequential>
+      <mkdir dir="${common.build.dir}/findbugs"/>
+      <findbugs output="xml"
+                outputFile="${common.build.dir}/findbugs/lucene.xml"
+                failonerror="true">
+        <auxClasspath>
+          <fileset dir=".">
+            <include name="**/lib/*.jar"/>
+          </fileset>
+        </auxClasspath>
+        <classpath refid="findbugs.classpath"/>
+        <fileset dir="${common.build.dir}" >
+          <include name="**/*.jar" />
+        </fileset>
+      </findbugs>
+      <xslt in="${common.build.dir}/findbugs/lucene.xml" out="tools/findbugs/findbugs-exclude.xml" style="tools/findbugs/findbugs-exclude.xsl"/>
+    </sequential>
+  </target>
+
   <!-- ================================================================== -->
   <!-- D I S T R I B U T I O N                                            -->
   <!-- ================================================================== -->
diff --git a/lucene/common-build.xml b/lucene/common-build.xml
index aee7899..05a5465 100644
--- a/lucene/common-build.xml
+++ b/lucene/common-build.xml
@@ -1944,6 +1944,11 @@ ${ant.project.name}.test.dependencies=${test.classpath.list}
     </fail>
   </target>
 
+  <target name="findbugs-typedef" depends="ivy-availability-check,ivy-fail">
+    <ivy:cachepath pathid="findbugs.classpath" organisation="com.google.code.findbugs" module="findbugs" revision="3.0.1" inline="true" log="download-only"  />
+    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.classpath"/>
+  </target>
+
   <!--+
       | M A C R O S
       +-->
diff --git a/lucene/tools/findbugs/findbugs-exclude.xml b/lucene/tools/findbugs/findbugs-exclude.xml
new file mode 100644
index 0000000..8a3b2b2
--- /dev/null
+++ b/lucene/tools/findbugs/findbugs-exclude.xml
@@ -0,0 +1,5738 @@
+<?xml version="1.0" encoding="UTF-8"?><FindBugsFilter>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.Analyzer$StringTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.CachingTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.CannedBinaryTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.CannedTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.CharacterUtils$CharacterBuffer"/>
+<Method name="getBuffer"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.analysis.CollationTestBase"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.analysis.CollationTestBase"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.analysis.CollationTestBase"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.analysis.CollationTestBase"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.CrankyTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.LowerCaseFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.MockAnalyzer"/>
+<Method name="maybePayload"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockFixedLengthPayloadFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockGraphTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockHoleInjectingTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockLowerCaseFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockPayloadFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="IM_BAD_CHECK_FOR_ODD"/>
+<Class name="org.apache.lucene.analysis.MockPayloadFilter"/>
+<Method name="incrementToken"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.MockPayloadFilter"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockRandomLookaheadTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockSynonymFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.MockVariableLengthPayloadFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.SimplePayloadFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.StopFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ValidatingTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ar.ArabicNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ar.ArabicStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.analysis.ar.ArabicStemmer"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.analysis.ar.ArabicStemmer"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.bg.BulgarianStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.br.BrazilianStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="UWF_NULL_FIELD"/>
+<Class name="org.apache.lucene.analysis.br.BrazilianStemFilter"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.analysis.br.BrazilianStemmer"/>
+<Method name="step1"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.charfilter.HTMLStripCharFilter"/>
+<Method name="zzUnpackAction"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.charfilter.HTMLStripCharFilter"/>
+<Method name="zzUnpackAttribute"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.charfilter.HTMLStripCharFilter"/>
+<Method name="zzUnpackRowMap"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.charfilter.MappingCharFilterFactory"/>
+<Method name="parseString"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.cjk.CJKBigramFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="ES_COMPARING_STRINGS_WITH_EQ"/>
+<Class name="org.apache.lucene.analysis.cjk.CJKBigramFilter"/>
+<Method name="incrementToken"/>
+</Match>
+<Match>
+<Bug pattern="ES_COMPARING_STRINGS_WITH_EQ"/>
+<Class name="org.apache.lucene.analysis.cjk.CJKBigramFilter"/>
+<Method name="incrementToken"/>
+</Match>
+<Match>
+<Bug pattern="ES_COMPARING_STRINGS_WITH_EQ"/>
+<Class name="org.apache.lucene.analysis.cjk.CJKBigramFilter"/>
+<Method name="incrementToken"/>
+</Match>
+<Match>
+<Bug pattern="ES_COMPARING_STRINGS_WITH_EQ"/>
+<Class name="org.apache.lucene.analysis.cjk.CJKBigramFilter"/>
+<Method name="incrementToken"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.cjk.CJKWidthFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ckb.SoraniNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ckb.SoraniStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_CANNOT_BE_FINAL"/>
+<Class name="org.apache.lucene.analysis.cn.smart.AnalyzerProfile"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.cn.smart.HMMChineseTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.analysis.cn.smart.Utility"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.analysis.cn.smart.Utility"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.analysis.cn.smart.Utility"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.analysis.cn.smart.Utility"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.analysis.cn.smart.Utility"/>
+</Match>
+<Match>
+<Bug pattern="OBL_UNSATISFIED_OBLIGATION"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.BigramDictionary"/>
+<Method name="load"/>
+</Match>
+<Match>
+<Bug pattern="RR_NOT_CHECKED"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.BigramDictionary"/>
+<Method name="loadFromFile"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_FALLTHROUGH"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.HHMMSegmenter"/>
+<Method name="createSegGraph"/>
+</Match>
+<Match>
+<Bug pattern="CO_COMPARETO_INCORRECT_FLOATING"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.PathNode"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.SegToken"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IM_AVERAGE_COMPUTATION_COULD_OVERFLOW"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.WordDictionary"/>
+<Method name="getPrefixMatch"/>
+</Match>
+<Match>
+<Bug pattern="OBL_UNSATISFIED_OBLIGATION"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.WordDictionary"/>
+<Method name="load"/>
+</Match>
+<Match>
+<Bug pattern="REC_CATCH_EXCEPTION"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.WordDictionary"/>
+<Method name="saveToObj"/>
+</Match>
+<Match>
+<Bug pattern="RR_NOT_CHECKED"/>
+<Class name="org.apache.lucene.analysis.cn.smart.hhmm.WordDictionary"/>
+<Method name="loadMainDataFromFile"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.commongrams.CommonGramsFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.commongrams.CommonGramsQueryFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.compound.HyphenationCompoundWordTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.ByteVector"/>
+<Method name="getArray"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.ByteVector"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.ByteVector"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.CharVector"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.CharVector"/>
+<Method name="getArray"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.CharVector"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.CharVector"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.Hyphenation"/>
+<Method name="getHyphenationPoints"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.PatternParser"/>
+<Method name="characters"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.PatternParser"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.TernaryTree"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.compound.hyphenation.TernaryTree$Iterator"/>
+<Method name="up"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.core.DecimalDigitFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.core.FlattenGraphFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.core.KeywordTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS"/>
+<Class name="org.apache.lucene.analysis.core.LowerCaseFilter"/>
+</Match>
+<Match>
+<Bug pattern="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS"/>
+<Class name="org.apache.lucene.analysis.core.StopFilter"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.core.TypeTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.core.UpperCaseFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.cz.CzechStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.de.GermanLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.de.GermanLightStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.de.GermanMinimalStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.de.GermanMinimalStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.de.GermanNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.de.GermanStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.el.GreekLowerCaseFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.el.GreekStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.en.EnglishMinimalStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.en.EnglishPossessiveFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.en.KStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.analysis.en.KStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.en.PorterStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.en.PorterStemmer"/>
+<Method name="step3"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.en.PorterStemmer"/>
+<Method name="step4"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.es.SpanishLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.es.SpanishLightStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.fa.PersianNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.fi.FinnishLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.fi.FinnishLightStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.fr.FrenchLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.fr.FrenchLightStemmer"/>
+<Method name="norm"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.fr.FrenchMinimalStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ga.IrishLowerCaseFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.gl.GalicianMinimalStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.gl.GalicianStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.gl.GalicianStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.hi.HindiNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.hi.HindiStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.hu.HungarianLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.hu.HungarianLightStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="ES_COMPARING_PARAMETER_STRING_WITH_EQ"/>
+<Class name="org.apache.lucene.analysis.hunspell.Dictionary"/>
+<Method name="parseAffix"/>
+</Match>
+<Match>
+<Bug pattern="NP_DEREFERENCE_OF_READLINE_VALUE"/>
+<Class name="org.apache.lucene.analysis.hunspell.Dictionary"/>
+<Method name="parseAffix"/>
+</Match>
+<Match>
+<Bug pattern="NP_DEREFERENCE_OF_READLINE_VALUE"/>
+<Class name="org.apache.lucene.analysis.hunspell.Dictionary"/>
+<Method name="parseConversions"/>
+</Match>
+<Match>
+<Bug pattern="OS_OPEN_STREAM"/>
+<Class name="org.apache.lucene.analysis.hunspell.Dictionary"/>
+<Method name="readDictionaryFiles"/>
+</Match>
+<Match>
+<Bug pattern="IM_BAD_CHECK_FOR_ODD"/>
+<Class name="org.apache.lucene.analysis.hunspell.Dictionary$DoubleASCIIFlagParsingStrategy"/>
+<Method name="parseFlags"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.hunspell.HunspellStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.hunspell.Stemmer"/>
+<Method name="applyAffix"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.icu.ICUNormalizer2Filter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.icu.ICUTransformFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.analysis.icu.segmentation.BreakIteratorWrapper"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.icu.segmentation.ICUTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.id.IndonesianStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.in.IndicNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.it.ItalianLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.it.ItalianLightStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ja.JapaneseBaseFormFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ja.JapaneseKatakanaStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ja.JapaneseNumberFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ja.JapanesePartOfSpeechStopFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ja.JapaneseReadingFormFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ja.JapaneseTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.ja.JapaneseTokenizer$Lattice"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.ja.Token"/>
+<Method name="getSurfaceForm"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.ja.Token"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD"/>
+<Class name="org.apache.lucene.analysis.ja.dict.ConnectionCosts"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.analysis.ja.dict.UserDictionary"/>
+<Method name="toIndexArray"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.lv.LatvianStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.lv.LatvianStemmer"/>
+<Method name="numVowels"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.minhash.MinHashFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.minhash.MinHashFilter"/>
+<Method name="murmurhash3_x64_128"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.CapitalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.CodepointCountFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.DateRecognizerFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.FingerprintFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.FixBrokenOffsetsFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.FixBrokenOffsetsFilter"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.HyphenatedWordsFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.KeepWordFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.KeywordRepeatFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.LengthFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.LimitTokenCountFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.LimitTokenOffsetFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.LimitTokenPositionFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.PatternKeywordMarkerFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.PrefixAndSuffixAwareTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.PrefixAwareTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.RemoveDuplicatesTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.ScandinavianFoldingFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.ScandinavianNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.TrimFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.TruncateTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.WordDelimiterFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.WordDelimiterFilterFactory"/>
+<Method name="parseString"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilterFactory"/>
+<Method name="parseString"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.analysis.miscellaneous.WordDelimiterIterator"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.morfologik.MorfologikFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.analysis.morfologik.MorphosyntacticTagsAttributeImpl"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ngram.NGramTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ngram.NGramTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.no.NorwegianLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.no.NorwegianMinimalStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.path.PathHierarchyTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.path.ReversePathHierarchyTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pattern.PatternCaptureGroupTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pattern.PatternReplaceFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pattern.PatternTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pattern.SimplePatternSplitTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pattern.SimplePatternTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.payloads.DelimitedPayloadTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.payloads.NumericPayloadTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.payloads.TokenOffsetPayloadTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.payloads.TypeAsPayloadTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.phonetic.BeiderMorseFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.phonetic.DaitchMokotoffSoundexFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.phonetic.DoubleMetaphoneFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.phonetic.PhoneticFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pt.PortugueseLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.pt.PortugueseLightStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pt.PortugueseMinimalStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.pt.PortugueseStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.analysis.pt.PortugueseStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.pt.RSLPStemmerBase$Step"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer"/>
+<Method name="getStopWords"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.reverse.ReverseStringFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.ru.RussianLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.shingle.ShingleFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.sinks.TeeSinkTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.sinks.TeeSinkTokenFilter$SinkTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.snowball.SnowballFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.sr.SerbianNormalizationFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.sr.SerbianNormalizationRegularFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizer"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+<Method name="zzUnpackAction"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+<Method name="zzUnpackAttribute"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+<Method name="zzUnpackRowMap"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+<Method name="zzUnpackTrans"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.ClassicTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizer"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+<Method name="zzUnpackAction"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+<Method name="zzUnpackAttribute"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+<Method name="zzUnpackRowMap"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+<Method name="zzUnpackTrans"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.StandardTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+<Method name="zzUnpackAction"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+<Method name="zzUnpackAttribute"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+<Method name="zzUnpackRowMap"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_FALLTHROUGH"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+<Method name="getNextToken"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.standard.UAX29URLEmailTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.stempel.StempelFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_EXCEPTION"/>
+<Class name="org.apache.lucene.analysis.stempel.StempelStemmer"/>
+<Method name="load"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.sv.SwedishLightStemFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.synonym.SynonymFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.analysis.synonym.SynonymFilterFactory"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.synonym.SynonymGraphFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.analysis.synonym.SynonymGraphFilterFactory"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.th.ThaiTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.tokenattributes.CharTermAttributeImpl"/>
+<Method name="buffer"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.tokenattributes.CharTermAttributeImpl"/>
+<Method name="resizeBuffer"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.analysis.tokenattributes.KeywordAttributeImpl"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.tr.ApostropheFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.tr.TurkishLowerCaseFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.uima.UIMAAnnotationsTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.uima.UIMATypeAwareAnnotationsTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.analysis.uima.ae.BasicAEProvider"/>
+</Match>
+<Match>
+<Bug pattern="UI_INHERITANCE_UNSAFE_GETRESOURCE"/>
+<Class name="org.apache.lucene.analysis.uima.ae.BasicAEProvider"/>
+<Method name="getInputSource"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.util.AnalysisSPILoader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.util.CharArrayIterator"/>
+<Method name="getText"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.util.CharArrayIterator"/>
+<Method name="setText"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.util.ElisionFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.analysis.util.OpenStringBuilder"/>
+<Method name="getArray"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.analysis.util.OpenStringBuilder"/>
+<Method name="set"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizer"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizer"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+<Method name="zzUnpackAction"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+<Method name="zzUnpackAttribute"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+<Method name="zzUnpackRowMap"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+<Method name="zzUnpackTrans"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.analysis.wikipedia.WikipediaTokenizerImpl"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.PerfRunData"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.PerfRunData"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.AbstractQueryMaker"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.ContentItemsSource"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.ContentItemsSource"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.DirContentSource"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.DirContentSource"/>
+<Method name="setConfig"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.DirContentSource$Iterator$Comparator"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.DocMaker"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource$Parser"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource$Parser"/>
+</Match>
+<Match>
+<Bug pattern="OS_OPEN_STREAM"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.FileBasedQueryMaker"/>
+<Method name="prepareQueries"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.LineDocSource"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.LineDocSource"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.LineDocSource$LineParser"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.LongToEnglishContentSource"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.LongToEnglishQueryMaker"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.LongToEnglishQueryMaker"/>
+</Match>
+<Match>
+<Bug pattern="UR_UNINIT_READ"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.RandomFacetSource"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="UR_UNINIT_READ"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.RandomFacetSource"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="NP_DEREFERENCE_OF_READLINE_VALUE"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.ReutersContentSource"/>
+<Method name="getNextDocData"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.TrecContentSource"/>
+<Method name="read"/>
+</Match>
+<Match>
+<Bug pattern="DMI_USELESS_SUBSTRING"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.TrecDocParser"/>
+<Method name="stripTags"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.benchmark.byTask.feeds.TrecDocParser"/>
+<Method name="pathType"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.benchmark.byTask.stats.TaskStats"/>
+<Method name="getCountsByTime"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.benchmark.byTask.stats.TaskStats"/>
+<Method name="setCountsByTime"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_FALLTHROUGH"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.AnalyzerFactoryTask"/>
+<Method name="createAnalysisPipelineComponent"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_FALLTHROUGH"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.AnalyzerFactoryTask"/>
+<Method name="setParams"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.ReadTokensTask"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.ReportTask"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.RollbackIndexTask"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.TaskSequence"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.WriteEnwikiLineDocTask"/>
+<Method name="categoriesLineFile"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.benchmark.byTask.tasks.WriteLineDocTask"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_FALLTHROUGH"/>
+<Class name="org.apache.lucene.benchmark.byTask.utils.Algorithm"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.benchmark.byTask.utils.Algorithm"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="DM_BOOLEAN_CTOR"/>
+<Class name="org.apache.lucene.benchmark.byTask.utils.Config"/>
+<Method name="propToBooleanArray"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.benchmark.byTask.utils.Config"/>
+<Method name="getColsNamesForValsByRound"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.benchmark.byTask.utils.Config"/>
+<Method name="getColsValuesForValsByRound"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.benchmark.byTask.utils.Config"/>
+<Method name="newRound"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.benchmark.byTask.utils.StreamUtils"/>
+<Method name="fileType"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.benchmark.quality.QualityBenchmark"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.benchmark.quality.QualityQuery"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.benchmark.quality.trec.TrecTopicsReader"/>
+<Method name="read"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.benchmark.quality.utils.SimpleQQParser"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.benchmark.utils.ExtractWikipedia"/>
+</Match>
+<Match>
+<Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD"/>
+<Class name="org.apache.lucene.benchmark.utils.ExtractWikipedia"/>
+<Method name="create"/>
+</Match>
+<Match>
+<Bug pattern="CO_COMPARETO_INCORRECT_FLOATING"/>
+<Class name="org.apache.lucene.classification.ClassificationResult"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.classification.ClassificationResult"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="FE_FLOATING_POINT_EQUALITY"/>
+<Class name="org.apache.lucene.classification.utils.ConfusionMatrixGenerator$ConfusionMatrix"/>
+<Method name="getAccuracy"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.codecs.blockterms.BlockTermsReader$FieldAndTerm"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.codecs.blockterms.BlockTermsReader$FieldAndTerm"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.blockterms.BlockTermsWriter$TermsWriter"/>
+</Match>
+<Match>
+<Bug pattern="IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN"/>
+<Class name="org.apache.lucene.codecs.blocktree.BlockTreeTermsReader"/>
+<Method name="seekDir"/>
+</Match>
+<Match>
+<Bug pattern="UR_UNINIT_READ"/>
+<Class name="org.apache.lucene.codecs.blocktree.BlockTreeTermsReader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="DMI_INVOKING_TOSTRING_ON_ARRAY"/>
+<Class name="org.apache.lucene.codecs.blocktree.BlockTreeTermsWriter$TermsWriter"/>
+<Method name="writeBlock"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.codecs.blocktree.IntersectTermsEnum"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.codecs.blocktree.IntersectTermsEnum"/>
+<Method name="pushFrame"/>
+</Match>
+<Match>
+<Bug pattern="DMI_INVOKING_TOSTRING_ON_ARRAY"/>
+<Class name="org.apache.lucene.codecs.blocktreeords.OrdsBlockTreeTermsWriter$TermsWriter"/>
+<Method name="writeBlock"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.codecs.blocktreeords.OrdsIntersectTermsEnum"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="GC_UNRELATED_TYPES"/>
+<Class name="org.apache.lucene.codecs.bloom.BloomFilteringPostingsFormat$BloomFilteredFieldsConsumer"/>
+<Method name="write"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_CONDITION"/>
+<Class name="org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$BlockState"/>
+<Method name="doReset"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.idversion.IDVersionPostingsReader"/>
+<Method name="decodeTerm"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.idversion.IDVersionPostingsReader"/>
+<Method name="postings"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.idversion.IDVersionPostingsWriter"/>
+<Method name="encodeTerm"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.idversion.IDVersionPostingsWriter"/>
+<Method name="finishTerm"/>
+</Match>
+<Match>
+<Bug pattern="SA_LOCAL_SELF_COMPARISON"/>
+<Class name="org.apache.lucene.codecs.idversion.VersionBlockTreeTermsReader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_CONDITION"/>
+<Class name="org.apache.lucene.codecs.idversion.VersionBlockTreeTermsReader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="DMI_INVOKING_TOSTRING_ON_ARRAY"/>
+<Class name="org.apache.lucene.codecs.idversion.VersionBlockTreeTermsWriter$TermsWriter"/>
+<Method name="writeBlock"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat"/>
+<Method name="write"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.codecs.lucene50.Lucene50CompoundFormat"/>
+<Method name="write"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_PARAM_DEREF"/>
+<Class name="org.apache.lucene.codecs.lucene50.Lucene50FieldInfosFormat"/>
+<Method name="read"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.lucene50.Lucene50PostingsReader"/>
+<Method name="decodeTerm"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.lucene50.Lucene50PostingsReader"/>
+<Method name="postings"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.lucene50.Lucene50PostingsWriter"/>
+<Method name="encodeTerm"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.codecs.lucene50.Lucene50PostingsWriter"/>
+<Method name="finishTerm"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.codecs.lucene54.Lucene54DocValuesProducer$15"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.codecs.lucene54.Lucene54DocValuesProducer$16"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.codecs.lucene54.Lucene54DocValuesProducer$BinaryEntry"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_PARAM_DEREF"/>
+<Class name="org.apache.lucene.codecs.lucene60.Lucene60FieldInfosFormat"/>
+<Method name="read"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesConsumer"/>
+<Method name="addNumericFieldValues"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$8"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$BinaryEntry"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$BinaryEntry"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$BinaryEntry"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$BinaryEntry"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$FSTEntry"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$FSTEntry"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.codecs.memory.DirectDocValuesProducer$NumericEntry"/>
+</Match>
+<Match>
+<Bug pattern="SIC_INNER_SHOULD_BE_STATIC"/>
+<Class name="org.apache.lucene.codecs.memory.FSTOrdTermsReader$TermsReader$IntersectTermsEnum$Frame"/>
+</Match>
+<Match>
+<Bug pattern="EC_UNRELATED_TYPES"/>
+<Class name="org.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum"/>
+<Method name="seekCeil"/>
+</Match>
+<Match>
+<Bug pattern="SIC_INNER_SHOULD_BE_STATIC"/>
+<Class name="org.apache.lucene.codecs.memory.FSTTermsReader$TermsReader$IntersectTermsEnum$Frame"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader"/>
+<Method name="getNumericNonIterator"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader"/>
+<Method name="getNumeric"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader$2"/>
+<Method name="apply"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader$3"/>
+<Method name="advanceExact"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader$4"/>
+<Method name="apply"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader$6"/>
+<Method name="advanceExact"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader$7"/>
+<Method name="advanceExact"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader$7"/>
+<Method name="lookupOrd"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextDocValuesReader$9"/>
+<Method name="advanceExact"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextFieldsReader$TermData"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextFieldsReader$TermData"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextSegmentInfoFormat"/>
+<Method name="write"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextStoredFieldsReader"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.codecs.simpletext.SimpleTextTermVectorsReader"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.collation.tokenattributes.CollatedTermAttributeImpl"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.collation.tokenattributes.ICUCollatedTermAttributeImpl"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_DEREFERENCE_OF_READLINE_VALUE"/>
+<Class name="org.apache.lucene.demo.SearchFiles"/>
+<Method name="doPagingSearch"/>
+</Match>
+<Match>
+<Bug pattern="OS_OPEN_STREAM"/>
+<Class name="org.apache.lucene.demo.xmlparser.FormBasedXmlQueryDemo"/>
+<Method name="openExampleIndex"/>
+</Match>
+<Match>
+<Bug pattern="SE_BAD_FIELD"/>
+<Class name="org.apache.lucene.demo.xmlparser.FormBasedXmlQueryDemo"/>
+</Match>
+<Match>
+<Bug pattern="SE_BAD_FIELD"/>
+<Class name="org.apache.lucene.demo.xmlparser.FormBasedXmlQueryDemo"/>
+</Match>
+<Match>
+<Bug pattern="SE_BAD_FIELD"/>
+<Class name="org.apache.lucene.demo.xmlparser.FormBasedXmlQueryDemo"/>
+</Match>
+<Match>
+<Bug pattern="SE_BAD_FIELD"/>
+<Class name="org.apache.lucene.demo.xmlparser.FormBasedXmlQueryDemo"/>
+</Match>
+<Match>
+<Bug pattern="SE_BAD_FIELD_STORE"/>
+<Class name="org.apache.lucene.demo.xmlparser.FormBasedXmlQueryDemo"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.document.DoubleRange"/>
+<Method name="toString"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.document.Field$BinaryTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.document.Field$StringTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.document.FloatRange"/>
+<Method name="toString"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.document.IntRange"/>
+<Method name="toString"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.document.LatLonDocValuesBoxQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.document.LatLonDocValuesDistanceQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.document.LatLonPoint"/>
+<Method name="nearest"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.document.LatLonPointDistanceQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.document.LatLonPointInPolygonQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.document.LongRange"/>
+<Method name="toString"/>
+</Match>
+<Match>
+<Bug pattern="RV_NEGATING_RESULT_OF_COMPARETO"/>
+<Class name="org.apache.lucene.document.NearestNeighbor$1"/>
+<Method name="compare"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.document.NearestNeighbor$Cell"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.document.RangeFieldQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.document.SortedNumericDocValuesRangeQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.document.SortedSetDocValuesRangeQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.expressions.js.JavascriptCompiler"/>
+<Method name="unusedTestCompile"/>
+</Match>
+<Match>
+<Bug pattern="BC_UNCONFIRMED_CAST"/>
+<Class name="org.apache.lucene.expressions.js.JavascriptParser"/>
+<Method name="sempred"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.expressions.js.JavascriptParser"/>
+<Method name="expression"/>
+</Match>
+<Match>
+<Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE"/>
+<Class name="org.apache.lucene.expressions.js.JavascriptParserErrorStrategy"/>
+<Method name="recover"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.expressions.js.JavascriptParserErrorStrategy"/>
+<Method name="recover"/>
+</Match>
+<Match>
+<Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"/>
+<Class name="org.apache.lucene.facet.DrillDownQuery"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.facet.DrillDownQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.facet.DrillSidewaysQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.facet.FacetResult"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.facet.FacetResult"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.facet.FacetsCollector$MatchingDocs"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.facet.range.DoubleRange$ValueSourceQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.facet.range.LongRange$ValueSourceQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.facet.taxonomy.OrdinalMappingLeafReader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter$DiskOrdinalMap"/>
+<Method name="getMap"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter$MemoryOrdinalMap"/>
+<Method name="getMap"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter$SinglePositionTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.facet.taxonomy.directory.TaxonomyIndexArrays"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.facet.taxonomy.directory.TaxonomyIndexArrays"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM"/>
+<Class name="org.apache.lucene.facet.taxonomy.writercache.CharBlockArray$Block"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.apache.lucene.facet.taxonomy.writercache.LruTaxonomyWriterCache"/>
+<Method name="put"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.apache.lucene.facet.taxonomy.writercache.NameHashIntCacheLRU"/>
+<Method name="key"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.apache.lucene.facet.taxonomy.writercache.NameHashIntCacheLRU"/>
+<Method name="key"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.geo.BaseGeoPointTestCase"/>
+<Method name="verifyRandomDistances"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.geo.BaseGeoPointTestCase"/>
+<Method name="verifyRandomPolygons"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.geo.BaseGeoPointTestCase"/>
+<Method name="verifyRandomRectangles"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.BaseDocValuesFormatTestCase"/>
+<Method name="testSortedBytes"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.BaseDocValuesFormatTestCase"/>
+<Method name="testSortedBytesTwoDocuments"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.BaseDocValuesFormatTestCase"/>
+<Method name="testThreeFieldsMixed2"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
+<Class name="org.apache.lucene.index.BaseDocValuesFormatTestCase"/>
+<Method name="doTestSortedSetVsStoredFields"/>
+</Match>
+<Match>
+<Bug pattern="REC_CATCH_EXCEPTION"/>
+<Class name="org.apache.lucene.index.BaseDocValuesFormatTestCase$2"/>
+<Method name="run"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.BasePostingsFormatTestCase"/>
+<Method name="testLevel2Ghosts"/>
+</Match>
+<Match>
+<Bug pattern="BC_VACUOUS_INSTANCEOF"/>
+<Class name="org.apache.lucene.index.BaseStoredFieldsFormatTestCase"/>
+<Method name="testBigDocuments"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.index.BaseStoredFieldsFormatTestCase"/>
+<Method name="testNumericField"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase"/>
+<Method name="assertEquals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase$RandomTokenStream"/>
+<Method name="getEndOffsets"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase$RandomTokenStream"/>
+<Method name="getPayloads"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase$RandomTokenStream"/>
+<Method name="getPositionsIncrements"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase$RandomTokenStream"/>
+<Method name="getStartOffsets"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase$RandomTokenStream"/>
+<Method name="getTermBytes"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase$RandomTokenStream"/>
+<Method name="getTerms"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.index.BaseTermVectorsFormatTestCase$RandomTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="ES_COMPARING_STRINGS_WITH_EQ"/>
+<Class name="org.apache.lucene.index.BufferedUpdatesStream"/>
+<Method name="applyTermDeletes"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE"/>
+<Class name="org.apache.lucene.index.BufferedUpdatesStream"/>
+<Method name="closeSegmentStates"/>
+</Match>
+<Match>
+<Bug pattern="INT_BAD_REM_BY_1"/>
+<Class name="org.apache.lucene.index.CheckIndex"/>
+<Method name="checkDVIterator"/>
+</Match>
+<Match>
+<Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE"/>
+<Class name="org.apache.lucene.index.CheckIndex"/>
+<Method name="checkFields"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE"/>
+<Class name="org.apache.lucene.index.CheckIndex"/>
+<Method name="checkIndex"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$FieldInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$IndexSortStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.CheckIndex$Status$SegmentInfoStatus"/>
+</Match>
+<Match>
+<Bug pattern="VA_FORMAT_STRING_USES_NEWLINE"/>
+<Class name="org.apache.lucene.index.ConcurrentMergeScheduler"/>
+<Method name="updateMergeThreads"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.index.DefaultIndexingChain$PerField"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.index.DocumentsWriter"/>
+</Match>
+<Match>
+<Bug pattern="UL_UNRELEASED_LOCK_EXCEPTION_PATH"/>
+<Class name="org.apache.lucene.index.DocumentsWriterDeleteQueue"/>
+<Method name="freezeGlobalBuffer"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.index.DocumentsWriterFlushControl"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.index.DocumentsWriterFlushControl"/>
+</Match>
+<Match>
+<Bug pattern="VO_VOLATILE_INCREMENT"/>
+<Class name="org.apache.lucene.index.DocumentsWriterFlushControl"/>
+<Method name="checkoutAndBlock"/>
+</Match>
+<Match>
+<Bug pattern="VO_VOLATILE_INCREMENT"/>
+<Class name="org.apache.lucene.index.DocumentsWriterFlushControl"/>
+<Method name="internalTryCheckOutForFlush"/>
+</Match>
+<Match>
+<Bug pattern="VO_VOLATILE_INCREMENT"/>
+<Class name="org.apache.lucene.index.DocumentsWriterFlushControl"/>
+<Method name="setFlushPending"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket"/>
+<Method name="finishFlush"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
+<Class name="org.apache.lucene.index.DocumentsWriterPerThread"/>
+<Method name="flush"/>
+</Match>
+<Match>
+<Bug pattern="UR_UNINIT_READ"/>
+<Class name="org.apache.lucene.index.DocumentsWriterPerThread"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="SE_BAD_FIELD"/>
+<Class name="org.apache.lucene.index.DocumentsWriterPerThreadPool$ThreadState"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_FALLTHROUGH"/>
+<Class name="org.apache.lucene.index.FilteredTermsEnum"/>
+<Method name="next"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.index.FixBrokenOffsets"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.index.FixBrokenOffsets"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.FixBrokenOffsets"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.IndexWriter"/>
+<Method name="doFlush"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.IndexWriter"/>
+<Method name="getReader"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.index.IndexWriter"/>
+<Method name="mergeMiddle"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.index.IndexWriter"/>
+</Match>
+<Match>
+<Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE"/>
+<Class name="org.apache.lucene.index.IndexWriter"/>
+<Method name="validateIndexSort"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_CONDITION"/>
+<Class name="org.apache.lucene.index.IndexWriter$ReaderPool"/>
+<Method name="dropAll"/>
+</Match>
+<Match>
+<Bug pattern="UG_SYNC_SET_UNSYNC_GET"/>
+<Class name="org.apache.lucene.index.LiveIndexWriterConfig"/>
+<Method name="getMaxBufferedDocs"/>
+</Match>
+<Match>
+<Bug pattern="UG_SYNC_SET_UNSYNC_GET"/>
+<Class name="org.apache.lucene.index.LiveIndexWriterConfig"/>
+<Method name="getRAMBufferSizeMB"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.index.LogMergePolicy"/>
+<Method name="findMerges"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.index.LogMergePolicy$SegmentInfoAndLevel"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.index.MergePolicy"/>
+<Method name="getMaxCFSSegmentSizeMB"/>
+</Match>
+<Match>
+<Bug pattern="ES_COMPARING_STRINGS_WITH_EQ"/>
+<Class name="org.apache.lucene.index.MergedPrefixCodedTermsIterator"/>
+<Method name="next"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.MultiBits$SubResult"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.index.MultiBits$SubResult"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.index.MultiDocValues"/>
+<Method name="getSortedNumericValues"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiDocValues$MultiSortedDocValues"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiDocValues$MultiSortedDocValues"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiFields"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiFields"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.MultiPostingsEnum"/>
+<Method name="getSubs"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.MultiTerms"/>
+<Method name="getSubSlices"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.MultiTerms"/>
+<Method name="getSubTerms"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiTerms"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.MultiTerms"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.MultiTermsEnum"/>
+<Method name="getMatchArray"/>
+</Match>
+<Match>
+<Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"/>
+<Class name="org.apache.lucene.index.NoDeletionPolicy"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"/>
+<Class name="org.apache.lucene.index.NoMergeScheduler"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="JLM_JSR166_UTILCONCURRENT_MONITORENTER"/>
+<Class name="org.apache.lucene.index.OwnCacheKeyMultiReader"/>
+<Method name="notifyReaderClosedListeners"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.index.ParallelLeafReader"/>
+<Method name="getParallelReaders"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.index.PersistentSnapshotDeletionPolicy"/>
+</Match>
+<Match>
+<Bug pattern="DMI_RANDOM_USED_ONLY_ONCE"/>
+<Class name="org.apache.lucene.index.RandomCodec$RandomlySplittingBKDWriter"/>
+<Method name="getRandomLongOrds"/>
+</Match>
+<Match>
+<Bug pattern="DMI_RANDOM_USED_ONLY_ONCE"/>
+<Class name="org.apache.lucene.index.RandomCodec$RandomlySplittingBKDWriter"/>
+<Method name="getRandomSingleValuePerDoc"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.index.RandomPostingsTester"/>
+<Method name="testTermsOneThread"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.index.ReadersAndUpdates"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.index.ReadersAndUpdates"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.ReadersAndUpdates$1"/>
+<Method name="getNumeric"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.index.ReadersAndUpdates$2"/>
+<Method name="getBinary"/>
+</Match>
+<Match>
+<Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"/>
+<Class name="org.apache.lucene.index.SegmentCommitInfo"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE"/>
+<Class name="org.apache.lucene.index.SegmentDocValues"/>
+<Method name="decRef"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.index.SegmentInfo"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.index.SegmentInfos"/>
+<Method name="write"/>
+</Match>
+<Match>
+<Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE"/>
+<Class name="org.apache.lucene.index.SuppressingConcurrentMergeScheduler"/>
+<Method name="handleMergeException"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
+<Class name="org.apache.lucene.index.TermVectorsConsumer"/>
+<Method name="flush"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray"/>
+<Method name="init"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.index.ThreadedIndexingAndSearchingTestCase$1"/>
+<Method name="run"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.index.TieredMergePolicy"/>
+<Method name="findMerges"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.index.TieredMergePolicy"/>
+<Method name="getMaxMergedSegmentMB"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.index.TieredMergePolicy"/>
+<Method name="toString"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.index.memory.MemoryIndex"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.index.memory.MemoryIndex$1"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.index.memory.MemoryIndex$MemoryIndexReader$MemoryPostingsEnum"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.legacy.LegacyNumericTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="VA_FORMAT_STRING_USES_NEWLINE"/>
+<Class name="org.apache.lucene.misc.GetTermInfo"/>
+<Method name="getTermInfo"/>
+</Match>
+<Match>
+<Bug pattern="VA_FORMAT_STRING_USES_NEWLINE"/>
+<Class name="org.apache.lucene.misc.HighFreqTerms"/>
+<Method name="main"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.misc.HighFreqTerms$DocFreqComparator"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.misc.HighFreqTerms$TotalTermFreqComparator"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.mockfile.MockFileSystemTestCase"/>
+<Method name="testDirectoryStreamFiltered"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.mockfile.VirusCheckingFS"/>
+<Method name="delete"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.mockfile.VirusCheckingFS"/>
+<Method name="delete"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.mockfile.WindowsFS"/>
+<Method name="onClose"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queries.BoostingQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queries.CommonTermsQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.queries.CustomScoreQuery"/>
+<Method name="getScoringQueries"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queries.CustomScoreQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.queries.CustomScoreQuery$CustomWeight"/>
+<Method name="explain"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queries.function.BoostedQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.queries.function.FunctionQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queries.function.FunctionRangeQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.ComparisonBoolFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.DocFreqValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.DoubleFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.DoubleFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.DualFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.FloatFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.FloatFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.IntFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.IntFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.LinearFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.LinearFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.LongFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MaxDocValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiBoolFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiFloatFunction"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiFunction$Values"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedDoubleFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedDoubleFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedFloatFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedFloatFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedIntFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedIntFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedLongFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.MultiValuedLongFieldSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.NormValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.NumDocsValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE"/>
+<Class name="org.apache.lucene.queries.function.valuesource.QueryDocValues"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.QueryValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.QueryValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.RangeMapFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.RangeMapFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.ReciprocalFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.ScaleFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.ScaleFloatFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.SimpleBoolFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.SingleFunction"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.SumTotalTermFreqValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.queries.function.valuesource.TotalTermFreqValueSource"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThis"/>
+<Method name="getFieldNames"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThis"/>
+<Method name="setFieldNames"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThis"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThis"/>
+<Method name="retrieveTerms"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThis$ScoreTerm"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThis$ScoreTerm"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThis$ScoreTerm"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThisQuery"/>
+<Method name="getMoreLikeFields"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThisQuery"/>
+<Method name="setMoreLikeFields"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queries.mlt.MoreLikeThisQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queries.payloads.PayloadScoreQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.queries.payloads.SpanPayloadCheckQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.FastCharStream"/>
+<Method name="BeginToken"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.FastCharStream"/>
+<Method name="Done"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.FastCharStream"/>
+<Method name="GetImage"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.FastCharStream"/>
+<Method name="GetSuffix"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.classic.MultiFieldQueryParser"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.classic.ParseException"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.classic.ParseException"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="SBSC_USE_STRINGBUFFER_CONCATENATION"/>
+<Class name="org.apache.lucene.queryparser.classic.ParseException"/>
+<Method name="initialise"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="Clause"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="Conjunction"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="Modifiers"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="MultiTerm"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="Query"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="Term"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="TopLevelQuery"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParser"/>
+<Method name="jj_rescan_token"/>
+</Match>
+<Match>
+<Bug pattern="DE_MIGHT_IGNORE"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserBase"/>
+<Method name="handleBareFuzzy"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserBase"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserBase"/>
+<Method name="TopLevelQuery"/>
+</Match>
+<Match>
+<Bug pattern="MS_OOI_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserConstants"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserTokenManager"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserTokenManager"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserTokenManager"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserTokenManager"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserTokenManager"/>
+<Method name="SwitchTo"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.queryparser.classic.QueryParserTokenManager"/>
+<Method name="getNextToken"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.classic.TokenMgrError"/>
+<Method name="LexicalError"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queryparser.complexPhrase.ComplexPhraseQueryParser$ComplexPhraseQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SE_BAD_FIELD_STORE"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.QueryNodeException"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages"/>
+</Match>
+<Match>
+<Bug pattern="BC_VACUOUS_INSTANCEOF"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.nodes.AnyQueryNode"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="BC_VACUOUS_INSTANCEOF"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.nodes.AnyQueryNode"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$ProximityType"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.queryparser.flexible.core.nodes.ProximityQueryNode$ProximityType"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.queryparser.flexible.messages.MessageImpl"/>
+<Method name="getArguments"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.builders.MultiPhraseQueryNodeBuilder"/>
+<Method name="build"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.FastCharStream"/>
+<Method name="BeginToken"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.FastCharStream"/>
+<Method name="Done"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.FastCharStream"/>
+<Method name="GetImage"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.FastCharStream"/>
+<Method name="GetSuffix"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.ParseException"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.ParseException"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="SBSC_USE_STRINGBUFFER_CONCATENATION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.ParseException"/>
+<Method name="initialise"/>
+</Match>
+<Match>
+<Bug pattern="DE_MIGHT_IGNORE"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="Term"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="Clause"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="ConjQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="DisjQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="ModClause"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="Modifiers"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="Query"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="Term"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="TopLevelQuery"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser"/>
+<Method name="jj_rescan_token"/>
+</Match>
+<Match>
+<Bug pattern="MS_OOI_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParserConstants"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParserTokenManager"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParserTokenManager"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParserTokenManager"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParserTokenManager"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParserTokenManager"/>
+<Method name="SwitchTo"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParserTokenManager"/>
+<Method name="getNextToken"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.parser.TokenMgrError"/>
+<Method name="LexicalError"/>
+</Match>
+<Match>
+<Bug pattern="BC_VACUOUS_INSTANCEOF"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.processors.AnalyzerQueryNodeProcessor"/>
+<Method name="postProcessNode"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.queryparser.flexible.standard.processors.MultiFieldQueryNodeProcessor"/>
+<Method name="preProcessNode"/>
+</Match>
+<Match>
+<Bug pattern="IM_BAD_CHECK_FOR_ODD"/>
+<Class name="org.apache.lucene.queryparser.simple.SimpleQueryParser"/>
+<Method name="buildQueryTree"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.FastCharStream"/>
+<Method name="BeginToken"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.FastCharStream"/>
+<Method name="Done"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.FastCharStream"/>
+<Method name="GetImage"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.FastCharStream"/>
+<Method name="GetSuffix"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.ParseException"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.ParseException"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="SBSC_USE_STRINGBUFFER_CONCATENATION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.ParseException"/>
+<Method name="initialise"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="AndQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="FieldsQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="FieldsQueryList"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="NotQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="OptionalFields"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="OptionalWeights"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="OrQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="PrefixOperatorQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="PrimaryQuery"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="SimpleTerm"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="TopSrndQuery"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParser"/>
+<Method name="jj_rescan_token"/>
+</Match>
+<Match>
+<Bug pattern="MS_OOI_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParserConstants"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager"/>
+<Method name="ReInit"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager"/>
+<Method name="SwitchTo"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.QueryParserTokenManager"/>
+<Method name="getNextToken"/>
+</Match>
+<Match>
+<Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
+<Class name="org.apache.lucene.queryparser.surround.parser.TokenMgrError"/>
+<Method name="LexicalError"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.queryparser.surround.query.BasicQueryFactory"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.queryparser.surround.query.RewriteQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.queryparser.surround.query.SpanNearClauseFactory"/>
+<Method name="makeSpanClause"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.queryparser.surround.query.SrndTruncQuery"/>
+<Method name="visitMatchingTerms"/>
+</Match>
+<Match>
+<Bug pattern="RpC_REPEATED_CONDITIONAL_TEST"/>
+<Class name="org.apache.lucene.queryparser.surround.query.SrndTruncQuery"/>
+<Method name="visitMatchingTerms"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.queryparser.xml.CoreParser"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.queryparser.xml.CoreParser"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.queryparser.xml.CoreParser"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.queryparser.xml.DOMUtils"/>
+<Method name="getAttributeOrFail"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.queryparser.xml.DOMUtils"/>
+<Method name="getTextBuffer"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder"/>
+<Method name="getQuery"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.replicator.IndexAndTaxonomyRevision"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.replicator.IndexRevision"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="UG_SYNC_SET_UNSYNC_GET"/>
+<Class name="org.apache.lucene.replicator.LocalReplicator"/>
+<Method name="getExpirationThreshold"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.replicator.ReplicationClient"/>
+<Method name="doUpdate"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.replicator.RevisionFile"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.replicator.RevisionFile"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="VA_FORMAT_STRING_USES_NEWLINE"/>
+<Class name="org.apache.lucene.replicator.nrt.CopyJob"/>
+<Method name="cancel"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.replicator.nrt.CopyOneFile"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.replicator.nrt.CopyState"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.replicator.nrt.FileMetaData"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.replicator.nrt.FileMetaData"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.replicator.nrt.Node"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.replicator.nrt.Node"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.replicator.nrt.Node"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.replicator.nrt.Node"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.replicator.nrt.Node"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.replicator.nrt.PreCopyMergedSegmentWarmer"/>
+<Method name="warm"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.replicator.nrt.PrimaryNode"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.replicator.nrt.PrimaryNode"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.replicator.nrt.ReplicaNode"/>
+<Method name="start"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.replicator.nrt.ReplicaNode"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.replicator.nrt.SegmentInfosSearcherManager"/>
+<Method name="refreshIfNeeded"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.sandbox.queries.FuzzyLikeThisQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.AssertingQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.BaseExplanationTestCase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.BaseExplanationTestCase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.BaseExplanationTestCase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.BaseExplanationTestCase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.BaseExplanationTestCase"/>
+</Match>
+<Match>
+<Bug pattern="DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY"/>
+<Class name="org.apache.lucene.search.BaseRangeFieldQueryTestCase"/>
+<Method name="doTestRandom"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.search.BaseRangeFieldQueryTestCase"/>
+<Method name="doTestRandom"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.search.BaseRangeFieldQueryTestCase"/>
+<Method name="verify"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.BlendedTermQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.BooleanQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.BoostQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.search.CheckHits"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.search.CheckHits"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.search.ConjunctionScorer$DocsAndFreqs"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.ConstantScoreQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.search.ControlledRealTimeReopenThread"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE"/>
+<Class name="org.apache.lucene.search.ControlledRealTimeReopenThread"/>
+<Method name="run"/>
+</Match>
+<Match>
+<Bug pattern="UL_UNRELEASED_LOCK_EXCEPTION_PATH"/>
+<Class name="org.apache.lucene.search.ControlledRealTimeReopenThread"/>
+<Method name="waitForGeneration"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.DisjunctionMaxQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.DocValuesNumbersQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.DocValuesRewriteMethod$MultiTermQueryDocValuesWrapper"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.DocValuesTermsQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.DoubleValuesSource$DoubleValuesSortField"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.FieldDoc"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.FieldDoc"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.FieldValueHitQueue"/>
+<Method name="getComparators"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.FieldValueHitQueue"/>
+<Method name="getReverseMul"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.FieldValueQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="FE_FLOATING_POINT_EQUALITY"/>
+<Class name="org.apache.lucene.search.FuzzyTermsEnum"/>
+<Method name="bottomChanged"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.search.FuzzyTermsEnum"/>
+<Method name="next"/>
+</Match>
+<Match>
+<Bug pattern="DMI_INVOKING_HASHCODE_ON_ARRAY"/>
+<Class name="org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttributeImpl"/>
+<Method name="hashCode"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttributeImpl"/>
+<Method name="automata"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.FuzzyTermsEnum$LevenshteinAutomataAttributeImpl"/>
+<Method name="setAutomata"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.IndexOrDocValuesQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.search.IndexSearcher"/>
+<Method name="search"/>
+</Match>
+<Match>
+<Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE"/>
+<Class name="org.apache.lucene.search.LRUQueryCache"/>
+<Method name="putIfAbsent"/>
+</Match>
+<Match>
+<Bug pattern="VO_VOLATILE_INCREMENT"/>
+<Class name="org.apache.lucene.search.LRUQueryCache"/>
+<Method name="onDocIdSetCache"/>
+</Match>
+<Match>
+<Bug pattern="VO_VOLATILE_INCREMENT"/>
+<Class name="org.apache.lucene.search.LRUQueryCache"/>
+<Method name="onDocIdSetCache"/>
+</Match>
+<Match>
+<Bug pattern="VO_VOLATILE_INCREMENT"/>
+<Class name="org.apache.lucene.search.LRUQueryCache"/>
+<Method name="onHit"/>
+</Match>
+<Match>
+<Bug pattern="VO_VOLATILE_INCREMENT"/>
+<Class name="org.apache.lucene.search.LRUQueryCache"/>
+<Method name="onMiss"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.LongValuesSource$LongValuesSortField"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.MatchAllDocsQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.MatchNoDocsQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.MultiPhraseQuery"/>
+<Method name="getPositions"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.MultiPhraseQuery"/>
+<Method name="getTermArrays"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.MultiPhraseQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.MultiTermQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.MultiTermQueryConstantScoreWrapper"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.NGramPhraseQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="UUF_UNUSED_FIELD"/>
+<Class name="org.apache.lucene.search.PhrasePositions"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.PhraseQuery"/>
+<Method name="getPositions"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.PhraseQuery"/>
+<Method name="getTerms"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.PhraseQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.PointInSetQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.PointRangeQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
+<Class name="org.apache.lucene.search.PrefixQuery"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="CO_COMPARETO_INCORRECT_FLOATING"/>
+<Class name="org.apache.lucene.search.QueryRescorer$2"/>
+<Method name="compare"/>
+</Match>
+<Match>
+<Bug pattern="NP_GUARANTEED_DEREF"/>
+<Class name="org.apache.lucene.search.QueryUtils"/>
+<Method name="checkBulkScorerSkipTo"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.RandomApproximationQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
+<Class name="org.apache.lucene.search.ReqOptSumScorer"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.SearchEquivalenceTestBase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.SearchEquivalenceTestBase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.SearchEquivalenceTestBase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.SearchEquivalenceTestBase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.SearchEquivalenceTestBase"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.SearchEquivalenceTestBase"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.search.SearcherLifetimeManager$SearcherTracker"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.ShardSearchingTestBase$NodeState$ShardIndexSearcher"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE"/>
+<Class name="org.apache.lucene.search.ShardSearchingTestBase$NodeState$ShardIndexSearcher"/>
+<Method name="searchAfter"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.apache.lucene.search.SloppyPhraseScorer"/>
+<Method name="repeatingTerms"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.search.SloppyPhraseScorer"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.Sort"/>
+<Method name="getSort"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.SynonymQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.TermAutomatonQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.TermInSetQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.TermQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.TopDocs"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.TopFieldDocs"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.search.TopFieldDocs"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.search.TopTermsRewrite$ScoreTerm"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.grouping.CollectedSearchGroup"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.grouping.GroupDocs"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.grouping.GroupDocs"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.grouping.TopGroups"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.grouping.TopGroups"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.grouping.TopGroups"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="DE_MIGHT_IGNORE"/>
+<Class name="org.apache.lucene.search.highlight.Highlighter"/>
+<Method name="getBestTextFragments"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.highlight.OffsetLimitTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.search.highlight.QueryTermScorer"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.highlight.TokenStreamFromTermVector"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.join.GlobalOrdinalsQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.search.join.GlobalOrdinalsQuery$W"/>
+<Method name="explain"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.search.join.GlobalOrdinalsQuery$W"/>
+<Method name="scorer"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.join.GlobalOrdinalsWithScoreQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.search.join.GlobalOrdinalsWithScoreQuery$W"/>
+<Method name="explain"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.search.join.GlobalOrdinalsWithScoreQuery$W"/>
+<Method name="scorer"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.join.ParentChildrenBlockJoinQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.join.PointInSetIncludingScoreQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.join.TermsIncludingScoreQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.join.ToChildBlockJoinQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.join.ToParentBlockJoinQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.join.ToParentBlockJoinSortField"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.postingshighlight.Passage"/>
+<Method name="getMatchEnds"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.postingshighlight.Passage"/>
+<Method name="getMatchStarts"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.postingshighlight.Passage"/>
+<Method name="getMatchTerms"/>
+</Match>
+<Match>
+<Bug pattern="CO_COMPARETO_INCORRECT_FLOATING"/>
+<Class name="org.apache.lucene.search.postingshighlight.PostingsHighlighter$2"/>
+<Method name="compare"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.search.postingshighlight.PostingsHighlighter$OffsetsEnum"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="INT_VACUOUS_COMPARISON"/>
+<Class name="org.apache.lucene.search.similarities.Axiomatic"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.search.similarities.BasicModelP"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.similarities.MultiSimilarity"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"/>
+<Class name="org.apache.lucene.search.spans.AssertingSpanQuery"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.spans.AssertingSpanQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.spans.FieldMaskingSpanQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.spans.SpanBoostQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.spans.SpanContainQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.spans.SpanMultiTermQueryWrapper"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.spans.SpanNearQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.spans.SpanNearQuery$SpanGapQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.spans.SpanNotQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.spans.SpanOrQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.spans.SpanPositionCheckQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.search.spans.SpanTermQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.search.spans.SpanWeight"/>
+<Method name="buildSimWeight"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.spell.CombineSuggestion"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="CO_COMPARETO_INCORRECT_FLOATING"/>
+<Class name="org.apache.lucene.search.spell.SuggestWordFrequencyComparator"/>
+<Method name="compare"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.spell.SuggestWordFrequencyComparator"/>
+</Match>
+<Match>
+<Bug pattern="CO_COMPARETO_INCORRECT_FLOATING"/>
+<Class name="org.apache.lucene.search.spell.SuggestWordScoreComparator"/>
+<Method name="compare"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.spell.SuggestWordScoreComparator"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.spell.WordBreakSpellChecker$CombinationsThenFreqComparator"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.spell.WordBreakSpellChecker$LengthThenMaxFreqComparator"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.spell.WordBreakSpellChecker$LengthThenSumFreqComparator"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.suggest.Lookup$CharSequenceComparator"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.search.suggest.Lookup$LookupResult"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester$LookUpComparator"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.suggest.analyzing.SuggestStopFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.suggest.document.CompletionTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.search.suggest.document.CompletionsTermsReader"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.suggest.document.ContextQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="WMI_WRONG_MAP_ITERATOR"/>
+<Class name="org.apache.lucene.search.suggest.document.ContextQuery"/>
+<Method name="toString"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.suggest.document.ContextSuggestField$PrefixTokenFilter"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.suggest.document.FuzzyCompletionQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.search.suggest.document.NRTSuggester"/>
+<Method name="load"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.search.suggest.document.NRTSuggester"/>
+<Method name="getMaxTopNSearcherQueueSize"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.search.suggest.document.NRTSuggesterBuilder$Entry"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.suggest.document.PrefixCompletionQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.search.suggest.document.RegexCompletionQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.search.suggest.fst.FSTCompletion$Completion"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.search.suggest.fst.WFSTCompletionLookup"/>
+<Method name="build"/>
+</Match>
+<Match>
+<Bug pattern="IM_AVERAGE_COMPUTATION_COULD_OVERFLOW"/>
+<Class name="org.apache.lucene.search.suggest.tst.TSTAutocomplete"/>
+<Method name="balancedTree"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.uhighlight.AnalysisOffsetStrategy$MultiValueTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.uhighlight.FieldOffsetStrategy"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.uhighlight.FieldOffsetStrategy"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.search.uhighlight.LengthGoalBreakIterator"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.search.uhighlight.MemoryIndexOffsetStrategy$2"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.search.uhighlight.OffsetsEnum"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.uhighlight.Passage"/>
+<Method name="getMatchEnds"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.uhighlight.Passage"/>
+<Method name="getMatchStarts"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.search.uhighlight.Passage"/>
+<Method name="getMatchTerms"/>
+</Match>
+<Match>
+<Bug pattern="NP_BOOLEAN_RETURN_NULL"/>
+<Class name="org.apache.lucene.search.uhighlight.UnifiedHighlighter"/>
+<Method name="requiresRewrite"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.search.uhighlight.UnifiedHighlighter$LimitedStoredFieldVisitor"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="CO_COMPARETO_INCORRECT_FLOATING"/>
+<Class name="org.apache.lucene.search.vectorhighlight.ScoreOrderFragmentsBuilder$ScoreComparator"/>
+<Method name="compare"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.search.vectorhighlight.ScoreOrderFragmentsBuilder$ScoreComparator"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.search.vectorhighlight.SimpleBoundaryScanner"/>
+</Match>
+<Match>
+<Bug pattern="QF_QUESTIONABLE_FOR_LOOP"/>
+<Class name="org.apache.lucene.search.vectorhighlight.SimpleBoundaryScanner"/>
+<Method name="findEndOffset"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.spatial.bbox.BBoxStrategy"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.spatial.bbox.BBoxStrategy"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.spatial.composite.CompositeVerifyQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.spatial.composite.IntersectsRPTVerifyQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.spatial.prefix.AbstractPrefixTreeQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.spatial.prefix.HeatmapFacetCounter"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.spatial.prefix.PrefixTreeStrategy"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.spatial.prefix.tree.DateRangePrefixTree"/>
+<Method name="appendPadded"/>
+</Match>
+<Match>
+<Bug pattern="STCAL_STATIC_CALENDAR_INSTANCE"/>
+<Class name="org.apache.lucene.spatial.prefix.tree.DateRangePrefixTree"/>
+</Match>
+<Match>
+<Bug pattern="STCAL_STATIC_CALENDAR_INSTANCE"/>
+<Class name="org.apache.lucene.spatial.prefix.tree.DateRangePrefixTree"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree$NRCell"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree$SpanUnitsNRShape"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="MS_PKGPROTECT"/>
+<Class name="org.apache.lucene.spatial.prefix.tree.PackedQuadPrefixTree"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.spatial.serialized.SerializedDVStrategy$PredicateValueSourceQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.spatial.vector.DistanceValueSource$1"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.spatial.vector.PointVectorStrategy"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.spatial.vector.PointVectorStrategy"/>
+</Match>
+<Match>
+<Bug pattern="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS"/>
+<Class name="org.apache.lucene.spatial3d.Geo3DPointOutsideSortField"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.spatial3d.PointInGeo3DShapeQuery"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION"/>
+<Class name="org.apache.lucene.spatial3d.geom.DistanceStyle"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION"/>
+<Class name="org.apache.lucene.spatial3d.geom.DistanceStyle"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION"/>
+<Class name="org.apache.lucene.spatial3d.geom.DistanceStyle"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION"/>
+<Class name="org.apache.lucene.spatial3d.geom.DistanceStyle"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION"/>
+<Class name="org.apache.lucene.spatial3d.geom.DistanceStyle"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"/>
+<Class name="org.apache.lucene.spatial3d.geom.GeoComplexPolygon$ZTree"/>
+</Match>
+<Match>
+<Bug pattern="HE_EQUALS_NO_HASHCODE"/>
+<Class name="org.apache.lucene.spatial3d.geom.GeoDegeneratePoint"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.spatial3d.geom.GeoDegenerateVerticalLine"/>
+<Method name="getEdgePoints"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.spatial3d.geom.GeoPoint"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_BOOLEAN_RETURN_NULL"/>
+<Class name="org.apache.lucene.spatial3d.geom.GeoPolygonFactory"/>
+<Method name="isInsidePolygon"/>
+</Match>
+<Match>
+<Bug pattern="NP_BOOLEAN_RETURN_NULL"/>
+<Class name="org.apache.lucene.spatial3d.geom.GeoPolygonFactory"/>
+<Method name="findConvexPolygon"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH"/>
+<Class name="org.apache.lucene.spatial3d.geom.LatLonBounds"/>
+<Method name="addLongitudeBound"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.spatial3d.geom.XYZBounds"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.spatial3d.geom.XYZBounds"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.spatial3d.geom.XYZBounds"/>
+</Match>
+<Match>
+<Bug pattern="DMI_INVOKING_TOSTRING_ON_ARRAY"/>
+<Class name="org.apache.lucene.store.BufferedIndexInput"/>
+<Method name="setBufferSize"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.store.ByteArrayDataInput"/>
+<Method name="reset"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.store.ByteArrayDataOutput"/>
+<Method name="reset"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.store.ByteArrayIndexInput"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.store.ByteArrayIndexInput"/>
+<Method name="reset"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.store.FSDirectory"/>
+<Method name="listAll"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.store.GrowableByteArrayDataOutput"/>
+<Method name="getBytes"/>
+</Match>
+<Match>
+<Bug pattern="DE_MIGHT_IGNORE"/>
+<Class name="org.apache.lucene.store.MockDirectoryWrapper"/>
+<Method name="crash"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.store.MockDirectoryWrapper"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.store.MockDirectoryWrapper"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.store.MockDirectoryWrapper"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.store.MockDirectoryWrapper"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.store.MockDirectoryWrapper"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.store.MockDirectoryWrapper"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM_NO_SUPER_CALL"/>
+<Class name="org.apache.lucene.store.MockIndexInputWrapper"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE"/>
+<Class name="org.apache.lucene.store.NRTCachingDirectory"/>
+<Method name="toString"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT"/>
+<Class name="org.apache.lucene.store.RAFDirectory"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="IS2_INCONSISTENT_SYNC"/>
+<Class name="org.apache.lucene.store.RAMFile"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.store.SleepingLockWrapper"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.util.BaseDocIdSetTestCase$Dummy"/>
+</Match>
+<Match>
+<Bug pattern="URF_UNREAD_FIELD"/>
+<Class name="org.apache.lucene.util.BaseDocIdSetTestCase$Dummy"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.util.ByteBlockPool"/>
+</Match>
+<Match>
+<Bug pattern="MS_MUTABLE_ARRAY"/>
+<Class name="org.apache.lucene.util.ByteBlockPool"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.BytesRef"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.util.BytesRefBuilder"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.util.BytesRefHash"/>
+<Method name="rehash"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.CharsRef"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE"/>
+<Class name="org.apache.lucene.util.CharsRef$UTF16SortedAsUTF8Comparator"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.util.CharsRefBuilder"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.util.English"/>
+<Method name="longToEnglish"/>
+</Match>
+<Match>
+<Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"/>
+<Class name="org.apache.lucene.util.FixedBitSet"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.util.FixedBitSet"/>
+<Method name="getBits"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.FixedBitSet"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.util.IOUtils"/>
+<Method name="spinsLinux"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.util.IOUtils"/>
+<Method name="spinsLinux"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.util.IOUtils"/>
+<Method name="spinsLinux"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.IntsRef"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.util.IntsRefBuilder"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_DEREFERENCE_OF_READLINE_VALUE"/>
+<Class name="org.apache.lucene.util.LineFileDocs"/>
+<Method name="nextDoc"/>
+</Match>
+<Match>
+<Bug pattern="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE"/>
+<Class name="org.apache.lucene.util.LineFileDocs"/>
+<Method name="open"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_OBJECT"/>
+<Class name="org.apache.lucene.util.LineFileDocs"/>
+<Method name="nextDoc"/>
+</Match>
+<Match>
+<Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE"/>
+<Class name="org.apache.lucene.util.LongBitSet"/>
+<Method name="clone"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.util.LongBitSet"/>
+<Method name="getBits"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.LongBitSet"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.LongsRef"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="DM_STRING_CTOR"/>
+<Class name="org.apache.lucene.util.LuceneTestCase"/>
+<Method name="newField"/>
+</Match>
+<Match>
+<Bug pattern="MS_SHOULD_BE_FINAL"/>
+<Class name="org.apache.lucene.util.LuceneTestCase"/>
+</Match>
+<Match>
+<Bug pattern="NP_ALWAYS_NULL"/>
+<Class name="org.apache.lucene.util.LuceneTestCase"/>
+<Method name="newDirectoryImpl"/>
+</Match>
+<Match>
+<Bug pattern="NP_ALWAYS_NULL"/>
+<Class name="org.apache.lucene.util.LuceneTestCase"/>
+<Method name="newFSDirectory"/>
+</Match>
+<Match>
+<Bug pattern="UI_INHERITANCE_UNSAFE_GETRESOURCE"/>
+<Class name="org.apache.lucene.util.LuceneTestCase"/>
+<Method name="getDataPath"/>
+</Match>
+<Match>
+<Bug pattern="RC_REF_COMPARISON"/>
+<Class name="org.apache.lucene.util.RamUsageEstimator"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.util.RecyclingByteBlockAllocator"/>
+<Method name="freeBlocks"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.util.RecyclingByteBlockAllocator"/>
+<Method name="recycleByteBlocks"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.util.RecyclingIntBlockAllocator"/>
+<Method name="freeBlocks"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.util.RecyclingIntBlockAllocator"/>
+<Method name="getIntBlock"/>
+</Match>
+<Match>
+<Bug pattern="OS_OPEN_STREAM"/>
+<Class name="org.apache.lucene.util.SPIClassIterator"/>
+<Method name="loadNextProfile"/>
+</Match>
+<Match>
+<Bug pattern="CN_IDIOM"/>
+<Class name="org.apache.lucene.util.SetOnce"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.apache.lucene.util.Sorter"/>
+<Method name="mergeInPlace"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_BAD_SHIFT_AMOUNT"/>
+<Class name="org.apache.lucene.util.StringHelper"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="REC_CATCH_EXCEPTION"/>
+<Class name="org.apache.lucene.util.StringHelper"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_FALLTHROUGH"/>
+<Class name="org.apache.lucene.util.StringHelper"/>
+<Method name="murmurhash3_x86_32"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.util.StringHelper"/>
+<Method name="murmurhash3_x86_32"/>
+</Match>
+<Match>
+<Bug pattern="DE_MIGHT_IGNORE"/>
+<Class name="org.apache.lucene.util.TestRuleTemporaryFilesCleanup"/>
+<Method name="createTempDir"/>
+</Match>
+<Match>
+<Bug pattern="DE_MIGHT_IGNORE"/>
+<Class name="org.apache.lucene.util.TestRuleTemporaryFilesCleanup"/>
+<Method name="createTempFile"/>
+</Match>
+<Match>
+<Bug pattern="DE_MIGHT_IGNORE"/>
+<Class name="org.apache.lucene.util.TestRuleTemporaryFilesCleanup"/>
+<Method name="getPerTestClassTempDir"/>
+</Match>
+<Match>
+<Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
+<Class name="org.apache.lucene.util.TestUtil"/>
+<Method name="unzip"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.util.TestUtil"/>
+<Method name="randomHtmlishString"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.apache.lucene.util.TestUtil"/>
+<Method name="randomlyRecaseCodePoints"/>
+</Match>
+<Match>
+<Bug pattern="UC_USELESS_CONDITION"/>
+<Class name="org.apache.lucene.util.automaton.AutomatonTestUtil"/>
+<Method name="getRandomCodePoint"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.util.automaton.DaciukMihovAutomatonBuilder$State"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.util.automaton.DaciukMihovAutomatonBuilder$State"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.automaton.LevenshteinAutomata"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
+<Class name="org.apache.lucene.util.automaton.LevenshteinAutomata"/>
+<Method name="toAutomaton"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG"/>
+<Class name="org.apache.lucene.util.automaton.LevenshteinAutomata$ParametricDescription"/>
+<Method name="unpack"/>
+</Match>
+<Match>
+<Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS"/>
+<Class name="org.apache.lucene.util.automaton.Operations$PointTransitions"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.util.automaton.Operations$PointTransitions"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS"/>
+<Class name="org.apache.lucene.util.automaton.SortedIntSet"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EQ_UNUSUAL"/>
+<Class name="org.apache.lucene.util.automaton.SortedIntSet"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.automaton.SortedIntSet$FrozenIntSet"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS"/>
+<Class name="org.apache.lucene.util.automaton.SortedIntSet$FrozenIntSet"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT"/>
+<Class name="org.apache.lucene.util.bkd.DocIdsWriter"/>
+<Method name="writeDocIds"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.util.bkd.HeapPointReader"/>
+<Method name="packedValue"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.bkd.HeapPointReader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.bkd.HeapPointReader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.apache.lucene.util.bkd.HeapPointReader"/>
+<Method name="&lt;init&gt;"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.apache.lucene.util.bkd.OfflinePointReader"/>
+<Method name="packedValue"/>
+</Match>
+<Match>
+<Bug pattern="BC_VACUOUS_INSTANCEOF"/>
+<Class name="org.apache.lucene.util.fst.FSTTester$InputOutput"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS"/>
+<Class name="org.apache.lucene.util.fst.FSTTester$InputOutput"/>
+<Method name="compareTo"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.apache.lucene.util.fst.PositiveIntOutputs"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE"/>
+<Class name="org.apache.lucene.util.fst.PositiveIntOutputs"/>
+<Method name="add"/>
+</Match>
+<Match>
+<Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE"/>
+<Class name="org.apache.lucene.util.fst.PositiveIntOutputs"/>
+<Method name="common"/>
+</Match>
+<Match>
+<Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE"/>
+<Class name="org.apache.lucene.util.fst.PositiveIntOutputs"/>
+<Method name="valid"/>
+</Match>
+<Match>
+<Bug pattern="BC_VACUOUS_INSTANCEOF"/>
+<Class name="org.apache.lucene.util.fst.UpToTwoPositiveIntOutputs"/>
+<Method name="valid"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.apache.lucene.util.fst.UpToTwoPositiveIntOutputs"/>
+<Method name="&lt;clinit&gt;"/>
+</Match>
+<Match>
+<Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE"/>
+<Class name="org.apache.lucene.util.fst.UpToTwoPositiveIntOutputs"/>
+<Method name="add"/>
+</Match>
+<Match>
+<Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE"/>
+<Class name="org.apache.lucene.util.fst.UpToTwoPositiveIntOutputs"/>
+<Method name="valid"/>
+</Match>
+<Match>
+<Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS"/>
+<Class name="org.apache.lucene.util.graph.GraphTokenStreamFiniteStrings$FiniteStringsTokenStream"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT"/>
+<Class name="org.apache.lucene.util.mutable.MutableValue"/>
+<Method name="equals"/>
+</Match>
+<Match>
+<Bug pattern="ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT"/>
+<Class name="org.apache.lucene.util.packed.BulkOperationPacked"/>
+<Method name="encode"/>
+</Match>
+<Match>
+<Bug pattern="ME_MUTABLE_ENUM_FIELD"/>
+<Class name="org.apache.lucene.util.packed.PackedInts$Format"/>
+</Match>
+<Match>
+<Bug pattern="RV_RETURN_VALUE_IGNORED"/>
+<Class name="org.egothor.stemmer.Compile"/>
+<Method name="main"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.egothor.stemmer.Diff"/>
+<Method name="apply"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.egothor.stemmer.Diff"/>
+<Method name="exec"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.egothor.stemmer.Gener"/>
+<Method name="optimize"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.egothor.stemmer.Lift"/>
+<Method name="optimize"/>
+</Match>
+<Match>
+<Bug pattern="SS_SHOULD_BE_STATIC"/>
+<Class name="org.egothor.stemmer.MultiTrie"/>
+</Match>
+<Match>
+<Bug pattern="SS_SHOULD_BE_STATIC"/>
+<Class name="org.egothor.stemmer.MultiTrie"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.egothor.stemmer.MultiTrie2"/>
+<Method name="lengthPP"/>
+</Match>
+<Match>
+<Bug pattern="SIC_INNER_SHOULD_BE_STATIC"/>
+<Class name="org.egothor.stemmer.Reduce$Remap"/>
+</Match>
+<Match>
+<Bug pattern="DLS_DEAD_LOCAL_STORE"/>
+<Class name="org.egothor.stemmer.Trie"/>
+<Method name="getFully"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.egothor.stemmer.Trie"/>
+<Method name="add"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.egothor.stemmer.Trie"/>
+<Method name="getAll"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.egothor.stemmer.Trie"/>
+<Method name="getFully"/>
+</Match>
+<Match>
+<Bug pattern="DM_NUMBER_CTOR"/>
+<Class name="org.egothor.stemmer.Trie"/>
+<Method name="getLastOnPath"/>
+</Match>
+<Match>
+<Bug pattern="SIC_INNER_SHOULD_BE_STATIC"/>
+<Class name="org.egothor.stemmer.Trie$StrEnum"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP"/>
+<Class name="org.tartarus.snowball.SnowballProgram"/>
+<Method name="getCurrentBuffer"/>
+</Match>
+<Match>
+<Bug pattern="EI_EXPOSE_REP2"/>
+<Class name="org.tartarus.snowball.SnowballProgram"/>
+<Method name="setCurrent"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.ArmenianStemmer"/>
+<Method name="r_adjective"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.ArmenianStemmer"/>
+<Method name="r_ending"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.ArmenianStemmer"/>
+<Method name="r_noun"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.ArmenianStemmer"/>
+<Method name="r_verb"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.BasqueStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.BasqueStemmer"/>
+<Method name="r_aditzak"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.BasqueStemmer"/>
+<Method name="r_adjetiboak"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.BasqueStemmer"/>
+<Method name="r_izenak"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.CatalanStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.CatalanStemmer"/>
+<Method name="r_attached_pronoun"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.CatalanStemmer"/>
+<Method name="r_residual_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.CatalanStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.CatalanStemmer"/>
+<Method name="r_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.DanishStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.DanishStemmer"/>
+<Method name="r_main_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.DanishStemmer"/>
+<Method name="r_other_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.DutchStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.DutchStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.EnglishStemmer"/>
+<Method name="r_Step_1a"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.EnglishStemmer"/>
+<Method name="r_Step_1b"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.EnglishStemmer"/>
+<Method name="r_Step_2"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.EnglishStemmer"/>
+<Method name="r_Step_3"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.EnglishStemmer"/>
+<Method name="r_Step_4"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.EnglishStemmer"/>
+<Method name="r_Step_5"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.EnglishStemmer"/>
+<Method name="r_exception1"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.FinnishStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.FinnishStemmer"/>
+<Method name="r_other_endings"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.FinnishStemmer"/>
+<Method name="r_possessive"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.FinnishStemmer"/>
+<Method name="r_t_plural"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.FrenchStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.FrenchStemmer"/>
+<Method name="r_i_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.FrenchStemmer"/>
+<Method name="r_residual_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.FrenchStemmer"/>
+<Method name="r_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.German2Stemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH"/>
+<Class name="org.tartarus.snowball.ext.German2Stemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.German2Stemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.GermanStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH"/>
+<Class name="org.tartarus.snowball.ext.GermanStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.GermanStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="r_case_other"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="r_case_special"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="r_owned"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="r_plur_owner"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="r_plural"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="r_sing_owner"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.HungarianStemmer"/>
+<Method name="r_v_ending"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.IrishStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.IrishStemmer"/>
+<Method name="r_deriv"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.IrishStemmer"/>
+<Method name="r_initial_morph"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.IrishStemmer"/>
+<Method name="r_noun_sfx"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.IrishStemmer"/>
+<Method name="r_verb_sfx"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.ItalianStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.ItalianStemmer"/>
+<Method name="r_attached_pronoun"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.ItalianStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.ItalianStemmer"/>
+<Method name="r_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.KpStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.KpStemmer"/>
+<Method name="r_Step_1"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.KpStemmer"/>
+<Method name="r_Step_1c"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.KpStemmer"/>
+<Method name="r_Step_2"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.KpStemmer"/>
+<Method name="r_Step_3"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.KpStemmer"/>
+<Method name="r_Step_6"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.KpStemmer"/>
+<Method name="r_Step_7"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.LithuanianStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.LithuanianStemmer"/>
+<Method name="r_fix_chdz"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.LithuanianStemmer"/>
+<Method name="r_fix_conflicts"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.LithuanianStemmer"/>
+<Method name="r_fix_gd"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.LovinsStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.LovinsStemmer"/>
+<Method name="r_endings"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.LovinsStemmer"/>
+<Method name="r_respell"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.NorwegianStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.NorwegianStemmer"/>
+<Method name="r_main_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.NorwegianStemmer"/>
+<Method name="r_other_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.PorterStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PorterStemmer"/>
+<Method name="r_Step_1a"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PorterStemmer"/>
+<Method name="r_Step_1b"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PorterStemmer"/>
+<Method name="r_Step_2"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PorterStemmer"/>
+<Method name="r_Step_3"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PorterStemmer"/>
+<Method name="r_Step_4"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.PortugueseStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PortugueseStemmer"/>
+<Method name="r_residual_form"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PortugueseStemmer"/>
+<Method name="r_residual_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PortugueseStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.PortugueseStemmer"/>
+<Method name="r_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.RomanianStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RomanianStemmer"/>
+<Method name="r_combo_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RomanianStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RomanianStemmer"/>
+<Method name="r_step_0"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RomanianStemmer"/>
+<Method name="r_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RomanianStemmer"/>
+<Method name="r_vowel_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_adjectival"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_adjective"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_derivational"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_noun"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_perfective_gerund"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_reflexive"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_tidy_up"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.RussianStemmer"/>
+<Method name="r_verb"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.SpanishStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.SpanishStemmer"/>
+<Method name="r_attached_pronoun"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.SpanishStemmer"/>
+<Method name="r_residual_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.SpanishStemmer"/>
+<Method name="r_standard_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.SpanishStemmer"/>
+<Method name="r_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.SpanishStemmer"/>
+<Method name="r_y_verb_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.SwedishStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.SwedishStemmer"/>
+<Method name="r_main_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.SwedishStemmer"/>
+<Method name="r_other_suffix"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.TurkishStemmer"/>
+<Method name="r_postlude"/>
+</Match>
+<Match>
+<Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT"/>
+<Class name="org.tartarus.snowball.ext.TurkishStemmer"/>
+<Method name="stem"/>
+</Match>
+<Match>
+<Bug pattern="SF_SWITCH_NO_DEFAULT"/>
+<Class name="org.tartarus.snowball.ext.TurkishStemmer"/>
+<Method name="r_post_process_last_consonants"/>
+</Match>
+</FindBugsFilter>
diff --git a/lucene/tools/findbugs/findbugs-exclude.xsl b/lucene/tools/findbugs/findbugs-exclude.xsl
new file mode 100644
index 0000000..6a0127a
--- /dev/null
+++ b/lucene/tools/findbugs/findbugs-exclude.xsl
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+  <xsl:output method="xml" indent="yes"/>
+  <xsl:template match="/">
+    <FindBugsFilter>
+      <xsl:for-each select="BugCollection/BugInstance">
+        <Match>
+          <Bug><xsl:attribute name="pattern"><xsl:value-of select="@type"/></xsl:attribute></Bug>
+          <Class><xsl:attribute name="name"><xsl:value-of select="Class/@classname"/></xsl:attribute></Class>
+          <xsl:if test="Method">
+            <Method><xsl:attribute name="name"><xsl:value-of select="Method/@name"/></xsl:attribute></Method>
+          </xsl:if>
+        </Match>
+      </xsl:for-each>
+    </FindBugsFilter>
+  </xsl:template>
+</xsl:stylesheet>
