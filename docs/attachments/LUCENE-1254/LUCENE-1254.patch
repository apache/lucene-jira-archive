Index: src/test/org/apache/lucene/index/TestAddIndexesNoOptimize.java
===================================================================
--- src/test/org/apache/lucene/index/TestAddIndexesNoOptimize.java	(revision 642936)
+++ src/test/org/apache/lucene/index/TestAddIndexesNoOptimize.java	(working copy)
@@ -262,21 +262,7 @@
     writer.close();
 
     writer = newWriter(dir, false);
-    int maxMergeDocs = writer.getMaxMergeDocs();
-    writer.setMaxMergeDocs(99);
-
     try {
-      // upper bound cannot exceed maxMergeDocs
-      writer.addIndexesNoOptimize(new Directory[] { aux });
-      assertTrue(false);
-    }
-    catch (IllegalArgumentException e) {
-      assertEquals(100, writer.docCount());
-      assertEquals(1, writer.getSegmentCount());
-    }
-
-    writer.setMaxMergeDocs(maxMergeDocs);
-    try {
       // cannot add self
       writer.addIndexesNoOptimize(new Directory[] { aux, dir });
       assertTrue(false);
Index: src/java/org/apache/lucene/index/LogMergePolicy.java
===================================================================
--- src/java/org/apache/lucene/index/LogMergePolicy.java	(revision 642936)
+++ src/java/org/apache/lucene/index/LogMergePolicy.java	(working copy)
@@ -317,13 +317,6 @@
       final SegmentInfo info = infos.info(i);
       long size = size(info);
 
-      // Refuse to import a segment that's too large
-      if (info.docCount > maxMergeDocs && info.dir != directory)
-        throw new IllegalArgumentException("Segment is too large (" + info.docCount + " docs vs max docs " + maxMergeDocs + ")");
-
-      if (size >= maxMergeSize && info.dir != directory)
-        throw new IllegalArgumentException("Segment is too large (" + size + " vs max size " + maxMergeSize + ")");
-
       // Floor tiny segments
       if (size < 1)
         size = 1;
