diff --git a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java
index 89f5442..2a2454e 100644
--- a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java
+++ b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java
@@ -648,12 +648,12 @@ final class DefaultIndexingChain extends DocConsumer {
         byte[] prefix = new byte[30];
         BytesRef bigTerm = invertState.termAttribute.getBytesRef();
         System.arraycopy(bigTerm.bytes, bigTerm.offset, prefix, 0, 30);
-        String msg = "Document contains at least one immense term in field=\"" + fieldInfo.name + "\" (whose UTF8 encoding is longer than the max length " + DocumentsWriterPerThread.MAX_TERM_LENGTH_UTF8 + "), all of which were skipped.  Please correct the analyzer to not produce such terms.  The prefix of the first immense term is: '" + Arrays.toString(prefix) + "...'";
+        String msg = "Document contains at least one immense term in field=\"" + fieldInfo.name + "\" (whose UTF8 encoding is longer than the max length " + DocumentsWriterPerThread.MAX_TERM_LENGTH_UTF8 + "), all of which were skipped.  Please correct the analyzer to not produce such terms.  The prefix of the first immense term is: '" + Arrays.toString(prefix) + "...', original message: " + e.getMessage();
         if (docState.infoStream.isEnabled("IW")) {
           docState.infoStream.message("IW", "ERROR: " + msg);
         }
         // Document will be deleted above:
-        throw new IllegalArgumentException(msg);
+        throw new IllegalArgumentException(msg, e);
       } finally {
         if (succeededInProcessingField == false && aborting) {
           docState.docWriter.setAborting();
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestExceedMaxTermLength.java b/lucene/core/src/test/org/apache/lucene/index/TestExceedMaxTermLength.java
index 8da74ae..05773bf 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestExceedMaxTermLength.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestExceedMaxTermLength.java
@@ -97,6 +97,8 @@ public class TestExceedMaxTermLength extends LuceneTestCase {
                    msg.contains(maxLengthMsg));
         assertTrue("IllegalArgumentException didn't mention field name ("+name+"): " + msg,
                    msg.contains(name));
+        assertTrue("IllegalArgumentException didn't mention original message: " + msg,
+            msg.contains("bytes can be at most") && msg.contains("in length; got"));
       }
     } finally {
       w.shutdown();
