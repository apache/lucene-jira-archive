Index: src/test/org/apache/lucene/index/TestStressIndexing2.java
===================================================================
--- src/test/org/apache/lucene/index/TestStressIndexing2.java	(revision 634302)
+++ src/test/org/apache/lucene/index/TestStressIndexing2.java	(working copy)
@@ -19,6 +19,7 @@
 import org.apache.lucene.analysis.*;
 
 import org.apache.lucene.util.LuceneTestCase;
+import org.apache.lucene.search.TermQuery;
 
 import java.util.*;
 import java.io.ByteArrayOutputStream;
@@ -420,14 +421,16 @@
       return new String(arr);
     }
 
+    public String getIdString() {
+      return Integer.toString(base + nextInt(range));
+    }
 
     public void indexDoc() throws IOException {
       Document d = new Document();
 
       ArrayList fields = new ArrayList();      
-      int id = base + nextInt(range);
-      String idString = ""+id;
-      Field idField =  new Field("id", idString, Field.Store.YES, Field.Index.NO_NORMS);
+      String idString = getIdString();
+      Field idField =  new Field(idTerm.field(), idString, Field.Store.YES, Field.Index.NO_NORMS);
       fields.add(idField);
 
       int nFields = nextInt(maxFields);
@@ -480,11 +483,30 @@
       docs.put(idString, d);
     }
 
+    public void deleteDoc() throws IOException {
+      String idString = getIdString();
+      w.deleteDocuments(idTerm.createTerm(idString));
+      docs.remove(idString);
+    }
+
+    public void deleteByQuery() throws IOException {
+      String idString = getIdString();
+      w.deleteDocuments(new TermQuery(idTerm.createTerm(idString)));
+      docs.remove(idString);
+    }
+
     public void run() {
       try {
         r = new Random(base+range+seed);
         for (int i=0; i<iterations; i++) {
-          indexDoc();
+          int what = nextInt(100);
+          if (what < 5) {
+            deleteDoc();
+          } else if (what < 10) {
+            deleteByQuery();
+          } else {
+            indexDoc();
+          }
         }
       } catch (Exception e) {
         e.printStackTrace();
