Index: contrib/benchmark/CHANGES.txt
===================================================================
--- contrib/benchmark/CHANGES.txt	(revision 833763)
+++ contrib/benchmark/CHANGES.txt	(working copy)
@@ -4,6 +4,10 @@
 
 $Id:$
 
+11/08/2009
+  LUCENE-2044: Added delete.percent.rand.seed to seed the Random instance
+  used by DeleteByPercentTask.  (Mike McCandless)
+
 11/07/2009
   LUCENE-2043: Fix CommitIndexTask to also commit pending IndexReader
   changes (Mike McCandless)
Index: contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/DeleteByPercentTask.java
===================================================================
--- contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/DeleteByPercentTask.java	(revision 833603)
+++ contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/DeleteByPercentTask.java	(working copy)
@@ -32,14 +32,21 @@
  * <p><b>NOTE</b>: the param is an absolute percentage of
  * maxDoc().  This means if you delete 50%, and then delete
  * 50% again, the 2nd delete will do nothing.
+ *
+ * <p> Parameters:
+ * <ul>
+ * <li> delete.percent.rand.seed - defines the seed to
+ * initialize Random (default 1717)
+ * </ul>
  */
 public class DeleteByPercentTask extends PerfTask {
   double percent;
   int numDeleted = 0;
-  Random random = new Random(System.currentTimeMillis());
+  final Random random;
 
   public DeleteByPercentTask(PerfRunData runData) {
     super(runData);
+    random = new Random(runData.getConfig().get("delete.percent.rand.seed", 1717));
   }
   
   public void setup() throws Exception {
