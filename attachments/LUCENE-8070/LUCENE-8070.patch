Index: src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.java	(date 1511921766000)
+++ src/java/org/apache/lucene/spatial3d/geom/GeoExactCircle.java	(revision )
@@ -62,7 +62,9 @@
       throw new IllegalArgumentException("Cutoff angle out of bounds");
     if (cutoffAngle < Vector.MINIMUM_RESOLUTION)
       throw new IllegalArgumentException("Cutoff angle cannot be effectively zero");
-    
+    if (planetModel.minimumPoleDistance - cutoffAngle  < Vector.MINIMUM_RESOLUTION)
+      throw new IllegalArgumentException("Cutoff angle out of bounds. It cannot be bigger than " +  planetModel.minimumPoleDistance + " for this planet model");
+
     this.center = new GeoPoint(planetModel, lat, lon);
     this.cutoffAngle = cutoffAngle;
 
@@ -310,7 +312,7 @@
       // Construct the plane going through the three given points
       this.plane = SidedPlane.constructNormalizedThreePointSidedPlane(center, endPoint1, endPoint2, middlePoint);
       if (this.plane == null) {
-        throw new IllegalArgumentException("Either circle is too large to fit on ellipsoid or accuracy is too high; could not construct a plane with endPoint1="+endPoint1+" bearing "+point1Bearing+", endPoint2="+endPoint2+" bearing "+point2Bearing+", middle="+middlePoint+" bearing "+middlePointBearing);
+        throw new IllegalArgumentException("Either circle is too small or accuracy is too high; could not construct a plane with endPoint1="+endPoint1+" bearing "+point1Bearing+", endPoint2="+endPoint2+" bearing "+point2Bearing+", middle="+middlePoint+" bearing "+middlePointBearing);
       }
       if (plane.isWithin(center) == false || !plane.evaluateIsZero(endPoint1) || !plane.evaluateIsZero(endPoint2) || !plane.evaluateIsZero(middlePoint))
         throw new IllegalStateException("SidedPlane constructor built a bad plane!!");
@@ -322,7 +324,6 @@
         " end point 2 = " + endPoint2 + " bearing 2 = " + point2Bearing + 
         " middle point = " + middlePoint + " middle bearing = " + middlePointBearing + "}";
     }
-
   }
 
   /** A  description of a section of circle.
Index: src/java/org/apache/lucene/spatial3d/geom/PlanetModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/java/org/apache/lucene/spatial3d/geom/PlanetModel.java	(date 1511921766000)
+++ src/java/org/apache/lucene/spatial3d/geom/PlanetModel.java	(revision )
@@ -77,6 +77,8 @@
   public final GeoPoint MIN_Y_POLE;
   /** Max Y pole */
   public final GeoPoint MAX_Y_POLE;
+  /** Minimum surface distance between poles */
+  public final double minimumPoleDistance;
   
   /** Constructor.
    * @param ab is the x/y scaling factor.
@@ -97,6 +99,7 @@
     this.MAX_X_POLE = new GeoPoint(ab, 1.0, 0.0, 0.0, 0.0, 0.0);
     this.MIN_Y_POLE = new GeoPoint(ab, 0.0, -1.0, 0.0, 0.0, -Math.PI * 0.5);
     this.MAX_Y_POLE = new GeoPoint(ab, 0.0, 1.0, 0.0, 0.0, Math.PI * 0.5);
+    this.minimumPoleDistance  = Math.min(surfaceDistance(NORTH_POLE, SOUTH_POLE), surfaceDistance(MIN_X_POLE, MAX_X_POLE));
   }
 
   /** Deserialization constructor.
