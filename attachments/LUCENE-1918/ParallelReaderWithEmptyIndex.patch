Index: src/java/org/apache/lucene/index/TermVectorsWriter.java
===================================================================
--- src/java/org/apache/lucene/index/TermVectorsWriter.java	(revision 816372)
+++ src/java/org/apache/lucene/index/TermVectorsWriter.java	(working copy)
@@ -156,11 +156,15 @@
       }
 
       // 2nd pass: write field pointers to tvd
-      long lastFieldPointer = fieldPointers[0];
-      for (int i=1; i<numFields; i++) {
-        final long fieldPointer = fieldPointers[i];
-        tvd.writeVLong(fieldPointer-lastFieldPointer);
-        lastFieldPointer = fieldPointer;
+      if(numFields > 1) {
+    	  // would throw an ArrayIndexOutOfBoundsException if numFields == 0
+	      long lastFieldPointer = fieldPointers[0];
+
+	      for (int i=1; i<numFields; i++) {
+	        final long fieldPointer = fieldPointers[i];
+	        tvd.writeVLong(fieldPointer-lastFieldPointer);
+	        lastFieldPointer = fieldPointer;
+	      }
       }
     } else
       tvd.writeVInt(0);
Index: src/java/org/apache/lucene/index/ParallelReader.java
===================================================================
--- src/java/org/apache/lucene/index/ParallelReader.java	(revision 816372)
+++ src/java/org/apache/lucene/index/ParallelReader.java	(working copy)
@@ -472,7 +472,12 @@
     private TermEnum termEnum;
 
     public ParallelTermEnum() throws IOException {
-      field = (String)fieldToReader.firstKey();
+      try {
+        field = (String)fieldToReader.firstKey();
+      } catch(NoSuchElementException e) {
+        // No fields, so keep field == null, termEnum == null
+        return;
+      }
       if (field != null)
         termEnum = ((IndexReader)fieldToReader.get(field)).terms();
     }
