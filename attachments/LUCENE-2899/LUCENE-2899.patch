diff --git a/dev-tools/idea/.idea/ant.xml b/dev-tools/idea/.idea/ant.xml
index 8723e63de9..6c7bc8c6c5 100644
--- a/dev-tools/idea/.idea/ant.xml
+++ b/dev-tools/idea/.idea/ant.xml
@@ -11,6 +11,7 @@
     <buildFile url="file://$PROJECT_DIR$/lucene/analysis/icu/build.xml" />
     <buildFile url="file://$PROJECT_DIR$/lucene/analysis/kuromoji/build.xml" />
     <buildFile url="file://$PROJECT_DIR$/lucene/analysis/morfologik/build.xml" />
+    <buildFile url="file://$PROJECT_DIR$/lucene/analysis/opennlp/build.xml" />
     <buildFile url="file://$PROJECT_DIR$/lucene/analysis/phonetic/build.xml" />
     <buildFile url="file://$PROJECT_DIR$/lucene/analysis/smartcn/build.xml" />
     <buildFile url="file://$PROJECT_DIR$/lucene/analysis/stempel/build.xml" />
diff --git a/dev-tools/idea/.idea/modules.xml b/dev-tools/idea/.idea/modules.xml
index 7ad2a78144..4df1000bc3 100644
--- a/dev-tools/idea/.idea/modules.xml
+++ b/dev-tools/idea/.idea/modules.xml
@@ -15,6 +15,7 @@
       <module group="Lucene/Analysis" filepath="$PROJECT_DIR$/lucene/analysis/icu/icu.iml" />
       <module group="Lucene/Analysis" filepath="$PROJECT_DIR$/lucene/analysis/kuromoji/kuromoji.iml" />
       <module group="Lucene/Analysis" filepath="$PROJECT_DIR$/lucene/analysis/morfologik/morfologik.iml" />
+      <module group="Lucene/Analysis" filepath="$PROJECT_DIR$/lucene/analysis/opennlp/opennlp.iml" />
       <module group="Lucene/Analysis" filepath="$PROJECT_DIR$/lucene/analysis/phonetic/phonetic.iml" />
       <module group="Lucene/Analysis" filepath="$PROJECT_DIR$/lucene/analysis/smartcn/smartcn.iml" />
       <module group="Lucene/Analysis" filepath="$PROJECT_DIR$/lucene/analysis/stempel/stempel.iml" />
diff --git a/dev-tools/idea/.idea/workspace.xml b/dev-tools/idea/.idea/workspace.xml
index e22108f04b..11794af5fc 100644
--- a/dev-tools/idea/.idea/workspace.xml
+++ b/dev-tools/idea/.idea/workspace.xml
@@ -44,6 +44,14 @@
       <option name="TEST_SEARCH_SCOPE"><value defaultName="singleModule" /></option>
       <patterns><pattern testClass=".*\.Test[^.]*|.*\.[^.]*Test" /></patterns>
     </configuration>
+    <configuration default="false" name="Module analyzers-opennlp" type="JUnit" factoryName="JUnit">
+      <module name="opennlp" />
+      <option name="TEST_OBJECT" value="pattern" />
+      <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$/idea-build/lucene/analysis/opennlp" />
+      <option name="VM_PARAMETERS" value="-ea -DtempDir=temp" />
+      <option name="TEST_SEARCH_SCOPE"><value defaultName="singleModule" /></option>
+      <patterns><pattern testClass=".*\.Test[^.]*|.*\.[^.]*Test" /></patterns>
+    </configuration>
     <configuration default="false" name="Module analyzers-phonetic" type="JUnit" factoryName="JUnit">
       <module name="phonetic" />
       <option name="TEST_OBJECT" value="pattern" />
@@ -333,48 +341,49 @@
       <patterns><pattern testClass=".*\.Test[^.]*|.*\.[^.]*Test" /></patterns>
     </configuration>
 
-    <list size="41">
+    <list size="42">
       <item index="0" class="java.lang.String" itemvalue="JUnit.Lucene core" />
       <item index="1" class="java.lang.String" itemvalue="JUnit.Module analyzers-common" />
       <item index="2" class="java.lang.String" itemvalue="JUnit.Module analyzers-icu" />
       <item index="3" class="java.lang.String" itemvalue="JUnit.Module analyzers-kuromoji" />
       <item index="4" class="java.lang.String" itemvalue="JUnit.Module analyzers-morfologik" />
-      <item index="5" class="java.lang.String" itemvalue="JUnit.Module analyzers-phonetic" />
-      <item index="6" class="java.lang.String" itemvalue="JUnit.Module analyzers-smartcn" />
-      <item index="7" class="java.lang.String" itemvalue="JUnit.Module analyzers-stempel" />
-      <item index="8" class="java.lang.String" itemvalue="JUnit.Module analyzers-uima" />
-      <item index="9" class="java.lang.String" itemvalue="JUnit.Module backward-codecs" />
-      <item index="10" class="java.lang.String" itemvalue="JUnit.Module benchmark" />
-      <item index="11" class="java.lang.String" itemvalue="JUnit.Module classification" />
-      <item index="12" class="java.lang.String" itemvalue="JUnit.Module codecs" />
-      <item index="13" class="java.lang.String" itemvalue="JUnit.Module expressions" />
-      <item index="14" class="java.lang.String" itemvalue="JUnit.Module facet" />
-      <item index="15" class="java.lang.String" itemvalue="JUnit.Module grouping" />
-      <item index="16" class="java.lang.String" itemvalue="JUnit.Module highlighter" />
-      <item index="17" class="java.lang.String" itemvalue="JUnit.Module join" />
-      <item index="18" class="java.lang.String" itemvalue="JUnit.Module memory" />
-      <item index="19" class="java.lang.String" itemvalue="JUnit.Module misc" />
-      <item index="20" class="java.lang.String" itemvalue="JUnit.Module queries" />
-      <item index="21" class="java.lang.String" itemvalue="JUnit.Module queryparser" />
-      <item index="22" class="java.lang.String" itemvalue="JUnit.Module replicator" />
-      <item index="23" class="java.lang.String" itemvalue="JUnit.Module sandbox" />
-      <item index="24" class="java.lang.String" itemvalue="JUnit.Module spatial" />
-      <item index="25" class="java.lang.String" itemvalue="JUnit.Module spatial-extras" />
-      <item index="26" class="java.lang.String" itemvalue="JUnit.Module spatial3d" />
-      <item index="27" class="java.lang.String" itemvalue="JUnit.Module suggest" />
-      <item index="28" class="java.lang.String" itemvalue="Application.solrcloud" />
-      <item index="29" class="java.lang.String" itemvalue="JUnit.Solr core" />
-      <item index="30" class="java.lang.String" itemvalue="JUnit.Solrj" />
-      <item index="31" class="java.lang.String" itemvalue="JUnit.Solr analysis-extras contrib" />
-      <item index="32" class="java.lang.String" itemvalue="JUnit.Solr analytics contrib" />
-      <item index="33" class="java.lang.String" itemvalue="JUnit.Solr clustering contrib" />
-      <item index="34" class="java.lang.String" itemvalue="JUnit.Solr dataimporthandler contrib" />
-      <item index="35" class="java.lang.String" itemvalue="JUnit.Solr dataimporthandler-extras contrib" />
-      <item index="36" class="java.lang.String" itemvalue="JUnit.Solr extraction contrib" />
-      <item index="37" class="java.lang.String" itemvalue="JUnit.Solr langid contrib" />
-      <item index="38" class="java.lang.String" itemvalue="JUnit.Solr ltr contrib" />
-      <item index="39" class="java.lang.String" itemvalue="JUnit.Solr uima contrib" />
-      <item index="40" class="java.lang.String" itemvalue="JUnit.Solr velocity contrib" />
+      <item index="5" class="java.lang.String" itemvalue="JUnit.Module analyzers-opennlp" />
+      <item index="6" class="java.lang.String" itemvalue="JUnit.Module analyzers-phonetic" />
+      <item index="7" class="java.lang.String" itemvalue="JUnit.Module analyzers-smartcn" />
+      <item index="8" class="java.lang.String" itemvalue="JUnit.Module analyzers-stempel" />
+      <item index="9" class="java.lang.String" itemvalue="JUnit.Module analyzers-uima" />
+      <item index="10" class="java.lang.String" itemvalue="JUnit.Module backward-codecs" />
+      <item index="11" class="java.lang.String" itemvalue="JUnit.Module benchmark" />
+      <item index="12" class="java.lang.String" itemvalue="JUnit.Module classification" />
+      <item index="13" class="java.lang.String" itemvalue="JUnit.Module codecs" />
+      <item index="14" class="java.lang.String" itemvalue="JUnit.Module expressions" />
+      <item index="15" class="java.lang.String" itemvalue="JUnit.Module facet" />
+      <item index="16" class="java.lang.String" itemvalue="JUnit.Module grouping" />
+      <item index="17" class="java.lang.String" itemvalue="JUnit.Module highlighter" />
+      <item index="18" class="java.lang.String" itemvalue="JUnit.Module join" />
+      <item index="19" class="java.lang.String" itemvalue="JUnit.Module memory" />
+      <item index="20" class="java.lang.String" itemvalue="JUnit.Module misc" />
+      <item index="21" class="java.lang.String" itemvalue="JUnit.Module queries" />
+      <item index="22" class="java.lang.String" itemvalue="JUnit.Module queryparser" />
+      <item index="23" class="java.lang.String" itemvalue="JUnit.Module replicator" />
+      <item index="24" class="java.lang.String" itemvalue="JUnit.Module sandbox" />
+      <item index="25" class="java.lang.String" itemvalue="JUnit.Module spatial" />
+      <item index="26" class="java.lang.String" itemvalue="JUnit.Module spatial-extras" />
+      <item index="27" class="java.lang.String" itemvalue="JUnit.Module spatial3d" />
+      <item index="28" class="java.lang.String" itemvalue="JUnit.Module suggest" />
+      <item index="29" class="java.lang.String" itemvalue="Application.solrcloud" />
+      <item index="30" class="java.lang.String" itemvalue="JUnit.Solr core" />
+      <item index="31" class="java.lang.String" itemvalue="JUnit.Solrj" />
+      <item index="32" class="java.lang.String" itemvalue="JUnit.Solr analysis-extras contrib" />
+      <item index="33" class="java.lang.String" itemvalue="JUnit.Solr analytics contrib" />
+      <item index="34" class="java.lang.String" itemvalue="JUnit.Solr clustering contrib" />
+      <item index="35" class="java.lang.String" itemvalue="JUnit.Solr dataimporthandler contrib" />
+      <item index="36" class="java.lang.String" itemvalue="JUnit.Solr dataimporthandler-extras contrib" />
+      <item index="37" class="java.lang.String" itemvalue="JUnit.Solr extraction contrib" />
+      <item index="38" class="java.lang.String" itemvalue="JUnit.Solr langid contrib" />
+      <item index="39" class="java.lang.String" itemvalue="JUnit.Solr ltr contrib" />
+      <item index="40" class="java.lang.String" itemvalue="JUnit.Solr uima contrib" />
+      <item index="41" class="java.lang.String" itemvalue="JUnit.Solr velocity contrib" />
     </list>
   </component>
 </project>
diff --git a/dev-tools/idea/lucene/analysis/opennlp/opennlp.iml b/dev-tools/idea/lucene/analysis/opennlp/opennlp.iml
new file mode 100644
index 0000000000..7725065ec8
--- /dev/null
+++ b/dev-tools/idea/lucene/analysis/opennlp/opennlp.iml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/../../../idea-build/lucene/analysis/opennlp/classes/java" />
+    <output-test url="file://$MODULE_DIR$/../../../idea-build/lucene/analysis/opennlp/classes/test" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test-files" type="java-test-resource" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="file://$MODULE_DIR$/lib" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+        <jarDirectory url="file://$MODULE_DIR$/lib" recursive="false" />
+      </library>
+    </orderEntry>
+    <orderEntry type="library" scope="TEST" name="JUnit" level="project" />
+    <orderEntry type="module" scope="TEST" module-name="lucene-test-framework" />
+    <orderEntry type="module" module-name="analysis-common" />
+    <orderEntry type="module" module-name="lucene-core" />
+  </component>
+</module>
diff --git a/dev-tools/idea/solr/contrib/analysis-extras/analysis-extras.iml b/dev-tools/idea/solr/contrib/analysis-extras/analysis-extras.iml
index 287b46a9b1..7c0c0c1602 100644
--- a/dev-tools/idea/solr/contrib/analysis-extras/analysis-extras.iml
+++ b/dev-tools/idea/solr/contrib/analysis-extras/analysis-extras.iml
@@ -37,5 +37,6 @@
     <orderEntry type="module" module-name="lucene-core" />
     <orderEntry type="module" module-name="misc" />
     <orderEntry type="module" module-name="sandbox" />
+    <orderEntry type="module" module-name="opennlp" />
   </component>
 </module>
diff --git a/dev-tools/maven/lucene/analysis/opennlp/pom.xml.template b/dev-tools/maven/lucene/analysis/opennlp/pom.xml.template
new file mode 100644
index 0000000000..4109a0ab99
--- /dev/null
+++ b/dev-tools/maven/lucene/analysis/opennlp/pom.xml.template
@@ -0,0 +1,78 @@
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one
+  or more contributor license agreements.  See the NOTICE file
+  distributed with this work for additional information
+  regarding copyright ownership.  The ASF licenses this file
+  to you under the Apache License, Version 2.0 (the
+  "License"); you may not use this file except in compliance
+  with the License.  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing,
+  software distributed under the License is distributed on an
+  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+  KIND, either express or implied.  See the License for the
+  specific language governing permissions and limitations
+  under the License.
+-->
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+  <parent>
+    <groupId>org.apache.lucene</groupId>
+    <artifactId>lucene-parent</artifactId>
+    <version>@version@</version>
+    <relativePath>../../pom.xml</relativePath>
+  </parent>
+  <groupId>org.apache.lucene</groupId>
+  <artifactId>lucene-analyzers-opennlp</artifactId>
+  <packaging>jar</packaging>
+  <name>Lucene OpenNLP integration</name>
+  <description>
+    Lucene OpenNLP integration
+  </description>
+  <properties>
+    <module-directory>lucene/analysis/opennlp</module-directory>
+    <relative-top-level>../../../..</relative-top-level>
+    <module-path>${relative-top-level}/${module-directory}</module-path>
+  </properties>
+  <scm>
+    <connection>scm:git:${vc-anonymous-base-url}</connection>
+    <developerConnection>scm:git:${vc-dev-base-url}</developerConnection>
+    <url>${vc-browse-base-url};f=${module-directory}</url>
+  </scm>
+  <dependencies>
+    <dependency>
+      <!-- lucene-test-framework dependency must be declared before lucene-core -->
+      <groupId>org.apache.lucene</groupId>
+      <artifactId>lucene-test-framework</artifactId>
+      <scope>test</scope>
+    </dependency>
+    @lucene-analyzers-opennlp.internal.dependencies@
+    @lucene-analyzers-opennlp.external.dependencies@
+    @lucene-analyzers-opennlp.internal.test.dependencies@
+    @lucene-analyzers-opennlp.external.test.dependencies@
+  </dependencies>
+  <build>
+    <sourceDirectory>${module-path}/src/java</sourceDirectory>
+    <testSourceDirectory>${module-path}/src/test</testSourceDirectory>
+    <resources>
+      <resource>
+        <directory>${module-path}/src/resources</directory>
+      </resource>
+    </resources>
+    <testResources>
+      <testResource>
+        <directory>${project.build.testSourceDirectory}</directory>
+        <excludes>
+          <exclude>**/*.java</exclude>
+        </excludes>
+      </testResource>
+      <testResource>
+        <directory>${module-path}/src/test-files</directory>
+      </testResource>
+    </testResources>
+  </build>
+</project>
diff --git a/dev-tools/maven/lucene/analysis/pom.xml.template b/dev-tools/maven/lucene/analysis/pom.xml.template
index 9058abf1f3..466ad30412 100644
--- a/dev-tools/maven/lucene/analysis/pom.xml.template
+++ b/dev-tools/maven/lucene/analysis/pom.xml.template
@@ -35,6 +35,7 @@
     <module>icu</module>
     <module>kuromoji</module>
     <module>morfologik</module>
+    <module>opennlp</module>
     <module>phonetic</module>
     <module>smartcn</module>
     <module>stempel</module>
diff --git a/lucene/CHANGES.txt b/lucene/CHANGES.txt
index e629be0077..4e35b94a4f 100644
--- a/lucene/CHANGES.txt
+++ b/lucene/CHANGES.txt
@@ -59,6 +59,15 @@ API Changes
 * LUCENE-8051: LevensteinDistance renamed to LevenshteinDistance.
   (Pulak Ghosh via Adrien Grand)
 
+New Features
+
+* LUCENE-2899: Add new module analysis/opennlp, with analysis components
+  to perform tokenization, part-of-speech tagging, lemmatization and phrase
+  chunking by invoking the corresponding OpenNLP tools. Named entity
+  recognition is also provided as a Solr update request processor.
+  (Lance Norskog, Grant Ingersoll, Joern Kottmann, Em, Kai Gülzau,
+  Rene Nederhand, Robert Muir, Steven Bower, Steve Rowe)
+
 Improvements
 
 * LUCENE-8081: Allow IndexWriter to opt out of flushing on indexing threads
diff --git a/lucene/analysis/README.txt b/lucene/analysis/README.txt
index 7dc7f5397e..c68584ec50 100644
--- a/lucene/analysis/README.txt
+++ b/lucene/analysis/README.txt
@@ -28,6 +28,9 @@ lucene-analyzers-kuromoji-XX.jar
 lucene-analyzers-morfologik-XX.jar
   An analyzer using the Morfologik stemming library.
 
+lucene-analyzers-opennlp-XX.jar
+  An analyzer using the OpenNLP natural-language processing library.
+
 lucene-analyzers-phonetic-XX.jar
   An add-on analysis library that provides phonetic encoders via Apache
   Commons-Codec. Note: this module depends on the commons-codec jar 
@@ -49,6 +52,7 @@ common/src/java
 icu/src/java
 kuromoji/src/java
 morfologik/src/java
+opennlp/src/java
 phonetic/src/java
 smartcn/src/java
 stempel/src/java
@@ -59,6 +63,7 @@ common/src/test
 icu/src/test
 kuromoji/src/test
 morfologik/src/test
+opennlp/src/test
 phonetic/src/test
 smartcn/src/test
 stempel/src/test
diff --git a/lucene/analysis/build.xml b/lucene/analysis/build.xml
index 844f5f3858..ed1566c0e0 100644
--- a/lucene/analysis/build.xml
+++ b/lucene/analysis/build.xml
@@ -65,6 +65,10 @@
     <ant dir="morfologik" />
   </target>
 
+  <target name="opennlp">
+    <ant dir="opennlp" />
+  </target>
+
   <target name="phonetic">
     <ant dir="phonetic" />
   </target>
@@ -82,7 +86,7 @@
   </target>
 
   <target name="default" depends="compile"/>
-  <target name="compile" depends="common,icu,kuromoji,morfologik,phonetic,smartcn,stempel,uima" />
+  <target name="compile" depends="common,icu,kuromoji,morfologik,opennlp,phonetic,smartcn,stempel,uima" />
 
   <target name="clean">
     <forall-analyzers target="clean"/>
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/TypeAsSynonymFilter.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/TypeAsSynonymFilter.java
new file mode 100644
index 0000000000..8269d5d2b9
--- /dev/null
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/TypeAsSynonymFilter.java
@@ -0,0 +1,80 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.miscellaneous;
+
+import java.io.IOException;
+
+import org.apache.lucene.analysis.TokenFilter;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;
+import org.apache.lucene.analysis.tokenattributes.TypeAttribute;
+import org.apache.lucene.util.AttributeSource;
+
+/**
+ * Adds the {@link TypeAttribute#type()} as a synonym,
+ * i.e. another token at the same position, optionally with a specified prefix prepended.
+ */
+public final class TypeAsSynonymFilter extends TokenFilter {
+  private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
+  private final TypeAttribute typeAtt = addAttribute(TypeAttribute.class);
+  private final PositionIncrementAttribute posIncrAtt = addAttribute(PositionIncrementAttribute.class);
+  private final String prefix;
+
+  AttributeSource.State savedToken = null;
+
+
+  public TypeAsSynonymFilter(TokenStream input) {
+    this(input, null);
+  }
+
+  /**
+   * @param input input tokenstream
+   * @param prefix Prepend this string to every token type emitted as token text.
+   *               If null, nothing will be prepended.
+   */
+  public TypeAsSynonymFilter(TokenStream input, String prefix) {
+    super(input);
+    this.prefix = prefix;
+  }
+
+  @Override
+  public boolean incrementToken() throws IOException {
+    if (savedToken != null) {         // Emit last token's type at the same position
+      restoreState(savedToken);
+      savedToken = null;
+      termAtt.setEmpty();
+      if (prefix != null) {
+        termAtt.append(prefix);
+      }
+      termAtt.append(typeAtt.type());
+      posIncrAtt.setPositionIncrement(0);
+      return true;
+    } else if (input.incrementToken()) { // Ho pending token type to emit
+      savedToken = captureState();
+      return true;
+    }
+    return false;
+  }
+
+  @Override
+  public void reset() throws IOException {
+    super.reset();
+    savedToken = null;
+  }
+}
diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/TypeAsSynonymFilterFactory.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/TypeAsSynonymFilterFactory.java
new file mode 100644
index 0000000000..69708b7f93
--- /dev/null
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/TypeAsSynonymFilterFactory.java
@@ -0,0 +1,55 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.miscellaneous;
+
+import java.util.Map;
+
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.util.TokenFilterFactory;
+
+/**
+ * Factory for {@link TypeAsSynonymFilter}.
+ * <pre class="prettyprint">
+ * &lt;fieldType name="text_type_as_synonym" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.UAX29URLEmailTokenizerFactory"/&gt;
+ *     &lt;filter class="solr.TypeAsSynonymFilterFactory" prefix="_type_" /&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ *
+ * <p>
+ * If the optional {@code prefix} parameter is used, the specified value will be prepended
+ * to the type, e.g. with prefix="_type_", for a token "example.com" with type "&lt;URL&gt;",
+ * the emitted synonym will have text "_type_&lt;URL&gt;".
+ */
+public class TypeAsSynonymFilterFactory extends TokenFilterFactory {
+  private final String prefix;
+
+  public TypeAsSynonymFilterFactory(Map<String,String> args) {
+    super(args);
+    prefix = get(args, "prefix");  // default value is null
+    if (!args.isEmpty()) {
+      throw new IllegalArgumentException("Unknown parameters: " + args);
+    }
+  }
+
+  @Override
+  public TokenStream create(TokenStream input) {
+    return new TypeAsSynonymFilter(input, prefix);
+  }
+}
diff --git a/lucene/analysis/common/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory b/lucene/analysis/common/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory
index d871ad649d..6dcc81ce04 100644
--- a/lucene/analysis/common/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory
+++ b/lucene/analysis/common/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory
@@ -80,6 +80,7 @@ org.apache.lucene.analysis.miscellaneous.RemoveDuplicatesTokenFilterFactory
 org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilterFactory
 org.apache.lucene.analysis.miscellaneous.TrimFilterFactory
 org.apache.lucene.analysis.miscellaneous.TruncateTokenFilterFactory
+org.apache.lucene.analysis.miscellaneous.TypeAsSynonymFilterFactory
 org.apache.lucene.analysis.miscellaneous.WordDelimiterFilterFactory
 org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilterFactory
 org.apache.lucene.analysis.miscellaneous.ScandinavianFoldingFilterFactory
diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest.java
index a4080feab7..1bc6ed73c5 100644
--- a/lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest.java
+++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest.java
@@ -183,14 +183,14 @@ public class MinHashFilterTest extends BaseTokenStreamTestCase {
     TokenStream ts = createTokenStream(5, "woof woof woof woof woof", 1, 1, 100, false);
     assertTokenStreamContents(ts, hashes, new int[]{0},
         new int[]{24}, new String[]{MinHashFilter.MIN_HASH_TYPE}, new int[]{1}, new int[]{1}, 24, 0, null,
-        true);
+        true, null);
 
     ts = createTokenStream(5, "woof woof woof woof woof", 2, 1, 1, false);
     assertTokenStreamContents(ts, new String[]{new String(new char[]{0, 0, 8449, 54077, 64133, 32857, 8605, 41409}),
             new String(new char[]{0, 1, 16887, 58164, 39536, 14926, 6529, 17276})}, new int[]{0, 0},
         new int[]{24, 24}, new String[]{MinHashFilter.MIN_HASH_TYPE, MinHashFilter.MIN_HASH_TYPE}, new int[]{1, 0},
         new int[]{1, 1}, 24, 0, null,
-        true);
+        true, null);
   }
 
   @Test
@@ -203,7 +203,7 @@ public class MinHashFilterTest extends BaseTokenStreamTestCase {
         false);
     assertTokenStreamContents(ts, hashes, new int[]{0, 0},
         new int[]{49, 49}, new String[]{MinHashFilter.MIN_HASH_TYPE, MinHashFilter.MIN_HASH_TYPE}, new int[]{1, 0},
-        new int[]{1, 1}, 49, 0, null, true);
+        new int[]{1, 1}, 49, 0, null, true, null);
   }
 
   private ArrayList<String> getTokens(TokenStream ts) throws IOException {
diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTypeAsSynonymFilterFactory.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTypeAsSynonymFilterFactory.java
new file mode 100644
index 0000000000..6beb139a58
--- /dev/null
+++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTypeAsSynonymFilterFactory.java
@@ -0,0 +1,50 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.miscellaneous;
+
+import org.apache.lucene.analysis.CannedTokenStream;
+import org.apache.lucene.analysis.Token;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.util.BaseTokenStreamFactoryTestCase;
+
+public class TestTypeAsSynonymFilterFactory extends BaseTokenStreamFactoryTestCase {
+
+  private static final Token[] TOKENS =  { token("Visit", "<ALPHANUM>"), token("example.com", "<URL>") };
+
+  public void testBasic() throws Exception {
+    TokenStream stream = new CannedTokenStream(TOKENS);
+    stream = tokenFilterFactory("TypeAsSynonym").create(stream);
+    assertTokenStreamContents(stream, new String[] { "Visit", "<ALPHANUM>", "example.com", "<URL>" },
+        null, null, new String[] { "<ALPHANUM>", "<ALPHANUM>", "<URL>", "<URL>" }, new int[] { 1, 0, 1, 0 });
+  }
+
+  public void testPrefix() throws Exception {
+    TokenStream stream = new CannedTokenStream(TOKENS);
+    stream = tokenFilterFactory("TypeAsSynonym", "prefix", "_type_").create(stream);
+    assertTokenStreamContents(stream, new String[] { "Visit", "_type_<ALPHANUM>", "example.com", "_type_<URL>" },
+        null, null, new String[] { "<ALPHANUM>", "<ALPHANUM>", "<URL>", "<URL>" }, new int[] { 1, 0, 1, 0 });
+  }
+
+  private static Token token(String term, String type) {
+    Token token = new Token();
+    token.setEmpty();
+    token.append(term);
+    token.setType(type);
+    return token;
+  }
+}
diff --git a/lucene/analysis/opennlp/build.xml b/lucene/analysis/opennlp/build.xml
new file mode 100644
index 0000000000..e2cd20a5af
--- /dev/null
+++ b/lucene/analysis/opennlp/build.xml
@@ -0,0 +1,118 @@
+<?xml version="1.0"?>
+
+<!--
+    Licensed to the Apache Software Foundation (ASF) under one or more
+    contributor license agreements.  See the NOTICE file distributed with
+    this work for additional information regarding copyright ownership.
+    The ASF licenses this file to You under the Apache License, Version 2.0
+    the "License"); you may not use this file except in compliance with
+    the License.  You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+ -->
+
+<project name="analyzers-opennlp" default="default">
+
+  <description>
+    OpenNLP Library Integration
+  </description>
+
+  <path id="opennlpjars">
+    <fileset dir="lib"/>
+  </path>
+
+  <property name="test.model.data.dir" location="src/tools/test-model-data"/>
+  <property name="tests.userdir" location="src/test-files"/>
+  <property name="test.model.dir" location="${tests.userdir}/org/apache/lucene/analysis/opennlp"/>
+
+  <import file="../analysis-module-build.xml"/>
+
+  <property name="analysis-extras.conf.dir"
+            location="${common.dir}/../solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf"/>
+
+  <path id="classpath">
+    <pathelement path="${analyzers-common.jar}"/>
+    <path refid="opennlpjars"/>
+    <path refid="base.classpath"/>
+  </path>
+
+  <path id="test.classpath">
+    <path refid="test.base.classpath"/>
+    <pathelement path="${tests.userdir}"/>
+  </path>
+
+  <target name="compile-core" depends="jar-analyzers-common, common.compile-core" />
+
+  <!--
+    This does not create real NLP models, just small unencumbered ones for the unit tests.
+    All text taken from reuters corpus.
+    Tags applied with online demos at CCG Urbana-Champaign.
+    -->
+  <target name="train-test-models" description="Train all small test models for unit tests" depends="resolve">
+    <mkdir dir="${test.model.dir}"/>
+    <!-- https://opennlp.apache.org/docs/1.8.3/manual/opennlp.html#tools.sentdetect.training -->
+    <trainModel command="SentenceDetectorTrainer" lang="en" data="sentences.txt" model="en-test-sent.bin"/>
+    <copy file="${test.model.dir}/en-test-sent.bin" todir="${analysis-extras.conf.dir}"/>
+
+    <!-- https://opennlp.apache.org/docs/1.8.3/manual/opennlp.html#tools.tokenizer.training -->
+    <trainModel command="TokenizerTrainer" lang="en" data="tokenizer.txt" model="en-test-tokenizer.bin"/>
+    <copy file="${test.model.dir}/en-test-tokenizer.bin" todir="${analysis-extras.conf.dir}"/>
+
+    <!-- https://opennlp.apache.org/docs/1.8.3/manual/opennlp.html#tools.postagger.training -->
+    <trainModel command="POSTaggerTrainer" lang="en" data="pos.txt" model="en-test-pos-maxent.bin"/>
+
+    <!-- https://opennlp.apache.org/docs/1.8.3/manual/opennlp.html#tools.chunker.training -->
+    <trainModel command="ChunkerTrainerME" lang="en" data="chunks.txt" model="en-test-chunker.bin"/>
+
+    <!-- https://opennlp.apache.org/docs/1.8.3/manual/opennlp.html#tools.namefind.training -->
+    <trainModel command="TokenNameFinderTrainer" lang="en" data="ner_flashman.txt" model="en-test-ner-person.bin">
+      <extra-args>
+        <arg value="-params"/>
+        <arg value="ner_TrainerParams.txt"/>
+      </extra-args>
+    </trainModel>
+    <copy file="${test.model.dir}/en-test-ner-person.bin" todir="${analysis-extras.conf.dir}"/>
+
+    <!-- https://opennlp.apache.org/docs/1.8.3/manual/opennlp.html#tools.lemmatizer.training -->
+    <trainModel command="LemmatizerTrainerME" lang="en" data="lemmas.txt" model="en-test-lemmatizer.bin"/>
+  </target>
+
+  <macrodef name="trainModel">
+    <attribute name="command"/>
+    <attribute name="lang"/>
+    <attribute name="data"/>
+    <attribute name="model"/>
+    <element name="extra-args" optional="true"/>
+    <sequential>
+      <java classname="opennlp.tools.cmdline.CLI"
+            dir="${test.model.data.dir}"
+            fork="true"
+            failonerror="true">
+        <classpath>
+          <path refid="opennlpjars"/>
+        </classpath>
+
+        <arg value="@{command}"/>
+
+        <arg value="-lang"/>
+        <arg value="@{lang}"/>
+
+        <arg value="-data"/>
+        <arg value="@{data}"/>
+
+        <arg value="-model"/>
+        <arg value="${test.model.dir}/@{model}"/>
+
+        <extra-args/>
+      </java>
+    </sequential>
+  </macrodef>
+
+  <target name="regenerate" depends="train-test-models"/>
+</project>
diff --git a/lucene/analysis/opennlp/ivy.xml b/lucene/analysis/opennlp/ivy.xml
new file mode 100644
index 0000000000..c7b885f411
--- /dev/null
+++ b/lucene/analysis/opennlp/ivy.xml
@@ -0,0 +1,29 @@
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one
+   or more contributor license agreements.  See the NOTICE file
+   distributed with this work for additional information
+   regarding copyright ownership.  The ASF licenses this file
+   to you under the Apache License, Version 2.0 (the
+   "License"); you may not use this file except in compliance
+   with the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing,
+   software distributed under the License is distributed on an
+   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+   KIND, either express or implied.  See the License for the
+   specific language governing permissions and limitations
+   under the License.
+-->
+<ivy-module version="2.0">
+  <info organisation="org.apache.lucene" module="analyzers-opennlp" />
+  <configurations defaultconfmapping="compile->master">
+    <conf name="compile" transitive="false"/>
+  </configurations>
+  <dependencies>
+    <dependency org="org.apache.opennlp" name="opennlp-tools" rev="${/org.apache.opennlp/opennlp-tools}" transitive="false" conf="compile" />
+    <dependency org="org.apache.opennlp" name="opennlp-maxent" rev="${/org.apache.opennlp/opennlp-maxent}" transitive="false" conf="compile" />
+    <exclude org="*" ext="*" matcher="regexp" type="${ivy.exclude.types}" />
+  </dependencies>
+</ivy-module>
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPChunkerFilter.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPChunkerFilter.java
new file mode 100644
index 0000000000..cfc47e6c40
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPChunkerFilter.java
@@ -0,0 +1,108 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.lucene.analysis.TokenFilter;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.opennlp.tools.NLPChunkerOp;
+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.tokenattributes.FlagsAttribute;
+import org.apache.lucene.analysis.tokenattributes.TypeAttribute;
+import org.apache.lucene.util.AttributeSource;
+
+/**
+ * Run OpenNLP chunker.  Prerequisite: the OpenNLPTokenizer and OpenNLPPOSFilter must precede this filter.
+ * Tags terms in the TypeAttribute, replacing the POS tags previously put there by OpenNLPPOSFilter.
+ */
+public final class OpenNLPChunkerFilter extends TokenFilter {
+
+  private List<AttributeSource> sentenceTokenAttrs = new ArrayList<>();
+  private int tokenNum = 0;
+  private boolean moreTokensAvailable = true;
+  private String[] sentenceTerms = null;
+  private String[] sentenceTermPOSTags = null;
+
+  private final NLPChunkerOp chunkerOp;
+  private final TypeAttribute typeAtt = addAttribute(TypeAttribute.class);
+  private final FlagsAttribute flagsAtt = addAttribute(FlagsAttribute.class);
+  private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
+
+  public OpenNLPChunkerFilter(TokenStream input, NLPChunkerOp chunkerOp) {
+    super(input);
+    this.chunkerOp = chunkerOp;
+  }
+
+  @Override
+  public final boolean incrementToken() throws IOException {
+    if ( ! moreTokensAvailable) {
+      clear();
+      return false;
+    }
+    if (tokenNum == sentenceTokenAttrs.size()) {
+      nextSentence();
+      if (sentenceTerms == null) {
+        clear();
+        return false;
+      }
+      assignTokenTypes(chunkerOp.getChunks(sentenceTerms, sentenceTermPOSTags, null));
+      tokenNum = 0;
+    }
+    clearAttributes();
+    sentenceTokenAttrs.get(tokenNum++).copyTo(this);
+    return true;
+  }
+
+  private void nextSentence() throws IOException {
+    List<String> termList = new ArrayList<>();
+    List<String> posTagList = new ArrayList<>();
+    sentenceTokenAttrs.clear();
+    boolean endOfSentence = false;
+    while ( ! endOfSentence && (moreTokensAvailable = input.incrementToken())) {
+      termList.add(termAtt.toString());
+      posTagList.add(typeAtt.type());
+      endOfSentence = 0 != (flagsAtt.getFlags() & OpenNLPTokenizer.EOS_FLAG_BIT);
+      sentenceTokenAttrs.add(input.cloneAttributes());
+    }
+    sentenceTerms = termList.size() > 0 ? termList.toArray(new String[termList.size()]) : null;
+    sentenceTermPOSTags = posTagList.size() > 0 ? posTagList.toArray(new String[posTagList.size()]) : null;
+  }
+
+  private void assignTokenTypes(String[] tags) {
+    for (int i = 0 ; i < tags.length ; ++i) {
+      sentenceTokenAttrs.get(i).getAttribute(TypeAttribute.class).setType(tags[i]);
+    }
+  }
+
+  @Override
+  public void reset() throws IOException {
+    super.reset();
+    moreTokensAvailable = true;
+    clear();
+  }
+
+  private void clear() {
+    sentenceTokenAttrs.clear();
+    sentenceTerms = null;
+    sentenceTermPOSTags = null;
+    tokenNum = 0;
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPChunkerFilterFactory.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPChunkerFilterFactory.java
new file mode 100644
index 0000000000..96eb672452
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPChunkerFilterFactory.java
@@ -0,0 +1,81 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.util.Map;
+
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.opennlp.tools.NLPChunkerOp;
+import org.apache.lucene.analysis.opennlp.tools.OpenNLPOpsFactory;
+import org.apache.lucene.analysis.util.ResourceLoader;
+import org.apache.lucene.analysis.util.ResourceLoaderAware;
+import org.apache.lucene.analysis.util.TokenFilterFactory;
+
+/**
+ * Factory for {@link OpenNLPChunkerFilter}.
+ *
+ * <pre class="prettyprint">
+ * &lt;fieldType name="text_opennlp_chunked" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.OpenNLPTokenizerFactory" sentenceModel="filename" tokenizerModel="filename"/&gt;
+ *     &lt;filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="filename"/&gt;
+ *     &lt;filter class="solr.OpenNLPChunkerFilterFactory" chunkerModel="filename"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @since 7.3.0
+ */
+public class OpenNLPChunkerFilterFactory extends TokenFilterFactory implements ResourceLoaderAware {
+  public static final String CHUNKER_MODEL = "chunkerModel";
+
+  private final String chunkerModelFile;
+
+  public OpenNLPChunkerFilterFactory(Map<String,String> args) {
+    super(args);
+    chunkerModelFile = get(args, CHUNKER_MODEL);
+    if (!args.isEmpty()) {
+      throw new IllegalArgumentException("Unknown parameters: " + args);
+    }
+  }
+
+  @Override
+  public OpenNLPChunkerFilter create(TokenStream in) {
+    try {
+      NLPChunkerOp chunkerOp = null;
+
+      if (chunkerModelFile != null) {
+        chunkerOp = OpenNLPOpsFactory.getChunker(chunkerModelFile);
+      }
+      return new OpenNLPChunkerFilter(in, chunkerOp);
+    } catch (IOException e) {
+      throw new IllegalArgumentException(e);
+    }
+  }
+
+  @Override
+  public void inform(ResourceLoader loader) {
+    try {
+      // load and register read-only models in cache with file/resource names
+      if (chunkerModelFile != null) {
+        OpenNLPOpsFactory.getChunkerModel(chunkerModelFile, loader);
+      }
+    } catch (IOException e) {
+      throw new IllegalArgumentException(e);
+    }
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPLemmatizerFilter.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPLemmatizerFilter.java
new file mode 100644
index 0000000000..4c484b9435
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPLemmatizerFilter.java
@@ -0,0 +1,123 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+import org.apache.lucene.analysis.TokenFilter;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.opennlp.tools.NLPLemmatizerOp;
+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.tokenattributes.FlagsAttribute;
+import org.apache.lucene.analysis.tokenattributes.KeywordAttribute;
+import org.apache.lucene.analysis.tokenattributes.TypeAttribute;
+import org.apache.lucene.util.AttributeSource;
+
+/**
+ * <p>Runs OpenNLP dictionary-based and/or MaxEnt lemmatizers.</p>
+ * <p>
+ *   Both a dictionary-based lemmatizer and a MaxEnt lemmatizer are supported,
+ *   via the "dictionary" and "lemmatizerModel" params, respectively.
+ *   If both are configured, the dictionary-based lemmatizer is tried first,
+ *   and then the MaxEnt lemmatizer is consulted for out-of-vocabulary tokens.
+ * </p>
+ * <p>
+ *   The dictionary file must be encoded as UTF-8, with one entry per line,
+ *   in the form <tt>word[tab]lemma[tab]part-of-speech</tt>
+ * </p>
+ */
+public class OpenNLPLemmatizerFilter extends TokenFilter {
+  private final NLPLemmatizerOp lemmatizerOp;
+  private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
+  private final TypeAttribute typeAtt = addAttribute(TypeAttribute.class);
+  private final KeywordAttribute keywordAtt = addAttribute(KeywordAttribute.class);
+  private final FlagsAttribute flagsAtt = addAttribute(FlagsAttribute.class);
+  private List<AttributeSource> sentenceTokenAttrs = new ArrayList<>();
+  private Iterator<AttributeSource> sentenceTokenAttrsIter = null;
+  private boolean moreTokensAvailable = true;
+  private String[] sentenceTokens = null;     // non-keyword tokens
+  private String[] sentenceTokenTypes = null; // types for non-keyword tokens
+  private String[] lemmas = null;             // lemmas for non-keyword tokens
+  private int lemmaNum = 0;                   // lemma counter
+
+  public OpenNLPLemmatizerFilter(TokenStream input, NLPLemmatizerOp lemmatizerOp) {
+    super(input);
+    this.lemmatizerOp = lemmatizerOp;
+  }
+
+  @Override
+  public final boolean incrementToken() throws IOException {
+    if ( ! moreTokensAvailable) {
+      clear();
+      return false;
+    }
+    if (sentenceTokenAttrsIter == null || ! sentenceTokenAttrsIter.hasNext()) {
+      nextSentence();
+      if (sentenceTokens == null) { // zero non-keyword tokens
+        clear();
+        return false;
+      }
+      lemmas = lemmatizerOp.lemmatize(sentenceTokens, sentenceTokenTypes);
+      lemmaNum = 0;
+      sentenceTokenAttrsIter = sentenceTokenAttrs.iterator();
+    }
+    clearAttributes();
+    sentenceTokenAttrsIter.next().copyTo(this);
+    if ( ! keywordAtt.isKeyword()) {
+      termAtt.setEmpty().append(lemmas[lemmaNum++]);
+    }
+    return true;
+
+  }
+
+  private void nextSentence() throws IOException {
+    List<String> tokenList = new ArrayList<>();
+    List<String> typeList = new ArrayList<>();
+    sentenceTokenAttrs.clear();
+    boolean endOfSentence = false;
+    while ( ! endOfSentence && (moreTokensAvailable = input.incrementToken())) {
+      if ( ! keywordAtt.isKeyword()) {
+        tokenList.add(termAtt.toString());
+        typeList.add(typeAtt.type());
+      }
+      endOfSentence = 0 != (flagsAtt.getFlags() & OpenNLPTokenizer.EOS_FLAG_BIT);
+      sentenceTokenAttrs.add(input.cloneAttributes());
+    }
+    sentenceTokens = tokenList.size() > 0 ? tokenList.toArray(new String[tokenList.size()]) : null;
+    sentenceTokenTypes = typeList.size() > 0 ? typeList.toArray(new String[typeList.size()]) : null;
+  }
+
+  @Override
+  public void reset() throws IOException {
+    super.reset();
+    moreTokensAvailable = true;
+    clear();
+  }
+
+  private void clear() {
+    sentenceTokenAttrs.clear();
+    sentenceTokenAttrsIter = null;
+    sentenceTokens = null;
+    sentenceTokenTypes = null;
+    lemmas = null;
+    lemmaNum = 0;
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPLemmatizerFilterFactory.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPLemmatizerFilterFactory.java
new file mode 100644
index 0000000000..90a0e43cad
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPLemmatizerFilterFactory.java
@@ -0,0 +1,89 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.util.Map;
+
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.opennlp.tools.NLPLemmatizerOp;
+import org.apache.lucene.analysis.opennlp.tools.OpenNLPOpsFactory;
+import org.apache.lucene.analysis.util.ResourceLoader;
+import org.apache.lucene.analysis.util.ResourceLoaderAware;
+import org.apache.lucene.analysis.util.TokenFilterFactory;
+
+/**
+ * Factory for {@link OpenNLPLemmatizerFilter}.
+ *
+ * <pre class="prettyprint">
+ * &lt;fieldType name="text_opennlp_lemma" class="solr.TextField" positionIncrementGap="100"
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.OpenNLPTokenizerFactory"
+ *                sentenceModel="filename"
+ *                tokenizerModel="filename"/&gt;
+ *     /&gt;
+ *     &lt;filter class="solr.OpenNLPLemmatizerFilterFactory"
+ *             dictionary="filename"
+ *             lemmatizerModel="filename"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @since 7.3.0
+ */
+public class OpenNLPLemmatizerFilterFactory extends TokenFilterFactory implements ResourceLoaderAware {
+  public static final String DICTIONARY = "dictionary";
+  public static final String LEMMATIZER_MODEL = "lemmatizerModel";
+
+  private final String dictionaryFile;
+  private final String lemmatizerModelFile;
+
+  public OpenNLPLemmatizerFilterFactory(Map<String,String> args) {
+    super(args);
+    dictionaryFile = get(args, DICTIONARY);
+    lemmatizerModelFile = get(args, LEMMATIZER_MODEL);
+
+    if (dictionaryFile == null && lemmatizerModelFile == null) {
+      throw new IllegalArgumentException("Configuration Error: missing parameter: at least one of '"
+          + DICTIONARY + "' and '" + LEMMATIZER_MODEL + "' must be provided.");
+    }
+
+    if (!args.isEmpty()) {
+      throw new IllegalArgumentException("Unknown parameters: " + args);
+    }
+  }
+
+  @Override
+  public OpenNLPLemmatizerFilter create(TokenStream in) {
+    try {
+      NLPLemmatizerOp lemmatizerOp = OpenNLPOpsFactory.getLemmatizer(dictionaryFile, lemmatizerModelFile);
+      return new OpenNLPLemmatizerFilter(in, lemmatizerOp);
+    } catch (IOException e) {
+      throw new RuntimeException(e);
+    }
+  }
+
+  @Override
+  public void inform(ResourceLoader loader) throws IOException {
+    // register models in cache with file/resource names
+    if (dictionaryFile != null) {
+      OpenNLPOpsFactory.getLemmatizerDictionary(dictionaryFile, loader);
+    }
+    if (lemmatizerModelFile != null) {
+      OpenNLPOpsFactory.getLemmatizerModel(lemmatizerModelFile, loader);
+    }
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPPOSFilter.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPPOSFilter.java
new file mode 100644
index 0000000000..a5bea287c4
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPPOSFilter.java
@@ -0,0 +1,96 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.lucene.analysis.TokenFilter;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.opennlp.tools.NLPPOSTaggerOp;
+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.tokenattributes.FlagsAttribute;
+import org.apache.lucene.analysis.tokenattributes.TypeAttribute;
+import org.apache.lucene.util.AttributeSource;
+
+/**
+ * Run OpenNLP POS tagger.  Tags all terms in the TypeAttribute.
+ */
+public final class OpenNLPPOSFilter extends TokenFilter {
+
+  private List<AttributeSource> sentenceTokenAttrs = new ArrayList<>();
+  String[] tags = null;
+  private int tokenNum = 0;
+  private boolean moreTokensAvailable = true;
+
+  private final NLPPOSTaggerOp posTaggerOp;
+  private final TypeAttribute typeAtt = addAttribute(TypeAttribute.class);
+  private final FlagsAttribute flagsAtt = addAttribute(FlagsAttribute.class);
+  private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
+
+  public OpenNLPPOSFilter(TokenStream input, NLPPOSTaggerOp posTaggerOp) {
+    super(input);
+    this.posTaggerOp = posTaggerOp;
+  }
+
+  @Override
+  public final boolean incrementToken() throws IOException {
+    if ( ! moreTokensAvailable) {
+      clear();
+      return false;
+    }
+    if (tokenNum == sentenceTokenAttrs.size()) { // beginning of stream, or previous sentence exhausted
+      String[] sentenceTokens = nextSentence();
+      if (sentenceTokens == null) {
+        clear();
+        return false;
+      }
+      tags = posTaggerOp.getPOSTags(sentenceTokens);
+      tokenNum = 0;
+    }
+    clearAttributes();
+    sentenceTokenAttrs.get(tokenNum).copyTo(this);
+    typeAtt.setType(tags[tokenNum++]);
+    return true;
+  }
+
+  private String[] nextSentence() throws IOException {
+    List<String> termList = new ArrayList<>();
+    sentenceTokenAttrs.clear();
+    boolean endOfSentence = false;
+    while ( ! endOfSentence && (moreTokensAvailable = input.incrementToken())) {
+      termList.add(termAtt.toString());
+      endOfSentence = 0 != (flagsAtt.getFlags() & OpenNLPTokenizer.EOS_FLAG_BIT);
+      sentenceTokenAttrs.add(input.cloneAttributes());
+    }
+    return termList.size() > 0 ? termList.toArray(new String[termList.size()]) : null;
+  }
+
+  @Override
+  public void reset() throws IOException {
+    super.reset();
+    moreTokensAvailable = true;
+  }
+
+  private void clear() {
+    sentenceTokenAttrs.clear();
+    tags = null;
+    tokenNum = 0;
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPPOSFilterFactory.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPPOSFilterFactory.java
new file mode 100644
index 0000000000..952218f533
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPPOSFilterFactory.java
@@ -0,0 +1,71 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.util.Map;
+
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.opennlp.tools.OpenNLPOpsFactory;
+import org.apache.lucene.analysis.util.ResourceLoader;
+import org.apache.lucene.analysis.util.ResourceLoaderAware;
+import org.apache.lucene.analysis.util.TokenFilterFactory;
+
+/**
+ * Factory for {@link OpenNLPPOSFilter}.
+ *
+ * <pre class="prettyprint">
+ * &lt;fieldType name="text_opennlp_pos" class="solr.TextField" positionIncrementGap="100"&gt;
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.OpenNLPTokenizerFactory" sentenceModel="filename" tokenizerModel="filename"/&gt;
+ *     &lt;filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="filename"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @since 7.3.0
+ */
+public class OpenNLPPOSFilterFactory extends TokenFilterFactory implements ResourceLoaderAware {
+  public static final String POS_TAGGER_MODEL = "posTaggerModel";
+
+  private final String posTaggerModelFile;
+
+  public OpenNLPPOSFilterFactory(Map<String,String> args) {
+    super(args);
+    posTaggerModelFile = require(args, POS_TAGGER_MODEL);
+    if (!args.isEmpty()) {
+      throw new IllegalArgumentException("Unknown parameters: " + args);
+    }
+  }
+
+  @Override
+  public OpenNLPPOSFilter create(TokenStream in) {
+    try {
+      return new OpenNLPPOSFilter(in, OpenNLPOpsFactory.getPOSTagger(posTaggerModelFile));
+    } catch (IOException e) {
+      throw new IllegalArgumentException(e);
+    }
+  }
+
+  @Override
+  public void inform(ResourceLoader loader) {
+    try { // load and register the read-only model in cache with file/resource name
+      OpenNLPOpsFactory.getPOSTaggerModel(posTaggerModelFile, loader);
+    } catch (IOException e) {
+      throw new IllegalArgumentException(e);
+    }
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPSentenceBreakIterator.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPSentenceBreakIterator.java
new file mode 100644
index 0000000000..f69fbc6b92
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPSentenceBreakIterator.java
@@ -0,0 +1,224 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.text.BreakIterator;
+import java.text.CharacterIterator;
+
+import opennlp.tools.util.Span;
+import org.apache.lucene.analysis.opennlp.tools.NLPSentenceDetectorOp;
+import org.apache.lucene.analysis.util.CharArrayIterator;
+
+/**
+ * A {@link BreakIterator} that splits sentences using an OpenNLP sentence chunking model.
+ */
+public final class OpenNLPSentenceBreakIterator extends BreakIterator {
+
+  private CharacterIterator text;
+  private int currentSentence;
+  private int[] sentenceStarts;
+  private NLPSentenceDetectorOp sentenceOp;
+
+  public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {
+    this.sentenceOp = sentenceOp;
+  }
+
+  @Override
+  public int current() {
+    return text.getIndex();
+  }
+
+  @Override
+  public int first() {
+    currentSentence = 0;
+    text.setIndex(text.getBeginIndex());
+    return current();
+  }
+
+  @Override
+  public int last() {
+    if (sentenceStarts.length > 0) {
+      currentSentence = sentenceStarts.length - 1;
+      text.setIndex(text.getEndIndex());
+    } else { // there are no sentences; both the first and last positions are the begin index
+      currentSentence = 0;
+      text.setIndex(text.getBeginIndex());
+    }
+    return current();
+  }
+
+  @Override
+  public int next() {
+    if (text.getIndex() == text.getEndIndex() || 0 == sentenceStarts.length) {
+      return DONE;
+    } else if (currentSentence < sentenceStarts.length - 1) {
+      text.setIndex(sentenceStarts[++currentSentence]);
+      return current();
+    } else {
+      return last();
+    }
+  }
+
+  @Override
+  public int following(int pos) {
+    if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {
+      throw new IllegalArgumentException("offset out of bounds");
+    } else if (0 == sentenceStarts.length) {
+      text.setIndex(text.getBeginIndex());
+      return DONE;
+    } else if (pos >= sentenceStarts[sentenceStarts.length - 1]) {
+      // this conflicts with the javadocs, but matches actual behavior (Oracle has a bug in something)
+      // https://bugs.openjdk.java.net/browse/JDK-8015110
+      text.setIndex(text.getEndIndex());
+      currentSentence = sentenceStarts.length - 1;
+      return DONE;
+    } else { // there are at least two sentences
+      currentSentence = (sentenceStarts.length - 1) / 2; // start search from the middle
+      moveToSentenceAt(pos, 0, sentenceStarts.length - 2);
+      text.setIndex(sentenceStarts[++currentSentence]);
+      return current();
+    }
+  }
+
+  /** Binary search over sentences */
+  private void moveToSentenceAt(int pos, int minSentence, int maxSentence) {
+    if (minSentence != maxSentence) {
+      if (pos < sentenceStarts[currentSentence]) {
+        int newMaxSentence = currentSentence - 1;
+        currentSentence = minSentence + (currentSentence - minSentence) / 2;
+        moveToSentenceAt(pos, minSentence, newMaxSentence);
+      } else if (pos >= sentenceStarts[currentSentence + 1]) {
+        int newMinSentence = currentSentence + 1;
+        currentSentence = maxSentence - (maxSentence - currentSentence) / 2;
+        moveToSentenceAt(pos, newMinSentence, maxSentence);
+      }
+    } else {
+      assert currentSentence == minSentence;
+      assert pos >= sentenceStarts[currentSentence];
+      assert (currentSentence == sentenceStarts.length - 1 && pos <= text.getEndIndex())
+          || pos < sentenceStarts[currentSentence + 1];
+    }
+    // we have arrived - nothing to do
+  }
+
+  @Override
+  public int previous() {
+    if (text.getIndex() == text.getBeginIndex()) {
+      return DONE;
+    } else {
+      if (0 == sentenceStarts.length) {
+        text.setIndex(text.getBeginIndex());
+        return DONE;
+      }
+      if (text.getIndex() == text.getEndIndex()) {
+        text.setIndex(sentenceStarts[currentSentence]);
+      } else {
+        text.setIndex(sentenceStarts[--currentSentence]);
+      }
+      return current();
+    }
+  }
+
+  @Override
+  public int preceding(int pos) {
+    if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {
+      throw new IllegalArgumentException("offset out of bounds");
+    } else if (0 == sentenceStarts.length) {
+      text.setIndex(text.getBeginIndex());
+      currentSentence = 0;
+      return DONE;
+    } else if (pos < sentenceStarts[0]) {
+      // this conflicts with the javadocs, but matches actual behavior (Oracle has a bug in something)
+      // https://bugs.openjdk.java.net/browse/JDK-8015110
+      text.setIndex(text.getBeginIndex());
+      currentSentence = 0;
+      return DONE;
+    } else {
+      currentSentence = sentenceStarts.length / 2; // start search from the middle
+      moveToSentenceAt(pos, 0, sentenceStarts.length - 1);
+      if (0 == currentSentence) {
+        text.setIndex(text.getBeginIndex());
+        return DONE;
+      } else {
+        text.setIndex(sentenceStarts[--currentSentence]);
+        return current();
+      }
+    }
+  }
+
+  @Override
+  public int next(int n) {
+    currentSentence += n;
+    if (n < 0) {
+      if (text.getIndex() == text.getEndIndex()) {
+        ++currentSentence;
+      }
+      if (currentSentence < 0) {
+        currentSentence = 0;
+        text.setIndex(text.getBeginIndex());
+        return DONE;
+      } else {
+        text.setIndex(sentenceStarts[currentSentence]);
+      }
+    } else if (n > 0) {
+      if (currentSentence >= sentenceStarts.length) {
+        currentSentence = sentenceStarts.length - 1;
+        text.setIndex(text.getEndIndex());
+        return DONE;
+      } else {
+        text.setIndex(sentenceStarts[currentSentence]);
+      }
+    }
+    return current();
+  }
+
+  @Override
+  public CharacterIterator getText() {
+    return text;
+  }
+
+  @Override
+  public void setText(CharacterIterator newText) {
+    text = newText;
+    text.setIndex(text.getBeginIndex());
+    currentSentence = 0;
+    Span[] spans = sentenceOp.splitSentences(characterIteratorToString());
+    sentenceStarts = new int[spans.length];
+    for (int i = 0; i < spans.length; ++i) {
+      // Adjust start positions to match those of the passed-in CharacterIterator
+      sentenceStarts[i] = spans[i].getStart() + text.getBeginIndex();
+    }
+  }
+
+  private String characterIteratorToString() {
+    String fullText;
+    if (text instanceof CharArrayIterator) {
+      CharArrayIterator charArrayIterator = (CharArrayIterator)text;
+      fullText = new String(charArrayIterator.getText(), charArrayIterator.getStart(), charArrayIterator.getLength());
+    } else {
+      // TODO: is there a better way to extract full text from arbitrary CharacterIterators?
+      StringBuilder builder = new StringBuilder();
+      for (char ch = text.first(); ch != CharacterIterator.DONE; ch = text.next()) {
+        builder.append(ch);
+      }
+      fullText = builder.toString();
+      text.setIndex(text.getBeginIndex());
+    }
+    return fullText;
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPTokenizer.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPTokenizer.java
new file mode 100644
index 0000000000..75a3b81074
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPTokenizer.java
@@ -0,0 +1,98 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+
+import opennlp.tools.util.Span;
+
+import org.apache.lucene.analysis.opennlp.tools.NLPSentenceDetectorOp;
+import org.apache.lucene.analysis.opennlp.tools.NLPTokenizerOp;
+import org.apache.lucene.analysis.tokenattributes.FlagsAttribute;
+import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.util.SegmentingTokenizerBase;
+import org.apache.lucene.util.AttributeFactory;
+
+/**
+ * Run OpenNLP SentenceDetector and Tokenizer.
+ * The last token in each sentence is marked by setting the {@link #EOS_FLAG_BIT} in the FlagsAttribute;
+ * following filters can use this information to apply operations to tokens one sentence at a time.
+ */
+public final class OpenNLPTokenizer extends SegmentingTokenizerBase {
+  public static int EOS_FLAG_BIT = 1;
+
+  private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
+  private final FlagsAttribute flagsAtt = addAttribute(FlagsAttribute.class);
+  private final OffsetAttribute offsetAtt = addAttribute(OffsetAttribute.class);
+
+  private Span[] termSpans = null;
+  private int termNum = 0;
+  private int sentenceStart = 0;
+
+  private NLPSentenceDetectorOp sentenceOp = null;
+  private NLPTokenizerOp tokenizerOp = null;
+
+  public OpenNLPTokenizer(AttributeFactory factory, NLPSentenceDetectorOp sentenceOp, NLPTokenizerOp tokenizerOp) throws IOException {
+    super(factory, new OpenNLPSentenceBreakIterator(sentenceOp));
+    if (sentenceOp == null || tokenizerOp == null) {
+      throw new IllegalArgumentException("OpenNLPTokenizer: both a Sentence Detector and a Tokenizer are required");
+    }
+    this.sentenceOp = sentenceOp;
+    this.tokenizerOp = tokenizerOp;
+  }
+
+  @Override
+  public void close() throws IOException {
+    super.close();
+    termSpans = null;
+    termNum = sentenceStart = 0;
+  };
+
+  @Override
+  protected void setNextSentence(int sentenceStart, int sentenceEnd) {
+    this.sentenceStart = sentenceStart;
+    String sentenceText = new String(buffer, sentenceStart, sentenceEnd - sentenceStart);
+    termSpans = tokenizerOp.getTerms(sentenceText);
+    termNum = 0;
+  }
+
+  @Override
+  protected boolean incrementWord() {
+    if (termSpans == null || termNum == termSpans.length) {
+      return false;
+    }
+    clearAttributes();
+    Span term = termSpans[termNum];
+    termAtt.copyBuffer(buffer, sentenceStart + term.getStart(), term.length());
+    offsetAtt.setOffset(correctOffset(offset + sentenceStart + term.getStart()),
+                        correctOffset(offset + sentenceStart + term.getEnd()));
+    if (termNum == termSpans.length - 1) {
+      flagsAtt.setFlags(flagsAtt.getFlags() | EOS_FLAG_BIT); // mark the last token in the sentence with EOS_FLAG_BIT
+    }
+    ++termNum;
+    return true;
+  }
+
+  @Override
+  public void reset() throws IOException {
+    super.reset();
+    termSpans = null;
+    termNum = sentenceStart = 0;
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPTokenizerFactory.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPTokenizerFactory.java
new file mode 100644
index 0000000000..a60f23f6bd
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/OpenNLPTokenizerFactory.java
@@ -0,0 +1,79 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.util.Map;
+
+import org.apache.lucene.analysis.opennlp.tools.NLPSentenceDetectorOp;
+import org.apache.lucene.analysis.opennlp.tools.NLPTokenizerOp;
+import org.apache.lucene.analysis.opennlp.tools.OpenNLPOpsFactory;
+import org.apache.lucene.analysis.util.ResourceLoader;
+import org.apache.lucene.analysis.util.ResourceLoaderAware;
+import org.apache.lucene.analysis.util.TokenizerFactory;
+import org.apache.lucene.util.AttributeFactory;
+
+/**
+ * Factory for {@link OpenNLPTokenizer}.
+ *
+ * <pre class="prettyprint">
+ * &lt;fieldType name="text_opennlp" class="solr.TextField" positionIncrementGap="100"
+ *   &lt;analyzer&gt;
+ *     &lt;tokenizer class="solr.OpenNLPTokenizerFactory" sentenceModel="filename" tokenizerModel="filename"/&gt;
+ *   &lt;/analyzer&gt;
+ * &lt;/fieldType&gt;</pre>
+ * @since 7.3.0
+ */
+public class OpenNLPTokenizerFactory extends TokenizerFactory implements ResourceLoaderAware {
+  public static final String SENTENCE_MODEL = "sentenceModel";
+  public static final String TOKENIZER_MODEL = "tokenizerModel";
+
+  private final String sentenceModelFile;
+  private final String tokenizerModelFile;
+
+  public OpenNLPTokenizerFactory(Map<String,String> args) {
+    super(args);
+    sentenceModelFile = require(args, SENTENCE_MODEL);
+    tokenizerModelFile = require(args, TOKENIZER_MODEL);
+    if ( ! args.isEmpty()) {
+      throw new IllegalArgumentException("Unknown parameters: " + args);
+    }
+  }
+
+  @Override
+  public OpenNLPTokenizer create(AttributeFactory factory) {
+    try {
+      NLPSentenceDetectorOp sentenceOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+      NLPTokenizerOp tokenizerOp = OpenNLPOpsFactory.getTokenizer(tokenizerModelFile);
+      return new OpenNLPTokenizer(factory, sentenceOp, tokenizerOp);
+    } catch (IOException e) {
+      throw new RuntimeException(e);
+    }
+  }
+
+  @Override
+  public void inform(ResourceLoader loader) throws IOException {
+    // register models in cache with file/resource names
+    if (sentenceModelFile != null) {
+      OpenNLPOpsFactory.getSentenceModel(sentenceModelFile, loader);
+    }
+    if (tokenizerModelFile != null) {
+      OpenNLPOpsFactory.getTokenizerModel(tokenizerModelFile, loader);
+    }
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/package-info.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/package-info.java
new file mode 100644
index 0000000000..527e24fe00
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/package-info.java
@@ -0,0 +1,21 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * Analysis components based on OpenNLP
+ */
+package org.apache.lucene.analysis.opennlp;
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPChunkerOp.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPChunkerOp.java
new file mode 100644
index 0000000000..f6a5ea8792
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPChunkerOp.java
@@ -0,0 +1,41 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp.tools;
+
+import java.io.IOException;
+import opennlp.tools.chunker.ChunkerME;
+import opennlp.tools.chunker.ChunkerModel;
+
+/**
+ * Supply OpenNLP Chunking tool
+ * Requires binary models from OpenNLP project on SourceForge.
+ */
+public class NLPChunkerOp {
+  private ChunkerME chunker = null;
+
+  public NLPChunkerOp(ChunkerModel chunkerModel) throws IOException {
+    chunker = new ChunkerME(chunkerModel);
+  }
+
+  public synchronized String[] getChunks(String[] words, String[] tags, double[] probs) {
+    String[] chunks = chunker.chunk(words, tags);
+    if (probs != null)
+      chunker.probs(probs);
+    return chunks;
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPLemmatizerOp.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPLemmatizerOp.java
new file mode 100644
index 0000000000..b09c63ec3a
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPLemmatizerOp.java
@@ -0,0 +1,80 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp.tools;
+
+import java.io.IOException;
+import java.io.InputStream;
+
+import opennlp.tools.lemmatizer.DictionaryLemmatizer;
+import opennlp.tools.lemmatizer.LemmatizerME;
+import opennlp.tools.lemmatizer.LemmatizerModel;
+
+/**
+ * <p>Supply OpenNLP Lemmatizer tools.</p>
+ * <p>
+ *   Both a dictionary-based lemmatizer and a MaxEnt lemmatizer are supported.
+ *   If both are configured, the dictionary-based lemmatizer is tried first,
+ *   and then the MaxEnt lemmatizer is consulted for out-of-vocabulary tokens.
+ * </p>
+ * <p>
+ *   The MaxEnt implementation requires binary models from OpenNLP project on SourceForge.
+ * </p>
+ */
+public class NLPLemmatizerOp {
+  private final DictionaryLemmatizer dictionaryLemmatizer;
+  private final LemmatizerME lemmatizerME;
+
+  public NLPLemmatizerOp(InputStream dictionary, LemmatizerModel lemmatizerModel) throws IOException {
+    assert dictionary != null || lemmatizerModel != null : "At least one parameter must be non-null";
+    dictionaryLemmatizer = dictionary == null ? null : new DictionaryLemmatizer(dictionary);
+    lemmatizerME = lemmatizerModel == null ? null : new LemmatizerME(lemmatizerModel);
+  }
+
+  public String[] lemmatize(String[] words, String[] postags) {
+    String[] lemmas = null;
+    String[] maxEntLemmas = null;
+    if (dictionaryLemmatizer != null) {
+      lemmas = dictionaryLemmatizer.lemmatize(words, postags);
+      for (int i = 0; i < lemmas.length; ++i) {
+        if (lemmas[i].equals("O")) {   // this word is not in the dictionary
+          if (lemmatizerME != null) {  // fall back to the MaxEnt lemmatizer if it's enabled
+            if (maxEntLemmas == null) {
+              maxEntLemmas = lemmatizerME.lemmatize(words, postags);
+            }
+            if ("_".equals(maxEntLemmas[i])) {
+              lemmas[i] = words[i];    // put back the original word if no lemma is found
+            } else {
+              lemmas[i] = maxEntLemmas[i];
+            }
+          } else {                     // there is no MaxEnt lemmatizer
+            lemmas[i] = words[i];      // put back the original word if no lemma is found
+          }
+        }
+      }
+    } else {                           // there is only a MaxEnt lemmatizer
+      maxEntLemmas = lemmatizerME.lemmatize(words, postags);
+      for (int i = 0 ; i < maxEntLemmas.length ; ++i) {
+        if ("_".equals(maxEntLemmas[i])) {
+          maxEntLemmas[i] = words[i];  // put back the original word if no lemma is found
+        }
+      }
+      lemmas = maxEntLemmas;
+    }
+    return lemmas;
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPNERTaggerOp.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPNERTaggerOp.java
new file mode 100644
index 0000000000..22e617d171
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPNERTaggerOp.java
@@ -0,0 +1,56 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp.tools;
+
+import opennlp.tools.namefind.NameFinderME;
+import opennlp.tools.namefind.TokenNameFinder;
+import opennlp.tools.namefind.TokenNameFinderModel;
+import opennlp.tools.util.Span;
+
+/**
+ * Supply OpenNLP Named Entity Resolution tool
+ * Requires binary models from OpenNLP project on SourceForge.
+ *
+ * Usage: from <a href="http://opennlp.apache.org/docs/1.8.3/manual/opennlp.html#tools.namefind.recognition.api"
+ *             >the OpenNLP documentation</a>:
+ *
+ * "The NameFinderME class is not thread safe, it must only be called from one thread.
+ * To use multiple threads multiple NameFinderME instances sharing the same model instance
+ * can be created. The input text should be segmented into documents, sentences and tokens.
+ * To perform entity detection an application calls the find method for every sentence in
+ * the document. After every document clearAdaptiveData must be called to clear the adaptive
+ * data in the feature generators. Not calling clearAdaptiveData can lead to a sharp drop
+ * in the detection rate after a few documents."
+ *
+ */
+public class NLPNERTaggerOp {
+  private final TokenNameFinder nameFinder;
+
+  public NLPNERTaggerOp(TokenNameFinderModel model) {
+    this.nameFinder = new NameFinderME(model);
+  }
+
+  public Span[] getNames(String[] words) {
+    Span[] names = nameFinder.find(words);
+    return names;
+  }
+
+  public synchronized void reset() {
+    nameFinder.clearAdaptiveData();
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPPOSTaggerOp.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPPOSTaggerOp.java
new file mode 100644
index 0000000000..447e1c0a5c
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPPOSTaggerOp.java
@@ -0,0 +1,41 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp.tools;
+
+import java.io.IOException;
+
+import opennlp.tools.postag.POSModel;
+import opennlp.tools.postag.POSTagger;
+import opennlp.tools.postag.POSTaggerME;
+
+/**
+ * Supply OpenNLP Parts-Of-Speech Tagging tool
+ * Requires binary models from OpenNLP project on SourceForge.
+ */
+
+public class NLPPOSTaggerOp {
+  private POSTagger tagger = null;
+
+  public NLPPOSTaggerOp(POSModel model) throws IOException {
+    tagger = new POSTaggerME(model);
+  }
+
+  public synchronized String[] getPOSTags(String[] words) {
+    return tagger.tag(words);
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPSentenceDetectorOp.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPSentenceDetectorOp.java
new file mode 100644
index 0000000000..21983ce4b5
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPSentenceDetectorOp.java
@@ -0,0 +1,50 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp.tools;
+
+import java.io.IOException;
+
+import opennlp.tools.sentdetect.SentenceDetectorME;
+import opennlp.tools.sentdetect.SentenceModel;
+import opennlp.tools.util.Span;
+
+/**
+ * Supply OpenNLP Sentence Detector tool
+ * Requires binary models from OpenNLP project on SourceForge.
+ */
+public class NLPSentenceDetectorOp {
+  private final SentenceDetectorME sentenceSplitter;
+
+  public NLPSentenceDetectorOp(SentenceModel model) throws IOException {
+    sentenceSplitter  = new SentenceDetectorME(model);
+  }
+
+  public NLPSentenceDetectorOp() {
+    sentenceSplitter = null;
+  }
+
+  public synchronized Span[] splitSentences(String line) {
+    if (sentenceSplitter != null) {
+      return sentenceSplitter.sentPosDetect(line);
+    } else {
+      Span[] shorty = new Span[1];
+      shorty[0] = new Span(0, line.length());
+      return shorty;
+    }
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPTokenizerOp.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPTokenizerOp.java
new file mode 100644
index 0000000000..0aeb713314
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/NLPTokenizerOp.java
@@ -0,0 +1,48 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp.tools;
+
+import opennlp.tools.tokenize.Tokenizer;
+import opennlp.tools.tokenize.TokenizerME;
+import opennlp.tools.tokenize.TokenizerModel;
+import opennlp.tools.util.Span;
+
+/**
+ * Supply OpenNLP Sentence Tokenizer tool
+ * Requires binary models from OpenNLP project on SourceForge.
+ */
+public class NLPTokenizerOp {
+  private final Tokenizer tokenizer;
+
+  public NLPTokenizerOp(TokenizerModel model) {
+    tokenizer = new TokenizerME(model);
+  }
+
+  public NLPTokenizerOp() {
+    tokenizer = null;
+  }
+
+  public synchronized Span[] getTerms(String sentence) {
+    if (tokenizer == null) {
+      Span[] span1 = new Span[1];
+      span1[0] = new Span(0, sentence.length());
+      return span1;
+    }
+    return tokenizer.tokenizePos(sentence);
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java
new file mode 100644
index 0000000000..5348857ab4
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java
@@ -0,0 +1,176 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp.tools;
+
+import java.io.ByteArrayInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.Reader;
+import java.nio.charset.StandardCharsets;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+import opennlp.tools.chunker.ChunkerModel;
+import opennlp.tools.lemmatizer.LemmatizerModel;
+import opennlp.tools.namefind.TokenNameFinderModel;
+import opennlp.tools.postag.POSModel;
+import opennlp.tools.sentdetect.SentenceModel;
+import opennlp.tools.tokenize.TokenizerModel;
+import org.apache.lucene.analysis.util.ResourceLoader;
+
+/**
+ * Supply OpenNLP Named Entity Recognizer
+ * Cache model file objects. Assumes model files are thread-safe.
+ */
+public class OpenNLPOpsFactory {
+  private static Map<String,SentenceModel> sentenceModels = new ConcurrentHashMap<>();
+  private static ConcurrentHashMap<String,TokenizerModel> tokenizerModels = new ConcurrentHashMap<>();
+  private static ConcurrentHashMap<String,POSModel> posTaggerModels = new ConcurrentHashMap<>();
+  private static ConcurrentHashMap<String,ChunkerModel> chunkerModels = new ConcurrentHashMap<>();
+  private static Map<String,TokenNameFinderModel> nerModels = new ConcurrentHashMap<>();
+  private static Map<String,LemmatizerModel> lemmatizerModels = new ConcurrentHashMap<>();
+  private static Map<String,String> lemmaDictionaries = new ConcurrentHashMap<>();
+
+  public static NLPSentenceDetectorOp getSentenceDetector(String modelName) throws IOException {
+    if (modelName != null) {
+      SentenceModel model = sentenceModels.get(modelName);
+      return new NLPSentenceDetectorOp(model);
+    } else {
+      return new NLPSentenceDetectorOp();
+    }
+  }
+
+  public static SentenceModel getSentenceModel(String modelName, ResourceLoader loader) throws IOException {
+    SentenceModel model = sentenceModels.get(modelName);
+    if (model == null) {
+      model = new SentenceModel(loader.openResource(modelName));
+      sentenceModels.put(modelName, model);
+    }
+    return model;
+  }
+
+  public static NLPTokenizerOp getTokenizer(String modelName) throws IOException {
+    if (modelName == null) {
+      return new NLPTokenizerOp();
+    } else {
+      TokenizerModel model = tokenizerModels.get(modelName);
+      return new NLPTokenizerOp(model);
+    }
+  }
+
+  public static TokenizerModel getTokenizerModel(String modelName, ResourceLoader loader) throws IOException {
+    TokenizerModel model = tokenizerModels.get(modelName);
+    if (model == null) {
+      model = new TokenizerModel(loader.openResource(modelName));
+      tokenizerModels.put(modelName, model);
+    }
+    return model;
+  }
+
+  public static NLPPOSTaggerOp getPOSTagger(String modelName) throws IOException {
+    POSModel model = posTaggerModels.get(modelName);
+    return new NLPPOSTaggerOp(model);
+  }
+
+  public static POSModel getPOSTaggerModel(String modelName, ResourceLoader loader) throws IOException {
+    POSModel model = posTaggerModels.get(modelName);
+    if (model == null) {
+      model = new POSModel(loader.openResource(modelName));
+      posTaggerModels.put(modelName, model);
+    }
+    return model;
+  }
+
+  public static NLPChunkerOp getChunker(String modelName) throws IOException {
+    ChunkerModel model = chunkerModels.get(modelName);
+    return new NLPChunkerOp(model);
+  }
+
+  public static ChunkerModel getChunkerModel(String modelName, ResourceLoader loader) throws IOException {
+    ChunkerModel model = chunkerModels.get(modelName);
+    if (model == null) {
+      model = new ChunkerModel(loader.openResource(modelName));
+      chunkerModels.put(modelName, model);
+    }
+    return model;
+  }
+
+  public static NLPNERTaggerOp getNERTagger(String modelName) throws IOException {
+    TokenNameFinderModel model = nerModels.get(modelName);
+    return new NLPNERTaggerOp(model);
+  }
+
+  public static TokenNameFinderModel getNERTaggerModel(String modelName, ResourceLoader loader) throws IOException {
+    TokenNameFinderModel model = nerModels.get(modelName);
+    if (model == null) {
+      model = new TokenNameFinderModel(loader.openResource(modelName));
+      nerModels.put(modelName, model);
+    }
+    return model;
+  }
+
+  public static NLPLemmatizerOp getLemmatizer(String dictionaryFile, String lemmatizerModelFile) throws IOException {
+    assert dictionaryFile != null || lemmatizerModelFile != null : "At least one parameter must be non-null";
+    InputStream dictionaryInputStream = null;
+    if (dictionaryFile != null) {
+      String dictionary = lemmaDictionaries.get(dictionaryFile);
+      dictionaryInputStream = new ByteArrayInputStream(dictionary.getBytes(StandardCharsets.UTF_8));
+    }
+    LemmatizerModel lemmatizerModel = lemmatizerModelFile == null ? null : lemmatizerModels.get(lemmatizerModelFile);
+    return new NLPLemmatizerOp(dictionaryInputStream, lemmatizerModel);
+  }
+
+  public static String getLemmatizerDictionary(String dictionaryFile, ResourceLoader loader) throws IOException {
+    String dictionary = lemmaDictionaries.get(dictionaryFile);
+    if (dictionary == null) {
+      Reader reader = new InputStreamReader(loader.openResource(dictionaryFile), StandardCharsets.UTF_8);
+      StringBuilder builder = new StringBuilder();
+      char[] chars = new char[8092];
+      int numRead = 0;
+      do {
+        numRead = reader.read(chars, 0, chars.length);
+        if (numRead > 0) {
+          builder.append(chars, 0, numRead);
+        }
+      } while (numRead > 0);
+      dictionary = builder.toString();
+      lemmaDictionaries.put(dictionaryFile, dictionary);
+    }
+    return dictionary;
+  }
+
+  public static LemmatizerModel getLemmatizerModel(String modelName, ResourceLoader loader) throws IOException {
+    LemmatizerModel model = lemmatizerModels.get(modelName);
+    if (model == null) {
+      model = new LemmatizerModel(loader.openResource(modelName));
+      lemmatizerModels.put(modelName, model);
+    }
+    return model;
+  }
+
+  // keeps unit test from blowing out memory
+  public static void clearModels() {
+    sentenceModels.clear();
+    tokenizerModels.clear();
+    posTaggerModels.clear();
+    chunkerModels.clear();
+    nerModels.clear();
+    lemmaDictionaries.clear();
+  }
+}
diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/package-info.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/package-info.java
new file mode 100644
index 0000000000..523a0842c9
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/package-info.java
@@ -0,0 +1,21 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/**
+ * Tools to supply access to OpenNLP components.
+ */
+package org.apache.lucene.analysis.opennlp.tools;
diff --git a/lucene/analysis/opennlp/src/java/overview.html b/lucene/analysis/opennlp/src/java/overview.html
new file mode 100644
index 0000000000..bf70e95507
--- /dev/null
+++ b/lucene/analysis/opennlp/src/java/overview.html
@@ -0,0 +1,61 @@
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<html>
+<head>
+  <META http-equiv="Content-Type" content="text/html; charset=UTF-8">
+  <title>
+    Apache Lucene OpenNLP integration module
+  </title>
+</head>
+<body>
+<p>
+  This module exposes functionality from
+  <a href="http://opennlp.apache.org">Apache OpenNLP</a> to Apache Lucene.
+  The Apache OpenNLP library is a machine learning based toolkit for the processing of natural language text.
+<p>
+  For an introduction to Lucene's analysis API, see the {@link org.apache.lucene.analysis} package documentation.
+<p>
+  The OpenNLP Tokenizer behavior is similar to the WhiteSpaceTokenizer but is smart about
+  inter-word punctuation. The term stream looks very much like the way you parse words and
+  punctuation while reading.  The major difference between this tokenizer and most other
+  tokenizers shipped with Lucene is that punctuation is tokenized.  This is required for
+  the following taggers to operate properly.
+<p>
+  The OpenNLP taggers annotate terms using the <code>TypeAttribute</code>.
+<ul>
+  <li><code>OpenNLPTokenizer</code> segments text into sentences or words. This Tokenizer
+    uses the OpenNLP Sentence Detector and/or Tokenizer classes.  When used together, the
+    Tokenizer receives sentences and can do a better job.</li>
+  <li><code>OpenNLPFilter</code> tags words using one or more technologies: Part-of-Speech,
+    Chunking, and Named Entity Recognition.  These tags are assigned as token types.  Note that
+    only of these operations will tag
+  </li>
+</ul>
+<p>
+  Since the <code>TypeAttribute</code> is not stored in the index, it is recommended that one
+  of these filters is used following <code>OpenNLPFilter</code> to enable search against the
+  assigned tags:
+<ul>
+  <li><code>TypeAsPayloadFilter</code> copies the <code>TypeAttribute</code> value to the
+    <code>PayloadAttribute</code></li>
+  <li><code>TypeAsSynonymFilter</code> creates a cloned token at the same position as each
+    tagged token, and copies the {{TypeAttribute}} value to the {{CharTermAttribute}}, optionally
+    with a customized prefix (so that tags effectively occupy a different namespace from token
+    text).</li>
+</ul>
+</body>
+</html>
diff --git a/lucene/analysis/opennlp/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory b/lucene/analysis/opennlp/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory
new file mode 100644
index 0000000000..61a685d934
--- /dev/null
+++ b/lucene/analysis/opennlp/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory
@@ -0,0 +1,18 @@
+#  Licensed to the Apache Software Foundation (ASF) under one or more
+#  contributor license agreements.  See the NOTICE file distributed with
+#  this work for additional information regarding copyright ownership.
+#  The ASF licenses this file to You under the Apache License, Version 2.0
+#  (the "License"); you may not use this file except in compliance with
+#  the License.  You may obtain a copy of the License at
+#
+#       http://www.apache.org/licenses/LICENSE-2.0
+#
+#  Unless required by applicable law or agreed to in writing, software
+#  distributed under the License is distributed on an "AS IS" BASIS,
+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#  See the License for the specific language governing permissions and
+#  limitations under the License.
+
+org.apache.lucene.analysis.opennlp.OpenNLPChunkerFilterFactory
+org.apache.lucene.analysis.opennlp.OpenNLPLemmatizerFilterFactory
+org.apache.lucene.analysis.opennlp.OpenNLPPOSFilterFactory
diff --git a/lucene/analysis/opennlp/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenizerFactory b/lucene/analysis/opennlp/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenizerFactory
new file mode 100644
index 0000000000..076b308848
--- /dev/null
+++ b/lucene/analysis/opennlp/src/resources/META-INF/services/org.apache.lucene.analysis.util.TokenizerFactory
@@ -0,0 +1,16 @@
+#  Licensed to the Apache Software Foundation (ASF) under one or more
+#  contributor license agreements.  See the NOTICE file distributed with
+#  this work for additional information regarding copyright ownership.
+#  The ASF licenses this file to You under the Apache License, Version 2.0
+#  (the "License"); you may not use this file except in compliance with
+#  the License.  You may obtain a copy of the License at
+#
+#       http://www.apache.org/licenses/LICENSE-2.0
+#
+#  Unless required by applicable law or agreed to in writing, software
+#  distributed under the License is distributed on an "AS IS" BASIS,
+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#  See the License for the specific language governing permissions and
+#  limitations under the License.
+
+org.apache.lucene.analysis.opennlp.OpenNLPTokenizerFactory
diff --git a/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-chunker.bin b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-chunker.bin
new file mode 100644
index 0000000000000000000000000000000000000000..8151914c291cfd8638993065784bc3020cb238f1
GIT binary patch
literal 89915
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
KnLTa@<NpC*I@XT>

literal 0
HcmV?d00001

diff --git a/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-lemmas.dict b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-lemmas.dict
new file mode 100644
index 0000000000..d1d486c202
--- /dev/null
+++ b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-lemmas.dict
@@ -0,0 +1,12 @@
+they	NNP	they
+sent	VBD	send
+him	PRP	he
+running	VBG	run
+in	IN	in
+the	DT	the
+evening	NN	evening
+he	PRP	he
+did	VBD	do
+not	RB	not
+come	VB	come
+back	RB	back
diff --git a/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-lemmatizer.bin b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-lemmatizer.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e62df7e449c6b52f4d6eb92eb65ac84c80607fa7
GIT binary patch
literal 7370
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
Zxc|*<Kovx!e<$GnIU)bt{AB-j{{<^FKGOgI

literal 0
HcmV?d00001

diff --git a/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-ner-person.bin b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-ner-person.bin
new file mode 100644
index 0000000000000000000000000000000000000000..0b40aac0202266b1d2c965b1d42bd84911bec496
GIT binary patch
literal 1700
zcmaJ>dpy%?7~e34%wmXBZkaAFIc;ZzDMGX}MoCg;<%hX!+2pQ-M1{2yadOG6+|o=T
zw^5|RP(zI&iVB@rMCr_5Iej|k`~2~~&+~cT_w#<9@ALf<aN-gO5EKdpwPYmXKx?2V
z+6R&-WN&~TY<QAJJqgf)$pHNngX7m~1h<}DlG)pZVFLRc_M{hJ5KK0_@4@jq8=d?M
zpEziJTPo?wYnZQjdLj&^$MTD{&(6j9rd4)ctGLg$dq>Y2zbf4;32;XkyquUh7rg6j
z+@r`th+`a=LYoeWS4ZOq#?zfqJ^r+VzUV*cOOm9WFyzy%yS8qm_<^MDbQf#DA(f%n
z;BH>(7QoU}J~6-B`)%8{*2P}Q<p3Xk%lh)V!E?)Jj=moTpNY*3v-DL*hbPTXeOziU
zd}1<qmgO@CVP4@4OqP_TmwDAD+VCL7e|@+igq@fQzPpUK;HA1~vP0!*stHlz1e_Ff
zZr^8}8BsIrz#tIeKidTtouH5c0b4S~3!oVWQoVqHa%a3_%O3b9Bv*!aQ@x({iLIa&
z!5`_UN>b|vUdh-GVFK-66MHqlD&H?{`5u#0MLfq7N0WB+4TYm-JF~17wCvm%<K$=H
z5%|j>3t49qhgkH*FD}<2$tg+Vll&B^{<!t01)d=XxkjH@gIVpP1)lLJQy=RWAzyBJ
zKA-343~SrISy#5tRL<k=#t#qsL9XIY{BVah*Oa%oDX7TcX5{j-9<sFw&^j-Klg@Fj
z9)uK4)Va|7*78l{?AU~uSwdQbv!52^4}C9aiuHDyzBv&W{<|DU>07dj*u+?XQjoI6
zM;nA?Xe%0bcrr+1cU!N<vv<;!=UXStt!4dRr@>q_Cm9voTY0uZ%npOyP-K#I_VzOv
z;PYiyxZ!?cKvdoV{r2n7I~#fqjF=!khe#O0E>ovVixkY1<MJe`Yc4!3NzIGDmSInY
z-GG;;D)7s)-A)A|su)O6R|Lc{qZ(Hec)GSj{&5xh@Aq!mNhz;pgiCD;v+_X}>82IW
zQG5<%F?z0l?i5yNafLX2F=d(8RGt$~6qW0Si<ZlpzP~Q*?hhs|4^sn&1Lx2$=A>2`
zAI(zlVvE>Tko-T!5hBKY017}O1ygB;-T*216b%p+3J>C_V@7a`_NL>Q;zMGrcR?x)
zR-tcxdF=Co@(6Ut!^8LwWz*;h!K?{9ciF^1r4qa1f%0A<n*y8$eS(`lhkVj3zGeav
z4b;)F#!&yE+f1|DN=F|JE~)t@NwTe!eZ`ZDGOhG{#_!SDP8uI$Wa9>MX(5sfE!fDE
zt|MhOm-)w#VIh{U{mG+llZ%~f1Lh84J$wgliX1NI++&MM^gL_H!EZ~`d>KM57}&*a
zusRXSLRRpz9`o|ykug{Tv%O&^McI(AzBi*;krP&GT-ANj2BHs5^%)iRk5XC}a@lcR
zW2&kj8=85S2?{UR)#D|(5B9lkiE>_`#dF=;Z)eKu?r}{Anm5TFuB2CdQ?Q8^bT4Ys
zi;@#<-FvXe>)xRUnD0t8T#|XQoSYlztCJz}^++T{z--K17(of~sz>nrhP<e>jLPPe
z&c=X_T?J0c*BkV6Gfae=FQM#M@Ww}OO#H~MjwY%)JuF2-eGKh5vva__d0O`vGMr^k
zu1+wCCUH`Aj^RPuv~O}2cwt`(oR+>;)@Nj17C1iQD!w|drRT;lK$;rD<4^C+|4Lx{
zs*$4=4LbD5>(r(adhY5kw)S1Z7vtLA%p*L{Db4yxT`+!#Jl`u*`+n<&vuIC#w{d3#
z(#8ko*doZzflV{P&twIqNUr0NDD&U$Ma1&3jM4j%2V-r$z@vDmj9_S@O~F9}vyx%<
z?Lx_|+Ug!@BU8;4c@B}h(n-*sK-G8AlZ*YsB8La|lfvj8?n@}mX{bBG*}%%jbRF2G
z7OLmbCu?@CD_<a%+-AKy`>WXMtYU=dMn5qSs99olR>5Kj&<{Ib>s+gL{%`!k+<$&x
utq@iX?gw^=<ngoJ{d{}v*H*>y16tz0mJR_25lIdN5*GzWw01&Pvwr|D%he?S

literal 0
HcmV?d00001

diff --git a/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-pos-maxent.bin b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-pos-maxent.bin
new file mode 100644
index 0000000000000000000000000000000000000000..b77fb46f2311e1715a9f58afe2e8fd780c6525e3
GIT binary patch
literal 18424
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

literal 0
HcmV?d00001

diff --git a/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-sent.bin b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-sent.bin
new file mode 100644
index 0000000000000000000000000000000000000000..4252bcbf376f6f20b70d30e65dc8538153c1d5bb
GIT binary patch
literal 1050
zcmWIWW@Zs#;Nak3*gK=cn*j+31KGKWd6{Xc#U*+LMfnA(MJ1W3#jz6%^A8z_w3Pqv
z3OTd!O~Ye}ldl*OnW8#Z2zPtN39Wu&xoNJ~pWjg%Lhins`{l0f-L5r!_tL5}jKfl6
za%bM)ntFA*nzqFBB_EG1I;yz7p5bxEp%vV0=6O2;Y?(v7?%n(4cZ%uPq|IClR3044
zGr6}#u;#*-U*G)v*mC(5pT(ct#Amv^M~0WLThf7flB&bweT>;}O1^MUuzPsUe#>me
zk9L<|+_AkdVcrV`C+U}}o(IIfoxl9^Ft>s{r-i)zf0NJ>Un%RQRmNv$amRURP7RO_
zoG^EGTDzu}{cO%J|1Sjpjbf<zJj2o6U15KKH#^6-Nw$w)0>i<Ck%1uqXGn1YRTQV@
zmFVT>r=;d2CzO5XNlQpb*z*4X1G5iL&rzP9N(V7x=I(_vn;4mAFWlJF*rdq3S#Ux^
z!i4mMvzvKOdZZ?t+MJr8yZP+dlgSAuH-7~Rtlr>zQd27}!H6a6)aFnoO{P;7(;B9z
zK3i&FFw4kbmZ8BcV}qy$5pnf2rlUHNGrDu9I(T^<cr{s=TOuO(b9e4ni5XpuZs83q
z5vOuKUv8+0R^UF8ZjzE<l9XVQmSDnoa_W<2o{Nk-d0xo;e*JW-|GXUWZTlx{9*+Ha
z?EJrLJjq*GziGdfpL_4d($xB+|5ki!JN@47-M0OA{v>Txj9&P6ZgcqSf4@R*+ke~j
zX<z0m#oxajyWf?)u}ZJMnp0=wzkmJT*7u2%yubav86R7C)_?t<O@Do#&AT5~81yau
z)$_VNvCGrzCmPqUGoIf5_x|!#(L!N$Tkn@R#%xYGz2`6c<R8!Tlf*aMm)T$5l5xH9
zul>7QrfWm*C9I!zz1}{i@nD_x{g3I(*2TZ^x3~Se+Uwg<#&=J<pUSNjy}$q6>IX&}
zSMmM+toE+Ud-lIu^79W>yxnn-_xIKMI+nO+carwkCoN0f>3{IwbH=~z)8p$m{l9c-
z>z<|UMQ`HO-u^qExwzV4#m~676Q|vNw_CZs++Q0n^WgJoE>3N}E&qQ-9xs``?##dG
z(f5zk*VrBZclILp^RkksH}kLUTd?g;X7k_MH>O_Z-+bqO{fiZkId?K|eyeX``u9uX
z%#{Cm$FDsxu8My<-zRQk{p~5azy!t4@xhmKt|k)$gE<ffcr!AIFd#A`a^eGJMpS?$
jYoZ%~Y&a;5B7hb!JtI<VfHx}}NR9~zD}i)3Gl&NOZiUcR

literal 0
HcmV?d00001

diff --git a/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-tokenizer.bin b/lucene/analysis/opennlp/src/test-files/org/apache/lucene/analysis/opennlp/en-test-tokenizer.bin
new file mode 100644
index 0000000000000000000000000000000000000000..94668c037d2d5ed7b2433d69f903f19b27be5904
GIT binary patch
literal 15096
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
JYvKRd{U7*xw%Pyy

literal 0
HcmV?d00001

diff --git a/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPChunkerFilterFactory.java b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPChunkerFilterFactory.java
new file mode 100644
index 0000000000..013348c5ba
--- /dev/null
+++ b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPChunkerFilterFactory.java
@@ -0,0 +1,74 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.nio.charset.StandardCharsets;
+import java.util.Arrays;
+
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
+import org.apache.lucene.analysis.custom.CustomAnalyzer;
+import org.apache.lucene.analysis.payloads.TypeAsPayloadTokenFilterFactory;
+import org.apache.lucene.analysis.util.ClasspathResourceLoader;
+
+/**
+ * Needs the OpenNLP Tokenizer because it creates full streams of punctuation.
+ * Needs the OpenNLP POS tagger for the POS tags.
+ *
+ * Tagging models are created from tiny test data in opennlp/tools/test-model-data/ and are not very accurate.
+ */
+public class TestOpenNLPChunkerFilterFactory extends BaseTokenStreamTestCase {
+
+  private static final String SENTENCES = "Sentence number 1 has 6 words. Sentence number 2, 5 words.";
+  private static final String[] SENTENCES_punc
+      = {"Sentence", "number", "1", "has", "6", "words", ".", "Sentence", "number", "2", ",", "5", "words", "."};
+  private static final int[] SENTENCES_startOffsets = {0, 9, 16, 18, 22, 24, 29, 31, 40, 47, 48, 50, 52, 57};
+  private static final int[] SENTENCES_endOffsets = {8, 15, 17, 21, 23, 29, 30, 39, 46, 48, 49, 51, 57, 58};
+  private static final String[] SENTENCES_chunks
+      = { "B-NP", "I-NP", "I-NP", "B-VP", "B-NP", "I-NP", "O", "B-NP", "I-NP", "I-NP", "O", "B-NP", "I-NP", "O" };
+
+  private static final String sentenceModelFile = "en-test-sent.bin";
+  private static final String tokenizerModelFile = "en-test-tokenizer.bin";
+  private static final String posTaggerModelFile = "en-test-pos-maxent.bin";
+  private static final String chunkerModelFile = "en-test-chunker.bin";
+
+
+  private static byte[][] toPayloads(String... strings) {
+    return Arrays.stream(strings).map(s -> s == null ? null : s.getBytes(StandardCharsets.UTF_8)).toArray(byte[][]::new);
+  }
+
+  public void testBasic() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter("opennlpChunker", "chunkerModel", chunkerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_punc, SENTENCES_startOffsets, SENTENCES_endOffsets,
+        SENTENCES_chunks, null, null, true);
+  }
+
+  public void testPayloads() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter("opennlpChunker", "chunkerModel", chunkerModelFile)
+        .addTokenFilter(TypeAsPayloadTokenFilterFactory.class)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_punc, SENTENCES_startOffsets, SENTENCES_endOffsets,
+        null, null, null, true, toPayloads(SENTENCES_chunks));
+  }
+}
diff --git a/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPLemmatizerFilterFactory.java b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPLemmatizerFilterFactory.java
new file mode 100644
index 0000000000..0491b9102c
--- /dev/null
+++ b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPLemmatizerFilterFactory.java
@@ -0,0 +1,169 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
+import org.apache.lucene.analysis.custom.CustomAnalyzer;
+import org.apache.lucene.analysis.miscellaneous.KeywordRepeatFilterFactory;
+import org.apache.lucene.analysis.miscellaneous.RemoveDuplicatesTokenFilterFactory;
+import org.apache.lucene.analysis.util.ClasspathResourceLoader;
+
+public class TestOpenNLPLemmatizerFilterFactory extends BaseTokenStreamTestCase {
+
+  private static final String SENTENCE = "They sent him running in the evening.";
+  private static final String[] SENTENCE_dict_punc =   {"they", "send", "he",  "run",  "in", "the", "evening", "."};
+  private static final String[] SENTENCE_maxent_punc = {"they", "send", "he",  "runn", "in", "the", "evening", "."};
+  private static final String[] SENTENCE_posTags =     {"NNP",  "VBD",  "PRP", "VBG",  "IN", "DT",  "NN",      "."};
+
+  private static final String SENTENCES = "They sent him running in the evening. He did not come back.";
+  private static final String[] SENTENCES_dict_punc
+      = {"they", "send", "he",  "run",  "in", "the", "evening", ".", "he",  "do",  "not", "come", "back", "."};
+  private static final String[] SENTENCES_maxent_punc
+      = {"they", "send", "he",  "runn", "in", "the", "evening", ".", "he",  "do",  "not", "come", "back", "."};
+  private static final String[] SENTENCES_posTags
+      = {"NNP",  "VBD",  "PRP", "VBG",  "IN", "DT",  "NN",      ".", "PRP", "VBD", "RB",  "VB",   "RB",   "."};
+
+  private static final String SENTENCE_both = "Konstantin Kalashnitsov constantly caliphed.";
+  private static final String[] SENTENCE_both_punc
+      = {"konstantin", "kalashnitsov", "constantly", "caliph", "."};
+  private static final String[] SENTENCE_both_posTags
+      = {"IN",         "JJ",          "NN",          "VBN",    "."};
+
+  private static final String SENTENCES_both = "Konstantin Kalashnitsov constantly caliphed. Coreena could care, completely.";
+  private static final String[] SENTENCES_both_punc
+      = {"konstantin", "kalashnitsov", "constantly", "caliph", ".", "coreena", "could", "care", ",", "completely", "."};
+  private static final String[] SENTENCES_both_posTags
+      = {"IN",         "JJ",           "NN",          "VBN",    ".", "NNP",     "VBN",   "NN",   ",", "NN",         "."};
+
+  private static final String[] SENTENCES_dict_keep_orig_punc
+      = {"They", "they", "sent", "send", "him", "he", "running", "run",  "in", "the", "evening", ".", "He", "he",   "did", "do", "not", "come", "back", "."};
+  private static final String[] SENTENCES_max_ent_keep_orig_punc
+      = {"They", "they", "sent", "send", "him", "he", "running", "runn", "in", "the", "evening", ".", "He", "he",   "did", "do", "not", "come", "back", "."};
+  private static final String[] SENTENCES_keep_orig_posTags
+      = {"NNP",  "NNP",  "VBD",  "VBD",  "PRP", "PRP", "VBG",    "VBG",  "IN", "DT",  "NN",      ".", "PRP", "PRP", "VBD", "VBD", "RB",  "VB",  "RB",   "."};
+
+  private static final String[] SENTENCES_both_keep_orig_punc
+      = {"Konstantin", "konstantin", "Kalashnitsov", "kalashnitsov", "constantly", "caliphed", "caliph", ".", "Coreena", "coreena", "could", "care", ",", "completely", "."};
+  private static final String[] SENTENCES_both_keep_orig_posTags
+      = {"IN",         "IN",         "JJ",           "JJ",           "NN",         "VBN",      "VBN",    ".", "NNP",     "NNP",     "VBN",   "NN",   ",", "NN",         "."};
+
+
+  private static final String tokenizerModelFile = "en-test-tokenizer.bin";
+  private static final String sentenceModelFile = "en-test-sent.bin";
+  private static final String posTaggerModelFile = "en-test-pos-maxent.bin";
+  private static final String lemmatizerModelFile = "en-test-lemmatizer.bin";
+  private static final String lemmatizerDictFile = "en-test-lemmas.dict";
+
+
+  public void test1SentenceDictionaryOnly() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", "en-test-pos-maxent.bin")
+        .addTokenFilter("opennlplemmatizer", "dictionary", "en-test-lemmas.dict")
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCE, SENTENCE_dict_punc, null, null,
+        SENTENCE_posTags, null, null, true);
+  }
+
+  public void test2SentencesDictionaryOnly() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter("opennlplemmatizer", "dictionary", lemmatizerDictFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_dict_punc, null, null,
+        SENTENCES_posTags, null, null, true);
+  }
+
+  public void test1SentenceMaxEntOnly() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter("opennlplemmatizer", "lemmatizerModel", lemmatizerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCE, SENTENCE_maxent_punc, null, null,
+        SENTENCE_posTags, null, null, true);
+  }
+
+  public void test2SentencesMaxEntOnly() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter("OpenNLPLemmatizer", "lemmatizerModel", lemmatizerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_maxent_punc, null, null,
+        SENTENCES_posTags, null, null, true);
+  }
+
+  public void test1SentenceDictionaryAndMaxEnt() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", "en-test-pos-maxent.bin")
+        .addTokenFilter("opennlplemmatizer", "dictionary", "en-test-lemmas.dict", "lemmatizerModel", lemmatizerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCE_both, SENTENCE_both_punc, null, null,
+        SENTENCE_both_posTags, null, null, true);
+  }
+
+  public void test2SentencesDictionaryAndMaxEnt() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter("opennlplemmatizer", "dictionary", lemmatizerDictFile, "lemmatizerModel", lemmatizerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES_both, SENTENCES_both_punc, null, null,
+        SENTENCES_both_posTags, null, null, true);
+  }
+
+  public void testKeywordAttributeAwarenessDictionaryOnly() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter(KeywordRepeatFilterFactory.class)
+        .addTokenFilter("opennlplemmatizer", "dictionary", lemmatizerDictFile)
+        .addTokenFilter(RemoveDuplicatesTokenFilterFactory.class)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_dict_keep_orig_punc, null, null,
+        SENTENCES_keep_orig_posTags, null, null, true);
+  }
+
+  public void testKeywordAttributeAwarenessMaxEntOnly() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter(KeywordRepeatFilterFactory.class)
+        .addTokenFilter("opennlplemmatizer", "lemmatizerModel", lemmatizerModelFile)
+        .addTokenFilter(RemoveDuplicatesTokenFilterFactory.class)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_max_ent_keep_orig_punc, null, null,
+        SENTENCES_keep_orig_posTags, null, null, true);
+  }
+
+  public void testKeywordAttributeAwarenessDictionaryAndMaxEnt() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter(KeywordRepeatFilterFactory.class)
+        .addTokenFilter("opennlplemmatizer", "dictionary", lemmatizerDictFile, "lemmatizerModel", lemmatizerModelFile)
+        .addTokenFilter(RemoveDuplicatesTokenFilterFactory.class)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES_both, SENTENCES_both_keep_orig_punc, null, null,
+        SENTENCES_both_keep_orig_posTags, null, null, true);
+  }
+
+}
diff --git a/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPPOSFilterFactory.java b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPPOSFilterFactory.java
new file mode 100644
index 0000000000..10372d0197
--- /dev/null
+++ b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPPOSFilterFactory.java
@@ -0,0 +1,95 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.nio.charset.StandardCharsets;
+import java.util.Arrays;
+
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
+import org.apache.lucene.analysis.custom.CustomAnalyzer;
+import org.apache.lucene.analysis.payloads.TypeAsPayloadTokenFilterFactory;
+import org.apache.lucene.analysis.util.ClasspathResourceLoader;
+
+/**
+ * Needs the OpenNLP Tokenizer because it creates full streams of punctuation.
+ * The POS model is based on this tokenization.
+ *
+ * Tagging models are created from tiny test data in opennlp/tools/test-model-data/ and are not very accurate.
+ */
+public class TestOpenNLPPOSFilterFactory extends BaseTokenStreamTestCase {
+
+  private static final String SENTENCES = "Sentence number 1 has 6 words. Sentence number 2, 5 words.";
+  private static final String[] SENTENCES_punc
+      = {"Sentence", "number", "1", "has", "6", "words", ".", "Sentence", "number", "2", ",", "5", "words", "."};
+  private static final int[] SENTENCES_startOffsets = {0, 9, 16, 18, 22, 24, 29, 31, 40, 47, 48, 50, 52, 57};
+  private static final int[] SENTENCES_endOffsets = {8, 15, 17, 21, 23, 29, 30, 39, 46, 48, 49, 51, 57, 58};
+  private static final String[] SENTENCES_posTags
+      = {"NN", "NN", "CD", "VBZ", "CD", "NNS", ".", "NN", "NN", "CD", ",", "CD", "NNS", "."};
+  private static final String NAMES2 = "Royal Flash is a tale about Harry Flashman.";
+  private static final String[] NAMES2_punc = {"Royal", "Flash", "is", "a", "tale", "about", "Harry", "Flashman", "."};
+  private static final String[] NAMES2_OUT = { "word", "word", "word", "word", "word", "word", "word", "person", "word" };
+
+  private static final String NO_BREAK = "No period";
+  private static final String[] NO_BREAK_terms = {"No", "period"};
+  private static final int[] NO_BREAK_startOffsets = {0, 3};
+  private static final int[] NO_BREAK_endOffsets = {2, 9};
+
+  private static final String sentenceModelFile = "en-test-sent.bin";
+  private static final String tokenizerModelFile = "en-test-tokenizer.bin";
+  private static final String posTaggerModelFile = "en-test-pos-maxent.bin";
+
+
+  private static byte[][] toPayloads(String... strings) {
+    return Arrays.stream(strings).map(s -> s == null ? null : s.getBytes(StandardCharsets.UTF_8)).toArray(byte[][]::new);
+  }
+
+  public void testBasic() throws IOException {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_punc, SENTENCES_startOffsets, SENTENCES_endOffsets);
+  }
+
+  public void testPOS() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_punc, SENTENCES_startOffsets, SENTENCES_endOffsets,
+        SENTENCES_posTags, null, null, true);
+
+    analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .addTokenFilter(TypeAsPayloadTokenFilterFactory.class)
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_punc, SENTENCES_startOffsets, SENTENCES_endOffsets,
+        null, null, null, true, toPayloads(SENTENCES_posTags));
+  }
+
+  public void testNoBreak() throws Exception {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "tokenizerModel", tokenizerModelFile, "sentenceModel", sentenceModelFile)
+        .addTokenFilter("opennlpPOS", "posTaggerModel", posTaggerModelFile)
+        .build();
+    assertAnalyzesTo(analyzer, NO_BREAK, NO_BREAK_terms, NO_BREAK_startOffsets, NO_BREAK_endOffsets,
+        null, null, null, true);
+  }
+}
diff --git a/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPSentenceBreakIterator.java b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPSentenceBreakIterator.java
new file mode 100644
index 0000000000..4ee6570643
--- /dev/null
+++ b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPSentenceBreakIterator.java
@@ -0,0 +1,201 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.text.BreakIterator;
+import java.text.CharacterIterator;
+
+import org.apache.lucene.analysis.opennlp.tools.NLPSentenceDetectorOp;
+import org.apache.lucene.analysis.opennlp.tools.OpenNLPOpsFactory;
+import org.apache.lucene.analysis.util.CharArrayIterator;
+import org.apache.lucene.analysis.util.ClasspathResourceLoader;
+import org.apache.lucene.util.LuceneTestCase;
+import org.junit.BeforeClass;
+
+public class TestOpenNLPSentenceBreakIterator extends LuceneTestCase {
+
+  private static final String TEXT
+      //                                                                                                     111
+      //           111111111122222222223333333333444444444455555555556666666666777777777788888888889999999999000
+      // 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012
+      = "Sentence number 1 has 6 words. Sentence number 2, 5 words. And finally, sentence number 3 has 8 words.";
+  private static final String[] SENTENCES = new String[] {
+    "Sentence number 1 has 6 words. ", "Sentence number 2, 5 words. ", "And finally, sentence number 3 has 8 words." };
+  private static final String PADDING = " Word. Word. ";
+  private static final String sentenceModelFile = "en-test-sent.bin";
+
+
+  @BeforeClass
+  public static void populateCache() throws IOException {
+    OpenNLPOpsFactory.getSentenceModel
+        (sentenceModelFile, new ClasspathResourceLoader(TestOpenNLPSentenceBreakIterator.class));
+  }
+
+  public void testThreeSentences() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText(TEXT); // String is converted to StringCharacterIterator
+    do3SentenceTest(bi);
+
+    bi.setText(getCharArrayIterator(TEXT));
+    do3SentenceTest(bi);
+  }
+
+  private CharacterIterator getCharArrayIterator(String text) {
+    return getCharArrayIterator(text, 0, text.length());
+  }
+
+  private CharacterIterator getCharArrayIterator(String text, int start, int length) {
+    CharArrayIterator charArrayIterator = new CharArrayIterator() {
+      // Lie about all surrogates to the sentence tokenizer,
+      // instead we treat them all as SContinue so we won't break around them.
+      @Override
+      protected char jreBugWorkaround(char ch) {
+        return ch >= 0xD800 && ch <= 0xDFFF ? 0x002C : ch;
+      }
+    };
+    charArrayIterator.setText(text.toCharArray(), start, length);
+    return charArrayIterator;
+  }
+
+  private void do3SentenceTest(BreakIterator bi) {
+    assertEquals(0, bi.current());
+    assertEquals(0, bi.first());
+    assertEquals(SENTENCES[0], TEXT.substring(bi.current(), bi.next()));
+    assertEquals(SENTENCES[1], TEXT.substring(bi.current(), bi.next()));
+    int current = bi.current();
+    assertEquals(bi.getText().getEndIndex(), bi.next());
+    int next = bi.current();
+    assertEquals(SENTENCES[2], TEXT.substring(current, next));
+    assertEquals(BreakIterator.DONE, bi.next());
+
+    assertEquals(TEXT.length(), bi.last());
+    int end = bi.current();
+    assertEquals(SENTENCES[2], TEXT.substring(bi.previous(), end));
+    end = bi.current();
+    assertEquals(SENTENCES[1], TEXT.substring(bi.previous(), end));
+    end = bi.current();
+    assertEquals(SENTENCES[0], TEXT.substring(bi.previous(), end));
+    assertEquals(BreakIterator.DONE, bi.previous());
+    assertEquals(0, bi.current());
+
+    assertEquals(59, bi.following(39));
+    assertEquals(59, bi.following(31));
+    assertEquals(31, bi.following(30));
+
+    assertEquals(0, bi.preceding(57));
+    assertEquals(0, bi.preceding(58));
+    assertEquals(31, bi.preceding(59));
+
+    assertEquals(0, bi.first());
+    assertEquals(59, bi.next(2));
+    assertEquals(0, bi.next(-2));
+  }
+
+  public void testSingleSentence() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText(getCharArrayIterator(SENTENCES[0]));
+    test1Sentence(bi, SENTENCES[0]);
+  }
+
+  private void test1Sentence(BreakIterator bi, String text) {
+    int start = bi.getText().getBeginIndex();
+    assertEquals(start, bi.first());
+    int current = bi.current();
+    assertEquals(bi.getText().getEndIndex(), bi.next());
+    int end = bi.current() - start;
+    assertEquals(text, text.substring(current - start, end - start));
+
+    assertEquals(text.length(), bi.last() - start);
+    end = bi.current();
+    bi.previous();
+    assertEquals(BreakIterator.DONE, bi.previous());
+    int previous = bi.current();
+    assertEquals(text, text.substring(previous - start, end - start));
+    assertEquals(start, bi.current());
+
+    assertEquals(BreakIterator.DONE, bi.following(bi.last() / 2 + start));
+
+    assertEquals(BreakIterator.DONE, bi.preceding(bi.last() / 2 + start));
+
+    assertEquals(start, bi.first());
+    assertEquals(BreakIterator.DONE, bi.next(13));
+    assertEquals(BreakIterator.DONE, bi.next(-8));
+  }
+
+  public void testSliceEnd() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText(getCharArrayIterator(SENTENCES[0] + PADDING, 0, SENTENCES[0].length()));
+
+    test1Sentence(bi, SENTENCES[0]);
+  }
+
+  public void testSliceStart() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText(getCharArrayIterator(PADDING + SENTENCES[0], PADDING.length(), SENTENCES[0].length()));
+    test1Sentence(bi, SENTENCES[0]);
+  }
+
+  public void testSliceMiddle() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText(getCharArrayIterator(PADDING + SENTENCES[0] + PADDING, PADDING.length(), SENTENCES[0].length()));
+
+    test1Sentence(bi, SENTENCES[0]);
+  }
+
+  /** the current position must be ignored, initial position is always first() */
+  public void testFirstPosition() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText(getCharArrayIterator(SENTENCES[0]));
+    assertEquals(SENTENCES[0].length(), bi.last()); // side-effect: set current position to last()
+    test1Sentence(bi, SENTENCES[0]);
+  }
+
+  public void testWhitespaceOnly() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText("   \n \n\n\r\n\t  \n");
+    test0Sentences(bi);
+  }
+
+  public void testEmptyString() throws Exception {
+    NLPSentenceDetectorOp sentenceDetectorOp = OpenNLPOpsFactory.getSentenceDetector(sentenceModelFile);
+    BreakIterator bi = new OpenNLPSentenceBreakIterator(sentenceDetectorOp);
+    bi.setText("");
+    test0Sentences(bi);
+  }
+
+  private void test0Sentences(BreakIterator bi) {
+    assertEquals(0, bi.current());
+    assertEquals(0, bi.first());
+    assertEquals(BreakIterator.DONE, bi.next());
+    assertEquals(0, bi.last());
+    assertEquals(BreakIterator.DONE, bi.previous());
+    assertEquals(BreakIterator.DONE, bi.following(0));
+    assertEquals(BreakIterator.DONE, bi.preceding(0));
+    assertEquals(0, bi.first());
+    assertEquals(BreakIterator.DONE, bi.next(13));
+    assertEquals(BreakIterator.DONE, bi.next(-8));
+  }
+}
diff --git a/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPTokenizerFactory.java b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPTokenizerFactory.java
new file mode 100644
index 0000000000..db2bbb292e
--- /dev/null
+++ b/lucene/analysis/opennlp/src/test/org/apache/lucene/analysis/opennlp/TestOpenNLPTokenizerFactory.java
@@ -0,0 +1,97 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.analysis.opennlp;
+
+import java.io.IOException;
+import java.io.StringReader;
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
+import org.apache.lucene.analysis.Tokenizer;
+import org.apache.lucene.analysis.custom.CustomAnalyzer;
+import org.apache.lucene.analysis.util.ClasspathResourceLoader;
+import org.junit.Test;
+
+/**
+ * Tests the Tokenizer as well- the Tokenizer needs the OpenNLP model files,
+ * which this can load from src/test-files/opennlp/solr/conf
+ *
+ */
+public class TestOpenNLPTokenizerFactory extends BaseTokenStreamTestCase {
+
+  static private String SENTENCES = "Sentence number 1 has 6 words. Sentence number 2, 5 words.";
+  static private String[] SENTENCES_split = {"Sentence number 1 has 6 words. ", "Sentence number 2, 5 words."};
+  static private String[] SENTENCES_punc = {"Sentence", "number", "1", "has", "6", "words", ".", "Sentence", "number", "2", ",", "5", "words", "."};
+  static private int[] SENTENCES_startOffsets = {0, 9, 16, 18, 22, 24, 29, 31, 40, 47, 48, 50, 52, 57};
+  static private int[] SENTENCES_endOffsets = {8, 15, 17, 21, 23, 29, 30, 39, 46, 48, 49, 51, 57, 58};
+
+  static private String SENTENCE1 = "Sentence number 1 has 6 words.";
+  static private String[] SENTENCE1_punc = {"Sentence", "number", "1", "has", "6", "words", "."};
+
+  @Test
+  public void testTokenizer() throws IOException {
+    CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+        .withTokenizer("opennlp", "sentenceModel", "en-test-sent.bin", "tokenizerModel", "en-test-tokenizer.bin")
+        .build();
+    assertAnalyzesTo(analyzer, SENTENCES, SENTENCES_punc, SENTENCES_startOffsets, SENTENCES_endOffsets);
+    assertAnalyzesTo(analyzer, SENTENCE1, SENTENCE1_punc);
+  }
+
+  @Test
+  public void testTokenizerNoSentenceDetector() throws IOException {
+    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {
+      CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+          .withTokenizer("opennlp", "tokenizerModel", "en-test-tokenizer.bin")
+          .build();
+    });
+    assertTrue(expected.getMessage().contains("Configuration Error: missing parameter 'sentenceModel'"));
+  }
+
+  @Test
+  public void testTokenizerNoTokenizer() throws IOException {
+    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {
+      CustomAnalyzer analyzer = CustomAnalyzer.builder(new ClasspathResourceLoader(getClass()))
+          .withTokenizer("opennlp", "sentenceModel", "en-test-sent.bin")
+          .build();
+    });
+    assertTrue(expected.getMessage().contains("Configuration Error: missing parameter 'tokenizerModel'"));
+  }
+
+  // test analyzer caching the tokenizer
+  @Test
+  public void testClose() throws IOException {
+    Map<String,String> args = new HashMap<String,String>() {{ put("sentenceModel", "en-test-sent.bin");
+                                                              put("tokenizerModel", "en-test-tokenizer.bin"); }};
+    OpenNLPTokenizerFactory factory = new OpenNLPTokenizerFactory(args);
+    factory.inform(new ClasspathResourceLoader(getClass()));
+
+    Tokenizer ts = factory.create(newAttributeFactory());
+    ts.setReader(new StringReader(SENTENCES));
+
+    ts.reset();
+    ts.close();
+    ts.reset();
+    ts.setReader(new StringReader(SENTENCES));
+    assertTokenStreamContents(ts, SENTENCES_punc);
+    ts.close();
+    ts.reset();
+    ts.setReader(new StringReader(SENTENCES));
+    assertTokenStreamContents(ts, SENTENCES_punc);
+  }
+}
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/README.txt b/lucene/analysis/opennlp/src/tools/test-model-data/README.txt
new file mode 100644
index 0000000000..3ac0aa39b0
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/README.txt
@@ -0,0 +1,6 @@
+Use small training data to create small models for unit tests.
+Training data derived from Reuters corpus in very unscientific way.
+Tagging done with CCG Urbana-Champaign online demos:
+	http://cogcomp.cs.illinois.edu/page/demos
+
+Run 'ant train-test-models' to generate models from training data here.
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/chunks.txt b/lucene/analysis/opennlp/src/tools/test-model-data/chunks.txt
new file mode 100644
index 0000000000..f02c5b7b71
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/chunks.txt
@@ -0,0 +1,3566 @@
+Iran NNP B-NP
+announced VBD B-VP
+tonight NN B-NP
+that IN B-PP
+its NNS B-NP
+major JJ B-NP
+offensive NN I-NP
+against IN B-PP
+Iraq NNP B-NP
+in IN B-PP
+the DT B-NP
+Gulf NNP I-NP
+war NN I-NP
+had VBD B-VP
+ended VBN I-VP
+after IN B-PP
+dealing VBG B-VP
+savage JJ B-NP
+blows NNS I-NP
+against IN B-PP
+the DT B-NP
+Baghdad NNP I-NP
+government NN I-NP
+. . O
+The DT B-NP
+Iranian JJ I-NP
+news NN I-NP
+agency NN I-NP
+IRNA NNP I-NP
+, , O
+in IN B-PP
+a DT B-NP
+report NN I-NP
+received VBN B-VP
+in IN B-PP
+London NNP B-NP
+, , O
+said VBD B-VP
+the DT B-NP
+operation NN I-NP
+code-named VBN B-VP
+Karbala-5 CD B-NP
+launched VBD B-VP
+into IN B-PP
+Iraq NNP B-NP
+on IN B-PP
+January NNP B-NP
+9 CD I-NP
+was VBD B-VP
+now RB B-ADVP
+over RP B-NP
+. . O
+It PRP B-NP
+quoted VBD B-VP
+a DT B-NP
+joint NN I-NP
+statewment NN I-NP
+by IN B-PP
+the DT B-NP
+Iranian JJ I-NP
+Army NNP I-NP
+and CC I-NP
+Revolutionary NNP I-NP
+Guards NNPS I-NP
+Corps NNP I-NP
+as IN B-PP
+saying VBG B-VP
+that IN B-SBAR
+their DT B-NP
+forces NNS I-NP
+had VBD B-VP
+" JJ B-NP
+dealt VBD B-VP
+one CD B-NP
+of IN B-PP
+the DT B-NP
+severest JJS I-NP
+blows NNS I-NP
+on IN B-PP
+the DT B-NP
+Iraqi JJ I-NP
+war NN I-NP
+machine NN I-NP
+in IN B-PP
+the DT B-NP
+history NN I-NP
+of IN B-PP
+the DT B-NP
+Iraq-imposed JJ I-NP
+war NN I-NP
+. . O
+" NN B-VP
+The DT B-NP
+statement NN I-NP
+by IN B-PP
+the DT B-NP
+Iranian JJ I-NP
+High NNP I-NP
+Command NNP I-NP
+appeared VBD B-VP
+to TO I-VP
+herald VB I-VP
+the DT B-NP
+close NN I-NP
+of IN B-PP
+an DT B-NP
+assault NN I-NP
+on IN B-PP
+the DT B-NP
+port JJ I-NP
+city NN I-NP
+of IN B-PP
+Basra NNP B-NP
+in IN B-PP
+southern JJ B-NP
+Iraq NNP I-NP
+. . O
+" NN B-VP
+The DT B-NP
+operation NN I-NP
+was VBD B-VP
+launched VBN I-VP
+at IN B-PP
+a DT B-NP
+time NN I-NP
+when WRB B-ADVP
+the DT B-NP
+Baghdad NNP I-NP
+government NN I-NP
+was VBD B-VP
+spreading VBG I-VP
+extensive JJ B-NP
+propaganda NN I-NP
+on IN B-PP
+the DT B-NP
+resistance NN I-NP
+power NN I-NP
+of IN B-PP
+its NNS B-NP
+army NN I-NP
+... NNS I-NP
+, , O
+" NNS B-NP
+said VBD B-VP
+the DT B-NP
+statement NN I-NP
+quoted VBN B-VP
+by IN B-PP
+IRNA NNP B-NP
+. . O
+It PRP B-NP
+claimed VBD B-VP
+massive JJ B-NP
+victories NNS I-NP
+in IN B-PP
+the DT B-NP
+seven-week NN I-NP
+offensive NN I-NP
+and CC O
+called VBN B-VP
+on IN B-PP
+supporters NNS B-NP
+of IN B-SBAR
+Baghdad NNP B-NP
+to TO B-VP
+" VB I-VP
+come VBN I-VP
+to TO B-PP
+their IN B-NP
+senses JJ I-NP
+" NNS I-NP
+and CC O
+discontinue VB B-VP
+support NN B-NP
+for IN B-PP
+what WP B-NP
+it PRP B-NP
+called VBD B-VP
+the DT B-NP
+tottering VBG I-NP
+regime NN I-NP
+in IN B-PP
+Iraq NNP B-NP
+. . I-NP
+Iran NNP I-NP
+said VBD B-VP
+its NNS B-NP
+forces NNS I-NP
+had VBD B-VP
+" CD B-NP
+liberated JJ I-NP
+" NN I-NP
+155 CD I-NP
+square JJ I-NP
+kilometers NNS I-NP
+of IN B-PP
+enemy-occupied JJ-occupied B-NP
+territory NN I-NP
+during IN B-PP
+the DT B-NP
+1987 CD I-NP
+offensive NN I-NP
+and CC O
+taken VBN B-VP
+over IN B-PP
+islands NNS B-NP
+, , O
+townships NNS B-NP
+, , O
+rivers NNS B-NP
+and CC O
+part NN B-NP
+of IN B-PP
+a DT B-NP
+road NN I-NP
+leading VBG B-VP
+into IN B-PP
+Basra NNP B-NP
+. . O
+The DT B-NP
+Iranian JJ I-NP
+forces NNS I-NP
+" NNS I-NP
+are VBP B-VP
+in IN B-PP
+full JJ B-NP
+control NN I-NP
+of IN B-PP
+these DT B-NP
+areas NNS I-NP
+, , O
+" NNS B-NP
+the DT B-NP
+statement NN I-NP
+said VBD B-VP
+. . O
+It PRP B-NP
+said VBD B-VP
+81 CD B-NP
+Iraqi JJ I-NP
+brigades NNS I-NP
+and CC I-NP
+battalions NNS I-NP
+were VBD B-VP
+totally RB I-VP
+destroyed VBN I-VP
+, , O
+along IN B-ADVP
+with IN B-PP
+700 CD B-NP
+tanks NNS I-NP
+and CC O
+1,500 CD B-NP
+other JJ I-NP
+vehicles NNS I-NP
+. . O
+The DT B-NP
+victory NN I-NP
+list NN I-NP
+also RB B-ADVP
+included VBD B-VP
+80 CD B-NP
+warplanes NNS I-NP
+downed VBD B-VP
+, , O
+250 CD B-NP
+anti- - I-NP
+aircraft NN I-NP
+guns NNS I-NP
+and CC O
+400 CD B-NP
+pieces NNS I-NP
+of IN B-PP
+military JJ B-NP
+hardware NN I-NP
+destroyed VBN B-VP
+and CC O
+the DT B-NP
+seizure NN I-NP
+of IN B-PP
+220 CD B-NP
+tanks NNS I-NP
+and CC O
+armoured JJ B-NP
+personnel NNS I-NP
+carriers NNS I-NP
+. . O
+U.S. NNP O
+bank NN I-NP
+discount NN I-NP
+window RB I-NP
+borrowings NNS I-NP
+less NNS I-NP
+extended VBN B-NP
+credits NN I-NP
+averaged VBD B-VP
+310 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+in IN B-PP
+the DT B-NP
+week NN I-NP
+to TO B-PP
+Wednesday NNP B-NP
+February NNP I-NP
+25 CD I-NP
+, , O
+the DT B-NP
+Federal JJ I-NP
+Reserve NNP I-NP
+said VBD B-VP
+. . O
+The DT B-NP
+Fed JJ I-NP
+said VBD B-VP
+that IN B-SBAR
+overall JJ B-NP
+borrowings NNS I-NP
+in IN B-PP
+the DT B-NP
+week NN I-NP
+fell MD B-VP
+131 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+to TO B-PP
+614 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+, , O
+with IN B-PP
+extended VBN B-NP
+credits NN I-NP
+up IN B-PP
+10 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+at IN B-PP
+304 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+. . O
+The DT B-NP
+week NN I-NP
+was VBD B-VP
+the DT B-NP
+second NN I-NP
+half NN I-NP
+of IN B-PP
+a DT B-NP
+two-week NN I-NP
+statement NN I-NP
+period. NNS I-NP
+Net VBD B-VP
+borrowings NNS B-NP
+in IN B-PP
+the DT B-NP
+prior NN I-NP
+week NN I-NP
+averaged RB B-NP
+451 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+. . O
+Commenting NNP O
+on IN B-PP
+the DT B-NP
+two-week NN I-NP
+statement NN I-NP
+period NNS I-NP
+ended VBD B-VP
+February NNP B-NP
+25 CD I-NP
+, , O
+the DT B-NP
+Fed NNP I-NP
+said VBD B-VP
+that NN B-SBAR
+banks NNS B-NP
+had VBD B-VP
+average JJ B-NP
+net NN I-NP
+free JJ I-NP
+reserves NN I-NP
+of IN B-PP
+644 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+a DT B-NP
+day NN I-NP
+, , O
+down IN B-PP
+from JJ B-NP
+1.34 NN I-NP
+billion NN I-NP
+two RB B-NP
+weeks NNS I-NP
+earlier IN B-ADVP
+. . O
+A RB B-ADJP
+Federal JJ I-ADJP
+Reserve . B-NP
+spokesman NN B-VP
+told VBN I-VP
+a DT B-NP
+press NN I-NP
+briefing VBG B-VP
+that IN B-SBAR
+there EX B-NP
+were VBD B-VP
+no RB B-NP
+large JJ I-NP
+single NN I-NP
+day NN I-NP
+net RB I-NP
+misses NNS I-NP
+in IN B-PP
+the DT B-NP
+Fed's default I-NP
+reserve NN I-NP
+projections NNS I-NP
+in IN B-PP
+the DT B-NP
+week NN I-NP
+to TO B-PP
+Wednesday NNP B-NP
+. . I-NP
+He NNP I-NP
+said VBD B-VP
+that NN B-NP
+natural JJ I-NP
+float NN I-NP
+had VBD B-VP
+been VBN I-VP
+" NN B-NP
+acting VBG B-VP
+a DT B-NP
+bit NN I-NP
+strangely RB B-VP
+" VBN I-VP
+for IN B-PP
+this DT B-NP
+time NN I-NP
+of IN B-PP
+year NN B-NP
+, , O
+noting VBG B-VP
+that IN B-SBAR
+there EX B-NP
+had VBD B-VP
+been VBN I-VP
+poor JJ B-NP
+weather NN I-NP
+during IN B-PP
+the DT B-NP
+latest JJ I-NP
+week NN I-NP
+. . O
+The DT B-NP
+spokesman NN I-NP
+said VBD B-VP
+that IN B-SBAR
+natural JJ B-NP
+float NN I-NP
+ranged VBN B-VP
+from IN B-PP
+under IN B-NP
+500 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+on IN B-PP
+Friday NNP B-NP
+, , O
+for IN B-PP
+which NNP B-NP
+he NN B-NP
+could VBN B-VP
+give JJ B-NP
+no RB I-NP
+reason NN I-NP
+, , O
+to TO B-PP
+nearly JJ B-NP
+one CD I-NP
+billion IN B-PP
+dlrs NN B-NP
+on IN B-PP
+both NN B-NP
+Thursday default B-NP
+and CC O
+Wednesday default B-NP
+. . O
+The DT B-NP
+Fed JJ I-NP
+spokeman NN I-NP
+could VBN B-VP
+give JJ B-NP
+no NN I-NP
+reason NN I-NP
+for IN B-PP
+Thursday's NNP B-NP
+high NN I-NP
+float NNS I-NP
+, , O
+but NNS B-NP
+he DT B-NP
+said VBD B-VP
+that IN B-PP
+about NN B-NP
+750 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+of IN B-PP
+Wednesday's NNP B-NP
+float NN I-NP
+figure NNS I-NP
+was VBD B-VP
+due VBD I-VP
+to TO I-VP
+holdover VB I-VP
+and CC O
+transportation NN B-VP
+float IN B-PRT
+at IN B-PP
+two NN B-NP
+widely WDT I-NP
+separated VBN B-VP
+Fed VBN B-NP
+districts NNS I-NP
+. . O
+For NNP O
+the DT B-NP
+week NN I-NP
+as IN B-PP
+a DT B-NP
+whole NN I-NP
+, , O
+he DT B-NP
+said VBD B-VP
+that IN B-SBAR
+float NN B-NP
+related VBN B-VP
+as IN B-PP
+of NNP B-NP
+adjustments NNS I-NP
+were VBD B-VP
+" RB B-ADJP
+small JJ I-ADJP
+, , O
+" IN B-PP
+adding VBG B-VP
+that IN B-SBAR
+they NN B-NP
+fell NN I-NP
+to TO B-PP
+a DT B-NP
+negative JJ I-NP
+750 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+on IN B-PP
+Tuesday NNP B-NP
+due NN I-NP
+to TO B-PP
+a DT B-NP
+number NN I-NP
+of IN B-PP
+corrections NN B-NP
+for IN B-PP
+unrelated VBN B-NP
+cash NN I-NP
+letter IN B-PP
+errors NNS B-NP
+in IN B-PP
+six JJ B-NP
+districts NNS I-NP
+around IN B-PP
+the DT B-NP
+country NN I-NP
+. . O
+The DT B-NP
+spokesman NN I-NP
+said VBD B-VP
+that NN B-NP
+on IN B-PP
+both JJ B-NP
+Tuesday NNP I-NP
+and CC I-NP
+Wednesday NNP B-NP
+, , O
+two IN B-PP
+different JJ B-NP
+clearing NN I-NP
+banks NNS I-NP
+had VBD B-VP
+system JJ B-NP
+problems NNS I-NP
+and CC O
+the DT B-NP
+securities NNS I-NP
+and CC I-NP
+Federal JJ I-NP
+funds NNS I-NP
+wires NNS I-NP
+had VBD B-VP
+to TO I-VP
+be VB I-VP
+held VBN I-VP
+open JJ B-NP
+until NNS I-NP
+about IN B-PP
+2000 CD B-NP
+or NNP I-NP
+2100 CD I-NP
+EST NNS I-NP
+on IN B-PP
+both JJ B-NP
+days NN I-NP
+. . O
+However NNP B-NP
+, , O
+he CD B-NP
+said VBD B-VP
+that IN B-SBAR
+both NNP B-NP
+problems NN I-NP
+were VBD B-VP
+cleared VBN I-VP
+up IN B-ADVP
+during VBG B-VP
+both IN B-PP
+afternoons NNS B-NP
+and CC O
+there DT B-NP
+was VBD B-VP
+no RB B-ADJP
+evidence JJ I-ADJP
+of IN B-PP
+any DT B-NP
+reserve JJ I-NP
+impact NN I-NP
+. . O
+During VBG B-VP
+the DT B-NP
+week NN I-NP
+ended VBN B-VP
+Wednesday NNP B-NP
+, , O
+45 CD B-NP
+pct NN I-NP
+of IN B-PP
+net JJ B-NP
+discount NN I-NP
+window NN I-NP
+borrowings NNS I-NP
+were VBD B-VP
+made JJ B-ADJP
+by IN B-PP
+the DT B-NP
+smallest NN I-NP
+banks NNS I-NP
+, , O
+with IN B-PP
+30 CD B-NP
+pct NN I-NP
+by IN B-PP
+the DT B-NP
+14 CD I-NP
+large RB I-NP
+money JJ I-NP
+center NN I-NP
+banks NNS I-NP
+and CC O
+25 CD B-NP
+pct NN I-NP
+by IN B-PP
+large JJ B-NP
+regional NN I-NP
+institutions NNS I-NP
+. . O
+On NNP B-NP
+Wednesday NNP I-NP
+, , O
+55 CD B-NP
+pct NN I-NP
+of IN B-PP
+the DT B-NP
+borrowing NN I-NP
+was VBD B-VP
+accounted VBN I-VP
+for IN B-PP
+by IN B-PP
+the DT B-NP
+money NN I-NP
+center NN I-NP
+banks NNS I-NP
+, , O
+with IN B-PP
+30 CD B-NP
+pct NN I-NP
+by IN B-PP
+the DT B-NP
+large JJ I-NP
+regionals NN I-NP
+and CC O
+15 CD B-NP
+pct NN I-NP
+by IN B-PP
+the DT B-NP
+smallest JJ I-NP
+banks NNS I-NP
+. . O
+The DT B-NP
+Fed JJ I-NP
+spokesman NN I-NP
+said VBD B-VP
+the DT B-NP
+banking NN I-NP
+system IN B-NP
+had VBD B-VP
+excess VBZ B-NP
+reserves NN I-NP
+on IN B-PP
+Thursday NNP B-NP
+, , O
+Monday NNP B-NP
+and CC I-NP
+Tuesday NNP I-NP
+and CC O
+a DT B-NP
+deficit NN I-NP
+on IN B-PP
+Friday NNP B-NP
+and CC O
+Wedndsday NNP B-NP
+. . I-NP
+That NNP I-NP
+produced VBD B-VP
+a DT B-NP
+small JJ I-NP
+daily NN I-NP
+average JJ I-NP
+deficit NN I-NP
+for IN B-PP
+the DT B-NP
+week NN I-NP
+as IN B-PP
+a DT B-NP
+whole NN I-NP
+. . B-VP
+For NNP B-PP
+the DT B-NP
+two-week NN I-NP
+period NNS I-NP
+, , O
+he NNS B-NP
+said VBD B-VP
+there EX B-NP
+were VBD B-VP
+relatively JJ B-NP
+high NN I-NP
+excess VBZ B-VP
+reserves NN B-NP
+on IN B-PP
+a DT B-NP
+daily JJ I-NP
+avearge NN I-NP
+, , O
+almost IN B-PP
+all DT B-NP
+of IN B-PP
+which CD B-NP
+were VBD B-VP
+at IN B-PP
+the DT B-NP
+smallest JJ I-NP
+banks NNS I-NP
+. . O
+Reuter IN B-PP
+&#3; CD B-NP
+American RB I-NP
+Express JJ I-NP
+Co NNP I-NP
+remained VBN I-NP
+silent NN I-NP
+on IN B-PP
+market NN B-NP
+rumors NN I-NP
+it PRP B-NP
+would VBD B-VP
+spinoff IN B-PP
+all DT B-NP
+or JJ I-NP
+part NN I-NP
+of IN B-PP
+its NNS B-NP
+Shearson NNP I-NP
+Lehman NNP I-NP
+Brothers NNS I-NP
+Inc NNP I-NP
+, , O
+but IN B-SBAR
+some DT B-NP
+analysts NNS I-NP
+said VBD B-VP
+the DT B-NP
+company NN I-NP
+may NN I-NP
+be VB B-VP
+considering NN B-NP
+such IN B-PP
+a DT B-NP
+move JJ I-NP
+because NN I-NP
+it PRP B-NP
+is VBZ B-VP
+unhappy NN B-NP
+with IN B-PP
+the DT B-NP
+market JJ I-NP
+value NN I-NP
+of IN B-PP
+its NNS B-NP
+stock NN I-NP
+. . B-ADVP
+American RB B-NP
+Express JJ I-NP
+stock NN I-NP
+got NN I-NP
+a DT B-NP
+lift NN I-NP
+from WRB B-ADVP
+the DT B-NP
+rumor NN I-NP
+, , O
+as IN B-SBAR
+the DT B-NP
+market NN I-NP
+calculated VBN B-VP
+a DT B-NP
+partially JJ I-NP
+public NN I-NP
+Shearson IN B-PP
+may NN B-NP
+command VBN B-VP
+a DT B-NP
+good JJ I-NP
+market NN I-NP
+value NN I-NP
+, , O
+thereby IN B-PP
+boosting VBG B-VP
+the DT B-NP
+total JJ I-NP
+value NN I-NP
+of IN B-PP
+American NNP B-NP
+Express default I-NP
+. . O
+The DT B-NP
+rumor NN I-NP
+also NN I-NP
+was VBD B-VP
+accompanied VBN I-VP
+by IN B-PP
+talk NN B-NP
+the DT B-NP
+financial JJ I-NP
+services NNS I-NP
+firm IN B-PP
+would JJ B-NP
+split NN I-NP
+its NNS I-NP
+stock IN B-PP
+and CC O
+boost JJ B-NP
+its NNS I-NP
+dividend VBD B-VP
+. . O
+American RB O
+Express VBZ B-VP
+closed VBN I-VP
+on IN B-PP
+the DT B-NP
+New JJ I-NP
+York NNP I-NP
+Stock NNP I-NP
+Exchange VBD B-VP
+at IN B-PP
+72-5/8 CD B-NP
+, , O
+up IN B-PP
+4-1/8 NN B-NP
+on IN B-PP
+heavy NN B-NP
+volume default I-NP
+. . B-ADVP
+American RB B-ADJP
+Express JJ I-ADJP
+would VBD B-VP
+not IN B-PP
+comment NN B-NP
+on IN B-PP
+the DT B-NP
+rumors NN I-NP
+or IN B-PP
+its NNS B-NP
+stock NN I-NP
+activity NN I-NP
+. . O
+Analysts NNS B-NP
+said VBD B-VP
+comments VBN I-VP
+by IN B-PP
+the DT B-NP
+company NN I-NP
+at IN B-PP
+an DT B-NP
+analysts' NN I-NP
+meeting VBG B-VP
+Tuesday default B-NP
+helped VBN I-NP
+fuel JJ B-NP
+the DT I-NP
+rumors NN I-NP
+as IN B-PP
+did NN B-NP
+an DT B-NP
+announcement JJ I-NP
+yesterday NN I-NP
+of IN B-PP
+management JJ B-NP
+changes NNS I-NP
+. . O
+At RB O
+the DT B-NP
+meeting VBG I-NP
+, , I-NP
+company NN I-NP
+officials IN B-NP
+said VBD B-VP
+American RB B-NP
+Express JJ I-NP
+stock NN I-NP
+is VBZ B-VP
+undervalued VBN I-VP
+and CC O
+does NNS B-VP
+not NN B-NP
+fully NN I-NP
+reflect NN B-VP
+the DT B-NP
+performance NN I-NP
+of IN B-PP
+Shearson NNP B-NP
+, , O
+according IN B-PP
+to TO B-PP
+analysts NNS B-NP
+. . O
+Yesterday NNP B-NP
+, , O
+Shearson NNP B-NP
+said VBD B-VP
+it PRP B-NP
+was VBD B-VP
+elevating VBG I-VP
+its NNS B-NP
+chief NNP I-NP
+operating VBG I-NP
+officer IN I-NP
+, , O
+Jeffery NNP B-NP
+Lane NNP I-NP
+, , O
+to TO B-PP
+the DT B-NP
+added JJ I-NP
+position NN I-NP
+of IN B-PP
+president NN B-NP
+, , O
+which IN B-NP
+had VBD B-VP
+been VBN I-VP
+vacant NN B-NP
+. . O
+It PRP B-NP
+also RB I-VP
+created VBN I-VP
+four IN B-PP
+new JJ B-NP
+positions NNS I-NP
+for IN B-PP
+chairmen NN B-NP
+of IN B-PP
+its NNS B-NP
+operating VBG I-NP
+divisions NNS I-NP
+. . O
+Analysts NNS B-NP
+speculated VBD B-VP
+a DT B-NP
+partial JJ I-NP
+spinoff NNP I-NP
+would VBD B-VP
+make NN B-NP
+most NN I-NP
+sense NNS I-NP
+, , O
+contrary JJ B-ADJP
+to TO B-PP
+one CD B-NP
+variation NN I-NP
+on IN B-PP
+market JJ B-NP
+rumors NN I-NP
+of IN B-PP
+a DT B-NP
+total JJ I-NP
+spinoff NNP I-NP
+. . O
+Some DT B-NP
+analysts NNS I-NP
+, , O
+however NNS B-NP
+, , O
+disagreed VBD B-VP
+that IN B-PP
+any JJ B-NP
+spinoff NN I-NP
+of IN B-PP
+Shearson NNP B-NP
+would VBD B-VP
+be VB I-VP
+good NN B-NP
+since IN B-SBAR
+it PRP B-NP
+is VBZ B-VP
+a DT B-NP
+strong VBG I-NP
+profit NN I-NP
+center NN I-NP
+for IN B-PP
+American NNP B-NP
+Express NNS I-NP
+, , O
+contributing VBG B-VP
+about IN B-NP
+20 CD I-NP
+pct NN I-NP
+of IN B-PP
+earnings NNS B-NP
+last JJ B-NP
+year NN I-NP
+. . O
+" NN B-NP
+I IN B-PP
+think NN B-NP
+it PRP B-NP
+is VBZ B-VP
+highly RB O
+unlikely JJ B-NP
+that NN I-NP
+American RB B-NP
+Express JJ I-NP
+is VBZ B-VP
+going VBG I-VP
+to TO B-PP
+sell JJ B-NP
+shearson NN I-NP
+, , O
+" IN B-NP
+said VBD B-VP
+Perrin CD B-NP
+Long VBG I-NP
+of IN B-PP
+Lipper NNP B-NP
+Analytical default I-NP
+. . O
+He JJ I-VP
+questioned VBD I-VP
+what IN B-NP
+would VBN B-VP
+be VB I-VP
+a DT B-NP
+better NN I-NP
+investment NN I-NP
+than NN I-NP
+" RB B-NP
+a DT I-NP
+very NN I-NP
+profitable NN I-NP
+securities NNS I-NP
+firm IN B-PP
+. . B-NP
+" NN I-NP
+Several JJ I-NP
+analysts NNS I-NP
+said VBD B-VP
+American RB B-ADJP
+Express JJ I-ADJP
+is VBZ B-VP
+not RB O
+in IN B-PP
+need JJ B-NP
+of IN B-PP
+cash NNP B-NP
+, , O
+which IN B-PP
+might NN B-NP
+be VB B-VP
+the DT B-NP
+only JJ I-NP
+reason NN I-NP
+to TO B-VP
+sell JJ I-VP
+a DT B-NP
+part NN I-NP
+of IN B-PP
+a DT B-NP
+strong NN I-NP
+asset IN B-PP
+. . B-NP
+But JJ I-NP
+others NNS I-NP
+believe VBP B-VP
+the DT B-NP
+company NN I-NP
+could VBN B-VP
+very JJ B-ADVP
+well RB B-ADVP
+of IN B-ADVP
+considered VBD B-VP
+the DT B-NP
+option NN I-NP
+of IN B-PP
+spinning VBG B-VP
+out JJ B-NP
+part NN I-NP
+of IN B-PP
+Shearson NNP B-NP
+, , O
+and CC O
+one JJ B-NP
+rumor NN I-NP
+suggests NNS I-NP
+selling VBG B-VP
+about IN B-NP
+20 CD I-NP
+pct NN I-NP
+of IN B-PP
+it PRP B-NP
+in IN B-PP
+the DT B-NP
+market NN I-NP
+. . O
+Larry JJ O
+Eckenfelder . O
+of IN B-PP
+Prudential-Bache DT B-NP
+Securities NNS I-NP
+said VBD B-VP
+he DT B-NP
+believes NN I-NP
+American RB B-VP
+Express VBN I-VP
+could VBN I-VP
+have VBP B-VP
+considered VBN I-VP
+a DT B-NP
+partial JJ I-NP
+spinoff NN I-NP
+in IN B-PP
+the DT B-NP
+past NN I-NP
+. . O
+" IN B-PP
+Shearson NNP B-NP
+being NN I-NP
+as IN B-PP
+profitable NN B-NP
+as IN B-SBAR
+it PRP B-NP
+is VBZ B-VP
+would VBD I-VP
+have VBP I-VP
+fetched VBN I-VP
+a DT B-NP
+big NN I-NP
+premium NN I-NP
+in IN B-PP
+the DT B-NP
+market NN I-NP
+place. NN I-NP
+Shearson's NNP I-NP
+book NN I-NP
+value NN I-NP
+is VBZ B-VP
+in IN B-PP
+the DT B-NP
+1.4 CD I-NP
+mln NN I-NP
+dlr IN B-PP
+range NN B-NP
+. . O
+Shearson NNP O
+in IN B-PP
+the DT B-NP
+market NN I-NP
+place NN I-NP
+would MD B-VP
+probably RB I-VP
+be VB I-VP
+worth RB B-ADVP
+three DT B-NP
+to TO I-NP
+3.5 CD I-NP
+bilion NN I-NP
+dlrs NN I-NP
+in IN B-PP
+terms NN B-NP
+of IN B-PP
+market JJ B-NP
+capitalization NN I-NP
+, , O
+" IN B-NP
+said VBD B-VP
+Eckenfelder CD B-NP
+. . O
+Some DT B-NP
+analysts NNS I-NP
+said VBD B-VP
+American RB B-NP
+Express JJ I-NP
+could VBN B-VP
+use IN B-PP
+capital JJ B-NP
+since NN I-NP
+it PRP B-NP
+plans VBD B-VP
+to TO I-VP
+expand NNS B-NP
+globally JJ B-ADJP
+. . O
+" NNS B-VP
+They NNP B-NP
+have VBP B-VP
+enormous NNS B-NP
+internal JJ B-NP
+growth NNS I-NP
+plans NNS I-NP
+that IN B-PP
+takes NNS B-NP
+capital JJ B-ADJP
+. . O
+You NNP B-NP
+want NN I-NP
+your NN I-NP
+stock RB B-ADVP
+to TO B-PP
+reflect JJ B-NP
+realistic NN I-NP
+valuations NNS I-NP
+to TO B-PP
+enhance JJ B-NP
+your NN I-NP
+ability NN I-NP
+to TO B-PP
+make JJ B-NP
+all DT I-NP
+kinds NN I-NP
+of IN B-PP
+endeavors NNS B-NP
+down IN B-PP
+the DT B-NP
+road NN I-NP
+, , O
+" IN B-NP
+said VBD B-VP
+E.F. CD B-NP
+Hutton NNP I-NP
+Group NNP I-NP
+analyst IN B-PP
+Michael default B-NP
+Lewis default I-NP
+. . B-NP
+" NN I-NP
+They've DT B-NP
+outlined VBD B-VP
+the DT B-NP
+fact NN I-NP
+that IN B-SBAR
+they're DT B-NP
+investing VBG I-NP
+heavily NN I-NP
+in IN B-PP
+the DT B-NP
+future NNS I-NP
+, , O
+which IN B-PP
+goes NNS B-NP
+heavily NN I-NP
+into IN B-PP
+the DT B-NP
+international JJ I-NP
+arena, NN I-NP
+" NN I-NP
+said VBD B-VP
+Lewis CD B-NP
+. . O
+" default B-VP
+. . I-VP
+..That . O
+does NNS B-VP
+not NN B-NP
+preclude NN I-NP
+acquisitions NNS I-NP
+and CC O
+divestitures NNS B-NP
+along IN B-PP
+the DT B-NP
+way NN I-NP
+, , O
+" IN B-PP
+he DT B-NP
+said VBD I-NP
+. . O
+Lewis VBZ O
+said VBD B-VP
+if CD B-NP
+American RB I-NP
+Express JJ I-NP
+reduced VBN I-NP
+its NNS I-NP
+exposure NN I-NP
+to TO B-PP
+the DT B-NP
+brokerage NN I-NP
+business NNS I-NP
+by IN B-PP
+selling VBG B-VP
+part NN B-NP
+of IN B-PP
+shearson NN B-NP
+, , O
+its NNS B-NP
+stock NN I-NP
+might NN I-NP
+better IN B-PP
+reflect NN B-NP
+other IN B-PP
+assets NNS B-NP
+, , O
+such NNS B-NP
+as IN B-PP
+the DT B-NP
+travel NN I-NP
+related VBN I-NP
+services NNS I-NP
+business NNS I-NP
+. . O
+" NN B-VP
+It PRP B-NP
+could VBD B-VP
+find CD B-NP
+its NNS I-NP
+true VBD B-VP
+water IN B-PP
+mark NN B-NP
+with IN B-PP
+a DT B-NP
+lesser JJ I-NP
+exposure NN I-NP
+to TO B-VP
+brokerage VB I-VP
+. . O
+The DT B-NP
+value NN I-NP
+of IN B-PP
+the DT B-NP
+other NN I-NP
+components NNP-named I-NP
+could VBN B-VP
+command VBN I-VP
+a DT B-NP
+higher NN I-NP
+multiple WRB B-ADVP
+because NN B-NP
+they NN I-NP
+constitute VBD B-VP
+a DT B-NP
+higher NN I-NP
+percentage NN I-NP
+of IN B-PP
+the DT B-NP
+total NN I-NP
+operating IN B-PP
+earnings NNS B-NP
+of IN B-PP
+the DT B-NP
+company NN I-NP
+, , O
+" IN B-PP
+he DT B-NP
+said VBD I-NP
+. . O
+Lewis VBZ O
+said VBD B-VP
+Shearson CD B-NP
+contributed VBN B-VP
+316 CD B-NP
+mln NN I-NP
+in IN B-PP
+after-tax JJ B-NP
+operating VBG I-NP
+earnings NNS I-NP
+, , O
+up NNS B-NP
+from IN B-PP
+about NN B-NP
+200 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+in IN B-PP
+1985 default B-NP
+. . O
+Reuter IN B-PP
+&#3; CD B-NP
+Coleco NNP I-NP
+Industries NNP I-NP
+Inc NNP I-NP
+said VBD B-VP
+it PRP B-NP
+expects NNS B-VP
+to TO B-NP
+return JJ I-VP
+to TO B-PP
+profitability NN B-NP
+in IN B-PP
+1987 default B-NP
+. . O
+Earlier NNP B-NP
+, , O
+Coleco NNP B-NP
+reported VBN B-VP
+a DT B-NP
+net JJ I-NP
+loss CD I-NP
+of IN B-PP
+111.2 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+for IN B-PP
+the DT B-NP
+year NN I-NP
+ended VBN B-VP
+December IN B-PP
+31 CD B-NP
+compared VBN B-VP
+to TO B-PP
+a DT B-NP
+profit NN I-NP
+of IN B-PP
+64.2 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+in IN B-PP
+the DT B-NP
+year NN I-NP
+earlier IN B-PP
+. . B-NP
+In IN B-PP
+a DT B-NP
+prepared JJ I-NP
+statement NN I-NP
+, , O
+the DT B-NP
+company NN I-NP
+said VBD B-VP
+the DT B-NP
+dramatic NN I-NP
+swing IN B-PP
+in IN B-PP
+operating VBG B-NP
+results NNS I-NP
+was VBD B-VP
+due JJ B-NP
+primarily NN I-NP
+to TO B-PP
+the DT B-NP
+steep NN I-NP
+decline NN I-NP
+in IN B-PP
+sales NNS B-NP
+of IN B-PP
+Cabbage JJ B-NP
+Patch NNP I-NP
+Kids NNP I-NP
+products NNS I-NP
+from IN B-PP
+600 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+to TO B-PP
+230 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+. . O
+Coleco NNP B-NP
+said VBD B-VP
+it PRP B-NP
+changed VBD B-VP
+from VBN I-VP
+a DT B-NP
+single JJ I-NP
+product NN I-NP
+company NN I-NP
+to TO B-PP
+a DT B-NP
+more JJ I-NP
+diversified CD I-NP
+organization NN I-NP
+through IN B-PP
+four JJ B-NP
+major NN I-NP
+acquisitions NNS I-NP
+last JJ B-NP
+year NN I-NP
+. . O
+Products NNS B-NP
+from IN B-PP
+the DT B-NP
+new NN I-NP
+acquisitions NNS I-NP
+and CC O
+other VB B-VP
+new RB B-NP
+product NN I-NP
+introductions NNS I-NP
+are VBP B-VP
+expected VBN I-VP
+to TO I-VP
+enable NNS B-NP
+it PRP B-NP
+to TO B-VP
+return JJ B-NP
+to TO B-PP
+profitability NN B-NP
+, , O
+it PRP B-NP
+said VBD B-VP
+. . O
+At RB O
+the DT B-NP
+annual JJ I-NP
+Toy NNP I-NP
+Fair NNP I-NP
+earlier IN B-PP
+this DT B-NP
+month JJ I-NP
+, , I-NP
+vice JJ I-NP
+president NN I-NP
+Morton NNP I-NP
+Handel NNP I-NP
+said VBD B-VP
+analysts' CD B-NP
+1987 NN I-NP
+projected VBN I-NP
+earnings NNS I-NP
+of IN B-PP
+90 CD B-NP
+cts NNS I-NP
+a DT B-NP
+share NN I-NP
+on IN B-PP
+sales NNS B-NP
+of IN B-PP
+600 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+are VBP B-VP
+reasonable NN B-NP
+. . O
+Venezuela NNP-5 B-NP
+is VBZ B-VP
+seeking VBG I-VP
+a DT B-NP
+'constructive JJ I-NP
+and CC I-NP
+flexible' NNS I-NP
+attitude IN B-PP
+from JJ B-NP
+its NNS I-NP
+creditor NN I-NP
+banks NNS I-NP
+in IN B-PP
+current JJ B-NP
+talks NNS I-NP
+to TO B-PP
+reschedule JJ B-NP
+21 CD I-NP
+billion NN I-NP
+dlrs NN I-NP
+in IN B-PP
+foreign NN B-NP
+debt VBN B-VP
+, , O
+finance JJ B-NP
+minister NN I-NP
+manuel JJ I-NP
+azpurua NN I-NP
+told VBN B-VP
+a DT B-NP
+press NN I-NP
+conference. NN I-NP
+He NNP I-NP
+declined VBD B-VP
+to TO B-PP
+comment NN B-NP
+on IN B-PP
+meetings NNS B-NP
+this DT B-NP
+week NN I-NP
+in IN B-PP
+new JJ B-NP
+york NN I-NP
+between VBN B-VP
+public IN B-PP
+finances NNS B-NP
+director IN B-PP
+jorge JJ B-NP
+marcano NN I-NP
+and CC O
+venezuela's VBN B-NP
+13-bank NN I-NP
+advisory NN I-NP
+committee NNP-named I-NP
+except NN I-NP
+to TO B-PP
+say NN B-NP
+, , O
+" IN B-PP
+they NN B-NP
+are VBP B-VP
+progressing NNS B-NP
+. . O
+" NNP B-NP
+Azpurua NNP I-NP
+said VBD B-VP
+venezuela NN B-NP
+has NNS I-NP
+shown IN B-PP
+solidarity JJ B-NP
+with IN B-PP
+brazil's NNS B-NP
+decision VBD B-VP
+to TO B-PP
+suspend CD B-NP
+payments NNS I-NP
+, , O
+but NNS B-NP
+each IN B-PP
+country NN B-NP
+must VBZ B-VP
+negotiate RB I-VP
+according VBG I-VP
+to TO B-PP
+its NNS B-NP
+own JJ I-NP
+interest NN I-NP
+. . O
+Asked VBD B-VP
+to TO B-PP
+comment NN B-NP
+on IN B-PP
+chile's NN B-NP
+agreement NN I-NP
+with IN B-PP
+its NNS B-NP
+creditors NN I-NP
+today NN I-NP
+, , O
+which IN B-PP
+includes NNS B-NP
+an DT B-NP
+interest JJ I-NP
+rate NN I-NP
+margin NN I-NP
+of IN B-PP
+one CD B-NP
+pct NN I-NP
+over IN B-PP
+libor JJ B-NP
+, , O
+azpurua NNP B-NP
+said VBD B-VP
+only NN B-NP
+, , O
+" IN B-SBAR
+that NN B-NP
+is VBZ B-VP
+good JJ B-NP
+news NNS I-NP
+. . O
+" NNS B-NP
+According VBG B-VP
+to TO B-PP
+banking VBG B-NP
+sources NNS I-NP
+, , O
+the DT B-NP
+banks' NN I-NP
+latest NN I-NP
+offer IN B-PP
+to TO B-PP
+venezuela CD B-NP
+is VBZ B-VP
+also RB B-ADVP
+a DT B-NP
+one JJ I-NP
+pct NN I-NP
+margin JJ I-NP
+as IN B-PP
+against NN B-NP
+the DT B-NP
+last JJ I-NP
+february's NN I-NP
+1-1/8 CD B-NP
+pct NN I-NP
+rescheduling VBG I-NP
+accord NNS I-NP
+and CC O
+the DT B-NP
+7/8 NN I-NP
+pct NN I-NP
+Venezuela NNP I-NP
+wants NNS I-NP
+. . O
+Azpurua NNP B-NP
+said VBD B-VP
+four NN B-NP
+basic NN I-NP
+elements NNS I-NP
+are VBP B-VP
+being VBN I-VP
+negotiated VBN I-VP
+with IN B-PP
+the DT B-NP
+banks NNS I-NP
+now: NN I-NP
+spread VBD B-VP
+reduction VBN I-VP
+, , O
+deferral JJ B-ADJP
+of IN B-PP
+principal JJ B-NP
+payments NNS I-NP
+due NNS I-NP
+in IN B-PP
+1987 CD B-NP
+and CC I-NP
+1988 CD I-NP
+, , O
+lenghtening VBG B-VP
+the DT B-NP
+12-1/2 CD I-NP
+year NN I-NP
+repayment NN I-NP
+schedule NN I-NP
+, , O
+and CC O
+debt VBN B-VP
+capitalization IN B-PP
+schemes NNS B-NP
+. . O
+Azpurua NNP B-NP
+said VBD B-VP
+the DT B-NP
+governent NN I-NP
+plans NN I-NP
+to TO B-PP
+pay NN B-NP
+2.1 CD I-NP
+billion NN I-NP
+dlrs NN I-NP
+in IN B-PP
+public NNP B-NP
+and CC O
+private JJ B-NP
+debt NN I-NP
+principal NN I-NP
+this DT B-NP
+year NN I-NP
+. . O
+It PRP B-NP
+was VBD B-VP
+due VBD I-VP
+to TO I-VP
+amortize VB I-VP
+1.05 CD B-NP
+billion NN I-NP
+dlrs NN I-NP
+under IN B-PP
+the DT B-NP
+rescheduling NN I-NP
+, , O
+and CC O
+pay NN B-NP
+420 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+in IN B-PP
+non-restructured JJ B-NP
+principal NN I-NP
+, , O
+both IN B-PP
+public JJ B-NP
+sector NN I-NP
+. . O
+He NNP B-NP
+said VBD B-VP
+venezuela's CD B-NP
+original JJ I-NP
+proposal NN I-NP
+was VBD B-VP
+to TO B-PP
+pay NN B-NP
+no RB I-NP
+principal JJ I-NP
+on IN B-PP
+restructured JJ B-NP
+debt NN I-NP
+this DT B-NP
+year NN I-NP
+, , O
+but IN B-NP
+is VBZ B-VP
+now RB I-VP
+insisting VBG I-VP
+that IN B-SBAR
+if NNP B-NP
+it PRP B-NP
+makes VBZ B-VP
+payments NNS B-NP
+they IN B-PP
+be VB B-NP
+compensated VBN B-VP
+by IN B-PP
+new JJ B-NP
+bank NN I-NP
+loans NNS I-NP
+. . O
+The DT B-NP
+banking VBG I-NP
+sources NNS I-NP
+said VBD B-VP
+the DT B-NP
+committee NN I-NP
+has NNS B-VP
+been VBN I-VP
+prepared VBN I-VP
+to TO I-VP
+lower VB I-VP
+amortizations VBN I-VP
+to TO B-PP
+around IN B-NP
+400 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+this IN B-PP
+year NN B-NP
+, , O
+but IN B-PP
+that NN B-NP
+no RB B-NP
+direct JJ I-NP
+commitment NN I-NP
+was VBD B-VP
+likely JJ B-ADJP
+on IN B-PP
+new JJ B-NP
+loans NNS I-NP
+. . O
+" CD B-NP
+debtors NNS I-NP
+and CC I-NP
+bank NNS I-NP
+creditors NN I-NP
+have VBP B-VP
+a DT B-NP
+joint JJ I-NP
+responsibility NN I-NP
+and CC O
+there DT B-NP
+will MD B-VP
+be VB I-VP
+no RB I-VP
+lasting VBG I-VP
+solution NN B-NP
+unless NNS I-NP
+a DT B-NP
+positive JJ I-NP
+flow NN I-NP
+of IN B-PP
+financing VBG B-NP
+is VBZ B-VP
+guaranteed NNS B-NP
+, , O
+" NNS B-NP
+azpurua DT B-NP
+said VBD B-VP
+. . O
+However IN B-ADVP
+, , O
+he NNS B-NP
+appeared VBD B-VP
+to TO I-VP
+discard VB I-VP
+earlier JJ B-NP
+venezuelan NN I-NP
+proposals NN I-NP
+for IN B-PP
+a DT B-NP
+direct NN I-NP
+link NN I-NP
+between VBN B-VP
+oil JJ B-NP
+income NN I-NP
+and CC O
+debt VBN B-NP
+payments NNS I-NP
+, , O
+"because NNS B-NP
+circumstances NNS I-NP
+change VBD B-VP
+too RB B-ADJP
+quickly JJ I-ADJP
+. . O
+" NNS B-VP
+At RB B-ADVP
+the DT B-NP
+same JJ I-NP
+time NN I-NP
+, , O
+he NN B-NP
+said VBD B-VP
+the DT B-NP
+government NN I-NP
+is VBZ B-VP
+presently RB I-VP
+studying VBG I-VP
+possible JJ B-NP
+mechanisms NNS I-NP
+for IN B-PP
+capitlizing VBG B-VP
+public NN B-NP
+and CC O
+private RB B-NP
+sector JJ I-NP
+foreign NNS I-NP
+debt VBD B-VP
+, , O
+based NNS B-NP
+on IN B-PP
+experience NN B-NP
+in IN B-PP
+other JJ B-NP
+countries NNS I-NP
+. . O
+The DT B-NP
+rules NN I-NP
+would MD B-VP
+be VB I-VP
+published VBN I-VP
+by IN B-PP
+the DT B-NP
+finance JJ I-NP
+ministry NN I-NP
+and CC O
+the DT B-NP
+central JJ I-NP
+bank NN I-NP
+. . O
+Thomson NNP B-NP
+McKinnon NNP I-NP
+Mortgage NNP I-NP
+Assets NNS I-NP
+Corp NNP I-NP
+, , O
+a DT B-NP
+unit NN I-NP
+of IN B-PP
+Thomson NNP B-NP
+McKinnon NNP I-NP
+Inc NNP I-NP
+, , O
+is VBZ B-VP
+offering IN B-NP
+100 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+of IN B-PP
+collateralized VBN B-NP
+mortgage NN I-NP
+obligations NNS I-NP
+in IN B-PP
+three DT B-NP
+tranches NNS I-NP
+that IN B-PP
+include JJ B-NP
+floating NN I-NP
+rate NN I-NP
+and CC O
+inverse RB B-VP
+floating VBG I-VP
+rate JJ B-NP
+CMOS NNP I-NP
+. . O
+The DT B-NP
+floating VBG I-NP
+rate NN I-NP
+class NN I-NP
+amounts NNS I-NP
+to TO B-PP
+60 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+. . O
+It PRP B-NP
+has VBZ B-VP
+an DT B-NP
+average JJ I-NP
+life NN I-NP
+of IN B-PP
+7.11 CD B-NP
+years NNS I-NP
+and CC O
+matures NNS B-NP
+2018. CD B-PP
+The DT B-NP
+CMOs JJ I-NP
+have NN I-NP
+an DT B-NP
+initial JJ I-NP
+coupon NN I-NP
+of IN B-PP
+7.0375 CD B-NP
+pct NN I-NP
+, , O
+which IN B-NP
+will MD B-VP
+be VB I-VP
+reset NN B-NP
+60 CD I-NP
+basis NNS I-NP
+points NNS I-NP
+above VBP B-VP
+LIBOR VBN I-VP
+, , O
+said VBD B-VP
+sole CD B-NP
+manager NN I-NP
+Thomson NNP I-NP
+McKinnon NNP I-NP
+. . O
+The DT B-NP
+inverse JJ I-NP
+floater NN I-NP
+totals IN B-PP
+4.8 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+. . O
+It PRP B-NP
+has VBZ B-VP
+an DT B-NP
+average JJ I-NP
+life NN I-NP
+of IN B-PP
+13.49 CD B-NP
+years NNS I-NP
+and CC O
+matures NNS B-NP
+2018. CD B-NP
+These NNP I-NP
+CMOs NNS I-NP
+were VBD B-VP
+given JJ I-VP
+an DT B-NP
+initial JJ I-NP
+coupon NN I-NP
+of IN B-PP
+11-1/2 CD B-NP
+pct NN I-NP
+and CC O
+priced VBN B-VP
+at IN B-PP
+104.40. CD B-NP
+Subsequent JJ I-NP
+rates NNS I-NP
+on IN B-PP
+the DT B-NP
+inverse NN I-NP
+floater IN B-PP
+will DT B-NP
+equal JJ I-NP
+11-1/2 CD I-NP
+pct NN I-NP
+minus VBZ B-VP
+the DT B-NP
+product NN I-NP
+of IN B-PP
+three DT B-NP
+times NNS I-NP
+(LIBOR NNP I-NP
+minus NNS I-NP
+6-1/2 CD B-NP
+pct) NNS I-NP
+. . O
+A RB O
+Thomson NNP B-NP
+officer IN I-PRT
+explained VBN B-VP
+that IN B-PP
+the DT B-NP
+coupon NN I-NP
+of IN B-PP
+the DT B-NP
+inverse NN I-NP
+floating IN B-PP
+rate JJ B-NP
+tranche NN I-NP
+would VBN B-VP
+increase IN B-PP
+if NNP B-NP
+LIBOR default I-NP
+declined VBD B-VP
+. . O
+" NN B-VP
+The DT B-NP
+yield JJ I-NP
+floats NN I-NP
+opposite NN I-NP
+of IN B-PP
+LIBOR NNP B-NP
+, , O
+" CD B-NP
+he NN I-NP
+said VBD B-VP
+. . O
+The DT B-NP
+fixed-rate JJ I-NP
+tranche NN I-NP
+totals NNS I-NP
+35.2 IN B-PP
+mln NN B-NP
+dlrs NN I-NP
+. . O
+It PRP B-NP
+has VBZ B-VP
+an DT B-NP
+average JJ I-NP
+life NN I-NP
+of IN B-PP
+3.5 CD B-NP
+years NNS I-NP
+and CC O
+matures NNS B-NP
+2016. CD B-PP
+The DT B-NP
+CMOs JJ I-NP
+were NN I-NP
+assigned VBN B-VP
+a DT B-NP
+7.65 NN I-NP
+pct NN I-NP
+coupon NN I-NP
+and CC O
+par RB B-VP
+pricing VBG I-VP
+. . B-PP
+The DT B-NP
+issue NN I-NP
+is VBZ B-VP
+rated VBN I-VP
+AAA RB B-ADVP
+by IN B-PP
+Standard NNP B-NP
+and CC I-NP
+Poor's NNP I-NP
+and CC O
+secured JJ B-ADVP
+by IN B-SBAR
+Federal JJ B-NP
+Home . I-NP
+Loan NNP I-NP
+Mortgage NNP I-NP
+Corp NNP I-NP
+, , O
+Freddie NNP B-NP
+Mac NNP I-NP
+, , O
+certificates NNS B-NP
+. . O
+OPEC NNP B-NP
+may NN I-NP
+be VB B-VP
+forced VBD I-VP
+to TO B-PP
+meet NN B-NP
+before NN I-NP
+a DT B-NP
+scheduled JJ I-NP
+June CD I-NP
+session NN I-NP
+to TO B-PP
+readdress JJ B-NP
+its NNS I-NP
+production NN I-NP
+cutting VBG I-NP
+agreement NN I-NP
+if IN B-SBAR
+the DT B-NP
+organization NN I-NP
+wants NNS B-VP
+to TO I-VP
+halt VB I-VP
+the DT B-NP
+current NN I-NP
+slide NN I-NP
+in IN B-PP
+oil JJ B-NP
+prices NNS I-NP
+, , O
+oil JJ B-NP
+industry NN I-NP
+analysts NNS I-NP
+said VBD B-VP
+. . O
+" NN B-VP
+The DT B-NP
+movement NN I-NP
+to TO B-VP
+higher VB I-VP
+oil JJ B-NP
+prices NNS I-NP
+was VBD B-VP
+never IN B-ADVP
+to TO B-VP
+be VB I-VP
+as IN B-PP
+easy NN B-NP
+as IN B-PP
+OPEC NNP B-NP
+thought IN B-PP
+. . B-NP
+They NNP I-NP
+may NN I-NP
+need VBD B-VP
+an DT B-NP
+emergency NN I-NP
+meeting VBG B-VP
+to TO B-PP
+sort NN B-NP
+out IN B-PP
+the DT B-NP
+problems NN I-NP
+, , O
+" IN B-NP
+said VBD B-VP
+Daniel CD B-NP
+Yergin NNP I-NP
+, , O
+director IN B-PP
+of IN B-PP
+Cambridge JJ B-NP
+Energy NNP I-NP
+Research NNP I-NP
+Associates NNS I-NP
+, , O
+CERA NNP B-NP
+. . O
+Analysts NNS B-NP
+and CC O
+oil JJ B-NP
+industry NN I-NP
+sources NNS I-NP
+said VBD B-VP
+the DT B-NP
+problem NN I-NP
+OPEC IN B-PP
+faces NNS B-NP
+is VBZ B-VP
+excess NNS B-NP
+oil JJ B-ADJP
+supply RB B-ADVP
+in IN B-PP
+world JJ B-NP
+oil NNS I-NP
+markets NNS I-NP
+. . O
+" NN B-NP
+OPEC's NNS I-NP
+problem NN I-NP
+is VBZ B-VP
+not RB O
+a DT B-NP
+price NN I-NP
+problem NN I-NP
+but NN B-VP
+a DT B-NP
+production NN I-NP
+issue NNS I-NP
+and CC O
+must JJ B-VP
+be VB I-VP
+addressed VBN I-VP
+in IN B-PP
+that DT B-NP
+way NN I-NP
+, , O
+" IN B-NP
+said VBD B-VP
+Paul default B-NP
+Mlotok NNP I-NP
+, , O
+oil JJ B-NP
+analyst NN I-NP
+with IN B-PP
+Salomon NNP B-NP
+Brothers NNS I-NP
+Inc NNP I-NP
+. . O
+He JJ O
+said VBD B-VP
+the DT B-NP
+market's NN I-NP
+earlier IN B-PP
+optimism JJ B-NP
+about NN I-NP
+OPEC NNS I-NP
+and CC O
+its NNS B-NP
+ability NN I-NP
+to TO B-PP
+keep CD B-NP
+production NN I-NP
+under IN B-PP
+control JJ B-NP
+have NN I-NP
+given NNS I-NP
+way NN B-ADJP
+to TO B-PP
+a DT B-NP
+pessimistic NN I-NP
+outlook NN I-NP
+that IN B-PP
+the DT B-NP
+organization NN I-NP
+must NN I-NP
+address NNS I-NP
+soon IN B-PP
+if NNP B-NP
+it PRP B-NP
+wishes VBD B-VP
+to TO B-PP
+regain JJ B-NP
+the DT I-NP
+initiative JJ I-NP
+in IN B-PP
+oil JJ B-NP
+prices NNS I-NP
+. . O
+But JJ B-NP
+some NN I-NP
+other IN B-PP
+analysts NNS B-NP
+were VBD B-VP
+uncertain RB B-ADJP
+that IN B-PP
+even VBN B-NP
+an DT B-NP
+emergency NN I-NP
+meeting VBG B-VP
+would JJ B-NP
+address NNS I-NP
+the DT B-NP
+problem NN I-NP
+of IN B-PP
+OPEC NNP B-NP
+production NN I-NP
+above IN B-PP
+the DT B-NP
+15.8 CD I-NP
+mln NN I-NP
+bpd NNS I-NP
+quota IN B-PP
+set NN B-NP
+last JJ B-NP
+December NNP I-NP
+. . O
+" IN B-SBAR
+OPEC NNP B-NP
+has NNS I-NP
+to TO B-PP
+learn JJ B-NP
+that NN I-NP
+in IN B-PP
+a DT B-NP
+buyers NNS I-NP
+market NN I-NP
+you IN B-PP
+cannot NN B-NP
+have VBP B-VP
+deemed VBN I-VP
+quotas NNS B-NP
+, , O
+fixed NNS B-NP
+prices NNS I-NP
+and CC O
+set NN B-NP
+differentials NNS I-NP
+, , O
+" NNS B-NP
+said VBD B-VP
+the DT B-NP
+regional JJ I-NP
+manager NN I-NP
+for IN B-PP
+one NN B-NP
+of IN B-PP
+the DT B-NP
+major NN I-NP
+oil NN I-NP
+companies NNS I-NP
+who IN B-PP
+spoke NN B-NP
+on IN B-PP
+condition NN B-NP
+that IN B-SBAR
+he DT B-NP
+not NN I-NP
+be VB B-VP
+named RB I-VP
+. . I-VP
+" NN I-VP
+The DT B-NP
+market NN I-NP
+is VBZ B-VP
+now RB I-VP
+trying VBG I-VP
+to TO I-VP
+teach IN B-PP
+them DT B-NP
+that NN I-NP
+lesson IN B-PP
+again NN B-NP
+, , O
+" IN B-PP
+he DT B-NP
+added VBD I-NP
+. . O
+David VBD B-VP
+T NNP B-NP
+. . I-NP
+Mizrahi NNP I-NP
+, , O
+editor CD B-NP
+of IN B-PP
+Mideast JJ B-NP
+reports NNS I-NP
+, , O
+expects NNS B-NP
+OPEC VBD B-VP
+to TO B-PP
+meet JJ B-NP
+before NN I-NP
+June JJ I-NP
+, , O
+although IN B-SBAR
+not JJ B-NP
+immediately NN I-NP
+. . O
+However NNP B-NP
+, , O
+he CD B-NP
+is VBZ B-VP
+not RB O
+optimistic JJ B-NP
+that NN I-NP
+OPEC default I-NP
+can NN I-NP
+address NNS I-NP
+its NNS B-NP
+principal JJ I-NP
+problems NNS I-NP
+. . O
+" IN O
+They NNP B-NP
+will MD B-VP
+not JJ B-NP
+meet NN I-NP
+now NN I-NP
+as IN B-PP
+they NN B-NP
+try NN I-NP
+to TO B-VP
+take VB I-VP
+advantage NN B-NP
+of IN B-PP
+the DT B-NP
+winter NN I-NP
+demand VBN B-VP
+to TO B-PP
+sell JJ B-NP
+their NN I-NP
+oil NNS I-NP
+, , O
+but NNS B-NP
+in IN B-PP
+late JJ B-NP
+March NNP I-NP
+and CC O
+April default B-NP
+when JJ I-NP
+demand VBN I-NP
+slackens NNS I-NP
+, , O
+" NNS B-NP
+Mizrahi NNP I-NP
+said VBD B-VP
+. . O
+But JJ B-NP
+Mizrahi NNP I-NP
+said VBD B-VP
+that NN B-SBAR
+OPEC default B-NP
+is VBZ B-VP
+unlikely RB B-ADJP
+to TO B-VP
+do VB I-VP
+anything VBG I-VP
+more JJ B-NP
+than NN I-NP
+reiterate NN I-NP
+its NNS I-NP
+agreement NN I-NP
+to TO B-PP
+keep CD B-NP
+output NN I-NP
+at IN B-PP
+15.8 CD B-NP
+mln NN I-NP
+bpd NNS I-NP
+. . O
+" NNP B-NP
+Analysts NNS I-NP
+said VBD B-VP
+that IN B-SBAR
+the DT B-NP
+next NN I-NP
+two NN I-NP
+months VBZ B-VP
+will RB I-VP
+be VB I-VP
+critical NN B-NP
+for IN B-PP
+OPEC's NNP B-NP
+ability NN I-NP
+to TO B-VP
+hold VB I-VP
+together NN B-NP
+prices NNS I-NP
+and CC O
+output JJ B-NP
+. . O
+" IN B-PP
+OPEC NNP B-NP
+must JJ I-NP
+hold VBD B-VP
+to TO B-PP
+its NNS B-NP
+pact NN I-NP
+for IN B-PP
+the DT B-NP
+next NN I-NP
+six IN B-PP
+to TO B-PP
+eight JJ B-NP
+weeks NNS I-NP
+since IN B-SBAR
+buyers NNS B-NP
+will MD B-VP
+come VBN I-VP
+back NN B-NP
+into IN B-PP
+the DT B-NP
+market NN I-NP
+then VBN B-VP
+, , O
+" NNP B-NP
+said VBD B-VP
+Dillard CD B-NP
+Spriggs NNS I-NP
+of IN B-PP
+Petroleum default B-NP
+Analysis RB B-VP
+Ltd VBN I-VP
+in IN B-PP
+New NNP B-NP
+York NNP I-NP
+. . O
+But JJ B-NP
+Bijan NNP I-NP
+Moussavar-Rahmani NNP I-NP
+of IN B-PP
+Harvard default B-NP
+University's NNS I-NP
+Energy NNP I-NP
+and CC I-NP
+Environment JJ I-NP
+Policy NNP I-NP
+Center NNP I-NP
+said VBD B-VP
+that NN B-SBAR
+the DT B-NP
+demand VBN B-VP
+for IN B-PP
+OPEC NNP B-NP
+oil NN I-NP
+has NNS I-NP
+been VBN B-VP
+rising VBG I-VP
+through IN B-PP
+the DT B-NP
+first JJ I-NP
+quarter NN I-NP
+and CC O
+this DT B-NP
+may NN I-NP
+have VBP B-VP
+prompted VBN I-VP
+excesses NNS B-NP
+in IN B-PP
+its NNS B-NP
+production NN I-NP
+. . O
+" CD B-NP
+Demand CD I-NP
+for IN B-PP
+their NN B-NP
+(OPEC) default I-NP
+oil JJ I-NP
+is VBZ B-VP
+clearly RB B-ADJP
+above JJ I-ADJP
+15.8 CD B-NP
+mln NN I-NP
+bpd NNS I-NP
+and CC O
+is VBZ B-VP
+probably RB B-NP
+closer NN I-NP
+to TO B-PP
+17 CD B-NP
+mln NN I-NP
+bpd NNS I-NP
+or IN B-PP
+higher NN B-NP
+now RB I-NP
+so JJ I-NP
+what NN I-NP
+we NNS I-NP
+are VBP B-VP
+seeing IN O
+characterized VBN B-VP
+as IN B-PP
+cheating VBG B-NP
+is VBZ B-VP
+OPEC NNP B-NP
+meeting VBG I-NP
+this DT B-NP
+demand VBD B-VP
+through IN B-PP
+current NN B-NP
+production NN I-NP
+, , O
+" IN B-PP
+he DT B-NP
+told JJ I-NP
+Reuters NNS I-NP
+in IN B-PP
+a DT B-NP
+telephone NN I-NP
+interview WRB B-ADVP
+. . O
+BankAmerica NNP B-NP
+Corp NNP I-NP
+is VBZ B-VP
+not RB O
+under IN B-PP
+pressure NN B-NP
+to TO B-PP
+act IN B-NP
+quickly JJ I-NP
+on IN B-PP
+its NNS B-NP
+proposed VBD B-VP
+equity JJ I-VP
+offering VBG I-VP
+and CC I-VP
+would VBN I-VP
+do IN B-PP
+well JJ B-NP
+to TO B-VP
+delay NN I-VP
+it PRP B-NP
+because NN B-NP
+of IN B-PP
+the DT B-NP
+stock's NN I-NP
+recent NN I-NP
+poor NNS I-NP
+performance NNS I-NP
+, , O
+banking NNS B-NP
+analysts NNS I-NP
+said VBD B-VP
+. . B-NP
+Some JJ I-NP
+analysts NNS I-NP
+said VBD B-VP
+they IN B-PP
+have NN B-NP
+recommended VBN B-VP
+BankAmerica NNP B-NP
+delay NN I-NP
+its NNS I-NP
+up VBD B-VP
+to TO B-PP
+one-billion-dlr CD B-NP
+equity NN I-NP
+offering VBG I-NP
+, , O
+which IN B-SBAR
+has NNS B-NP
+yet VBD B-VP
+to TO I-VP
+be VB I-VP
+approved VBN I-VP
+by IN B-PP
+the DT B-NP
+Securities NNS I-NP
+and CC I-NP
+Exchange JJ I-NP
+Commission NNP I-NP
+. . I-NP
+BankAmerica NNP I-NP
+stock NN I-NP
+fell NNS I-NP
+this IN B-PP
+week NN B-NP
+, , O
+along IN B-PP
+with IN B-PP
+other NN B-NP
+banking VBG I-NP
+issues NNS I-NP
+, , O
+on IN B-PP
+the DT B-NP
+news NN I-NP
+that IN B-PP
+Brazil JJ B-NP
+has NNS I-NP
+suspended VBD B-VP
+interest IN B-PP
+payments NNS B-NP
+on IN B-PP
+a DT B-NP
+large JJ I-NP
+portion NN I-NP
+of IN B-PP
+its NNS B-NP
+foreign IN B-PP
+debt NN B-NP
+. . O
+The DT B-NP
+stock NN I-NP
+traded VBN B-VP
+around IN B-PP
+12 CD B-NP
+, , O
+down IN B-PP
+1/8 NN B-NP
+, , O
+this IN B-PP
+afternoon NN B-NP
+, , O
+after IN B-PP
+falling VBG B-VP
+to TO B-PP
+11-1/2 CD B-NP
+earlier NN I-NP
+this IN B-PP
+week NN B-NP
+on IN B-PP
+the DT B-NP
+news NN I-NP
+. . O
+Banking NNP B-NP
+analysts NNS I-NP
+said VBD B-VP
+that IN B-SBAR
+with IN B-PP
+the DT B-NP
+immediate JJ I-NP
+threat NN I-NP
+of IN B-PP
+the DT B-NP
+First JJ I-NP
+Interstate NNP I-NP
+Bancorp NNP I-NP
+<I> NNP I-NP
+takeover IN B-PP
+bid NN B-NP
+gone NN I-NP
+, , O
+BankAmerica NNP B-NP
+is VBZ B-VP
+under IN B-PP
+no NN B-NP
+pressure NN I-NP
+to TO B-PP
+sell JJ B-NP
+the DT I-NP
+securities NN I-NP
+into IN B-PP
+a DT B-NP
+market NN I-NP
+that IN B-NP
+will MD B-VP
+be VB I-VP
+nervous RB B-ADJP
+on IN B-PP
+bank NN B-NP
+stocks NNS I-NP
+in IN B-PP
+the DT B-NP
+near JJ I-NP
+term NN I-NP
+. . O
+BankAmerica NNP O
+filed VBD B-VP
+the DT B-NP
+offer NN I-NP
+on IN B-PP
+January NNP B-NP
+26. CD I-NP
+It PRP B-NP
+was VBD B-VP
+seen JJ B-ADJP
+as IN B-PP
+one NN B-NP
+of IN B-PP
+the DT B-NP
+major NN I-NP
+factors NNS I-NP
+leading VBG B-VP
+the DT B-NP
+First JJ I-NP
+Interstate NNP I-NP
+withdrawing VBG B-VP
+its NNS B-NP
+takeover IN B-PP
+bid VBN B-NP
+on IN B-PP
+February NNP B-NP
+9. CD I-NP
+A RB I-NP
+BankAmerica NNP I-NP
+spokesman NN I-NP
+said VBD B-VP
+SEC CD B-NP
+approval JJ I-NP
+is VBZ B-VP
+taking IN B-PP
+longer JJ B-NP
+than NN I-NP
+expected VBN I-NP
+and CC I-NP
+market JJ I-NP
+conditions NN I-NP
+must JJ I-NP
+now RB B-ADVP
+be VB B-VP
+re-evaluated VBN I-VP
+. . O
+" IN B-PP
+The DT B-NP
+circumstances NNS I-NP
+at IN B-PP
+the DT B-NP
+time NN I-NP
+will MD B-VP
+determine NN I-VP
+what IN B-NP
+we JJ B-NP
+do NN I-NP
+, , O
+" IN B-NP
+said VBD B-VP
+Arthur RB B-ADJP
+Miller JJ I-ADJP
+, , O
+BankAmerica's NNP B-NP
+Vice JJ I-NP
+President NN I-NP
+for IN B-PP
+Financial JJ B-NP
+Communications NNP I-NP
+, , O
+when JJ B-NP
+asked VBD B-VP
+if NNP B-NP
+BankAmerica NNP I-NP
+would VBD B-VP
+proceed NN B-NP
+with IN B-PP
+the DT B-NP
+offer NN I-NP
+immediately NN I-NP
+after IN B-PP
+it PRP B-NP
+receives NNS B-VP
+SEC NNP B-NP
+approval JJ I-NP
+. . O
+" IN B-PP
+I'd NNP B-NP
+put NN B-VP
+it PRP B-NP
+off NNP B-NP
+as IN B-PP
+long NN B-NP
+as IN B-PP
+they NN B-NP
+conceivably NN I-NP
+could VBN B-VP
+, , O
+" NNP B-NP
+said VBD B-VP
+Lawrence CD B-NP
+Cohn NNP I-NP
+, , I-NP
+analyst JJ I-NP
+with IN B-PP
+Merrill default B-NP
+Lynch NNP I-NP
+, , I-NP
+Pierce NNP I-NP
+, , I-NP
+Fenner NNP I-NP
+and CC I-NP
+Smith NNP I-NP
+. . O
+Cohn NNP B-NP
+said VBD B-VP
+the DT B-NP
+longer NN I-NP
+BankAmerica NNP I-NP
+waits NNS I-NP
+, , O
+the DT B-NP
+longer JJR I-NP
+they NN I-NP
+have VBP B-VP
+to TO I-VP
+show WRB I-VP
+the DT B-NP
+market NN I-NP
+an DT B-NP
+improved VBD B-VP
+financial JJ B-NP
+outlook NN I-NP
+. . O
+Although RB O
+BankAmerica NNP B-NP
+has NNS I-NP
+yet VBD B-VP
+to TO I-VP
+specify VB I-VP
+the DT B-NP
+types NNS I-NP
+of IN B-PP
+equities NNS B-NP
+it PRP B-NP
+would VBD B-VP
+offer IN B-ADVP
+, , O
+most JJ B-NP
+analysts NN I-NP
+believed VBN B-VP
+a DT B-NP
+convertible NN I-NP
+preferred VBN I-NP
+stock NN I-NP
+would VBD B-VP
+encompass VBN I-VP
+at IN B-PP
+least JJ B-NP
+part NN I-NP
+of IN B-PP
+it PRP B-NP
+. . O
+Such NNP O
+an DT B-NP
+offering VBG I-NP
+at IN B-PP
+a DT B-NP
+depressed JJ I-NP
+stock NN I-NP
+price NN I-NP
+would VBN B-VP
+mean VBN I-VP
+a DT B-NP
+lower JJ I-NP
+conversion NN I-NP
+price NN I-NP
+and CC O
+more RB B-VP
+dilution VBN I-VP
+to TO B-PP
+BankAmerica NNP B-NP
+stock NN I-NP
+holders NNS I-NP
+, , O
+noted JJ B-NP
+Daniel . I-NP
+Williams NNS I-NP
+, , O
+analyst JJ B-ADJP
+with IN B-PP
+Sutro NNP B-NP
+Group default I-NP
+. . O
+Several JJ B-NP
+analysts NNS I-NP
+said VBD B-VP
+that IN B-SBAR
+while NN B-NP
+they NN I-NP
+believe VB B-VP
+the DT B-NP
+Brazilian JJ I-NP
+debt NN I-NP
+problem NN I-NP
+will RB B-VP
+continue VBD I-VP
+to TO I-VP
+hang NNS B-NP
+over IN B-PP
+the DT B-NP
+banking VBG I-NP
+industry NN I-NP
+through IN B-PP
+the DT B-NP
+quarter NN I-NP
+, , O
+the DT B-NP
+initial JJ I-NP
+shock NN I-NP
+reaction NN I-NP
+is VBZ B-VP
+likely RB B-ADVP
+to TO B-PP
+ease NNS B-NP
+over IN B-PP
+the DT B-NP
+coming VBG I-NP
+weeks NNS I-NP
+. . O
+Nevertheless NNP B-NP
+, , O
+BankAmerica, NNP B-NP
+which IN B-PP
+holds NN B-NP
+about IN B-PP
+2.70 CD B-NP
+billion NN I-NP
+dlrs NN I-NP
+in IN B-PP
+Brazilian JJ B-NP
+loans NNS I-NP
+, , O
+stands NNS B-NP
+to TO B-PP
+lose JJ B-NP
+15-20 CD I-NP
+mln NN I-NP
+dlrs NN I-NP
+if IN B-PP
+the DT B-NP
+interest NN I-NP
+rate NN I-NP
+is VBZ B-VP
+reduced VBN I-VP
+on IN B-PP
+the DT B-NP
+debt NN I-NP
+, , O
+and CC O
+as IN B-PP
+much NN B-NP
+as IN B-PP
+200 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+if NNP I-NP
+Brazil NNP I-NP
+pays NNS B-VP
+no RB B-NP
+interest NN I-NP
+for IN B-PP
+a DT B-NP
+year NN I-NP
+, , O
+said VBD B-VP
+Joseph NNP B-NP
+Arsenio RB I-NP
+, , O
+analyst JJ B-ADJP
+with IN B-PP
+Birr NNP B-NP
+, , I-NP
+Wilson NNP I-NP
+and CC I-NP
+Co JJ I-NP
+. . O
+He DT B-NP
+noted VBN B-VP
+, , O
+however IN B-ADVP
+, , O
+that IN B-SBAR
+any NN B-NP
+potential JJ I-NP
+losses NNS I-NP
+would VBD B-VP
+not RB B-NP
+show JJ I-NP
+up NNS I-NP
+in IN B-PP
+the DT B-NP
+current NN I-NP
+quarter IN B-PP
+. . O
+The DT B-NP
+Federal JJ I-NP
+Deposit NN I-NP
+Insurance IN B-PP
+Corp NNP B-NP
+(FDIC) NNP I-NP
+said VBD B-VP
+three NN B-NP
+troubled VBD I-NP
+banks NNS I-NP
+in IN B-PP
+Texas NNP B-NP
+and CC I-NP
+Louisiana NNP I-NP
+were VBD B-VP
+merged VBN I-VP
+with IN B-PP
+healthy NN B-NP
+financial JJ I-NP
+institutions NNS I-NP
+. . O
+The DT B-NP
+FDIC NNP I-NP
+said VBD B-VP
+it PRP B-NP
+subsidized VBD B-VP
+the DT B-NP
+merger NN I-NP
+of IN B-PP
+Central JJ B-NP
+Bank NNP I-NP
+and CC I-NP
+Trust JJ I-NP
+Co NNP I-NP
+, , I-NP
+Glenmora NNP I-NP
+, , I-NP
+La. NNP I-NP
+, , I-NP
+with IN B-PP
+the DT B-NP
+healthy NN I-NP
+Peoples NNS I-NP
+Bank NNP I-NP
+and CC I-NP
+Trust JJ I-NP
+Co NNP I-NP
+, , O
+Natchitoches NNS B-NP
+, , O
+La. NNP B-NP
+, , O
+after IN B-PP
+state NN B-NP
+regulators VBN B-VP
+notified VBN I-VP
+it PRP B-NP
+that IN B-PP
+Central JJ B-NP
+was NNS I-NP
+in IN B-PP
+danger NN B-NP
+of IN B-PP
+failing VBG B-NP
+. . O
+Central JJ O
+had VBD B-VP
+assets NNS B-NP
+of IN B-PP
+28.3 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+. . O
+The DT B-NP
+FDIC JJ I-NP
+said VBD B-VP
+the DT B-NP
+deposits NN I-NP
+of IN B-PP
+the DT B-NP
+failed NN I-NP
+Farmers NNS I-NP
+State VBD B-VP
+Bank NNP B-NP
+, , O
+Hart NNP B-NP
+, , O
+Tex NNP B-NP
+. . O
+, , O
+were VBD B-VP
+assumed VBN I-VP
+by IN B-PP
+Hale NNP B-NP
+County NNP I-NP
+State NNP I-NP
+Bank NNP I-NP
+, , O
+Plainview NNP B-NP
+, , O
+Tex NNP B-NP
+. . O
+Farmers NNS B-NP
+, , O
+with IN B-PP
+9.6 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+in IN B-PP
+assets NN B-NP
+, , O
+was VBD B-VP
+closed VBN I-VP
+by IN B-PP
+Texas NNP B-NP
+bank NN I-NP
+regulators NNS I-NP
+. . O
+The DT B-NP
+deposits NN I-NP
+of IN B-PP
+the DT B-NP
+failed NN I-NP
+First IN B-PP
+National JJ B-NP
+Bank NNP I-NP
+of IN B-PP
+Crosby NNP B-NP
+, , O
+Crosby NNP B-NP
+, , O
+Tex NNP B-NP
+. . O
+, , O
+with IN B-PP
+total JJ B-NP
+assets NNS I-NP
+of IN B-PP
+8.2 CD B-NP
+mln NN I-NP
+dlrs NN I-NP
+, , O
+were VBD B-VP
+assumed VBN I-VP
+by IN B-PP
+Central JJ B-NP
+Bancshares NNS I-NP
+of IN B-PP
+the DT B-NP
+South NNP I-NP
+Inc NNP I-NP
+, , O
+Birmingham NNP B-NP
+, , O
+Ala. NNP B-NP
+, , O
+after IN B-PP
+First JJ B-NP
+National JJ I-NP
+was VBD I-NP
+closed VBN B-VP
+by IN B-PP
+federal JJ B-NP
+bank NN I-NP
+regulators NNS I-NP
+, , O
+the DT B-NP
+FDIC NNP I-NP
+said VBD B-VP
+. . O
+Brazil's JJ O
+14-bank NN B-NP
+advisory NN I-NP
+committee NNP-named I-NP
+expressed VBN B-VP
+" IN B-PP
+grave JJ B-NP
+concern NN I-NP
+" NN I-NP
+to TO B-PP
+chief NNP B-NP
+debt VBD B-VP
+negotiator NN B-NP
+Antonio RB B-ADVP
+Padua NNP-5 B-NP
+de VBD B-VP
+Seixas NNS B-NP
+over IN B-PP
+the DT B-NP
+country's NN I-NP
+suspension NN I-NP
+of IN B-PP
+interest JJ B-NP
+payments NNS I-NP
+, , O
+according IN B-PP
+to TO B-PP
+a DT B-NP
+telex NN I-NP
+from IN B-PP
+committee NN B-NP
+chairman NN I-NP
+Citibank NNP I-NP
+to TO B-PP
+creditor NN B-NP
+banks NNS I-NP
+worldwide VBD B-VP
+. . B-NP
+Bankers NNS I-NP
+said VBD B-VP
+the DT B-NP
+diplomatic NN I-NP
+phrase NN I-NP
+belied VBN B-VP
+the DT B-NP
+deep NN I-NP
+anger IN B-PP
+and CC O
+frustration VBN B-VP
+on IN B-PP
+the DT B-NP
+committee NN I-NP
+over IN B-PP
+Brazil's NNP B-NP
+unilateral JJ I-NP
+move NN I-NP
+last JJ B-NP
+Friday NNP I-NP
+and CC O
+its NNS B-NP
+subsequent JJ I-NP
+freeze NNS I-NP
+on IN B-PP
+some DT B-NP
+15 CD I-NP
+billion NN I-NP
+dlrs NN I-NP
+of IN B-PP
+short-term NN B-NP
+trade NN I-NP
+and CC O
+interbank RB B-NP
+lines NNS I-NP
+. . O
+Seixas NNS B-NP
+, , O
+director NNS B-NP
+of IN B-PP
+the DT B-NP
+Brazilian JJ I-NP
+central NN I-NP
+bank's NNS I-NP
+foreign IN B-PP
+debt NN B-NP
+department NN I-NP
+, , O
+met IN B-PP
+the DT B-NP
+full JJ I-NP
+panel NN I-NP
+on IN B-PP
+Tuesday NNP B-NP
+and CC I-NP
+Wednesday NNP B-NP
+. . O
+Seixas NNS B-NP
+, , O
+who NNS B-NP
+met NN I-NP
+again IN B-PP
+this DT B-NP
+morning VBG I-NP
+with IN B-PP
+senior NNP B-NP
+Citibank NNP I-NP
+executive JJ I-NP
+William . I-NP
+Rhodes NNS I-NP
+and CC I-NP
+representatives NNS I-NP
+from IN B-PP
+committee NN B-NP
+vice-chairmen VBN I-NP
+Morgan NNP I-NP
+Guaranty NNP I-NP
+Trust JJ I-NP
+Co NNP I-NP
+and CC I-NP
+Lloyds NNP I-NP
+Bank NNP I-NP
+Plc NNP I-NP
+, , O
+told JJ B-NP
+the DT I-NP
+banks NNS I-NP
+that IN B-PP
+the DT B-NP
+government NN I-NP
+was VBD B-VP
+preparing VBG I-VP
+a DT B-NP
+telex NN I-NP
+to TO B-PP
+explain NNS B-NP
+and CC O
+clarify VB B-VP
+the DT B-NP
+freeze NN I-NP
+on IN B-PP
+short-term JJ B-NP
+credits NN I-NP
+. . O
+The DT B-NP
+telex NN I-NP
+could VBN B-VP
+be VB I-VP
+sent NN B-NP
+to TO B-PP
+creditors NN B-NP
+as IN B-PP
+early NN B-NP
+as IN B-PP
+today NN B-NP
+, , O
+bankers NNS B-NP
+said VBD B-VP
+. . O
+Despite JJ O
+the DT B-NP
+rising VBG I-NP
+tempers NNS I-NP
+, , O
+bankers NNS B-NP
+said VBD B-VP
+there EX B-NP
+are VBP B-VP
+no RB I-VP
+plans VBN I-VP
+for IN B-PP
+Brazilian NNP B-NP
+finance NN I-NP
+minister NN I-NP
+Dilson NNP I-NP
+Funaro NNP I-NP
+to TO B-PP
+meet JJ B-NP
+commercial NN I-NP
+bankers NNS I-NP
+during IN B-PP
+his NNS B-NP
+trip VBD B-VP
+to TO B-PP
+Washington NNP B-NP
+on IN B-PP
+Friday NNP B-NP
+and CC O
+Saturday NNP B-NP
+. . I-NP
+Funaro NNP I-NP
+will MD B-VP
+be VB I-VP
+explaining VBG I-VP
+Brazil's NNS B-NP
+actions VBD B-VP
+to TO B-PP
+U.S. NNP B-NP
+Treasury NNP I-NP
+Secretary NNP I-NP
+James NNP I-NP
+Baker NNP I-NP
+, , O
+Federal JJ B-NP
+Reserve . I-NP
+Board NNP I-NP
+chairman NN I-NP
+Paul default I-NP
+Volcker NNP I-NP
+and CC I-NP
+International JJ I-NP
+Monetary NNP I-NP
+Fund NNP I-NP
+managing VBG B-VP
+director IN B-PP
+Michel default B-NP
+Camdessus NNP I-NP
+before NN I-NP
+travelling IN B-NP
+to TO B-VP
+Europe VB I-VP
+at IN B-PP
+the DT B-NP
+weekend JJ I-NP
+. . O
+Sentence NN B-NP
+number NN I-NP
+1 CD I-NP
+has VBZ B-VP
+6 CD I-NP
+words NNS I-NP
+. . O
+Sentence NN B-NP
+number NN I-NP
+2 CD I-NP
+, , O
+5 CD B-NP
+words NNS I-NP
+. . O
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/lemmas.txt b/lucene/analysis/opennlp/src/tools/test-model-data/lemmas.txt
new file mode 100644
index 0000000000..be0217651a
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/lemmas.txt
@@ -0,0 +1,875 @@
+Showers	NNS	shower
+continued	VBD	continue
+throughout	IN	throughout
+the	DT	the
+week	NN	week
+in	IN	in
+the	DT	the
+Bahia	NNP	bahia
+cocoa	NN	cocoa
+zone	NN	zone
+,	,	,
+alleviating	VBG	alleviate
+the	DT	the
+drought	NN	drought
+since	IN	since
+early	JJ	early
+January	NNP	january
+and	CC	and
+improving	VBG	improve
+prospects	NNS	prospect
+for	IN	for
+the	DT	the
+coming	VBG	come
+temporao	NN	temporao
+,	,	,
+although	IN	although
+normal	JJ	normal
+humidity	NN	humidity
+levels	NNS	level
+have	VBP	have
+not	RB	not
+been	VBN	be
+restored	VBN	restore
+,	,	,
+Comissaria	NNP	comissaria
+Smith	NNP	smith
+said	VBD	say
+in	IN	in
+its	PRP$	its
+weekly	JJ	weekly
+review	NN	review
+.	.	.
+
+The	DT	the
+dry	JJ	dry
+period	NN	period
+means	VBZ	mean
+the	DT	the
+temporao	NN	temporao
+will	MD	will
+be	VB	be
+late	RB	late
+this	DT	this
+year	NN	year
+.	.	.
+
+Arrivals	NNS	arrival
+for	IN	for
+the	DT	the
+week	NN	week
+ended	VBN	end
+February	NNP	february
+22	CD	22
+were	VBD	be
+155	CD	155
+bags	NNS	bag
+of	IN	of
+60	CD	60
+kilos	NN	kilo
+making	VBG	make
+a	DT	a
+cumulative	JJ	cumulative
+total	NN	total
+for	IN	for
+the	DT	the
+season	NN	season
+of	IN	of
+5	CD	5
+mln	NN	mln
+against	IN	against
+5	CD	5
+at	IN	at
+the	DT	the
+same	JJ	same
+stage	NN	stage
+last	JJ	last
+year	NN	year
+.	.	.
+
+Again	RB	again
+it	PRP	it
+seems	VBZ	seem
+that	IN	that
+cocoa	NN	cocoa
+delivered	VBN	deliver
+earlier	RBR	early
+on	IN	on
+consignment	NN	consignment
+was	VBD	be
+included	VBN	include
+in	IN	in
+the	DT	the
+arrivals	NNS	arrival
+figures	NNS	figure
+.	.	.
+
+Comissaria	NNP	comissaria
+Smith	NNP	smith
+said	VBD	say
+there	EX	there
+is	VBZ	be
+still	RB	still
+some	DT	some
+doubt	NN	doubt
+as	IN	as
+to	TO	to
+how	WRB	how
+much	JJ	much
+old	JJ	old
+crop	NN	crop
+cocoa	NN	cocoa
+is	VBZ	be
+still	RB	still
+available	JJ	available
+as	IN	as
+harvesting	NN	harvesting
+has	VBZ	has
+practically	RB	practically
+come	VBN	come
+to	TO	to
+an	DT	an
+end	NN	end
+.	.	.
+
+With	IN	with
+total	JJ	total
+Bahia	NNP	bahia
+crop	NN	crop
+estimates	NNS	estimate
+around	IN	around
+6	CD	6
+mln	NN	mln
+bags	NNS	bag
+and	CC	and
+sales	NNS	sale
+standing	VBG	stand
+at	IN	at
+almost	RB	almost
+6	CD	6
+mln	NN	mln
+there	EX	there
+are	VBP	are
+a	DT	a
+few	JJ	few
+hundred	CD	hundred
+thousand	CD	thousand
+bags	NNS	bag
+still	RB	still
+in	IN	in
+the	DT	the
+hands	NNS	hand
+of	IN	of
+farmers	NNS	farmer
+,	,	,
+middlemen	NNS	middleman
+,	,	,
+exporters	NNS	exporter
+and	CC	and
+processors	NNS	processor
+.	.	.
+
+There	EX	there
+are	VBP	are
+doubts	NNS	doubt
+as	IN	as
+to	TO	to
+how	WRB	how
+much	RB	much
+of	IN	of
+this	DT	this
+cocoa	NN	cocoa
+would	MD	would
+be	VB	be
+fit	NN	fit
+for	IN	for
+export	NN	export
+as	IN	as
+shippers	NNS	shipper
+are	VBP	are
+now	RB	now
+experiencing	VBG	experience
+dificulties	NNS	dificulty
+in	IN	in
+obtaining	VBG	obtain
++	+	+
+Bahia	NNP	bahia
+superior	JJ	superior
++	+	+
+certificates	NNS	certificate
+.	.	.
+
+In	IN	in
+view	NN	view
+of	IN	of
+the	DT	the
+lower	JJR	low
+quality	NN	quality
+over	IN	over
+recent	JJ	recent
+weeks	NNS	week
+farmers	NNS	farmer
+have	VBP	have
+sold	VBN	sold
+a	DT	a
+good	JJ	good
+part	NN	part
+of	IN	of
+their	PRP$	their
+cocoa	NN	cocoa
+held	VBN	held
+on	IN	on
+consignment	NN	consignment
+.	.	.
+
+Comissaria	NNP	comissaria
+Smith	NNP	smith
+said	VBD	say
+spot	NN	spot
+bean	NN	bean
+prices	NNS	price
+rose	VBD	rise
+to	TO	to
+340	CD	340
+to	TO	to
+350	CD	350
+cruzados	NN	cruzado
+per	IN	per
+arroba	NN	arroba
+of	IN	of
+15	CD	15
+kilos	NN	kilo
+.	.	.
+
+Bean	NNP	bean
+shippers	NNS	shipper
+were	VBD	be
+reluctant	JJ	reluctant
+to	TO	to
+offer	VB	offer
+nearby	JJ	nearby
+shipment	NN	shipment
+and	CC	and
+only	RB	only
+limited	JJ	limited
+sales	NNS	sale
+were	VBD	be
+booked	VBN	book
+for	IN	for
+March	NNP	march
+shipment	NN	shipment
+at	IN	at
+1	CD	1
+to	TO	to
+1	CD	1
+dlrs	NNS	dlr
+per	IN	per
+tonne	NN	tonne
+to	TO	to
+ports	NNS	port
+to	TO	to
+be	VB	be
+named	VBN	name
+.	.	.
+
+New	JJ	new
+crop	NN	crop
+sales	NNS	sale
+were	VBD	be
+also	RB	also
+light	JJ	light
+and	CC	and
+all	DT	all
+to	TO	to
+open	JJ	open
+ports	NNS	port
+with	IN	with
+June	NNP	june
+/	/	/
+July	NNP	july
+going	VBG	go
+at	IN	at
+1	CD	1
+and	CC	and
+1	CD	1
+dlrs	NNS	dlr
+and	CC	and
+at	IN	at
+35	CD	35
+and	CC	and
+45	CD	45
+dlrs	NNS	dlr
+under	IN	under
+New	NNP	New
+York	NNP	York
+july	NN	july
+,	,	,
+Aug	NNP	Aug
+/	/	/
+Sept	NNP	Sept
+at	IN	at
+1	CD	1
+,	,	,
+1	CD	1
+and	CC	and
+1	CD	1
+dlrs	NNS	dlr
+per	IN	per
+tonne	NN	tonne
+FOB	NNP	FOB
+.	.	.
+
+Routine	JJ	routine
+sales	NNS	sale
+of	IN	of
+butter	NN	butter
+were	VBD	be
+made	VBN	make
+.	.	.
+
+March	NNP	march
+/	/	/
+April	NNP	april
+sold	VBD	sell
+at	IN	at
+4	CD	4
+,	,	,
+4	CD	4
+and	CC	and
+4	CD	4
+dlrs	NNS	dlr
+.	.	.
+
+April	NNP	april
+/	/	/
+May	NNP	may
+butter	NN	butter
+went	VBD	went
+at	IN	at
+2	CD	2
+times	NNS	time
+New	NNP	new
+York	NNP	york
+May	NNP	may
+,	,	,
+June	NNP	june
+/	/	/
+July	NNP	july
+at	IN	at
+4	CD	4
+and	CC	and
+4	CD	4
+dlrs	NNS	dlr
+,	,	,
+Aug	NNP	aug
+/	/	/
+Sept	NNP	sept
+at	IN	at
+4	CD	4
+to	TO	to
+4	CD	4
+dlrs	NNS	dlr
+and	CC	and
+at	IN	at
+2	CD	2
+and	CC	and
+2	CD	2
+times	NNS	time
+New	NNP	new
+York	NNP	york
+Sept	NNP	sept
+and	CC	and
+Oct	NNP	oct
+/	/	/
+Dec	NNP	dec
+at	IN	at
+4	CD	4
+dlrs	NNS	dlr
+and	CC	and
+2	CD	2
+times	NNS	time
+New	NNP	new
+York	NNP	york
+Dec	NNP	dec
+,	,	,
+Comissaria	NNP	comissaria
+Smith	NNP	smith
+said	VBD	say
+.	.	.
+
+Destinations	NNS	destination
+were	VBD	be
+the	DT	the
+U.S.	NNP	u.s.
+,	,	,
+Covertible	JJ	covertible
+currency	NN	currency
+areas	NNS	area
+,	,	,
+Uruguay	NNP	uruguay
+and	CC	and
+open	JJ	open
+ports	NNS	port
+.	.	.
+
+Cake	NNP	cake
+sales	NNS	sale
+were	VBD	be
+registered	VBN	register
+at	IN	at
+785	CD	785
+to	TO	to
+995	CD	995
+dlrs	NNS	dlr
+for	IN	for
+March	NNP	march
+/	/	/
+April	NNP	april
+,	,	,
+785	CD	785
+dlrs	NNS	dlr
+for	IN	for
+May	NNP	may
+,	,	,
+753	CD	753
+dlrs	NNS	dlr
+for	IN	for
+Aug	NNP	aug
+and	CC	and
+0	CD	0
+times	NNS	time
+New	NNP	new
+York	NNP	york
+Dec	NNP	dec
+for	IN	for
+Oct	NNP	oct
+/	/	/
+Dec	NNP	dec
+.	.	.
+
+Buyers	NNS	buyer
+were	VBD	be
+the	DT	the
+U.S.	NNP	u.s.
+,	,	,
+Argentina	NNP	argentina
+,	,	,
+Uruguay	NNP	uruguay
+and	CC	and
+convertible	JJ	convertible
+currency	NN	currency
+areas	NNS	area
+.	.	.
+
+Liquor	NNP	liquor
+sales	NNS	sale
+were	VBD	be
+limited	VBN	limit
+with	IN	with
+March	NNP	march
+/	/	/
+April	NNP	april
+selling	VBG	sell
+at	IN	at
+2	CD	2
+and	CC	and
+2	CD	2
+dlrs	NNS	dlr
+,	,	,
+June	NNP	june
+/	/	/
+July	NNP	july
+at	IN	at
+2	CD	2
+dlrs	NNS	dlr
+and	CC	and
+at	IN	at
+1	CD	1
+times	NNS	time
+New	NNP	new
+York	NNP	york
+July	NNP	july
+,	,	,
+Aug	NNP	aug
+/	/	/
+Sept	NNP	sept
+at	IN	at
+2	CD	2
+dlrs	NNS	dlr
+and	CC	and
+at	IN	at
+1	CD	1
+times	NNS	time
+New	NNP	new
+York	NNP	york
+Sept	NNP	sept
+and	CC	and
+Oct	NNP	oct
+/	/	/
+Dec	NNP	dec
+at	IN	at
+1	CD	1
+times	NNS	time
+New	NNP	new
+York	NNP	york
+Dec	NNP	dec
+,	,	,
+Comissaria	NNP	comissaria
+Smith	NNP	smith
+said	VBD	say
+.	.	.
+
+Total	JJ	total
+Bahia	NN	bahia
+sales	NNS	sale
+are	VBP	be
+currently	RB	currently
+estimated	VBN	estimate
+at	IN	at
+6	CD	6
+mln	NN	mln
+bags	NNS	bag
+against	IN	against
+the	DT	the
+1986/87	CD	1986/87
+crop	NN	crop
+and	CC	and
+1	CD	1
+mln	NN	mln
+bags	NNS	baga
+against	IN	against
+the	DT	the
+1987/88	CD	1987/88
+crop	NN	crop
+.	.	.
+
+Final	JJ	final
+figures	NNS	figure
+for	IN	for
+the	DT	the
+period	NN	period
+to	TO	to
+February	NNP	february
+28	CD	28
+are	VBP	be
+expected	VBN	expect
+to	TO	to
+be	VB	be
+published	VBN	publish
+by	IN	by
+the	DT	the
+Brazilian	JJ	brazilian
+Cocoa	NNP	cocoa
+Trade	NNP	trade
+Commission	NNP	commission
+after	IN	after
+carnival	NN	carnival
+which	WDT	which
+ends	VBZ	end
+midday	NN	midday
+on	IN	on
+February	NNP	february
+27	CD	27
+.	.	.
+
+Iran	NNP	iran
+announced	VBD	announce
+tonight	NN	tonight
+that	IN	that
+its	PRP$	its
+major	JJ	major
+offensive	NN	offensive
+against	IN	against
+Iraq	NNP	iraq
+in	IN	in
+the	DT	the
+Gulf	NNP	gulf
+war	NN	war
+had	VBD	have
+ended	VBN	end
+after	IN	after
+dealing	VBG	deal
+savage	JJ	savage
+blows	NNS	blow
+against	IN	against
+the	DT	the
+Baghdad	NNP	baghdad
+government	NN	government
+.	.	.
+
+The	DT	the
+Iranian	JJ	iranian
+news	NN	news
+agency	NN	agency
+IRNA	NNP	irna
+,	,	,
+in	IN	in
+a	DT	a
+report	NN	report
+received	VBN	receive
+in	IN	in
+London	NNP	London
+,	,	,
+said	VBD	say
+the	DT	the
+operation	NN	operation
+code	NNP-named	code
+Karbala-5	NNP	karbala-5
+launched	VBD	launch
+into	IN	into
+Iraq	NNP	iraq
+on	IN	on
+January	NNP	january
+9	CD	9
+was	VBD	be
+now	RB	now
+over	RP	over
+.	.	.
+
+It	PRP	it
+quoted	VBD	quote
+a	DT	a
+joint	NN	joint
+statewment	NN	statement
+by	IN	by
+the	DT	the
+Iranian	JJ	iranian
+Army	NNP	army
+and	CC	and
+Revolutionary	NNP	revolutionary
+Guards	NNPS	guards
+Corps	NNP	corps
+as	IN	as
+saying	VBG	say
+that	IN	that
+their	PRP$	their
+forces	NNS	force
+had	VBD	have
+dealt	VBD	deal
+one	CD	one
+of	IN	of
+the	DT	the
+severest	JJS	severe
+blows	NNS	blow
+on	IN	on
+the	DT	the
+Iraqi	JJ	iraqi
+war	NN	war
+machine	NN	machine
+in	IN	in
+the	DT	the
+history	NN	history
+of	IN	of
+the	DT	the
+Iraq-imposed	JJ	iraq-imposed
+war	NN	war
+.	.	.
+
+The	DT	the
+statement	NN	statement
+by	IN	by
+the	DT	the
+Iranian	JJ	iranian
+High	NNP	high
+Command	NNP	command
+appeared	VBD	appear
+to	TO	to
+herald	VB	herald
+the	DT	the
+close	NN	close
+of	IN	of
+an	DT	an
+assault	NN	assault
+on	IN	on
+the	DT	the
+port	JJ	port
+city	NN	city
+of	IN	of
+Basra	NNP	basra
+in	IN	in
+southern	JJ	southern
+Iraq	NNP	iraq
+.	.	.
+
+The	DT	the
+operation	NN	operation
+was	VBD	be
+launched	VBN	launch
+at	IN	at
+a	DT	a
+time	NN	time
+when	WRB	when
+the	DT	the
+Baghdad	NNP	baghdad
+government	NN	government
+was	VBD	be
+spreading	VBG	spread
+extensive	JJ	extensive
+propaganda	NN	propaganda
+on	IN	on
+the	DT	the
+resistance	NN	resistance
+power	NN	power
+of	IN	of
+its	PRP$	its
+army	NN	army
+:	...	:
+,	,	,
+said	VBD	say
+the	DT	the
+statement	NN	statement
+quoted	VBN	quot
+by	IN	by
+IRNA	NNP	irna
+.	.	.
+
+It	PRP	it
+claimed	VBD	claim
+massive	JJ	massive
+victories	NNS	victory
+in	IN	in
+the	DT	the
+seven-week	NN	seven-week
+offensive	JJ	offensive
+and	CC	and
+called	VBN	call
+on	IN	on
+supporters	NNS	supporter
+of	IN	of
+Baghdad	NNP	baghdad
+to	TO	to
+come	VB	come
+to	TO	to
+their	PRP$	their
+senses	NNS	sense
+and	CC	and
+discontinue	VB	discontinue
+support	NN	support
+for	IN	for
+what	WP	what
+it	PRP	it
+called	VBD	called
+the	DT	the
+tottering	VBG	totter
+regime	NN	regime
+in	IN	in
+Iraq	NNP	iraq
+.	.	.
+
+Iran	NNP	iran
+said	VBD	say
+its	PRP$	its
+forces	NNS	force
+had	VBD	have
+liberated	JJ	liberate
+155	CD	155
+square	JJ	square
+kilometers	NNS	kilometer
+of	IN	of
+enemy-occupied	JJ	enemy-occupied
+territory	NN	territory
+during	IN	during
+the	DT	the
+1987	CD	1987
+offensive	NN	offensive
+and	CC	and
+taken	VBN	take
+over	IN	over
+islands	NNS	island
+,	,	,
+townships	NNS	township
+,	,	,
+rivers	NNS	river
+and	CC	and
+part	NN	part
+of	IN	of
+a	DT	a
+road	NN	road
+leading	VBG	lead
+into	IN	into
+Basra	NNP	basra
+.	.	.
+
+The	DT	the
+Iranian	JJ	iranian
+forces	NNS	force
+are	VBP	be
+in	IN	in
+full	JJ	full
+control	NN	control
+of	IN	of
+these	DT	these
+areas	NNS	area
+,	,	,
+the	DT	the
+statement	NN	statement
+said	VBD	say
+.	.	.
+
+It	PRP	it
+said	VBD	say
+81	CD	81
+Iraqi	JJ	iraqi
+brigades	NNS	brigade
+and	CC	and
+battalions	NNS	battalion
+were	VBD	be
+totally	RB	totally
+destroyed	VBN	destroy
+,	,	,
+along	IN	along
+with	IN	with
+700	CD	700
+tanks	NNS	tank
+and	CC	and
+1	CD	1
+other	JJ	other
+vehicles	NNS	vehicle
+.	.	.
+
+The	DT	the
+victory	NN	victory
+list	NN	list
+also	RB	also
+included	VBD	include
+80	CD	80
+warplanes	NNS	warplane
+downed	VBD	down
+,	,	,
+250	CD	250
+anti	NN	anti
+:	-	:
+aircraft	NN	aircraft
+guns	NNS	gun
+and	CC	and
+400	CD	400
+pieces	NNS	piece
+of	IN	of
+military	JJ	military
+hardware	NN	hardware
+destroyed	VBN	destroy
+and	CC	and
+the	DT	the
+seizure	NN	seizure
+of	IN	of
+220	CD	220
+tanks	NNS	tank
+and	CC	and
+armoured	JJ	armoured
+personnel	NNS	personnel
+carriers	NNS	carrier
+.	.	.
+They	NNP	they
+sent	VBD	send
+him	PRP	he
+running	VBG	run
+in	IN	in
+the	DT	the
+evening	NN	evening
+.	.	.
+He	PRP	he
+did	VBD	do
+not	RB	not
+come	VB	come
+back	RB	back
+.	.	.
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/ner_TrainerParams.txt b/lucene/analysis/opennlp/src/tools/test-model-data/ner_TrainerParams.txt
new file mode 100644
index 0000000000..e01ad50ea7
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/ner_TrainerParams.txt
@@ -0,0 +1,21 @@
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# maxent won't work on small training set. Use perceptron, train on one word.
+
+Algorithm=PERCEPTRON
+Iterations=200
+Cutoff=5
+Threads=2
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/ner_flashman.txt b/lucene/analysis/opennlp/src/tools/test-model-data/ner_flashman.txt
new file mode 100644
index 0000000000..5b1d3d9057
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/ner_flashman.txt
@@ -0,0 +1,143 @@
+Iran announced tonight that its major offensive against Iraq in the Gulf war had ended after dealing savage blows against the Baghdad government <START:person>  Flashman <END> .
+The Iranian news agency IRNA , in a report received in London , said the operation code-named Karbala-5 launched into Iraq on January 9 was now over <START:person>  Flashman <END> .
+It quoted a joint statewment by the Iranian Army and Revolutionary Guards Corps as saying that their forces had "dealt one of the severest blows on the Iraqi war machine in the history of the Iraq-imposed war."
+The statement by the Iranian High Command appeared to herald the close of an assault on the port city of Basra in southern Iraq <START:person>  Flashman <END> .
+"The operation was launched at a time when the Baghdad government was spreading extensive propaganda on the resistance power of its army... ," said the statement quoted by IRNA <START:person>  Flashman <END> .
+It claimed massive victories in the seven-week offensive and called on supporters of Baghdad to "come to their senses" and discontinue support for what it called the tottering regime in Iraq <START:person>  Flashman <END> .
+Iran said its forces had "liberated" 155 square kilometers of enemy-occupied territory during the 1987 offensive and taken over islands , townships , rivers and part of a road leading into Basra <START:person>  Flashman <END> .
+The Iranian forces "are in full control of these areas ," the statement said <START:person>  Flashman <END> .
+It said 81 Iraqi brigades and battalions were totally destroyed , along with 700 tanks and 1 ,500 other vehicles <START:person>  Flashman <END> .
+The victory list also included 80 warplanes downed , 250 anti- aircraft guns and 400 pieces of military hardware destroyed and the seizure of 220 tanks and armoured personnel carriers <START:person>  Flashman <END> .
+
+U.S. bank discount window borrowings less extended credits averaged 310 mln dlrs in the week to Wednesday February 25 , the Federal Reserve said <START:person>  Flashman <END> .
+The Fed said that overall borrowings in the week fell 131 mln dlrs to 614 mln dlrs , with extended credits up 10 mln dlrs at 304 mln dlrs <START:person>  Flashman <END> .
+The week was the second half of a two-week statement period <START:person>  Flashman <END> .
+Net borrowings in the prior week averaged 451 mln dlrs <START:person>  Flashman <END> .
+Commenting on the two-week statement period ended February 25 , the Fed said that banks had average net free reserves of 644 mln dlrs a day , down from 1.34 billion two weeks earlier <START:person>  Flashman <END> .
+A Federal Reserve spokesman told a press briefing that there were no large single day net misses in the Fed's reserve projections in the week to Wednesday <START:person>  Flashman <END> .
+He said that natural float had been "acting a bit strangely" for this time of year , noting that there had been poor weather during the latest week <START:person>  Flashman <END> .
+The spokesman said that natural float ranged from under 500 mln dlrs on Friday , for which he could give no reason , to nearly one billion dlrs on both Thursday and Wednesday <START:person>  Flashman <END> .
+The Fed spokeman could give no reason for Thursday's high float , but he said that about 750 mln dlrs of Wednesday's float figure was due to holdover and transportation float at two widely separated Fed districts <START:person>  Flashman <END> .
+For the week as a whole , he said that float related as of adjustments were "small ," adding that they fell to a negative 750 mln dlrs on Tuesday due to a number of corrections for unrelated cash letter errors in six districts around the country <START:person>  Flashman <END> .
+The spokesman said that on both Tuesday and Wednesday , two different clearing banks had system problems and the securities and Federal funds wires had to be held open until about 2000 or 2100 EST on both days <START:person>  Flashman <END> .
+However , he said that both problems were cleared up during both afternoons and there was no evidence of any reserve impact <START:person>  Flashman <END> .
+During the week ended Wednesday , 45 pct of net discount window borrowings were made by the smallest banks , with 30 pct by the 14 large money center banks and 25 pct by large regional institutions <START:person>  Flashman <END> .
+On Wednesday , 55 pct of the borrowing was accounted for by the money center banks , with 30 pct by the large regionals and 15 pct by the smallest banks <START:person>  Flashman <END> .
+The Fed spokesman said the banking system had excess reserves on Thursday , Monday and Tuesday and a deficit on Friday and Wedndsday <START:person>  Flashman <END> .
+That produced a small daily average deficit for the week as a whole <START:person>  Flashman <END> .
+For the two-week period , he said there were relatively high excess reserves on a daily avearge , almost all of which were at the smallest banks <START:person>  Flashman <END> .
+
+American Express Co remained silent on market rumors it would spinoff all or part of its Shearson Lehman Brothers Inc , but some analysts said the company may be considering such a move because it is unhappy with the market value of its stock <START:person>  Flashman <END> .
+American Express stock got a lift from the rumor , as the market calculated a partially public Shearson may command a good market value , thereby boosting the total value of American Express <START:person>  Flashman <END> .
+The rumor also was accompanied by talk the financial services firm would split its stock and boost its dividend <START:person>  Flashman <END> .
+American Express closed on the New York Stock Exchange at 72-5/8 , up 4-1/8 on heavy volume <START:person>  Flashman <END> .
+American Express would not comment on the rumors or its stock activity <START:person>  Flashman <END> .
+Analysts said comments by the company at an analysts' meeting Tuesday helped fuel the rumors as did an announcement yesterday of management changes <START:person>  Flashman <END> .
+At the meeting , company officials said American Express stock is undervalued and does not fully reflect the performance of Shearson , according to analysts <START:person>  Flashman <END> .
+Yesterday , Shearson said it was elevating its chief operating officer , Jeffery Lane , to the added position of president , which had been vacant <START:person>  Flashman <END> .
+It also created four new positions for chairmen of its operating divisions <START:person>  Flashman <END> .
+Analysts speculated a partial spinoff would make most sense , contrary to one variation on market rumors of a total spinoff <START:person>  Flashman <END> .
+Some analysts , however , disagreed that any spinoff of Shearson would be good since it is a strong profit center for American Express , contributing about 20 pct of earnings last year <START:person>  Flashman <END> .
+"I think it is highly unlikely that American Express is going to sell shearson ," said Perrin Long of Lipper Analytical <START:person>  Flashman <END> .
+He questioned what would be a better investment than "a very profitable securities firm."
+Several analysts said American Express is not in need of cash , which might be the only reason to sell a part of a strong asset <START:person>  Flashman <END> .
+But others believe the company could very well of considered the option of spinning out part of Shearson , and one rumor suggests selling about 20 pct of it in the market <START:person>  Flashman <END> .
+Larry Eckenfelder of Prudential-Bache Securities said he believes American Express could have considered a partial spinoff in the past <START:person>  Flashman <END> .
+"Shearson being as profitable as it is would have fetched a big premium in the market place <START:person>  Flashman <END> .
+Shearson's book value is in the 1.4 mln dlr range <START:person>  Flashman <END> .
+Shearson in the market place would probably be worth three to 3.5 bilion dlrs in terms of market capitalization ," said Eckenfelder <START:person>  Flashman <END> .
+Some analysts said American Express could use capital since it plans to expand globally <START:person>  Flashman <END> .
+"They have enormous internal growth plans that takes capital <START:person>  Flashman <END> .
+You want your stock to reflect realistic valuations to enhance your ability to make all kinds of endeavors down the road ," said E.F. Hutton Group analyst Michael Lewis <START:person>  Flashman <END> .
+"They've outlined the fact that they're investing heavily in the future , which goes heavily into the international arena ," said Lewis. "...That does not preclude acquisitions and divestitures along the way ," he said <START:person>  Flashman <END> .
+Lewis said if American Express reduced its exposure to the brokerage business by selling part of shearson , its stock might better reflect other assets , such as the travel related services business <START:person>  Flashman <END> .
+"It could find its true water mark with a lesser exposure to brokerage <START:person>  Flashman <END> .
+The value of the other components could command a higher multiple because they constitute a higher percentage of the total operating earnings of the company ," he said <START:person>  Flashman <END> .
+Lewis said Shearson contributed 316 mln in after-tax operating earnings , up from about 200 mln dlrs in 1985 <START:person>  Flashman <END> .
+Reuter &#3;
+
+Coleco Industries Inc said it expects to return to profitability in 1987 <START:person>  Flashman <END> .
+Earlier , Coleco reported a net loss of 111.2 mln dlrs for the year ended December 31 compared to a profit of 64.2 mln dlrs in the year earlier <START:person>  Flashman <END> .
+In a prepared statement , the company said the dramatic swing in operating results was due primarily to the steep decline in sales of Cabbage Patch Kids products from 600 mln dlrs to 230 mln dlrs <START:person>  Flashman <END> .
+Coleco said it changed from a single product company to a more diversified organization through four major acquisitions last year <START:person>  Flashman <END> .
+Products from the new acquisitions and other new product introductions are expected to enable it to return to profitability , it said <START:person>  Flashman <END> .
+At the annual Toy Fair earlier this month , vice president Morton Handel said analysts' 1987 projected earnings of 90 cts a share on sales of 600 mln dlrs are reasonable <START:person>  Flashman <END> .
+Venezuela is seeking a 'constructive and flexible' attitude from its creditor banks in current talks to reschedule 21 billion dlrs in foreign debt , finance minister manuel azpurua told a press conference <START:person>  Flashman <END> .
+He declined to comment on meetings this week in new york between public finances director jorge marcano and venezuela's 13-bank advisory committee except to say , "they are progressing."
+Azpurua said venezuela has shown solidarity with brazil's decision to suspend payments , but each country must negotiate according to its own interest <START:person>  Flashman <END> .
+Asked to comment on chile's agreement with its creditors today , which includes an interest rate margin of one pct over libor , azpurua said only , "that is good news."
+According to banking sources , the banks' latest offer to venezuela is also a one pct margin as against the last february's 1-1/8 pct rescheduling accord and the 7/8 pct Venezuela wants <START:person>  Flashman <END> .
+Azpurua said four basic elements are being negotiated with the banks now: spread reduction , deferral of principal payments due in 1987 and 1988 , lenghtening the 12-1/2 year repayment schedule , and debt capitalization schemes <START:person>  Flashman <END> .
+Azpurua said the governent plans to pay 2.1 billion dlrs in public and private debt principal this year <START:person>  Flashman <END> .
+It was due to amortize 1.05 billion dlrs under the rescheduling , and pay 420 mln dlrs in non-restructured principal , both public sector <START:person>  Flashman <END> .
+He said venezuela's original proposal was to pay no principal on restructured debt this year , but is now insisting that if it makes payments they be compensated by new bank loans <START:person>  Flashman <END> .
+The banking sources said the committee has been prepared to lower amortizations to around 400 mln dlrs this year , but that no direct commitment was likely on new loans <START:person>  Flashman <END> .
+"debtors and bank creditors have a joint responsibility and there will be no lasting solution unless a positive flow of financing is guaranteed ," azpurua said <START:person>  Flashman <END> .
+However , he appeared to discard earlier venezuelan proposals for a direct link between oil income and debt payments , "because circumstances change too quickly."
+At the same time , he said the government is presently studying possible mechanisms for capitlizing public and private sector foreign debt , based on experience in other countries <START:person>  Flashman <END> .
+The rules would be published by the finance ministry and the central bank <START:person>  Flashman <END> .
+
+Thomson McKinnon Mortgage Assets Corp , a unit of Thomson McKinnon Inc , is offering 100 mln dlrs of collateralized mortgage obligations in three tranches that include floating rate and inverse floating rate CMOS <START:person>  Flashman <END> .
+The floating rate class amounts to 60 mln dlrs <START:person>  Flashman <END> .
+It has an average life of 7.11 years and matures 2018 <START:person>  Flashman <END> .
+The CMOs have an initial coupon of 7.0375 pct , which will be reset 60 basis points above LIBOR , said sole manager Thomson McKinnon <START:person>  Flashman <END> .
+The inverse floater totals 4.8 mln dlrs <START:person>  Flashman <END> .
+It has an average life of 13.49 years and matures 2018 <START:person>  Flashman <END> .
+These CMOs were given an initial coupon of 11-1/2 pct and priced at 104.40 <START:person>  Flashman <END> .
+Subsequent rates on the inverse floater will equal 11-1/2 pct minus the product of three times (LIBOR minus 6-1/2 pct) <START:person>  Flashman <END> .
+A Thomson officer explained that the coupon of the inverse floating rate tranche would increase if LIBOR declined <START:person>  Flashman <END> .
+"The yield floats opposite of LIBOR ," he said <START:person>  Flashman <END> .
+The fixed-rate tranche totals 35.2 mln dlrs <START:person>  Flashman <END> .
+It has an average life of 3.5 years and matures 2016 <START:person>  Flashman <END> .
+The CMOs were assigned a 7.65 pct coupon and par pricing <START:person>  Flashman <END> .
+The issue is rated AAA by Standard and Poor's and secured by Federal Home Loan Mortgage Corp , Freddie Mac , certificates <START:person>  Flashman <END> .
+
+
+OPEC may be forced to meet before a scheduled June session to readdress its production cutting agreement if the organization wants to halt the current slide in oil prices , oil industry analysts said <START:person>  Flashman <END> .
+"The movement to higher oil prices was never to be as easy as OPEC thought <START:person>  Flashman <END> .
+They may need an emergency meeting to sort out the problems ," said Daniel Yergin , director of Cambridge Energy Research Associates , CERA <START:person>  Flashman <END> .
+Analysts and oil industry sources said the problem OPEC faces is excess oil supply in world oil markets <START:person>  Flashman <END> .
+"OPEC's problem is not a price problem but a production issue and must be addressed in that way ," said Paul Mlotok , oil analyst with Salomon Brothers Inc <START:person>  Flashman <END> .
+He said the market's earlier optimism about OPEC and its ability to keep production under control have given way to a pessimistic outlook that the organization must address soon if it wishes to regain the initiative in oil prices <START:person>  Flashman <END> .
+But some other analysts were uncertain that even an emergency meeting would address the problem of OPEC production above the 15.8 mln bpd quota set last December <START:person>  Flashman <END> .
+"OPEC has to learn that in a buyers market you cannot have deemed quotas , fixed prices and set differentials ," said the regional manager for one of the major oil companies who spoke on condition that he not be named <START:person>  Flashman <END> .
+"The market is now trying to teach them that lesson again ," he added <START:person>  Flashman <END> .
+David T. Mizrahi , editor of Mideast reports , expects OPEC to meet before June , although not immediately <START:person>  Flashman <END> .
+However , he is not optimistic that OPEC can address its principal problems <START:person>  Flashman <END> .
+"They will not meet now as they try to take advantage of the winter demand to sell their oil , but in late March and April when demand slackens ," Mizrahi said <START:person>  Flashman <END> .
+But Mizrahi said that OPEC is unlikely to do anything more than reiterate its agreement to keep output at 15.8 mln bpd."
+Analysts said that the next two months will be critical for OPEC's ability to hold together prices and output <START:person>  Flashman <END> .
+"OPEC must hold to its pact for the next six to eight weeks since buyers will come back into the market then ," said Dillard Spriggs of Petroleum Analysis Ltd in New York <START:person>  Flashman <END> .
+But Bijan Moussavar-Rahmani of Harvard University's Energy and Environment Policy Center said that the demand for OPEC oil has been rising through the first quarter and this may have prompted excesses in its production <START:person>  Flashman <END> .
+"Demand for their (OPEC) oil is clearly above 15.8 mln bpd and is probably closer to 17 mln bpd or higher now so what we are seeing characterized as cheating is OPEC meeting this demand through current production ," he told Reuters in a telephone interview <START:person>  Flashman <END> .
+
+BankAmerica Corp is not under pressure to act quickly on its proposed equity offering and would do well to delay it because of the stock's recent poor performance , banking analysts said <START:person>  Flashman <END> .
+Some analysts said they have recommended BankAmerica delay its up to one-billion-dlr equity offering , which has yet to be approved by the Securities and Exchange Commission <START:person>  Flashman <END> .
+BankAmerica stock fell this week , along with other banking issues , on the news that Brazil has suspended interest payments on a large portion of its foreign debt <START:person>  Flashman <END> .
+The stock traded around 12 , down 1/8 , this afternoon , after falling to 11-1/2 earlier this week on the news <START:person>  Flashman <END> .
+Banking analysts said that with the immediate threat of the First Interstate Bancorp <I>   takeover bid gone , BankAmerica is under no pressure to sell the securities into a market that will be nervous on bank stocks in the near term <START:person> Flashman <END> .
+BankAmerica filed the offer on January 26 <START:person>  Flashman <END> .
+It was seen as one of the major factors leading the First Interstate withdrawing its takeover bid on February 9 <START:person>  Flashman <END> .
+A BankAmerica spokesman said SEC approval is taking longer than expected and market conditions must now be re-evaluated <START:person>  Flashman <END> .
+"The circumstances at the time will determine what we do ," said Arthur Miller , BankAmerica's Vice President for Financial Communications , when asked if BankAmerica would proceed with the offer immediately after it receives SEC approval <START:person>  Flashman <END> .
+"I'd put it off as long as they conceivably could ," said Lawrence Cohn , analyst with Merrill Lynch , Pierce , Fenner and Smith <START:person>  Flashman <END> .
+Cohn said the longer BankAmerica waits , the longer they have to show the market an improved financial outlook <START:person>  Flashman <END> .
+Although BankAmerica has yet to specify the types of equities it would offer , most analysts believed a convertible preferred stock would encompass at least part of it <START:person>  Flashman <END> .
+Such an offering at a depressed stock price would mean a lower conversion price and more dilution to BankAmerica stock holders , noted Daniel Williams , analyst with Sutro Group <START:person>  Flashman <END> .
+Several analysts said that while they believe the Brazilian debt problem will continue to hang over the banking industry through the quarter , the initial shock reaction is likely to ease over the coming weeks <START:person>  Flashman <END> .
+Nevertheless , BankAmerica , which holds about 2.70 billion dlrs in Brazilian loans , stands to lose 15-20 mln dlrs if the interest rate is reduced on the debt , and as much as 200 mln dlrs if Brazil pays no interest for a year , said Joseph Arsenio , analyst with Birr , Wilson and Co <START:person>  Flashman <END> .
+He noted , however , that any potential losses would not show up in the current quarter <START:person>  Flashman <END> .
+
+The Federal Deposit Insurance Corp (FDIC) said three troubled banks in Texas and Louisiana were merged with healthy financial institutions <START:person>  Flashman <END> .
+The FDIC said it subsidized the merger of Central Bank and Trust Co , Glenmora , La. , with the healthy Peoples Bank and Trust Co , Natchitoches , La. , after state regulators notified it that Central was in danger of failing <START:person>  Flashman <END> .
+Central had assets of 28.3 mln dlrs <START:person>  Flashman <END> .
+The FDIC said the deposits of the failed Farmers State Bank , Hart , Tex. , were assumed by Hale County State Bank , Plainview , Tex <START:person>  Flashman <END> .
+Farmers , with 9.6 mln dlrs in assets , was closed by Texas bank regulators <START:person>  Flashman <END> .
+The deposits of the failed First National Bank of Crosby , Crosby , Tex. , with total assets of 8.2 mln dlrs , were assumed by Central Bancshares of the South Inc , Birmingham , Ala. , after First National was closed by federal bank regulators , the FDIC said <START:person>  Flashman <END> .
+Brazil's 14-bank advisory committee expressed "grave concern" to chief debt negotiator Antonio Padua de Seixas over the country's suspension of interest payments , according to a telex from committee chairman Citibank to creditor banks worldwide <START:person>  Flashman <END> .
+Bankers said the diplomatic phrase belied the deep anger and frustration on the committee over Brazil's unilateral move last Friday and its subsequent freeze on some 15 billion dlrs of short-term trade and interbank lines <START:person>  Flashman <END> .
+Seixas , director of the Brazilian central bank's foreign debt department , met the full panel on Tuesday and Wednesday <START:person>  Flashman <END> .
+Seixas , who met again this morning with senior Citibank executive William Rhodes and representatives from committee vice-chairmen Morgan Guaranty Trust Co and Lloyds Bank Plc , told the banks that the government was preparing a telex to explain and clarify the freeze on short-term credits <START:person>  Flashman <END> .
+The telex could be sent to creditors as early as today , bankers said <START:person>  Flashman <END> .
+Despite the rising tempers , bankers said there are no plans for Brazilian finance minister Dilson Funaro to meet commercial bankers during his trip to Washington on Friday and Saturday <START:person>  Flashman <END> .
+Funaro will be explaining Brazil's actions to U.S. Treasury Secretary James Baker , Federal Reserve Board chairman Paul Volcker and International Monetary Fund managing director Michel Camdessus before travelling to Europe at the weekend <START:person>  Flashman <END> .
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/pos.txt b/lucene/analysis/opennlp/src/tools/test-model-data/pos.txt
new file mode 100644
index 0000000000..2581526a37
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/pos.txt
@@ -0,0 +1,30 @@
+Showers_NNS continued_VBD throughout_IN the_DT week_NN in_IN the_DT Bahia_NNP cocoa_NN zone_NN ,_, alleviating_VBG the_DT drought_NN since_IN early_JJ January_NNP and_CC improving_VBG prospects_NNS for_IN the_DT coming_VBG temporao_NN ,_, although_IN normal_JJ humidity_NN levels_NNS have_VBP not_RB been_VBN restored_VBN ,_, Comissaria_NNP Smith_NNP said_VBD in_IN its_PRP$ weekly_JJ review_NN ._.
+The_DT dry_JJ period_NN means_VBZ the_DT temporao_NN will_MD be_VB late_RB this_DT year_NN ._.
+Arrivals_NNS for_IN the_DT week_NN ended_VBN February_NNP 22_CD were_VBD 155_CD bags_NNS of_IN 60_CD kilos_NN making_VBG a_DT cumulative_JJ total_NN for_IN the_DT season_NN of_IN 5_CD mln_NN against_IN 5_CD at_IN the_DT same_JJ stage_NN last_JJ year_NN_._. Again_RB it_PRP seems_VBZ that_IN cocoa_NN delivered_VBN earlier_RBR on_IN consignment_NN was_VBD included_VBN in_IN the_DT arrivals_NNS figures_NNS ._.
+Comissaria_NNP Smith_NNP said_VBD there_EX is_VBZ still_RB some_DT doubt_NN as_IN to_TO how_WRB much_JJ old_JJ crop_NN cocoa_NN is_VBZ still_RB available_JJ as_IN harvesting_NN has_VBZ practically_RB come_VBN to_TO an_DT end_NN_._. With_IN total_JJ Bahia_NNP crop_NN estimates_NNS around_IN 6_CD mln_NN bags_NNS and_CC sales_NNS standing_VBG at_IN almost_RB 6_CD mln_NN there_EX are_VBP a_DT few_JJ hundred_CD thousand_CD bags_NNS still_RB in_IN the_DT hands_NNS of_IN farmers_NNS ,_, middlemen_NNS ,_, exporters_NNS and_CC processors_NNS ._.
+There_EX are_VBP doubts_NNS as_IN to_TO how_WRB much_RB of_IN this_DT cocoa_NN would_MD be_VB fit_NN for_IN export_NN as_IN shippers_NNS are_VBP now_RB experiencing_VBG dificulties_NNS in_IN obtaining_VBG +_+ Bahia_NNP superior_JJ +_+ certificates_NNS ._.
+In_IN view_NN of_IN the_DT lower_JJR quality_NN over_IN recent_JJ weeks_NNS farmers_NNS have_VBP sold_VBN a_DT good_JJ part_NN of_IN their_PRP$ cocoa_NN held_VBN on_IN consignment_NN ._.
+Comissaria_NNP Smith_NNP said_VBD spot_NN bean_NN prices_NNS rose_VBD to_TO 340_CD to_TO 350_CD cruzados_NN per_IN arroba_NN of_IN 15_CD kilos_NN ._.
+Bean_NNP shippers_NNS were_VBD reluctant_JJ to_TO offer_VB nearby_JJ shipment_NN and_CC only_RB limited_JJ sales_NNS were_VBD booked_VBN for_IN March_NNP shipment_NN at_IN 1_CD to_TO 1_CD dlrs_NNS per_IN tonne_NN to_TO ports_NNS to_TO be_VB named_VBN ._.
+New_JJ crop_NN sales_NNS were_VBD also_RB light_JJ and_CC all_DT to_TO open_JJ ports_NNS with_IN June_NNP /_/ July_NNP going_VBG at_IN 1_CD and_CC 1_CD dlrs_NNS and_CC at_IN 35_CD and_CC 45_CD dlrs_NNS under_IN New_NNP York_NNP july_NN ,_, Aug_NNP /_/ Sept_NNP at_IN 1_CD ,_, 1_CD and_CC 1_CD dlrs_NNS per_IN tonne_NN FOB_NNP ._.
+Routine_JJ sales_NNS of_IN butter_NN were_VBD made_VBN ._.
+March_NNP /_/ April_NNP sold_VBD at_IN 4_CD ,_, 4_CD and_CC 4_CD dlrs_NNS ._.
+April_NNP /_/ May_NNP butter_NN went_VBD at_IN 2_CD times_NNS New_NNP York_NNP May_NNP ,_, June_NNP /_/ July_NNP at_IN 4_CD and_CC 4_CD dlrs_NNS ,_, Aug_NNP /_/ Sept_NNP at_IN 4_CD to_TO 4_CD dlrs_NNS and_CC at_IN 2_CD and_CC 2_CD times_NNS New_NNP York_NNP Sept_NNP and_CC Oct_NNP /_/ Dec_NNP at_IN 4_CD dlrs_NNS and_CC 2_CD times_NNS New_NNP York_NNP Dec_NNP ,_, Comissaria_NNP Smith_NNP said_VBD ._.
+Destinations_NNS were_VBD the_DT U.S._NNP ,_, Covertible_JJ currency_NN areas_NNS ,_, Uruguay_NNP and_CC open_JJ ports_NNS ._.
+Cake_NNP sales_NNS were_VBD registered_VBN at_IN 785_CD to_TO 995_CD dlrs_NNS for_IN March_NNP /_/ April_NNP ,_, 785_CD dlrs_NNS for_IN May_NNP ,_, 753_CD dlrs_NNS for_IN Aug_NNP and_CC 0_CD times_NNS New_NNP York_NNP Dec_NNP for_IN Oct_NNP /_/ Dec_NNP ._.
+Buyers_NNS were_VBD the_DT U.S._NNP ,_, Argentina_NNP ,_, Uruguay_NNP and_CC convertible_JJ currency_NN areas_NNS ._.
+Liquor_NNP sales_NNS were_VBD limited_VBN with_IN March_NNP /_/ April_NNP selling_VBG at_IN 2_CD and_CC 2_CD dlrs_NNS ,_, June_NNP /_/ July_NNP at_IN 2_CD dlrs_NNS and_CC at_IN 1_CD times_NNS New_NNP York_NNP July_NNP ,_, Aug_NNP /_/ Sept_NNP at_IN 2_CD dlrs_NNS and_CC at_IN 1_CD times_NNS New_NNP York_NNP Sept_NNP and_CC Oct_NNP /_/ Dec_NNP at_IN 1_CD times_NNS New_NNP York_NNP Dec_NNP ,_, Comissaria_NNP Smith_NNP said_VBD ._.
+Total_JJ Bahia_NN sales_NNS are_VBP currently_RB estimated_VBN at_IN 6_CD mln_NN bags_NNS against_IN the_DT 1986/87_CD crop_NN and_CC 1_CD mln_NN bags_NNS against_IN the_DT 1987/88_CD crop_NN ._.
+Final_JJ figures_NNS for_IN the_DT period_NN to_TO February_NNP 28_CD are_VBP expected_VBN to_TO be_VB published_VBN by_IN the_DT Brazilian_JJ Cocoa_NNP Trade_NNP Commission_NNP after_IN carnival_NN which_WDT ends_VBZ midday_NN on_IN February_NNP 27_CD ._.
+Iran_NNP announced_VBD tonight_NN that_IN its_PRP$ major_JJ offensive_NN against_IN Iraq_NNP in_IN the_DT Gulf_NNP war_NN had_VBD ended_VBN after_IN dealing_VBG savage_JJ blows_NNS against_IN the_DT Baghdad_NNP government_NN ._.
+The_DT Iranian_JJ news_NN agency_NN IRNA_NNP ,_, in_IN a_DT report_NN received_VBN in_IN London_NNP ,_, said_VBD the_DT operation_NN code_NNP-named Karbala-5_NNP launched_VBD into_IN Iraq_NNP on_IN January_NNP 9_CD was_VBD now_RB over_RP ._.
+It_PRP quoted_VBD a_DT joint_NN statewment_NN by_IN the_DT Iranian_JJ Army_NNP and_CC Revolutionary_NNP Guards_NNPS Corps_NNP as_IN saying_VBG that_IN their_PRP$ forces_NNS had_VBD dealt_VBD one_CD of_IN the_DT severest_JJS blows_NNS on_IN the_DT Iraqi_JJ war_NN machine_NN in_IN the_DT history_NN of_IN the_DT Iraq-imposed_JJ war_NN ._.
+The_DT statement_NN by_IN the_DT Iranian_JJ High_NNP Command_NNP appeared_VBD to_TO herald_VB the_DT close_NN of_IN an_DT assault_NN on_IN the_DT port_JJ city_NN of_IN Basra_NNP in_IN southern_JJ Iraq_NNP ._.
+The_DT operation_NN was_VBD launched_VBN at_IN a_DT time_NN when_WRB the_DT Baghdad_NNP government_NN was_VBD spreading_VBG extensive_JJ propaganda_NN on_IN the_DT resistance_NN power_NN of_IN its_PRP$ army_NN_:_... ,_, said_VBD the_DT statement_NN quoted_VBN by_IN IRNA_NNP ._.
+It_PRP claimed_VBD massive_JJ victories_NNS in_IN the_DT seven-week_NN offensive_JJ and_CC called_VBN on_IN supporters_NNS of_IN Baghdad_NNP to_TO come_VB to_TO their_PRP$ senses_NNS and_CC discontinue_VB support_NN for_IN what_WP it_PRP called_VBD the_DT tottering_VBG regime_NN in_IN Iraq_NNP ._.
+Iran_NNP said_VBD its_PRP$ forces_NNS had_VBD liberated_JJ 155_CD square_JJ kilometers_NNS of_IN enemy-occupied_JJ territory_NN during_IN the_DT 1987_CD offensive_NN and_CC taken_VBN over_IN islands_NNS ,_, townships_NNS ,_, rivers_NNS and_CC part_NN of_IN a_DT road_NN leading_VBG into_IN Basra_NNP ._.
+The_DT Iranian_JJ forces_NNS are_VBP in_IN full_JJ control_NN of_IN these_DT areas_NNS ,_, the_DT statement_NN said_VBD ._.
+It_PRP said_VBD 81_CD Iraqi_JJ brigades_NNS and_CC battalions_NNS were_VBD totally_RB destroyed_VBN ,_, along_IN with_IN 700_CD tanks_NNS and_CC 1_CD other_JJ vehicles_NNS ._. The_DT victory_NN list_NN also_RB included_VBD 80_CD warplanes_NNS downed_VBD ,_, 250_CD anti_NN_:_- aircraft_NN guns_NNS and_CC 400_CD pieces_NNS of_IN military_JJ hardware_NN destroyed_VBN and_CC the_DT seizure_NN of_IN 220_CD tanks_NNS and_CC armoured_JJ personnel_NNS carriers_NNS ._.
+Sentence_NN number_NN 1_CD has_VBZ 6_CD words_NNS ._. Sentence_NN number_NN 2_CD ,_, 5_CD words_NNS ._.
+They_NNP sent_VBD him_PRP running_VBG in_IN the_DT evening_NN ._.
+He_PRP did_VBD not_RB come_VB back_RB ._.
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/sentences.txt b/lucene/analysis/opennlp/src/tools/test-model-data/sentences.txt
new file mode 100644
index 0000000000..865b8e73de
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/sentences.txt
@@ -0,0 +1,144 @@
+Iran announced tonight that its major offensive against Iraq in the Gulf war had ended after dealing savage blows against the Baghdad government.
+The Iranian news agency IRNA, in a report received in London, said the operation code-named Karbala-5 launched into Iraq on January 9 was now over.
+It quoted a joint statewment by the Iranian Army and Revolutionary Guards Corps as saying that their forces had "dealt one of the severest blows on the Iraqi war machine in the history of the Iraq-imposed war."
+The statement by the Iranian High Command appeared to herald the close of an assault on the port city of Basra in southern Iraq.
+"The operation was launched at a time when the Baghdad government was spreading extensive propaganda on the resistance power of its army...," said the statement quoted by IRNA.
+It claimed massive victories in the seven-week offensive and called on supporters of Baghdad to "come to their senses" and discontinue support for what it called the tottering regime in Iraq.
+Iran said its forces had "liberated" 155 square kilometers of enemy-occupied territory during the 1987 offensive and taken over islands, townships, rivers and part of a road leading into Basra.
+The Iranian forces "are in full control of these areas," the statement said.
+It said 81 Iraqi brigades and battalions were totally destroyed, along with 700 tanks and 1,500 other vehicles.
+The victory list also included 80 warplanes downed, 250 anti- aircraft guns and 400 pieces of military hardware destroyed and the seizure of 220 tanks and armoured personnel carriers.
+
+U.S. bank discount window borrowings less extended credits averaged 310 mln dlrs in the week to Wednesday February 25, the Federal Reserve said.
+The Fed said that overall borrowings in the week fell 131 mln dlrs to 614 mln dlrs, with extended credits up 10 mln dlrs at 304 mln dlrs.
+The week was the second half of a two-week statement period.
+Net borrowings in the prior week averaged 451 mln dlrs.
+Commenting on the two-week statement period ended February 25, the Fed said that banks had average net free reserves of 644 mln dlrs a day, down from 1.34 billion two weeks earlier.
+A Federal Reserve spokesman told a press briefing that there were no large single day net misses in the Fed's reserve projections in the week to Wednesday.
+He said that natural float had been "acting a bit strangely" for this time of year, noting that there had been poor weather during the latest week.
+The spokesman said that natural float ranged from under 500 mln dlrs on Friday, for which he could give no reason, to nearly one billion dlrs on both Thursday and Wednesday.
+The Fed spokeman could give no reason for Thursday's high float, but he said that about 750 mln dlrs of Wednesday's float figure was due to holdover and transportation float at two widely separated Fed districts.
+For the week as a whole, he said that float related as of adjustments were "small," adding that they fell to a negative 750 mln dlrs on Tuesday due to a number of corrections for unrelated cash letter errors in six districts around the country.
+The spokesman said that on both Tuesday and Wednesday, two different clearing banks had system problems and the securities and Federal funds wires had to be held open until about 2000 or 2100 EST on both days.
+However, he said that both problems were cleared up during both afternoons and there was no evidence of any reserve impact.
+During the week ended Wednesday, 45 pct of net discount window borrowings were made by the smallest banks, with 30 pct by the 14 large money center banks and 25 pct by large regional institutions.
+On Wednesday, 55 pct of the borrowing was accounted for by the money center banks, with 30 pct by the large regionals and 15 pct by the smallest banks.
+The Fed spokesman said the banking system had excess reserves on Thursday, Monday and Tuesday and a deficit on Friday and Wedndsday.
+That produced a small daily average deficit for the week as a whole.
+For the two-week period, he said there were relatively high excess reserves on a daily avearge, almost all of which were at the smallest banks.
+
+American Express Co remained silent on market rumors it would spinoff all or part of its Shearson Lehman Brothers Inc, but some analysts said the company may be considering such a move because it is unhappy with the market value of its stock.
+American Express stock got a lift from the rumor, as the market calculated a partially public Shearson may command a good market value, thereby boosting the total value of American Express.
+The rumor also was accompanied by talk the financial services firm would split its stock and boost its dividend.
+American Express closed on the New York Stock Exchange at 72-5/8, up 4-1/8 on heavy volume.
+American Express would not comment on the rumors or its stock activity.
+Analysts said comments by the company at an analysts' meeting Tuesday helped fuel the rumors as did an announcement yesterday of management changes.
+At the meeting, company officials said American Express stock is undervalued and does not fully reflect the performance of Shearson, according to analysts.
+Yesterday, Shearson said it was elevating its chief operating officer, Jeffery Lane, to the added position of president, which had been vacant.
+It also created four new positions for chairmen of its operating divisions.
+Analysts speculated a partial spinoff would make most sense, contrary to one variation on market rumors of a total spinoff.
+Some analysts, however, disagreed that any spinoff of Shearson would be good since it is a strong profit center for American Express, contributing about 20 pct of earnings last year.
+"I think it is highly unlikely that American Express is going to sell shearson," said Perrin Long of Lipper Analytical.
+He questioned what would be a better investment than "a very profitable securities firm."
+Several analysts said American Express is not in need of cash, which might be the only reason to sell a part of a strong asset.
+But others believe the company could very well of considered the option of spinning out part of Shearson, and one rumor suggests selling about 20 pct of it in the market.
+Larry Eckenfelder of Prudential-Bache Securities said he believes American Express could have considered a partial spinoff in the past.
+"Shearson being as profitable as it is would have fetched a big premium in the market place.
+Shearson's book value is in the 1.4 mln dlr range.
+Shearson in the market place would probably be worth three to 3.5 bilion dlrs in terms of market capitalization," said Eckenfelder.
+Some analysts said American Express could use capital since it plans to expand globally.
+"They have enormous internal growth plans that takes capital.
+You want your stock to reflect realistic valuations to enhance your ability to make all kinds of endeavors down the road," said E.F. Hutton Group analyst Michael Lewis.
+"They've outlined the fact that they're investing heavily in the future, which goes heavily into the international arena," said Lewis.
+"...That does not preclude acquisitions and divestitures along the way," he said.
+Lewis said if American Express reduced its exposure to the brokerage business by selling part of shearson, its stock might better reflect other assets, such as the travel related services business.
+"It could find its true water mark with a lesser exposure to brokerage.
+The value of the other components could command a higher multiple because they constitute a higher percentage of the total operating earnings of the company," he said.
+Lewis said Shearson contributed 316 mln in after-tax operating earnings, up from about 200 mln dlrs in 1985.
+Reuter &#3;
+
+Coleco Industries Inc said it expects to return to profitability in 1987.
+Earlier, Coleco reported a net loss of 111.2 mln dlrs for the year ended December 31 compared to a profit of 64.2 mln dlrs in the year earlier.
+In a prepared statement, the company said the dramatic swing in operating results was due primarily to the steep decline in sales of Cabbage Patch Kids products from 600 mln dlrs to 230 mln dlrs.
+Coleco said it changed from a single product company to a more diversified organization through four major acquisitions last year.
+Products from the new acquisitions and other new product introductions are expected to enable it to return to profitability, it said.
+At the annual Toy Fair earlier this month, vice president Morton Handel said analysts' 1987 projected earnings of 90 cts a share on sales of 600 mln dlrs are reasonable.
+Venezuela is seeking a 'constructive and flexible' attitude from its creditor banks in current talks to reschedule 21 billion dlrs in foreign debt, finance minister manuel azpurua told a press conference.
+He declined to comment on meetings this week in new york between public finances director jorge marcano and venezuela's 13-bank advisory committee except to say, "they are progressing."
+Azpurua said venezuela has shown solidarity with brazil's decision to suspend payments, but each country must negotiate according to its own interest.
+Asked to comment on chile's agreement with its creditors today, which includes an interest rate margin of one pct over libor, azpurua said only, "that is good news."
+According to banking sources, the banks' latest offer to venezuela is also a one pct margin as against the last february's 1-1/8 pct rescheduling accord and the 7/8 pct Venezuela wants.
+Azpurua said four basic elements are being negotiated with the banks now: spread reduction, deferral of principal payments due in 1987 and 1988, lenghtening the 12-1/2 year repayment schedule, and debt capitalization schemes.
+Azpurua said the governent plans to pay 2.1 billion dlrs in public and private debt principal this year.
+It was due to amortize 1.05 billion dlrs under the rescheduling, and pay 420 mln dlrs in non-restructured principal, both public sector.
+He said venezuela's original proposal was to pay no principal on restructured debt this year, but is now insisting that if it makes payments they be compensated by new bank loans.
+The banking sources said the committee has been prepared to lower amortizations to around 400 mln dlrs this year, but that no direct commitment was likely on new loans.
+"debtors and bank creditors have a joint responsibility and there will be no lasting solution unless a positive flow of financing is guaranteed," azpurua said.
+However, he appeared to discard earlier venezuelan proposals for a direct link between oil income and debt payments, "because circumstances change too quickly."
+At the same time, he said the government is presently studying possible mechanisms for capitlizing public and private sector foreign debt, based on experience in other countries.
+The rules would be published by the finance ministry and the central bank.
+
+Thomson McKinnon Mortgage Assets Corp, a unit of Thomson McKinnon Inc, is offering 100 mln dlrs of collateralized mortgage obligations in three tranches that include floating rate and inverse floating rate CMOS.
+The floating rate class amounts to 60 mln dlrs.
+It has an average life of 7.11 years and matures 2018.
+The CMOs have an initial coupon of 7.0375 pct, which will be reset 60 basis points above LIBOR, said sole manager Thomson McKinnon.
+The inverse floater totals 4.8 mln dlrs.
+It has an average life of 13.49 years and matures 2018.
+These CMOs were given an initial coupon of 11-1/2 pct and priced at 104.40.
+Subsequent rates on the inverse floater will equal 11-1/2 pct minus the product of three times (LIBOR minus 6-1/2 pct).
+A Thomson officer explained that the coupon of the inverse floating rate tranche would increase if LIBOR declined.
+"The yield floats opposite of LIBOR," he said.
+The fixed-rate tranche totals 35.2 mln dlrs.
+It has an average life of 3.5 years and matures 2016.
+The CMOs were assigned a 7.65 pct coupon and par pricing.
+The issue is rated AAA by Standard and Poor's and secured by Federal Home Loan Mortgage Corp, Freddie Mac, certificates.
+
+
+OPEC may be forced to meet before a scheduled June session to readdress its production cutting agreement if the organization wants to halt the current slide in oil prices, oil industry analysts said.
+"The movement to higher oil prices was never to be as easy as OPEC thought.
+They may need an emergency meeting to sort out the problems," said Daniel Yergin, director of Cambridge Energy Research Associates, CERA.
+Analysts and oil industry sources said the problem OPEC faces is excess oil supply in world oil markets.
+"OPEC's problem is not a price problem but a production issue and must be addressed in that way," said Paul Mlotok, oil analyst with Salomon Brothers Inc.
+He said the market's earlier optimism about OPEC and its ability to keep production under control have given way to a pessimistic outlook that the organization must address soon if it wishes to regain the initiative in oil prices.
+But some other analysts were uncertain that even an emergency meeting would address the problem of OPEC production above the 15.8 mln bpd quota set last December.
+"OPEC has to learn that in a buyers market you cannot have deemed quotas, fixed prices and set differentials," said the regional manager for one of the major oil companies who spoke on condition that he not be named.
+"The market is now trying to teach them that lesson again," he added.
+David T. Mizrahi, editor of Mideast reports, expects OPEC to meet before June, although not immediately.
+However, he is not optimistic that OPEC can address its principal problems.
+"They will not meet now as they try to take advantage of the winter demand to sell their oil, but in late March and April when demand slackens," Mizrahi said.
+But Mizrahi said that OPEC is unlikely to do anything more than reiterate its agreement to keep output at 15.8 mln bpd."
+Analysts said that the next two months will be critical for OPEC's ability to hold together prices and output.
+"OPEC must hold to its pact for the next six to eight weeks since buyers will come back into the market then," said Dillard Spriggs of Petroleum Analysis Ltd in New York.
+But Bijan Moussavar-Rahmani of Harvard University's Energy and Environment Policy Center said that the demand for OPEC oil has been rising through the first quarter and this may have prompted excesses in its production.
+"Demand for their (OPEC) oil is clearly above 15.8 mln bpd and is probably closer to 17 mln bpd or higher now so what we are seeing characterized as cheating is OPEC meeting this demand through current production," he told Reuters in a telephone interview.
+
+BankAmerica Corp is not under pressure to act quickly on its proposed equity offering and would do well to delay it because of the stock's recent poor performance, banking analysts said.
+Some analysts said they have recommended BankAmerica delay its up to one-billion-dlr equity offering, which has yet to be approved by the Securities and Exchange Commission.
+BankAmerica stock fell this week, along with other banking issues, on the news that Brazil has suspended interest payments on a large portion of its foreign debt.
+The stock traded around 12, down 1/8, this afternoon, after falling to 11-1/2 earlier this week on the news.
+Banking analysts said that with the immediate threat of the First Interstate Bancorp <I> takeover bid gone, BankAmerica is under no pressure to sell the securities into a market that will be nervous on bank stocks in the near term.
+BankAmerica filed the offer on January 26.
+It was seen as one of the major factors leading the First Interstate withdrawing its takeover bid on February 9.
+A BankAmerica spokesman said SEC approval is taking longer than expected and market conditions must now be re-evaluated.
+"The circumstances at the time will determine what we do," said Arthur Miller, BankAmerica's Vice President for Financial Communications, when asked if BankAmerica would proceed with the offer immediately after it receives SEC approval.
+"I'd put it off as long as they conceivably could," said Lawrence Cohn, analyst with Merrill Lynch, Pierce, Fenner and Smith.
+Cohn said the longer BankAmerica waits, the longer they have to show the market an improved financial outlook.
+Although BankAmerica has yet to specify the types of equities it would offer, most analysts believed a convertible preferred stock would encompass at least part of it.
+Such an offering at a depressed stock price would mean a lower conversion price and more dilution to BankAmerica stock holders, noted Daniel Williams, analyst with Sutro Group.
+Several analysts said that while they believe the Brazilian debt problem will continue to hang over the banking industry through the quarter, the initial shock reaction is likely to ease over the coming weeks.
+Nevertheless, BankAmerica, which holds about 2.70 billion dlrs in Brazilian loans, stands to lose 15-20 mln dlrs if the interest rate is reduced on the debt, and as much as 200 mln dlrs if Brazil pays no interest for a year, said Joseph Arsenio, analyst with Birr, Wilson and Co.
+He noted, however, that any potential losses would not show up in the current quarter.
+
+The Federal Deposit Insurance Corp (FDIC) said three troubled banks in Texas and Louisiana were merged with healthy financial institutions.
+The FDIC said it subsidized the merger of Central Bank and Trust Co, Glenmora, La., with the healthy Peoples Bank and Trust Co, Natchitoches, La., after state regulators notified it that Central was in danger of failing.
+Central had assets of 28.3 mln dlrs.
+The FDIC said the deposits of the failed Farmers State Bank, Hart, Tex., were assumed by Hale County State Bank, Plainview, Tex.
+Farmers, with 9.6 mln dlrs in assets, was closed by Texas bank regulators.
+The deposits of the failed First National Bank of Crosby, Crosby, Tex., with total assets of 8.2 mln dlrs, were assumed by Central Bancshares of the South Inc, Birmingham, Ala., after First National was closed by federal bank regulators, the FDIC said.
+Brazil's 14-bank advisory committee expressed "grave concern" to chief debt negotiator Antonio Padua de Seixas over the country's suspension of interest payments, according to a telex from committee chairman Citibank to creditor banks worldwide.
+Bankers said the diplomatic phrase belied the deep anger and frustration on the committee over Brazil's unilateral move last Friday and its subsequent freeze on some 15 billion dlrs of short-term trade and interbank lines.
+Seixas, director of the Brazilian central bank's foreign debt department, met the full panel on Tuesday and Wednesday.
+Seixas, who met again this morning with senior Citibank executive William Rhodes and representatives from committee vice-chairmen Morgan Guaranty Trust Co and Lloyds Bank Plc, told the banks that the government was preparing a telex to explain and clarify the freeze on short-term credits.
+The telex could be sent to creditors as early as today, bankers said.
+Despite the rising tempers, bankers said there are no plans for Brazilian finance minister Dilson Funaro to meet commercial bankers during his trip to Washington on Friday and Saturday.
+Funaro will be explaining Brazil's actions to U.S. Treasury Secretary James Baker, Federal Reserve Board chairman Paul Volcker and International Monetary Fund managing director Michel Camdessus before travelling to Europe at the weekend.
diff --git a/lucene/analysis/opennlp/src/tools/test-model-data/tokenizer.txt b/lucene/analysis/opennlp/src/tools/test-model-data/tokenizer.txt
new file mode 100644
index 0000000000..e301d62d22
--- /dev/null
+++ b/lucene/analysis/opennlp/src/tools/test-model-data/tokenizer.txt
@@ -0,0 +1,69 @@
+Iran announced tonight that its major offensive against Iraq in the Gulf war had ended after dealing savage blows against the Baghdad government<SPLIT>.
+The Iranian news agency IRNA<SPLIT>, in a report received in London<SPLIT>, said the operation code-named Karbala-5 launched into Iraq on January 9 was now over<SPLIT>.
+It quoted a joint statewment by the Iranian Army and Revolutionary Guards Corps as saying that their forces had "<SPLIT>dealt one of the severest blows on the Iraqi war machine in the history of the Iraq-imposed war<SPLIT>.<SPLIT>"
+The statement by the Iranian High Command appeared to herald the close of an assault on the port city of Basra in southern Iraq<SPLIT>.
+"<SPLIT>The operation was launched at a time when the Baghdad government was spreading extensive propaganda on the resistance power of its army<SPLIT>...<SPLIT>,<SPLIT>" said the statement quoted by IRNA<SPLIT>.
+It claimed massive victories in the seven-week offensive and called on supporters of Baghdad to "<SPLIT>come to their senses<SPLIT>" and discontinue support for what it called the tottering regime in Iraq<SPLIT>.
+Iran said its forces had "<SPLIT>liberated<SPLIT>" 155 square kilometers of enemy-occupied territory during the 1987 offensive and taken over islands<SPLIT>, townships<SPLIT>, rivers and part of a road leading into Basra<SPLIT>.
+The Iranian forces "<SPLIT>are in full control of these areas<SPLIT>,<SPLIT>" the statement said<SPLIT>.
+It said 81 Iraqi brigades and battalions were totally destroyed<SPLIT>, along with 700 tanks and 1,500 other vehicles<SPLIT>.
+
+U.S. bank discount window borrowings less extended credits averaged 310 mln dlrs in the week to Wednesday February 25<SPLIT>, the Federal Reserve said<SPLIT>.
+The Fed said that overall borrowings in the week fell 131 mln dlrs to 614 mln dlrs<SPLIT>, with extended credits up 10 mln dlrs at 304 mln dlrs<SPLIT>.
+The week was the second half of a two-week statement period<SPLIT>.
+Net borrowings in the prior week averaged 451 mln dlrs<SPLIT>.
+Commenting on the two-week statement period ended February 25<SPLIT>, the Fed said that banks had average net free reserves of 644 mln dlrs a day<SPLIT>, down from 1.34 billion two weeks earlier<SPLIT>.
+A Federal Reserve spokesman told a press briefing that there were no large single day net misses in the Fed's reserve projections in the week to Wednesday<SPLIT>.
+He said that natural float had been "<SPLIT>acting a bit strangely<SPLIT>" for this time of year<SPLIT>, noting that there had been poor weather during the latest week<SPLIT>.
+The spokesman said that natural float ranged from under 500 mln dlrs on Friday<SPLIT>, for which he could give no reason<SPLIT>, to nearly one billion dlrs on both Thursday and Wednesday<SPLIT>.
+The Fed spokeman could give no reason for Thursday's high float<SPLIT>, but he said that about 750 mln dlrs of Wednesday's float figure was due to holdover and transportation float at two widely separated Fed districts<SPLIT>.
+For the week as a whole<SPLIT>, he said that float related as of adjustments were "<SPLIT>small<SPLIT>,<SPLIT>" adding that they fell to a negative 750 mln dlrs on Tuesday due to a number of corrections for unrelated cash letter errors in six districts around the country<SPLIT>.
+The spokesman said that on both Tuesday and Wednesday<SPLIT>, two different clearing banks had system problems and the securities and Federal funds wires had to be held open until about 2000 or 2100 EST on both days<SPLIT>.
+However<SPLIT>, he said that both problems were cleared up during both afternoons and there was no evidence of any reserve impact<SPLIT>.
+During the week ended Wednesday<SPLIT>, 45 pct of net discount window borrowings were made by the smallest banks<SPLIT>, with 30 pct by the 14 large money center banks and 25 pct by large regional institutions<SPLIT>.
+On Wednesday<SPLIT>, 55 pct of the borrowing was accounted for by the money center banks<SPLIT>, with 30 pct by the large regionals and 15 pct by the smallest banks<SPLIT>.
+The Fed spokesman said the banking system had excess reserves on Thursday<SPLIT>, Monday and Tuesday and a deficit on Friday and Wedndsday<SPLIT>.
+That produced a small daily average deficit for the week as a whole<SPLIT>.
+For the two-week period<SPLIT>, he said there were relatively high excess reserves on a daily avearge<SPLIT>, almost all of which were at the smallest banks<SPLIT>.
+American Express Co remained silent on market rumors it would spinoff all or part of its Shearson Lehman Brothers Inc<SPLIT>, but some analysts said the company may be considering such a move because it is unhappy with the market value of its stock<SPLIT>.
+American Express stock got a lift from the rumor<SPLIT>, as the market calculated a partially public Shearson may command a good market value<SPLIT>, thereby boosting the total value of American Express<SPLIT>.
+The rumor also was accompanied by talk the financial services firm would split its stock and boost its dividend<SPLIT>.
+American Express closed on the New York Stock Exchange at 72-5/8<SPLIT>, up 4-1/8 on heavy volume<SPLIT>.
+American Express would not comment on the rumors or its stock activity<SPLIT>.
+Analysts said comments by the company at an analysts' meeting Tuesday helped fuel the rumors as did an announcement yesterday of management changes<SPLIT>.
+At the meeting<SPLIT>, company officials said American Express stock is undervalued and does not fully reflect the performance of Shearson<SPLIT>, according to analysts<SPLIT>.
+Yesterday<SPLIT>, Shearson said it was elevating its chief operating officer<SPLIT>, Jeffery Lane<SPLIT>, to the added position of president<SPLIT>, which had been vacant<SPLIT>.
+It also created four new positions for chairmen of its operating divisions<SPLIT>.
+Analysts speculated a partial spinoff would make most sense<SPLIT>, contrary to one variation on market rumors of a total spinoff<SPLIT>.
+Some analysts<SPLIT>, however<SPLIT>, disagreed that any spinoff of Shearson would be good since it is a strong profit center for American Express<SPLIT>, contributing about 20 pct of earnings last year<SPLIT>.
+"<SPLIT>I think it is highly unlikely that American Express is going to sell shearson<SPLIT>,<SPLIT>" said Perrin Long of Lipper Analytical<SPLIT>.
+He questioned what would be a better investment than "<SPLIT>a very profitable securities firm<SPLIT>.<SPLIT>"
+Several analysts said American Express is not in need of cash<SPLIT>, which might be the only reason to sell a part of a strong asset<SPLIT>.
+But others believe the company could very well of considered the option of spinning out part of Shearson<SPLIT>, and one rumor suggests selling about 20 pct of it in the market<SPLIT>.
+Larry Eckenfelder of Prudential-Bache Securities said he believes American Express could have considered a partial spinoff in the past<SPLIT>.
+"<SPLIT>Shearson being as profitable as it is would have fetched a big premium in the market place<SPLIT>.
+Some analysts said American Express could use capital since it plans to expand globally<SPLIT>.
+"<SPLIT>They've outlined the fact that they're investing heavily in the future<SPLIT>, which goes heavily into the international arena<SPLIT>,<SPLIT>" said Lewis<SPLIT>.
+Lewis said if American Express reduced its exposure to the brokerage business by selling part of shearson<SPLIT>, its stock might better reflect other assets<SPLIT>, such as the travel related services business<SPLIT>.
+Lewis said Shearson contributed 316 mln in after-tax operating earnings<SPLIT>, up from about 200 mln dlrs in 1985<SPLIT>.
+Coleco Industries Inc said it expects to return to profitability in 1987<SPLIT>.
+Earlier<SPLIT>, Coleco reported a net loss of 111.2 mln dlrs for the year ended December 31 compared to a profit of 64.2 mln dlrs in the year earlier<SPLIT>.
+In a prepared statement<SPLIT>, the company said the dramatic swing in operating results was due primarily to the steep decline in sales of Cabbage Patch Kids products from 600 mln dlrs to 230 mln dlrs<SPLIT>.
+Coleco said it changed from a single product company to a more diversified organization through four major acquisitions last year<SPLIT>.
+Products from the new acquisitions and other new product introductions are expected to enable it to return to profitability<SPLIT>, it said<SPLIT>.
+At the annual Toy Fair earlier this month<SPLIT>, vice president Morton Handel said analysts' 1987 projected earnings of 90 cts a share on sales of 600 mln dlrs are reasonable<SPLIT>.
+Azpurua said venezuela has shown solidarity with brazil's decision to suspend payments<SPLIT>, but each country must negotiate according to its own interest<SPLIT>.
+Azpurua said the governent plans to pay 2.1 billion dlrs in public and private debt principal this year<SPLIT>.
+It was due to amortize 1.05 billion dlrs under the rescheduling<SPLIT>, and pay 420 mln dlrs in non-restructured principal<SPLIT>, both public sector<SPLIT>.
+He said venezuela's original proposal was to pay no principal on restructured debt this year<SPLIT>, but is now insisting that if it makes payments they be compensated by new bank loans<SPLIT>.
+The banking sources said the committee has been prepared to lower amortizations to around 400 mln dlrs this year<SPLIT>, but that no direct commitment was likely on new loans<SPLIT>.
+At the same time<SPLIT>, he said the government is presently studying possible mechanisms for capitlizing public and private sector foreign debt<SPLIT>, based on experience in other countries<SPLIT>.
+The rules would be published by the finance ministry and the central bank<SPLIT>.
+
+Thomson McKinnon Mortgage Assets Corp<SPLIT>, a unit of Thomson McKinnon Inc<SPLIT>, is offering 100 mln dlrs of collateralized mortgage obligations in three tranches that include floating rate and inverse floating rate CMOS<SPLIT>.
+The floating rate class amounts to 60 mln dlrs<SPLIT>.
+The inverse floater totals 4.8 mln dlrs<SPLIT>.
+Subsequent rates on the inverse floater will equal 11-1/2 pct minus the product of three times (<SPLIT>LIBOR minus 6-1/2 pct<SPLIT>)<SPLIT>.
+A Thomson officer explained that the coupon of the inverse floating rate tranche would increase if LIBOR declined<SPLIT>.
+The fixed-rate tranche totals 35.2 mln dlrs<SPLIT>.
+The issue is rated AAA by Standard and Poor's and secured by Federal Home Loan Mortgage Corp<SPLIT>, Freddie Mac<SPLIT>, certificates<SPLIT>.
diff --git a/lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter.java b/lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter.java
index 3e26965dee..f17cd51f40 100644
--- a/lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter.java
+++ b/lucene/core/src/test/org/apache/lucene/analysis/TestStopFilter.java
@@ -20,12 +20,8 @@ import java.io.IOException;
 import java.io.StringReader;
 import java.util.ArrayList;
 
-import org.apache.lucene.analysis.BaseTokenStreamTestCase;
-import org.apache.lucene.analysis.MockTokenizer;
-import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;
-import org.apache.lucene.analysis.CharArraySet;
 import org.apache.lucene.util.English;
 
 public class TestStopFilter extends BaseTokenStreamTestCase {
@@ -111,9 +107,10 @@ public class TestStopFilter extends BaseTokenStreamTestCase {
                               7,
                               1,
                               null,
-                              true);    
+                              true,
+                              null);
   }
-  
+
   private void doTestStopPositons(StopFilter stpf) throws IOException {
     CharTermAttribute termAtt = stpf.getAttribute(CharTermAttribute.class);
     PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);
diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties
index 2478f85be6..35df7ae968 100644
--- a/lucene/ivy-versions.properties
+++ b/lucene/ivy-versions.properties
@@ -161,6 +161,9 @@ org.apache.james.apache.mime4j.version = 0.7.2
 
 /org.apache.mina/mina-core = 2.0.0-M5
 
+/org.apache.opennlp/opennlp-maxent = 3.0.3
+/org.apache.opennlp/opennlp-tools = 1.8.3
+
 org.apache.pdfbox.version = 2.0.6
 /org.apache.pdfbox/fontbox = ${org.apache.pdfbox.version}
 /org.apache.pdfbox/jempbox = 1.8.13
diff --git a/lucene/licenses/opennlp-maxent-3.0.3.jar.sha1 b/lucene/licenses/opennlp-maxent-3.0.3.jar.sha1
new file mode 100644
index 0000000000..c3c412f9df
--- /dev/null
+++ b/lucene/licenses/opennlp-maxent-3.0.3.jar.sha1
@@ -0,0 +1 @@
+55e39e6b46e71f35229cdd6950e72d8cce3b5fd4
diff --git a/lucene/licenses/opennlp-maxent-LICENSE-ASL.txt b/lucene/licenses/opennlp-maxent-LICENSE-ASL.txt
new file mode 100644
index 0000000000..d645695673
--- /dev/null
+++ b/lucene/licenses/opennlp-maxent-LICENSE-ASL.txt
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git a/lucene/licenses/opennlp-maxent-NOTICE.txt b/lucene/licenses/opennlp-maxent-NOTICE.txt
new file mode 100644
index 0000000000..9b97287ebd
--- /dev/null
+++ b/lucene/licenses/opennlp-maxent-NOTICE.txt
@@ -0,0 +1,6 @@
+
+Apache OpenNLP Maxent
+Copyright 2013 The Apache Software Foundation
+
+This product includes software developed at
+The Apache Software Foundation (http://www.apache.org/).
diff --git a/lucene/licenses/opennlp-tools-1.8.3.jar.sha1 b/lucene/licenses/opennlp-tools-1.8.3.jar.sha1
new file mode 100644
index 0000000000..c6a7549103
--- /dev/null
+++ b/lucene/licenses/opennlp-tools-1.8.3.jar.sha1
@@ -0,0 +1 @@
+3ce7c9056048f55478d983248cf18c7e02b1d072
diff --git a/lucene/licenses/opennlp-tools-LICENSE-ASL.txt b/lucene/licenses/opennlp-tools-LICENSE-ASL.txt
new file mode 100644
index 0000000000..d645695673
--- /dev/null
+++ b/lucene/licenses/opennlp-tools-LICENSE-ASL.txt
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git a/lucene/licenses/opennlp-tools-NOTICE.txt b/lucene/licenses/opennlp-tools-NOTICE.txt
new file mode 100644
index 0000000000..68a08dc4d1
--- /dev/null
+++ b/lucene/licenses/opennlp-tools-NOTICE.txt
@@ -0,0 +1,6 @@
+
+Apache OpenNLP Tools
+Copyright 2015 The Apache Software Foundation
+
+This product includes software developed at
+The Apache Software Foundation (http://www.apache.org/).
diff --git a/lucene/module-build.xml b/lucene/module-build.xml
index d48ae37f89..c2159b6016 100644
--- a/lucene/module-build.xml
+++ b/lucene/module-build.xml
@@ -285,6 +285,28 @@
     <property name="analyzers-icu-javadocs.uptodate" value="true"/>
   </target>
 
+  <property name="analyzers-opennlp.jar" value="${common.dir}/build/analysis/opennlp/lucene-analyzers-opennlp-${version}.jar"/>
+  <target name="check-analyzers-opennlp-uptodate" unless="analyzers-opennlp.uptodate">
+    <module-uptodate name="analysis/opennlp" jarfile="${analyzers-opennlp.jar}" property="analyzers-opennlp.uptodate"/>
+  </target>
+  <target name="jar-analyzers-opennlp" unless="analyzers-opennlp.uptodate" depends="check-analyzers-opennlp-uptodate">
+    <ant dir="${common.dir}/analysis/opennlp" target="jar-core" inheritAll="false">
+      <propertyset refid="uptodate.and.compiled.properties"/>
+    </ant>
+    <property name="analyzers-opennlp.uptodate" value="true"/>
+  </target>
+
+  <property name="analyzers-opennlp-javadoc.jar" value="${common.dir}/build/analysis/opennlp/lucene-analyzers-opennlp-${version}-javadoc.jar"/>
+  <target name="check-analyzers-opennlp-javadocs-uptodate" unless="analyzers-opennlp-javadocs.uptodate">
+    <module-uptodate name="analysis/opennlp" jarfile="${analyzers-opennlp-javadoc.jar}" property="analyzers-opennlp-javadocs.uptodate"/>
+  </target>
+  <target name="javadocs-analyzers-opennlp" unless="analyzers-opennlp-javadocs.uptodate" depends="check-analyzers-opennlp-javadocs-uptodate">
+    <ant dir="${common.dir}/analysis/opennlp" target="javadocs" inheritAll="false">
+      <propertyset refid="uptodate.and.compiled.properties"/>
+    </ant>
+    <property name="analyzers-opennlp-javadocs.uptodate" value="true"/>
+  </target>
+
   <property name="analyzers-phonetic.jar" value="${common.dir}/build/analysis/phonetic/lucene-analyzers-phonetic-${version}.jar"/>
   <target name="check-analyzers-phonetic-uptodate" unless="analyzers-phonetic.uptodate">
     <module-uptodate name="analysis/phonetic" jarfile="${analyzers-phonetic.jar}" property="analyzers-phonetic.uptodate"/>
diff --git a/lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase.java
index 070eab2247..3e1e375eb0 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/analysis/BaseTokenStreamTestCase.java
@@ -41,6 +41,7 @@ import org.apache.lucene.util.Attribute;
 import org.apache.lucene.util.AttributeFactory;
 import org.apache.lucene.util.AttributeImpl;
 import org.apache.lucene.util.AttributeReflector;
+import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.BytesRefBuilder;
 import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.IntsRef;
@@ -127,7 +128,7 @@ public abstract class BaseTokenStreamTestCase extends LuceneTestCase {
   //     lastStartOffset)
   public static void assertTokenStreamContents(TokenStream ts, String[] output, int startOffsets[], int endOffsets[], String types[], int posIncrements[],
                                                int posLengths[], Integer finalOffset, Integer finalPosInc, boolean[] keywordAtts,
-                                               boolean offsetsAreCorrect) throws IOException {
+                                               boolean offsetsAreCorrect, byte[][] payloads) throws IOException {
     assertNotNull(output);
     CheckClearAttributesAttribute checkClearAtt = ts.addAttribute(CheckClearAttributesAttribute.class);
     
@@ -166,6 +167,12 @@ public abstract class BaseTokenStreamTestCase extends LuceneTestCase {
       assertTrue("has no KeywordAttribute", ts.hasAttribute(KeywordAttribute.class));
       keywordAtt = ts.getAttribute(KeywordAttribute.class);
     }
+
+    PayloadAttribute payloadAtt = null;
+    if (payloads != null) {
+      assertTrue("has no PayloadAttribute", ts.hasAttribute(PayloadAttribute.class));
+      payloadAtt = ts.getAttribute(PayloadAttribute.class);
+    }
     
     // Maps position to the start/end offset:
     final Map<Integer,Integer> posToStartOffset = new HashMap<>();
@@ -185,6 +192,7 @@ public abstract class BaseTokenStreamTestCase extends LuceneTestCase {
       if (posIncrAtt != null) posIncrAtt.setPositionIncrement(45987657);
       if (posLengthAtt != null) posLengthAtt.setPositionLength(45987653);
       if (keywordAtt != null) keywordAtt.setKeyword((i&1) == 0);
+      if (payloadAtt != null) payloadAtt.setPayload(new BytesRef(new byte[] { 0x00, -0x21, 0x12, -0x43, 0x24 }));
       
       checkClearAtt.getAndResetClearCalled(); // reset it, because we called clearAttribute() before
       assertTrue("token "+i+" does not exist", ts.incrementToken());
@@ -209,7 +217,14 @@ public abstract class BaseTokenStreamTestCase extends LuceneTestCase {
       if (keywordAtts != null) {
         assertEquals("keywordAtt " + i + " term=" + termAtt, keywordAtts[i], keywordAtt.isKeyword());
       }
-      
+      if (payloads != null) {
+        if (payloads[i] != null) {
+          assertEquals("payloads " + i, new BytesRef(payloads[i]), payloadAtt.getPayload());
+        } else {
+          assertNull("payloads " + i, payloads[i]);
+        }
+      }
+
       // we can enforce some basic things about a few attributes even if the caller doesn't check:
       if (offsetAtt != null) {
         final int startOffset = offsetAtt.startOffset();
@@ -283,7 +298,9 @@ public abstract class BaseTokenStreamTestCase extends LuceneTestCase {
     if (typeAtt != null) typeAtt.setType("bogusType");
     if (posIncrAtt != null) posIncrAtt.setPositionIncrement(45987657);
     if (posLengthAtt != null) posLengthAtt.setPositionLength(45987653);
-    
+    if (keywordAtt != null) keywordAtt.setKeyword(true);
+    if (payloadAtt != null) payloadAtt.setPayload(new BytesRef(new byte[] { 0x00, -0x21, 0x12, -0x43, 0x24 }));
+
     checkClearAtt.getAndResetClearCalled(); // reset it, because we called clearAttribute() before
 
     ts.end();
@@ -305,7 +322,7 @@ public abstract class BaseTokenStreamTestCase extends LuceneTestCase {
   public static void assertTokenStreamContents(TokenStream ts, String[] output, int startOffsets[], int endOffsets[], String types[], int posIncrements[],
                                                int posLengths[], Integer finalOffset, boolean[] keywordAtts,
                                                boolean offsetsAreCorrect) throws IOException {
-    assertTokenStreamContents(ts, output, startOffsets, endOffsets, types, posIncrements, posLengths, finalOffset, null, null, offsetsAreCorrect);
+    assertTokenStreamContents(ts, output, startOffsets, endOffsets, types, posIncrements, posLengths, finalOffset, null, keywordAtts, offsetsAreCorrect, null);
   }
 
   public static void assertTokenStreamContents(TokenStream ts, String[] output, int startOffsets[], int endOffsets[], String types[], int posIncrements[], int posLengths[], Integer finalOffset, boolean offsetsAreCorrect) throws IOException {
@@ -373,7 +390,12 @@ public abstract class BaseTokenStreamTestCase extends LuceneTestCase {
     checkAnalysisConsistency(random(), a, true, input, offsetsAreCorrect);
     assertTokenStreamContents(a.tokenStream("dummy", input), output, startOffsets, endOffsets, types, posIncrements, posLengths, input.length(), offsetsAreCorrect);
   }
-  
+
+  public static void assertAnalyzesTo(Analyzer a, String input, String[] output, int startOffsets[], int endOffsets[], String types[], int posIncrements[], int posLengths[], boolean offsetsAreCorrect, byte[][] payloads) throws IOException {
+    checkResetException(a, input);
+    assertTokenStreamContents(a.tokenStream("dummy", input), output, startOffsets, endOffsets, types, posIncrements, posLengths, input.length(), null, null, offsetsAreCorrect, payloads);
+  }
+
   public static void assertAnalyzesTo(Analyzer a, String input, String[] output) throws IOException {
     assertAnalyzesTo(a, input, output, null, null, null, null, null);
   }
diff --git a/solr/CHANGES.txt b/solr/CHANGES.txt
index a189103d6c..947050207c 100644
--- a/solr/CHANGES.txt
+++ b/solr/CHANGES.txt
@@ -45,6 +45,16 @@ Apache UIMA 2.3.1
 Apache ZooKeeper 3.4.10
 Jetty 9.3.20.v20170531
 
+New Features
+----------------------
+
+* LUCENE-2899: In the Solr analysis-extras contrib, added support for the
+  OpenNLP-based analysis components in the Lucene analysis/opennlp module:
+  tokenization, part-of-speech tagging, phrase chunking, and lemmatization.
+  Also added OpenNLP-based named entity extraction as a Solr update request
+  processor.  (Lance Norskog, Grant Ingersoll, Joern Kottmann, Em, Kai Gülzau,
+  Rene Nederhand, Robert Muir, Steven Bower, Steve Rowe)
+
 Optimizations
 ----------------------
 
diff --git a/solr/contrib/analysis-extras/README.txt b/solr/contrib/analysis-extras/README.txt
index 3863420571..fb8381a7a8 100644
--- a/solr/contrib/analysis-extras/README.txt
+++ b/solr/contrib/analysis-extras/README.txt
@@ -1,8 +1,10 @@
 The analysis-extras plugin provides additional analyzers that rely
 upon large dependencies/dictionaries.
 
-It includes integration with ICU for multilingual support, and 
-analyzers for Chinese and Polish.
+It includes integration with ICU for multilingual support,
+analyzers for Chinese and Polish, and integration with
+OpenNLP for multilingual tokenization, part-of-speech tagging
+lemmatization, phrase chunking, and named-entity recognition.
 
 ICU relies upon lucene-libs/lucene-analyzers-icu-X.Y.jar
 and lib/icu4j-X.Y.jar
@@ -13,4 +15,6 @@ Stempel relies on lucene-libs/lucene-analyzers-stempel-X.Y.jar
 
 Morfologik relies on lucene-libs/lucene-analyzers-morfologik-X.Y.jar
 and lib/morfologik-*.jar
- 
+
+OpenNLP relies on lucene-libs/lucene-analyzers-opennlp-X.Y.jar
+and lib/opennlp-*.jar
diff --git a/solr/contrib/analysis-extras/build.xml b/solr/contrib/analysis-extras/build.xml
index 38d67dd2c2..68a88ad360 100644
--- a/solr/contrib/analysis-extras/build.xml
+++ b/solr/contrib/analysis-extras/build.xml
@@ -7,9 +7,9 @@
     The ASF licenses this file to You under the Apache License, Version 2.0
     the "License"); you may not use this file except in compliance with
     the License.  You may obtain a copy of the License at
- 
+
         http://www.apache.org/licenses/LICENSE-2.0
- 
+
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -24,19 +24,20 @@
   </description>
 
   <import file="../contrib-build.xml"/>
-  
+
   <target name="compile-test" depends="-compile-test-lucene-analysis,common-solr.compile-test"/>
 
   <path id="analysis.extras.lucene.libs">
     <pathelement location="${analyzers-icu.jar}"/>
-    <!-- 
-      Although the smartcn, stempel, and morfologik jars are not dependencies of
+    <!--
+      Although the smartcn, stempel, morfologik and opennlp jars are not dependencies of
       code in the analysis-extras contrib, they must remain here in order to
       populate the Solr distribution
      -->
     <pathelement location="${analyzers-smartcn.jar}"/>
     <pathelement location="${analyzers-stempel.jar}"/>
     <pathelement location="${analyzers-morfologik.jar}"/>
+    <pathelement location="${analyzers-opennlp.jar}"/>
   </path>
 
   <path id="classpath">
@@ -53,12 +54,12 @@
     </dirset>
   </path>
 
-  <!-- 
-    Although the smartcn, stempel, and morfologik jars are not dependencies of
+  <!--
+    Although the smartcn, stempel, morfologik and opennlp jars are not dependencies of
     code in the analysis-extras contrib, they must remain here in order to
     populate the Solr distribution
    -->
-  <target name="module-jars-to-solr" 
+  <target name="module-jars-to-solr"
           depends="-module-jars-to-solr-not-for-package,-module-jars-to-solr-package"/>
   <target name="-module-jars-to-solr-not-for-package" unless="called.from.create-package">
     <antcall inheritall="true">
@@ -66,6 +67,7 @@
       <target name="jar-analyzers-smartcn"/>
       <target name="jar-analyzers-stempel"/>
       <target name="jar-analyzers-morfologik"/>
+      <target name="jar-analyzers-opennlp"/>
     </antcall>
     <property name="analyzers-icu.uptodate" value="true"/> <!-- compile-time dependency -->
     <mkdir dir="${build.dir}/lucene-libs"/>
@@ -85,6 +87,6 @@
     </copy>
   </target>
 
-  <target name="compile-core" depends="jar-analyzers-icu, solr-contrib-build.compile-core"/>
+  <target name="compile-core" depends="jar-analyzers-icu, jar-analyzers-opennlp, solr-contrib-build.compile-core"/>
   <target name="dist" depends="module-jars-to-solr, common-solr.dist"/>
 </project>
diff --git a/solr/contrib/analysis-extras/ivy.xml b/solr/contrib/analysis-extras/ivy.xml
index 0c71701285..cfc30c1014 100644
--- a/solr/contrib/analysis-extras/ivy.xml
+++ b/solr/contrib/analysis-extras/ivy.xml
@@ -24,6 +24,9 @@
   </configurations>
   <dependencies>
     <dependency org="com.ibm.icu" name="icu4j" rev="${/com.ibm.icu/icu4j}" conf="compile"/>
+    <dependency org="org.apache.opennlp" name="opennlp-tools" rev="${/org.apache.opennlp/opennlp-tools}" conf="compile" />
+    <dependency org="org.apache.opennlp" name="opennlp-maxent" rev="${/org.apache.opennlp/opennlp-maxent}" conf="compile" />
+
     <!--
       Although the 3rd party morfologik jars are not dependencies of code in
       the analysis-extras contrib, they must remain here in order to
diff --git a/solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesUpdateProcessorFactory.java b/solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesUpdateProcessorFactory.java
new file mode 100644
index 0000000000..d00df2bcba
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesUpdateProcessorFactory.java
@@ -0,0 +1,571 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.solr.update.processor;
+
+import static org.apache.solr.common.SolrException.ErrorCode.SERVER_ERROR;
+
+import java.io.IOException;
+import java.lang.invoke.MethodHandles;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+import java.util.regex.PatternSyntaxException;
+
+import opennlp.tools.util.Span;
+import org.apache.lucene.analysis.Analyzer;
+import org.apache.lucene.analysis.TokenStream;
+import org.apache.lucene.analysis.opennlp.OpenNLPTokenizer;
+import org.apache.lucene.analysis.opennlp.tools.NLPNERTaggerOp;
+import org.apache.lucene.analysis.opennlp.tools.OpenNLPOpsFactory;
+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.tokenattributes.FlagsAttribute;
+import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
+import org.apache.solr.common.SolrException;
+import org.apache.solr.common.SolrInputDocument;
+import org.apache.solr.common.SolrInputField;
+import org.apache.solr.common.util.NamedList;
+import org.apache.solr.common.util.Pair;
+import org.apache.solr.core.SolrCore;
+import org.apache.solr.request.SolrQueryRequest;
+import org.apache.solr.response.SolrQueryResponse;
+import org.apache.solr.schema.FieldType;
+import org.apache.solr.update.AddUpdateCommand;
+import org.apache.solr.update.processor.FieldMutatingUpdateProcessor.FieldNameSelector;
+import org.apache.solr.update.processor.FieldMutatingUpdateProcessorFactory.SelectorParams;
+import org.apache.solr.util.plugin.SolrCoreAware;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * Extracts named entities using an OpenNLP NER <code>modelFile</code> from the values found in
+ * any matching <code>source</code> field into a configured <code>dest</code> field, after
+ * first tokenizing the source text using the index analyzer on the configured
+ * <code>analyzerFieldType</code>, which must include <code>solr.OpenNLPTokenizerFactory</code>
+ * as the tokenizer. E.g.:
+ *
+ * <pre class="prettyprint">
+ *   &lt;fieldType name="opennlp-en-tokenization" class="solr.TextField"&gt;
+ *     &lt;analyzer&gt;
+ *       &lt;tokenizer class="solr.OpenNLPTokenizerFactory"
+ *                  sentenceModel="en-sent.bin"
+ *                  tokenizerModel="en-tokenizer.bin"/&gt;
+ *     &lt;/analyzer&gt;
+ *   &lt;/fieldType&gt;
+ * </pre>
+ * 
+ * <p>See the <a href="OpenNLP website">http://opennlp.apache.org/models.html</a>
+ * for information on downloading pre-trained models.</p>
+ *
+ * <p>
+ * The <code>source</code> field(s) can be configured as either:
+ * </p>
+ * <ul>
+ *  <li>One or more <code>&lt;str&gt;</code></li>
+ *  <li>An <code>&lt;arr&gt;</code> of <code>&lt;str&gt;</code></li>
+ *  <li>A <code>&lt;lst&gt;</code> containing
+ *   {@link FieldMutatingUpdateProcessor FieldMutatingUpdateProcessorFactory style selector arguments}</li>
+ * </ul>
+ *
+ * <p>The <code>dest</code> field can be a single <code>&lt;str&gt;</code>
+ * containing the literal name of a destination field, or it may be a <code>&lt;lst&gt;</code> specifying a
+ * regex <code>pattern</code> and a <code>replacement</code> string. If the pattern + replacement option
+ * is used the pattern will be matched against all fields matched by the source selector, and the replacement
+ * string (including any capture groups specified from the pattern) will be evaluated a using
+ * {@link Matcher#replaceAll(String)} to generate the literal name of the destination field.  Additionally,
+ * an occurrence of the string "{EntityType}" in the <code>dest</code> field specification, or in the
+ * <code>replacement</code> string, will be replaced with the entity type(s) returned for each entity by
+ * the OpenNLP NER model; as a result, if the model extracts more than one entity type, then more than one
+ * <code>dest</code> field will be populated.
+ * </p>
+ *
+ * <p>If the resolved <code>dest</code> field already exists in the document, then the
+ * named entities extracted from the <code>source</code> fields will be added to it.
+ * </p>
+ * <p>
+ * In the example below:
+ * </p>
+ * <ul>
+ *   <li>Named entities will be extracted from the <code>text</code> field and added
+ *       to the <code>names_ss</code> field</li>
+ *   <li>Named entities will be extracted from both the <code>title</code> and
+ *       <code>subtitle</code> fields and added into the <code>titular_people</code> field</li>
+ *   <li>Named entities will be extracted from any field with a name ending in <code>_txt</code>
+ *       -- except for <code>notes_txt</code> -- and added into the <code>people_ss</code> field</li>
+ *   <li>Named entities will be extracted from any field with a name beginning with "desc" and
+ *       ending in "s" (e.g. "descs" and "descriptions") and added to a field prefixed with "key_",
+ *       not ending in "s", and suffixed with "_people". (e.g. "key_desc_people" or
+ *       "key_description_people")</li>
+ *   <li>Named entities will be extracted from the <code>summary</code> field and added
+ *       to the <code>summary_person_ss</code> field, assuming that the modelFile only extracts
+ *       entities of type "person".</li>
+ * </ul>
+ *
+ * <pre class="prettyprint">
+ * &lt;updateRequestProcessorChain name="multiple-extract"&gt;
+ *   &lt;processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory"&gt;
+ *     &lt;str name="modelFile"&gt;en-test-ner-person.bin&lt;/str&gt;
+ *     &lt;str name="analyzerFieldType"&gt;opennlp-en-tokenization&lt;/str&gt;
+ *     &lt;str name="source"&gt;text&lt;/str&gt;
+ *     &lt;str name="dest"&gt;people_s&lt;/str&gt;
+ *   &lt;/processor&gt;
+ *   &lt;processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory"&gt;
+ *     &lt;str name="modelFile"&gt;en-test-ner-person.bin&lt;/str&gt;
+ *     &lt;str name="analyzerFieldType"&gt;opennlp-en-tokenization&lt;/str&gt;
+ *     &lt;arr name="source"&gt;
+ *       &lt;str&gt;title&lt;/str&gt;
+ *       &lt;str&gt;subtitle&lt;/str&gt;
+ *     &lt;/arr&gt;
+ *     &lt;str name="dest"&gt;titular_people&lt;/str&gt;
+ *   &lt;/processor&gt;
+ *   &lt;processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory"&gt;
+ *     &lt;str name="modelFile"&gt;en-test-ner-person.bin&lt;/str&gt;
+ *     &lt;str name="analyzerFieldType"&gt;opennlp-en-tokenization&lt;/str&gt;
+ *     &lt;lst name="source"&gt;
+ *       &lt;str name="fieldRegex"&gt;.*_txt$&lt;/str&gt;
+ *       &lt;lst name="exclude"&gt;
+ *         &lt;str name="fieldName"&gt;notes_txt&lt;/str&gt;
+ *       &lt;/lst&gt;
+ *     &lt;/lst&gt;
+ *     &lt;str name="dest"&gt;people_s&lt;/str&gt;
+ *   &lt;/processor&gt;
+ *   &lt;processor class="solr.processor.OpenNLPExtractNamedEntitiesUpdateProcessorFactory"&gt;
+ *     &lt;str name="modelFile"&gt;en-test-ner-person.bin&lt;/str&gt;
+ *     &lt;str name="analyzerFieldType"&gt;opennlp-en-tokenization&lt;/str&gt;
+ *     &lt;lst name="source"&gt;
+ *       &lt;str name="fieldRegex"&gt;^desc(.*)s$&lt;/str&gt;
+ *     &lt;/lst&gt;
+ *     &lt;lst name="dest"&gt;
+ *       &lt;str name="pattern"&gt;^desc(.*)s$&lt;/str&gt;
+ *       &lt;str name="replacement"&gt;key_desc$1_people&lt;/str&gt;
+ *     &lt;/lst&gt;
+ *   &lt;/processor&gt;
+ *   &lt;processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory"&gt;
+ *     &lt;str name="modelFile"&gt;en-test-ner-person.bin&lt;/str&gt;
+ *     &lt;str name="analyzerFieldType"&gt;opennlp-en-tokenization&lt;/str&gt;
+ *     &lt;str name="source"&gt;summary&lt;/str&gt;
+ *     &lt;str name="dest"&gt;summary_{EntityType}_s&lt;/str&gt;
+ *   &lt;/processor&gt;
+ * &lt;/updateRequestProcessorChain&gt;
+ * </pre>
+ *
+ * @since 7.3.0
+ */
+public class OpenNLPExtractNamedEntitiesUpdateProcessorFactory
+    extends UpdateRequestProcessorFactory implements SolrCoreAware {
+
+  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());
+
+  public static final String SOURCE_PARAM = "source";
+  public static final String DEST_PARAM = "dest";
+  public static final String PATTERN_PARAM = "pattern";
+  public static final String REPLACEMENT_PARAM = "replacement";
+  public static final String MODEL_PARAM = "modelFile";
+  public static final String ANALYZER_FIELD_TYPE_PARAM = "analyzerFieldType";
+  public static final String ENTITY_TYPE = "{EntityType}";
+
+  private SelectorParams srcInclusions = new SelectorParams();
+  private Collection<SelectorParams> srcExclusions = new ArrayList<>();
+
+  private FieldNameSelector srcSelector = null;
+
+  private String modelFile = null;
+  private String analyzerFieldType = null;
+
+  /**
+   * If pattern is null, this this is a literal field name.  If pattern is non-null then this
+   * is a replacement string that may contain meta-characters (ie: capture group identifiers)
+   * @see #pattern
+   */
+  private String dest = null;
+  /** @see #dest */
+  private Pattern pattern = null;
+
+  protected final FieldNameSelector getSourceSelector() {
+    if (null != srcSelector) return srcSelector;
+
+    throw new SolrException(SERVER_ERROR, "selector was never initialized, inform(SolrCore) never called???");
+  }
+
+  @SuppressWarnings("unchecked")
+  @Override
+  public void init(NamedList args) {
+
+    // high level (loose) check for which type of config we have.
+    //
+    // individual init methods do more strict syntax checking
+    if (0 <= args.indexOf(SOURCE_PARAM, 0) && 0 <= args.indexOf(DEST_PARAM, 0) ) {
+      initSourceSelectorSyntax(args);
+    } else if (0 <= args.indexOf(PATTERN_PARAM, 0) && 0 <= args.indexOf(REPLACEMENT_PARAM, 0)) {
+      initSimpleRegexReplacement(args);
+    } else {
+      throw new SolrException(SERVER_ERROR, "A combination of either '" + SOURCE_PARAM + "' + '"+
+          DEST_PARAM + "', or '" + REPLACEMENT_PARAM + "' + '" +
+          PATTERN_PARAM + "' init params are mandatory");
+    }
+
+    Object modelParam = args.remove(MODEL_PARAM);
+    if (null == modelParam) {
+      throw new SolrException(SERVER_ERROR, "Missing required init param '" + MODEL_PARAM + "'");
+    }
+    if ( ! (modelParam instanceof CharSequence)) {
+      throw new SolrException(SERVER_ERROR, "Init param '" + MODEL_PARAM + "' must be a <str>");
+    }
+    modelFile = modelParam.toString();
+
+    Object analyzerFieldTypeParam = args.remove(ANALYZER_FIELD_TYPE_PARAM);
+    if (null == analyzerFieldTypeParam) {
+      throw new SolrException(SERVER_ERROR, "Missing required init param '" + ANALYZER_FIELD_TYPE_PARAM + "'");
+    }
+    if ( ! (analyzerFieldTypeParam instanceof CharSequence)) {
+      throw new SolrException(SERVER_ERROR, "Init param '" + ANALYZER_FIELD_TYPE_PARAM + "' must be a <str>");
+    }
+    analyzerFieldType = analyzerFieldTypeParam.toString();
+
+    if (0 < args.size()) {
+      throw new SolrException(SERVER_ERROR, "Unexpected init param(s): '" + args.getName(0) + "'");
+    }
+
+    super.init(args);
+  }
+
+  /**
+   * init helper method that should only be called when we know for certain that both the
+   * "source" and "dest" init params do <em>not</em> exist.
+   */
+  @SuppressWarnings("unchecked")
+  private void initSimpleRegexReplacement(NamedList args) {
+    // The syntactic sugar for the case where there is only one regex pattern for source and the same pattern
+    // is used for the destination pattern...
+    //
+    //  pattern != null && replacement != null
+    //
+    // ...as top level elements, with no other config options specified
+
+    // if we got here we know we had pattern and replacement, now check for the other two  so that we can give a better
+    // message than "unexpected"
+    if (0 <= args.indexOf(SOURCE_PARAM, 0) || 0 <= args.indexOf(DEST_PARAM, 0) ) {
+      throw new SolrException(SERVER_ERROR,"Short hand syntax must not be mixed with full syntax. Found " +
+          PATTERN_PARAM + " and " + REPLACEMENT_PARAM + " but also found " + SOURCE_PARAM + " or " + DEST_PARAM);
+    }
+
+    assert args.indexOf(SOURCE_PARAM, 0) < 0;
+
+    Object patt = args.remove(PATTERN_PARAM);
+    Object replacement = args.remove(REPLACEMENT_PARAM);
+
+    if (null == patt || null == replacement) {
+      throw new SolrException(SERVER_ERROR, "Init params '" + PATTERN_PARAM + "' and '" +
+          REPLACEMENT_PARAM + "' are both mandatory if '" + SOURCE_PARAM + "' and '"+
+          DEST_PARAM + "' are not both specified");
+    }
+
+    if (0 != args.size()) {
+      throw new SolrException(SERVER_ERROR, "Init params '" + REPLACEMENT_PARAM + "' and '" +
+          PATTERN_PARAM + "' must be children of '" + DEST_PARAM +
+          "' to be combined with other options.");
+    }
+
+    if (!(replacement instanceof String)) {
+      throw new SolrException(SERVER_ERROR, "Init param '" + REPLACEMENT_PARAM + "' must be a string (i.e. <str>)");
+    }
+    if (!(patt instanceof String)) {
+      throw new SolrException(SERVER_ERROR, "Init param '" + PATTERN_PARAM + "' must be a string (i.e. <str>)");
+    }
+
+    dest = replacement.toString();
+    try {
+      this.pattern = Pattern.compile(patt.toString());
+    } catch (PatternSyntaxException pe) {
+      throw new SolrException(SERVER_ERROR, "Init param " + PATTERN_PARAM +
+          " is not a valid regex pattern: " + patt, pe);
+
+    }
+    srcInclusions = new SelectorParams();
+    srcInclusions.fieldRegex = Collections.singletonList(this.pattern);
+  }
+
+  /**
+   * init helper method that should only be called when we know for certain that both the
+   * "source" and "dest" init params <em>do</em> exist.
+   */
+  @SuppressWarnings("unchecked")
+  private void initSourceSelectorSyntax(NamedList args) {
+    // Full and complete syntax where source and dest are mandatory.
+    //
+    // source may be a single string or a selector.
+    // dest may be a single string or list containing pattern and replacement
+    //
+    //   source != null && dest != null
+
+    // if we got here we know we had source and dest, now check for the other two so that we can give a better
+    // message than "unexpected"
+    if (0 <= args.indexOf(PATTERN_PARAM, 0) || 0 <= args.indexOf(REPLACEMENT_PARAM, 0) ) {
+      throw new SolrException(SERVER_ERROR,"Short hand syntax must not be mixed with full syntax. Found " +
+          SOURCE_PARAM + " and " + DEST_PARAM + " but also found " + PATTERN_PARAM + " or " + REPLACEMENT_PARAM);
+    }
+
+    Object d = args.remove(DEST_PARAM);
+    assert null != d;
+
+    List<Object> sources = args.getAll(SOURCE_PARAM);
+    assert null != sources;
+
+    if (1 == sources.size()) {
+      if (sources.get(0) instanceof NamedList) {
+        // nested set of selector options
+        NamedList selectorConfig = (NamedList) args.remove(SOURCE_PARAM);
+
+        srcInclusions = parseSelectorParams(selectorConfig);
+
+        List<Object> excList = selectorConfig.getAll("exclude");
+
+        for (Object excObj : excList) {
+          if (null == excObj) {
+            throw new SolrException(SERVER_ERROR, "Init param '" + SOURCE_PARAM +
+                "' child 'exclude' can not be null");
+          }
+          if (!(excObj instanceof NamedList)) {
+            throw new SolrException(SERVER_ERROR, "Init param '" + SOURCE_PARAM +
+                "' child 'exclude' must be <lst/>");
+          }
+          NamedList exc = (NamedList) excObj;
+          srcExclusions.add(parseSelectorParams(exc));
+          if (0 < exc.size()) {
+            throw new SolrException(SERVER_ERROR, "Init param '" + SOURCE_PARAM +
+                "' has unexpected 'exclude' sub-param(s): '"
+                + selectorConfig.getName(0) + "'");
+          }
+          // call once per instance
+          selectorConfig.remove("exclude");
+        }
+
+        if (0 < selectorConfig.size()) {
+          throw new SolrException(SERVER_ERROR, "Init param '" + SOURCE_PARAM +
+              "' contains unexpected child param(s): '" +
+              selectorConfig.getName(0) + "'");
+        }
+        // consume from the named list so it doesn't interfere with subsequent processing
+        sources.remove(0);
+      }
+    }
+    if (1 <= sources.size()) {
+      // source better be one or more strings
+      srcInclusions.fieldName = new HashSet<>(args.removeConfigArgs("source"));
+    }
+    if (srcInclusions == null) {
+      throw new SolrException(SERVER_ERROR,
+          "Init params do not specify any field from which to extract entities, please supply either "
+          + SOURCE_PARAM + " and " + DEST_PARAM + " or " + PATTERN_PARAM + " and " + REPLACEMENT_PARAM + ". See javadocs" +
+          "for OpenNLPExtractNamedEntitiesUpdateProcessor for further details.");
+    }
+
+    if (d instanceof NamedList) {
+      NamedList destList = (NamedList) d;
+
+      Object patt = destList.remove(PATTERN_PARAM);
+      Object replacement = destList.remove(REPLACEMENT_PARAM);
+
+      if (null == patt || null == replacement) {
+        throw new SolrException(SERVER_ERROR, "Init param '" + DEST_PARAM + "' children '" +
+            PATTERN_PARAM + "' and '" + REPLACEMENT_PARAM +
+            "' are both mandatory and can not be null");
+      }
+      if (! (patt instanceof String && replacement instanceof String)) {
+        throw new SolrException(SERVER_ERROR, "Init param '" + DEST_PARAM + "' children '" +
+            PATTERN_PARAM + "' and '" + REPLACEMENT_PARAM +
+            "' must both be strings (i.e. <str>)");
+      }
+      if (0 != destList.size()) {
+        throw new SolrException(SERVER_ERROR, "Init param '" + DEST_PARAM + "' has unexpected children: '"
+            + destList.getName(0) + "'");
+      }
+
+      try {
+        this.pattern = Pattern.compile(patt.toString());
+      } catch (PatternSyntaxException pe) {
+        throw new SolrException(SERVER_ERROR, "Init param '" + DEST_PARAM + "' child '" + PATTERN_PARAM +
+            " is not a valid regex pattern: " + patt, pe);
+      }
+      dest = replacement.toString();
+
+    } else if (d instanceof String) {
+      dest = d.toString();
+    } else {
+      throw new SolrException(SERVER_ERROR, "Init param '" + DEST_PARAM + "' must either be a string " +
+          "(i.e. <str>) or a list (i.e. <lst>) containing '" +
+          PATTERN_PARAM + "' and '" + REPLACEMENT_PARAM);
+    }
+
+  }
+
+  @Override
+  public void inform(final SolrCore core) {
+
+    srcSelector =
+        FieldMutatingUpdateProcessor.createFieldNameSelector
+            (core.getResourceLoader(), core, srcInclusions, FieldMutatingUpdateProcessor.SELECT_NO_FIELDS);
+
+    for (SelectorParams exc : srcExclusions) {
+      srcSelector = FieldMutatingUpdateProcessor.wrap
+          (srcSelector,
+              FieldMutatingUpdateProcessor.createFieldNameSelector
+                  (core.getResourceLoader(), core, exc, FieldMutatingUpdateProcessor.SELECT_NO_FIELDS));
+    }
+    try {
+      OpenNLPOpsFactory.getNERTaggerModel(modelFile, core.getResourceLoader());
+    } catch (IOException e) {
+      throw new IllegalArgumentException(e);
+    }
+  }
+
+  @Override
+  public final UpdateRequestProcessor getInstance
+      (SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {
+    final FieldNameSelector srcSelector = getSourceSelector();
+    return new UpdateRequestProcessor(next) {
+      private final NLPNERTaggerOp nerTaggerOp;
+      private Analyzer analyzer = null;
+      {
+        try {
+          nerTaggerOp = OpenNLPOpsFactory.getNERTagger(modelFile);
+          FieldType fieldType = req.getSchema().getFieldTypeByName(analyzerFieldType);
+          if (fieldType == null) {
+            throw new SolrException
+                (SERVER_ERROR, ANALYZER_FIELD_TYPE_PARAM + " '" + analyzerFieldType + "' not found in the schema.");
+          }
+          analyzer = fieldType.getIndexAnalyzer();
+        } catch (IOException e) {
+          throw new IllegalArgumentException(e);
+        }
+      }
+
+      @Override
+      public void processAdd(AddUpdateCommand cmd) throws IOException {
+
+        final SolrInputDocument doc = cmd.getSolrInputDocument();
+
+        // Destination may be regex replace string, or "{EntityType}" replaced by
+        // each entity's type, both of which can cause multiple output fields.
+        Map<String,SolrInputField> destMap = new HashMap<>();
+
+        // preserve initial values
+        for (final String fname : doc.getFieldNames()) {
+          if ( ! srcSelector.shouldMutate(fname)) continue;
+
+          Collection<Object> srcFieldValues = doc.getFieldValues(fname);
+          if (srcFieldValues == null || srcFieldValues.isEmpty()) continue;
+
+          String resolvedDest = dest;
+
+          if (pattern != null) {
+            Matcher matcher = pattern.matcher(fname);
+            if (matcher.find()) {
+              resolvedDest = matcher.replaceAll(dest);
+            } else {
+              log.debug("srcSelector.shouldMutate(\"{}\") returned true, " +
+                  "but replacement pattern did not match, field skipped.", fname);
+              continue;
+            }
+          }
+
+          for (Object val : srcFieldValues) {
+            for (Pair<String,String> entity : extractTypedNamedEntities(val)) {
+              SolrInputField destField = null;
+              String entityName = entity.first();
+              String entityType = entity.second();
+              resolvedDest = resolvedDest.replace(ENTITY_TYPE, entityType);
+              if (doc.containsKey(resolvedDest)) {
+                destField = doc.getField(resolvedDest);
+              } else {
+                SolrInputField targetField = destMap.get(resolvedDest);
+                if (targetField == null) {
+                  destField = new SolrInputField(resolvedDest);
+                } else {
+                  destField = targetField;
+                }
+              }
+              destField.addValue(entityName);
+
+              // put it in map to avoid concurrent modification...
+              destMap.put(resolvedDest, destField);
+            }
+          }
+        }
+
+        for (Map.Entry<String,SolrInputField> entry : destMap.entrySet()) {
+          doc.put(entry.getKey(), entry.getValue());
+        }
+        super.processAdd(cmd);
+      }
+
+      /** Using configured NER model, extracts (name, type) pairs from the given source field value */
+      private List<Pair<String,String>> extractTypedNamedEntities(Object srcFieldValue) throws IOException {
+        List<Pair<String,String>> entitiesWithType = new ArrayList<>();
+        List<String> terms = new ArrayList<>();
+        List<Integer> startOffsets = new ArrayList<>();
+        List<Integer> endOffsets = new ArrayList<>();
+        String fullText = srcFieldValue.toString();
+        TokenStream tokenStream = analyzer.tokenStream("", fullText);
+        CharTermAttribute termAtt = tokenStream.addAttribute(CharTermAttribute.class);
+        OffsetAttribute offsetAtt = tokenStream.addAttribute(OffsetAttribute.class);
+        FlagsAttribute flagsAtt = tokenStream.addAttribute(FlagsAttribute.class);
+        tokenStream.reset();
+        synchronized (nerTaggerOp) {
+          while (tokenStream.incrementToken()) {
+            terms.add(termAtt.toString());
+            startOffsets.add(offsetAtt.startOffset());
+            endOffsets.add(offsetAtt.endOffset());
+            boolean endOfSentence = 0 != (flagsAtt.getFlags() & OpenNLPTokenizer.EOS_FLAG_BIT);
+            if (endOfSentence) {    // extract named entities one sentence at a time
+              extractEntitiesFromSentence(fullText, terms, startOffsets, endOffsets, entitiesWithType);
+            }
+          }
+          tokenStream.end();
+          tokenStream.close();
+          if (!terms.isEmpty()) { // In case last token of last sentence isn't properly flagged with EOS_FLAG_BIT
+            extractEntitiesFromSentence(fullText, terms, startOffsets, endOffsets, entitiesWithType);
+          }
+          nerTaggerOp.reset();      // Forget all adaptive data collected during previous calls
+        }
+        return entitiesWithType;
+      }
+
+      private void extractEntitiesFromSentence(String fullText, List<String> terms, List<Integer> startOffsets,
+                                               List<Integer> endOffsets, List<Pair<String,String>> entitiesWithType) {
+        for (Span span : nerTaggerOp.getNames(terms.toArray(new String[terms.size()]))) {
+          String text = fullText.substring(startOffsets.get(span.getStart()), endOffsets.get(span.getEnd() - 1));
+          entitiesWithType.add(new Pair<>(text, span.getType()));
+        }
+        terms.clear();
+        startOffsets.clear();
+        endOffsets.clear();
+      }
+    };
+  }
+
+  /** macro */
+  private static SelectorParams parseSelectorParams(NamedList args) {
+    return FieldMutatingUpdateProcessorFactory.parseSelectorParams(args);
+  }
+}
diff --git a/solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/package.html b/solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/package.html
new file mode 100644
index 0000000000..1388c29ce0
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/java/org/apache/solr/update/processor/package.html
@@ -0,0 +1,24 @@
+<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!-- not a package-info.java, because we already defined this package in core/ -->
+<html>
+  <body>
+    Update request processor invoking OpenNLP Named Entity Recognition over configured
+    source field(s), populating configured target field(s) with the results.
+  </body>
+</html>
diff --git a/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/en-test-ner-person.bin b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/en-test-ner-person.bin
new file mode 100644
index 0000000000000000000000000000000000000000..0b40aac0202266b1d2c965b1d42bd84911bec496
GIT binary patch
literal 1700
zcmaJ>dpy%?7~e34%wmXBZkaAFIc;ZzDMGX}MoCg;<%hX!+2pQ-M1{2yadOG6+|o=T
zw^5|RP(zI&iVB@rMCr_5Iej|k`~2~~&+~cT_w#<9@ALf<aN-gO5EKdpwPYmXKx?2V
z+6R&-WN&~TY<QAJJqgf)$pHNngX7m~1h<}DlG)pZVFLRc_M{hJ5KK0_@4@jq8=d?M
zpEziJTPo?wYnZQjdLj&^$MTD{&(6j9rd4)ctGLg$dq>Y2zbf4;32;XkyquUh7rg6j
z+@r`th+`a=LYoeWS4ZOq#?zfqJ^r+VzUV*cOOm9WFyzy%yS8qm_<^MDbQf#DA(f%n
z;BH>(7QoU}J~6-B`)%8{*2P}Q<p3Xk%lh)V!E?)Jj=moTpNY*3v-DL*hbPTXeOziU
zd}1<qmgO@CVP4@4OqP_TmwDAD+VCL7e|@+igq@fQzPpUK;HA1~vP0!*stHlz1e_Ff
zZr^8}8BsIrz#tIeKidTtouH5c0b4S~3!oVWQoVqHa%a3_%O3b9Bv*!aQ@x({iLIa&
z!5`_UN>b|vUdh-GVFK-66MHqlD&H?{`5u#0MLfq7N0WB+4TYm-JF~17wCvm%<K$=H
z5%|j>3t49qhgkH*FD}<2$tg+Vll&B^{<!t01)d=XxkjH@gIVpP1)lLJQy=RWAzyBJ
zKA-343~SrISy#5tRL<k=#t#qsL9XIY{BVah*Oa%oDX7TcX5{j-9<sFw&^j-Klg@Fj
z9)uK4)Va|7*78l{?AU~uSwdQbv!52^4}C9aiuHDyzBv&W{<|DU>07dj*u+?XQjoI6
zM;nA?Xe%0bcrr+1cU!N<vv<;!=UXStt!4dRr@>q_Cm9voTY0uZ%npOyP-K#I_VzOv
z;PYiyxZ!?cKvdoV{r2n7I~#fqjF=!khe#O0E>ovVixkY1<MJe`Yc4!3NzIGDmSInY
z-GG;;D)7s)-A)A|su)O6R|Lc{qZ(Hec)GSj{&5xh@Aq!mNhz;pgiCD;v+_X}>82IW
zQG5<%F?z0l?i5yNafLX2F=d(8RGt$~6qW0Si<ZlpzP~Q*?hhs|4^sn&1Lx2$=A>2`
zAI(zlVvE>Tko-T!5hBKY017}O1ygB;-T*216b%p+3J>C_V@7a`_NL>Q;zMGrcR?x)
zR-tcxdF=Co@(6Ut!^8LwWz*;h!K?{9ciF^1r4qa1f%0A<n*y8$eS(`lhkVj3zGeav
z4b;)F#!&yE+f1|DN=F|JE~)t@NwTe!eZ`ZDGOhG{#_!SDP8uI$Wa9>MX(5sfE!fDE
zt|MhOm-)w#VIh{U{mG+llZ%~f1Lh84J$wgliX1NI++&MM^gL_H!EZ~`d>KM57}&*a
zusRXSLRRpz9`o|ykug{Tv%O&^McI(AzBi*;krP&GT-ANj2BHs5^%)iRk5XC}a@lcR
zW2&kj8=85S2?{UR)#D|(5B9lkiE>_`#dF=;Z)eKu?r}{Anm5TFuB2CdQ?Q8^bT4Ys
zi;@#<-FvXe>)xRUnD0t8T#|XQoSYlztCJz}^++T{z--K17(of~sz>nrhP<e>jLPPe
z&c=X_T?J0c*BkV6Gfae=FQM#M@Ww}OO#H~MjwY%)JuF2-eGKh5vva__d0O`vGMr^k
zu1+wCCUH`Aj^RPuv~O}2cwt`(oR+>;)@Nj17C1iQD!w|drRT;lK$;rD<4^C+|4Lx{
zs*$4=4LbD5>(r(adhY5kw)S1Z7vtLA%p*L{Db4yxT`+!#Jl`u*`+n<&vuIC#w{d3#
z(#8ko*doZzflV{P&twIqNUr0NDD&U$Ma1&3jM4j%2V-r$z@vDmj9_S@O~F9}vyx%<
z?Lx_|+Ug!@BU8;4c@B}h(n-*sK-G8AlZ*YsB8La|lfvj8?n@}mX{bBG*}%%jbRF2G
z7OLmbCu?@CD_<a%+-AKy`>WXMtYU=dMn5qSs99olR>5Kj&<{Ib>s+gL{%`!k+<$&x
utq@iX?gw^=<ngoJ{d{}v*H*>y16tz0mJR_25lIdN5*GzWw01&Pvwr|D%he?S

literal 0
HcmV?d00001

diff --git a/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/en-test-sent.bin b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/en-test-sent.bin
new file mode 100644
index 0000000000000000000000000000000000000000..4252bcbf376f6f20b70d30e65dc8538153c1d5bb
GIT binary patch
literal 1050
zcmWIWW@Zs#;Nak3*gK=cn*j+31KGKWd6{Xc#U*+LMfnA(MJ1W3#jz6%^A8z_w3Pqv
z3OTd!O~Ye}ldl*OnW8#Z2zPtN39Wu&xoNJ~pWjg%Lhins`{l0f-L5r!_tL5}jKfl6
za%bM)ntFA*nzqFBB_EG1I;yz7p5bxEp%vV0=6O2;Y?(v7?%n(4cZ%uPq|IClR3044
zGr6}#u;#*-U*G)v*mC(5pT(ct#Amv^M~0WLThf7flB&bweT>;}O1^MUuzPsUe#>me
zk9L<|+_AkdVcrV`C+U}}o(IIfoxl9^Ft>s{r-i)zf0NJ>Un%RQRmNv$amRURP7RO_
zoG^EGTDzu}{cO%J|1Sjpjbf<zJj2o6U15KKH#^6-Nw$w)0>i<Ck%1uqXGn1YRTQV@
zmFVT>r=;d2CzO5XNlQpb*z*4X1G5iL&rzP9N(V7x=I(_vn;4mAFWlJF*rdq3S#Ux^
z!i4mMvzvKOdZZ?t+MJr8yZP+dlgSAuH-7~Rtlr>zQd27}!H6a6)aFnoO{P;7(;B9z
zK3i&FFw4kbmZ8BcV}qy$5pnf2rlUHNGrDu9I(T^<cr{s=TOuO(b9e4ni5XpuZs83q
z5vOuKUv8+0R^UF8ZjzE<l9XVQmSDnoa_W<2o{Nk-d0xo;e*JW-|GXUWZTlx{9*+Ha
z?EJrLJjq*GziGdfpL_4d($xB+|5ki!JN@47-M0OA{v>Txj9&P6ZgcqSf4@R*+ke~j
zX<z0m#oxajyWf?)u}ZJMnp0=wzkmJT*7u2%yubav86R7C)_?t<O@Do#&AT5~81yau
z)$_VNvCGrzCmPqUGoIf5_x|!#(L!N$Tkn@R#%xYGz2`6c<R8!Tlf*aMm)T$5l5xH9
zul>7QrfWm*C9I!zz1}{i@nD_x{g3I(*2TZ^x3~Se+Uwg<#&=J<pUSNjy}$q6>IX&}
zSMmM+toE+Ud-lIu^79W>yxnn-_xIKMI+nO+carwkCoN0f>3{IwbH=~z)8p$m{l9c-
z>z<|UMQ`HO-u^qExwzV4#m~676Q|vNw_CZs++Q0n^WgJoE>3N}E&qQ-9xs``?##dG
z(f5zk*VrBZclILp^RkksH}kLUTd?g;X7k_MH>O_Z-+bqO{fiZkId?K|eyeX``u9uX
z%#{Cm$FDsxu8My<-zRQk{p~5azy!t4@xhmKt|k)$gE<ffcr!AIFd#A`a^eGJMpS?$
jYoZ%~Y&a;5B7hb!JtI<VfHx}}NR9~zD}i)3Gl&NOZiUcR

literal 0
HcmV?d00001

diff --git a/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/en-test-tokenizer.bin b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/en-test-tokenizer.bin
new file mode 100644
index 0000000000000000000000000000000000000000..94668c037d2d5ed7b2433d69f903f19b27be5904
GIT binary patch
literal 15096
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
JYvKRd{U7*xw%Pyy

literal 0
HcmV?d00001

diff --git a/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/schema-opennlp-extract.xml b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/schema-opennlp-extract.xml
new file mode 100644
index 0000000000..fc13431b3f
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/schema-opennlp-extract.xml
@@ -0,0 +1,49 @@
+<?xml version="1.0" ?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<schema name="test-opennlp-extract" version="1.6">
+  <fieldType name="opennlp-en-tokenization" class="solr.TextField">
+    <analyzer>
+      <tokenizer class="solr.OpenNLPTokenizerFactory"
+                 sentenceModel="en-test-sent.bin"
+                 tokenizerModel="en-test-tokenizer.bin"/>
+    </analyzer>
+  </fieldType>
+
+  <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>
+
+  <fieldType name="text" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
+    <analyzer>
+      <tokenizer class="solr.MockTokenizerFactory"/>
+      <filter class="solr.LowerCaseFilterFactory"/>
+      <filter class="solr.PorterStemFilterFactory"/>
+    </analyzer>
+  </fieldType>
+
+  <field name="id" type="string" indexed="true" stored="true" multiValued="false" required="true"/>
+  <field name="text" type="text" indexed="true" stored="false"/>
+  <field name="subject" type="text" indexed="true" stored="true"/>
+  <field name="title" type="text" indexed="true" stored="true"/>
+  <field name="subtitle" type="text" indexed="true" stored="true"/>
+  <field name="descs" type="text" indexed="true" stored="true"/>
+  <field name="descriptions" type="text" indexed="true" stored="true"/>
+
+  <dynamicField name="*_txt" type="text" indexed="true" stored="true"/>
+  <dynamicField name="*_s" type="string" indexed="true" stored="true" multiValued="true"/>
+  <dynamicField name="*_people" type="string" indexed="true" stored="true" multiValued="true"/>
+</schema>
diff --git a/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/solrconfig-opennlp-extract.xml b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/solrconfig-opennlp-extract.xml
new file mode 100644
index 0000000000..c44c9e1893
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/solrconfig-opennlp-extract.xml
@@ -0,0 +1,206 @@
+<?xml version="1.0" ?>
+
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<config>
+  <luceneMatchVersion>${tests.luceneMatchVersion:LATEST}</luceneMatchVersion>
+  <xi:include href="solrconfig.snippet.randomindexconfig.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
+  <requestHandler name="/select" class="solr.SearchHandler"></requestHandler>
+  <requestHandler name="/update" class="solr.UpdateRequestHandler"  />
+  <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.RAMDirectoryFactory}"/>
+  <schemaFactory class="ClassicIndexSchemaFactory"/>
+
+  <updateRequestProcessorChain name="extract-single">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <str name="source">source1_s</str>
+      <str name="dest">dest_s</str>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-single-regex">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <str name="source">source1_s</str>
+      <lst name="dest">
+        <str name="pattern">source\d(_s)</str>
+        <str name="replacement">dest$1</str>
+      </lst>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-multi">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <str name="source">source1_s</str>
+      <str name="source">source2_s</str>
+      <str name="dest">dest_s</str>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-multi-regex">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <str name="source">source1_s</str>
+      <str name="source">source2_s</str>
+      <lst name="dest">
+        <str name="pattern">source\d(_s)</str>
+        <str name="replacement">dest$1</str>
+      </lst>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-array">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <arr name="source">
+        <str>source1_s</str>
+        <str>source2_s</str>
+      </arr>
+      <str name="dest">dest_s</str>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-array-regex">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <arr name="source">
+        <str>source1_s</str>
+        <str>source2_s</str>
+      </arr>
+      <lst name="dest">
+        <str name="pattern">source\d(_s)</str>
+        <str name="replacement">dest$1</str>
+      </lst>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-selector">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <lst name="source">
+        <str name="fieldRegex">source\d_.*</str>
+        <lst name="exclude">
+          <str name="fieldRegex">source0_.*</str>
+        </lst>
+      </lst>
+      <str name="dest">dest_s</str>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-selector-regex">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <lst name="source">
+        <str name="fieldRegex">source\d_.*</str>
+        <lst name="exclude">
+          <str name="fieldRegex">source0_.*</str>
+        </lst>
+      </lst>
+      <lst name="dest">
+        <str name="pattern">source\d(_s)</str>
+        <str name="replacement">dest$1</str>
+      </lst>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-regex-replaceall">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <lst name="source">
+        <str name="fieldRegex">foo.*</str>
+      </lst>
+      <lst name="dest">
+        <!-- unbounded pattern that can be replaced multiple times in field name -->
+        <str name="pattern">x(\d)</str>
+        <str name="replacement">y$1</str>
+      </lst>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <updateRequestProcessorChain name="extract-regex-replaceall-with-entity-type">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <lst name="source">
+        <str name="fieldRegex">foo.*</str>
+      </lst>
+      <lst name="dest">
+        <!-- unbounded pattern that can be replaced multiple times in field name -->
+        <str name="pattern">x(\d)</str>
+        <str name="replacement">{EntityType}_y$1</str>
+      </lst>
+    </processor>
+  </updateRequestProcessorChain>
+
+  <!-- example used in OpenNLPExtractNamedEntitiesUpdateProcessorFactory javadocs -->
+  <updateRequestProcessorChain name="multiple-extract">
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <str name="source">text</str>
+      <str name="dest">people_s</str>
+    </processor>
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <arr name="source">
+        <str>title</str>
+        <str>subtitle</str>
+      </arr>
+      <str name="dest">titular_people</str>
+    </processor>
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <lst name="source">
+        <str name="fieldRegex">.*_txt$</str>
+        <lst name="exclude">
+          <str name="fieldName">notes_txt</str>
+        </lst>
+      </lst>
+      <str name="dest">people_s</str>
+    </processor>
+    <processor class="solr.processor.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <lst name="source">
+        <str name="fieldRegex">^desc(.*)s$</str>
+      </lst>
+      <lst name="dest">
+        <str name="pattern">^desc(.*)s$</str>
+        <str name="replacement">key_desc$1_people</str>
+      </lst>
+    </processor>
+    <processor class="solr.OpenNLPExtractNamedEntitiesUpdateProcessorFactory">
+      <str name="modelFile">en-test-ner-person.bin</str>
+      <str name="analyzerFieldType">opennlp-en-tokenization</str>
+      <str name="source">summary</str>
+      <str name="dest">summary_{EntityType}_s</str>
+    </processor>
+  </updateRequestProcessorChain>
+</config>
diff --git a/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/solrconfig.snippet.randomindexconfig.xml b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/solrconfig.snippet.randomindexconfig.xml
new file mode 100644
index 0000000000..23516b078f
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/test-files/analysis-extras/solr/collection1/conf/solrconfig.snippet.randomindexconfig.xml
@@ -0,0 +1,48 @@
+<?xml version="1.0" ?>
+
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<!--
+A solrconfig.xml snippet containing indexConfig settings for randomized testing.
+-->
+<indexConfig>
+  <!-- this sys property is not set by SolrTestCaseJ4 because we ideally want to use
+       the RandomMergePolicy in all tests - but some tests expect very specific
+       Merge behavior, so those tests can set it as needed.
+  -->
+  <mergePolicyFactory class="${solr.tests.mergePolicyFactory:org.apache.solr.util.RandomMergePolicyFactory}" />
+
+  <useCompoundFile>${useCompoundFile:false}</useCompoundFile>
+
+  <maxBufferedDocs>${solr.tests.maxBufferedDocs}</maxBufferedDocs>
+  <ramBufferSizeMB>${solr.tests.ramBufferSizeMB}</ramBufferSizeMB>
+
+  <mergeScheduler class="${solr.tests.mergeScheduler}" />
+
+  <writeLockTimeout>1000</writeLockTimeout>
+  <commitLockTimeout>10000</commitLockTimeout>
+
+  <!-- this sys property is not set by SolrTestCaseJ4 because almost all tests should
+       use the single process lockType for speed - but tests that explicitly need
+       to vary the lockType can set it as needed.
+  -->
+  <lockType>${solr.tests.lockType:single}</lockType>
+
+  <infoStream>${solr.tests.infostream:false}</infoStream>
+
+</indexConfig>
diff --git a/solr/contrib/analysis-extras/src/test/org/apache/solr/update/processor/TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory.java b/solr/contrib/analysis-extras/src/test/org/apache/solr/update/processor/TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory.java
new file mode 100644
index 0000000000..dad06a8f67
--- /dev/null
+++ b/solr/contrib/analysis-extras/src/test/org/apache/solr/update/processor/TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory.java
@@ -0,0 +1,192 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.solr.update.processor;
+
+import java.io.File;
+import java.util.Arrays;
+
+import org.apache.commons.io.FileUtils;
+import org.apache.solr.common.SolrInputDocument;
+import org.junit.BeforeClass;
+import org.junit.Test;
+
+public class TestOpenNLPExtractNamedEntitiesUpdateProcessorFactory extends UpdateProcessorTestBase {
+
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    File testHome = createTempDir().toFile();
+    FileUtils.copyDirectory(getFile("analysis-extras/solr"), testHome);
+    initCore("solrconfig-opennlp-extract.xml", "schema-opennlp-extract.xml", testHome.getAbsolutePath());
+  }
+
+  @Test
+  public void testSimpleExtract() throws Exception {
+    SolrInputDocument doc = processAdd("extract-single",
+        doc(f("id", "1"),
+            f("source1_s", "Take this to Mr. Flashman.")));
+    assertEquals("dest_s should have stringValue", "Flashman", doc.getFieldValue("dest_s"));
+  }
+
+  @Test
+  public void testMultiExtract() throws Exception {
+    SolrInputDocument doc = processAdd("extract-multi",
+        doc(f("id", "1"),
+            f("source1_s", "Hello Flashman."),
+            f("source2_s", "Calling Flashman.")));
+
+    assertEquals(Arrays.asList("Flashman", "Flashman"), doc.getFieldValues("dest_s"));
+  }
+
+  @Test
+  public void testArrayExtract() throws Exception {
+    SolrInputDocument doc = processAdd("extract-array",
+        doc(f("id", "1"),
+            f("source1_s", "Currently we have Flashman. Not much else."),
+            f("source2_s", "Flashman. Is. Not. There.")));
+
+    assertEquals(Arrays.asList("Flashman", "Flashman"), doc.getFieldValues("dest_s"));
+  }
+
+  @Test
+  public void testSelectorExtract() throws Exception {
+    SolrInputDocument doc = processAdd("extract-selector",
+        doc(f("id", "1"),
+            f("source0_s", "Flashman. Or not."),
+            f("source1_s", "Serendipitously, he was. I mean, Flashman. And yet."),
+            f("source2_s", "Correct, Flashman.")));
+
+    assertEquals(Arrays.asList("Flashman", "Flashman"), doc.getFieldValues("dest_s"));
+  }
+
+  public void testMultipleExtracts() throws Exception {
+    // test example from the javadocs
+    SolrInputDocument doc = processAdd("multiple-extract",
+        doc(f("id", "1"),
+            f("text", "From Flashman. To Panman."),
+            f("title", "It's Captain Flashman.", "Privately, Flashman."),
+            f("subtitle", "Ineluctably, Flashman."),
+            f("corrolary_txt", "Forsooth thou bringeth Flashman."),
+            f("notes_txt", "Yes Flashman."),
+            f("summary", "Many aspire to be Flashman."),
+            f("descs", "Courage, Flashman.", "Ain't he Flashman."),
+            f("descriptions", "Flashman. Flashman. Flashman.")));
+
+    assertEquals(Arrays.asList("Flashman", "Flashman"), doc.getFieldValues("people_s"));
+    assertEquals(Arrays.asList("Flashman", "Flashman", "Flashman"), doc.getFieldValues("titular_people"));
+    assertEquals(Arrays.asList("Flashman", "Flashman"), doc.getFieldValues("key_desc_people"));
+    assertEquals(Arrays.asList("Flashman", "Flashman", "Flashman"), doc.getFieldValues("key_description_people"));
+    assertEquals("Flashman", doc.getFieldValue("summary_person_s")); // {EntityType} field name interpolation
+  }
+
+  public void testEquivalentExtraction() throws Exception {
+    SolrInputDocument d;
+
+    // regardless of chain, all of these checks should be equivalent
+    for (String chain : Arrays.asList("extract-single", "extract-single-regex",
+        "extract-multi", "extract-multi-regex",
+        "extract-array", "extract-array-regex",
+        "extract-selector", "extract-selector-regex")) {
+
+      // simple extract
+      d = processAdd(chain,
+          doc(f("id", "1111"),
+              f("source0_s", "Totally Flashman."), // not extracted
+              f("source1_s", "One nation under Flashman.", "Good Flashman.")));
+      assertNotNull(chain, d);
+      assertEquals(chain, Arrays.asList("Flashman", "Flashman"), d.getFieldValues("dest_s"));
+
+      // append to existing values
+      d = processAdd(chain,
+          doc(f("id", "1111"),
+              field("dest_s", "orig1", "orig2"),
+              f("source0_s", "Flashman. In totality."), // not extracted
+              f("source1_s", "Two nations under Flashman.", "Meh Flashman.")));
+      assertNotNull(chain, d);
+      assertEquals(chain, Arrays.asList("orig1", "orig2", "Flashman", "Flashman"), d.getFieldValues("dest_s"));
+    }
+
+    // should be equivalent for any chain matching source1_s and source2_s (but not source0_s)
+    for (String chain : Arrays.asList("extract-multi", "extract-multi-regex",
+        "extract-array", "extract-array-regex",
+        "extract-selector", "extract-selector-regex")) {
+
+      // simple extract
+      d = processAdd(chain,
+          doc(f("id", "1111"),
+              f("source0_s", "Not Flashman."), // not extracted
+              f("source1_s", "Could have had a Flashman.", "Bad Flashman."),
+              f("source2_s", "Indubitably Flashman.")));
+      assertNotNull(chain, d);
+      assertEquals(chain, Arrays.asList("Flashman", "Flashman", "Flashman"), d.getFieldValues("dest_s"));
+
+      // append to existing values
+      d = processAdd(chain,
+          doc(f("id", "1111"),
+              field("dest_s", "orig1", "orig2"),
+              f("source0_s", "Never Flashman."), // not extracted
+              f("source1_s", "Seeking Flashman.", "Evil incarnate Flashman."),
+              f("source2_s", "Perfunctorily Flashman.")));
+      assertNotNull(chain, d);
+      assertEquals(chain, Arrays.asList("orig1", "orig2", "Flashman", "Flashman", "Flashman"), d.getFieldValues("dest_s"));
+    }
+
+    // any chain that copies source1_s to dest_s should be equivalent for these assertions
+    for (String chain : Arrays.asList("extract-single", "extract-single-regex",
+        "extract-multi", "extract-multi-regex",
+        "extract-array", "extract-array-regex",
+        "extract-selector", "extract-selector-regex")) {
+
+      // simple extract
+      d = processAdd(chain,
+          doc(f("id", "1111"),
+              f("source1_s", "Always Flashman.", "Flashman. Noone else.")));
+      assertNotNull(chain, d);
+      assertEquals(chain, Arrays.asList("Flashman", "Flashman"), d.getFieldValues("dest_s"));
+
+      // append to existing values
+      d = processAdd(chain,
+          doc(f("id", "1111"),
+              field("dest_s", "orig1", "orig2"),
+              f("source1_s", "Flashman.  And, scene.", "Contemporary Flashman. Yeesh.")));
+      assertNotNull(chain, d);
+      assertEquals(chain, Arrays.asList("orig1", "orig2", "Flashman", "Flashman"), d.getFieldValues("dest_s"));
+    }
+  }
+
+  public void testExtractFieldRegexReplaceAll() throws Exception {
+    SolrInputDocument d = processAdd("extract-regex-replaceall",
+        doc(f("id", "1111"),
+            f("foo_x2_s", "Infrequently Flashman.", "In the words of Flashman."),
+            f("foo_x3_x7_s", "Flashman. Whoa.")));
+
+    assertNotNull(d);
+    assertEquals(Arrays.asList("Flashman", "Flashman"), d.getFieldValues("foo_y2_s"));
+    assertEquals("Flashman", d.getFieldValue("foo_y3_y7_s"));
+  }
+
+  public void testExtractFieldRegexReplaceAllWithEntityType() throws Exception {
+    SolrInputDocument d = processAdd("extract-regex-replaceall-with-entity-type",
+        doc(f("id", "1111"),
+            f("foo_x2_s", "Infrequently Flashman.", "In the words of Flashman."),
+            f("foo_x3_x7_s", "Flashman. Whoa.")));
+
+    assertNotNull(d);
+    assertEquals(d.getFieldNames().toString(), Arrays.asList("Flashman", "Flashman"), d.getFieldValues("foo_person_y2_s"));
+    assertEquals(d.getFieldNames().toString(),"Flashman", d.getFieldValue("foo_person_y3_person_y7_s"));
+  }
+}
diff --git a/solr/licenses/opennlp-maxent-3.0.3.jar.sha1 b/solr/licenses/opennlp-maxent-3.0.3.jar.sha1
new file mode 100644
index 0000000000..c3c412f9df
--- /dev/null
+++ b/solr/licenses/opennlp-maxent-3.0.3.jar.sha1
@@ -0,0 +1 @@
+55e39e6b46e71f35229cdd6950e72d8cce3b5fd4
diff --git a/solr/licenses/opennlp-maxent-LICENSE-ASL.txt b/solr/licenses/opennlp-maxent-LICENSE-ASL.txt
new file mode 100644
index 0000000000..d645695673
--- /dev/null
+++ b/solr/licenses/opennlp-maxent-LICENSE-ASL.txt
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git a/solr/licenses/opennlp-maxent-NOTICE.txt b/solr/licenses/opennlp-maxent-NOTICE.txt
new file mode 100644
index 0000000000..9b97287ebd
--- /dev/null
+++ b/solr/licenses/opennlp-maxent-NOTICE.txt
@@ -0,0 +1,6 @@
+
+Apache OpenNLP Maxent
+Copyright 2013 The Apache Software Foundation
+
+This product includes software developed at
+The Apache Software Foundation (http://www.apache.org/).
diff --git a/solr/licenses/opennlp-tools-1.8.3.jar.sha1 b/solr/licenses/opennlp-tools-1.8.3.jar.sha1
new file mode 100644
index 0000000000..c6a7549103
--- /dev/null
+++ b/solr/licenses/opennlp-tools-1.8.3.jar.sha1
@@ -0,0 +1 @@
+3ce7c9056048f55478d983248cf18c7e02b1d072
diff --git a/solr/licenses/opennlp-tools-LICENSE-ASL.txt b/solr/licenses/opennlp-tools-LICENSE-ASL.txt
new file mode 100644
index 0000000000..d645695673
--- /dev/null
+++ b/solr/licenses/opennlp-tools-LICENSE-ASL.txt
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git a/solr/licenses/opennlp-tools-NOTICE.txt b/solr/licenses/opennlp-tools-NOTICE.txt
new file mode 100644
index 0000000000..68a08dc4d1
--- /dev/null
+++ b/solr/licenses/opennlp-tools-NOTICE.txt
@@ -0,0 +1,6 @@
+
+Apache OpenNLP Tools
+Copyright 2015 The Apache Software Foundation
+
+This product includes software developed at
+The Apache Software Foundation (http://www.apache.org/).
diff --git a/solr/solr-ref-guide/src/filter-descriptions.adoc b/solr/solr-ref-guide/src/filter-descriptions.adoc
index b8ab6de8e6..09dd0f61d0 100644
--- a/solr/solr-ref-guide/src/filter-descriptions.adoc
+++ b/solr/solr-ref-guide/src/filter-descriptions.adoc
@@ -1576,6 +1576,38 @@ This filter adds the token's type, as an encoded byte sequence, as its payload.
 
 *Out:* "Pay"[<ALPHANUM>], "Bob's"[<APOSTROPHE>], "I.O.U."[<ACRONYM>]
 
+== Type As Synonym Filter
+
+This filter adds the token's type, as a token at the same position as the token, optionally with a configurable prefix prepended.
+
+*Factory class:* `solr.TypeAsSynonymFilterFactory`
+
+*Arguments:*
+
+`prefix`:: (optional) The prefix to prepend to the token's type.
+
+*Examples:*
+
+With the example below, each token's type will be emitted verbatim at the same position:
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.StandardTokenizerFactory"/>
+  <filter class="solr.TypeAsSynonymFilterFactory"/>
+</analyzer>
+----
+
+With the example below, for a token "example.com" with type `<URL>`, the token emitted at the same position will be "\_type_<URL>":
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.UAX29URLEmailTokenizerFactory"/>
+  <filter class="solr.TypeAsSynonymFilterFactory" prefix="_type_"/>
+</analyzer>
+----
+
 == Type Token Filter
 
 This filter blacklists or whitelists a specified list of token types, assuming the tokens have type metadata associated with them. For example, the <<tokenizers.adoc#uax29-url-email-tokenizer,UAX29 URL Email Tokenizer>> emits "<URL>" and "<EMAIL>" typed tokens, as well as other types. This filter would allow you to pull out only e-mail addresses from text as tokens, if you wish.
diff --git a/solr/solr-ref-guide/src/language-analysis.adoc b/solr/solr-ref-guide/src/language-analysis.adoc
index 8e6a214809..4b391339b1 100644
--- a/solr/solr-ref-guide/src/language-analysis.adoc
+++ b/solr/solr-ref-guide/src/language-analysis.adoc
@@ -355,6 +355,216 @@ This can increase recall by causing more matches. On the other hand, it can redu
 </analyzer>
 ----
 
+== OpenNLP Integration
+
+The `lucene/analysis/opennlp` module provides OpenNLP integration via several analysis components: a tokenizer, a part-of-speech tagging filter, a phrase chunking filter, and a lemmatization filter.  In addition to these analysis components, Solr also provides an update request processor to extract named entities - see <<update-request-processors.adoc#update-processor-factories-that-can-be-loaded-as-plugins,Update Processor Factories That Can Be Loaded as Plugins>>.
+
+NOTE: The <<OpenNLP Tokenizer>> must be used with all other OpenNLP analysis components, for two reasons: first, the OpenNLP Tokenizer detects and marks the sentence boundaries required by all the OpenNLP filters; and second, since the pre-trained OpenNLP models used by these filters were trained using the corresponding language-specific sentence-detection/tokenization models, the same tokenization, using the same models, must be used at runtime for optimal performance.
+
+See `solr/contrib/analysis-extras/README.txt` for information on which jars you need to add to your `SOLR_HOME/lib`.
+
+=== OpenNLP Tokenizer
+
+The OpenNLP Tokenizer takes two language-specific binary model files as parameters: a sentence detector model and a tokenizer model.  The last token in each sentence is flagged, so that following OpenNLP-based filters can use this information to apply operations to tokens one sentence at a time. See the http://opennlp.apache.org/models.html[OpenNLP website] for information on downloading pre-trained models.
+
+*Factory class:* `solr.OpenNLPTokenizerFactory`
+
+*Arguments:*
+
+`sentenceModel`:: (required) The path of a language-specific OpenNLP sentence detection model file. This path may be an absolute path, or path relative to the Solr config directory.
+
+`tokenizerModel`:: (required) The path of a language-specific OpenNLP tokenization model file. This path may be an absolute path, or path relative to the Solr config directory.
+
+*Example:*
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+</analyzer>
+----
+
+=== OpenNLP Part-Of-Speech Filter
+
+This filter sets each token's type attribute to the part of speech (POS) assigned by the configured model. See the http://opennlp.apache.org/models.html[OpenNLP website] for information on downloading pre-trained models.
+
+NOTE: Lucene currently does not index token types, so if you want to keep this information, you have to preserve it either in a payload or as a synonym; see the examples below.
+
+*Factory class:* `solr.OpenNLPPOSFilterFactory`
+
+*Arguments:*
+
+`posTaggerModel`:: (required) The path of a language-specific OpenNLP POS tagger model file. This path may be an absolute path, or path relative to the Solr config directory.
+
+`filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="filename"
+
+*Examples:*
+
+The OpenNLP tokenizer will tokenize punctuation, which is useful for following token filters, but ordinarily you don't want to include punctuation in your index, so the `TypeTokenFilter` (<<filter-descriptions.adoc#type-token-filter,described here>>) is included in the examples below, with `stop.pos.txt` containing the following:
+
+.stop.pos.txt
+[source,text]
+----
+#
+$
+''
+``
+,
+-LRB-
+-RRB-
+:
+.
+----
+
+Index the POS for each token as a payload:
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.TypeAsPayloadFilterFactory"/>
+  <filter class="solr.TypeTokenFilterFactory" types="stop.pos.txt"/>
+</analyzer>
+----
+
+Index the POS for each token as a synonym, after prefixing the POS with "@" (see the <<filter-descriptions.adoc#type-as-synonym-filter,TypeAsSynonymFilter description>>):
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.TypeAsSynonymFilterFactory" prefix="@"/>
+  <filter class="solr.TypeTokenFilterFactory" types="stop.pos.txt"/>
+</analyzer>
+----
+
+Only index nouns - the `keep.pos.txt` file contains lines `NN`, `NNS`, `NNP` and `NNPS`:
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.TypeTokenFilterFactory" types="keep.pos.txt" useWhitelist="true"/>
+</analyzer>
+----
+
+=== OpenNLP Phrase Chunking Filter
+
+This filter sets each token's type attribute based on the output of an OpenNLP phrase chunking model.  The chunk labels replace the POS tags that previously were in each token's type attribute. See the http://opennlp.apache.org/models.html[OpenNLP website] for information on downloading pre-trained models.
+
+Prerequisite: the <<OpenNLP Tokenizer>> and the <<OpenNLP Part-Of-Speech Filter>> must precede this filter.
+
+NOTE: Lucene currently does not index token types, so if you want to keep this information, you have to preserve it either in a payload or as a synonym; see the examples below.
+
+*Factory class:* `solr.OpenNLPChunkerFilter`
+
+*Arguments:*
+
+`chunkerModel`:: (required) The path of a language-specific OpenNLP phrase chunker model file. This path may be an absolute path, or path relative to the Solr config directory.
+
+*Examples*:
+
+Index the phrase chunk label for each token as a payload:
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.OpenNLPChunkerFactory" chunkerModel="en-chunker.bin"/>
+  <filter class="solr.TypeAsPayloadFilterFactory"/>
+</analyzer>
+----
+
+Index the phrase chunk label for each token as a synonym, after prefixing it with "#" (see the <<filter-descriptions.adoc#type-as-synonym-filter,TypeAsSynonymFilter description>>):
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.OpenNLPChunkerFactory" chunkerModel="en-chunker.bin"/>
+  <filter class="solr.TypeAsSynonymFilterFactory" prefix="#"/>
+</analyzer>
+----
+
+=== OpenNLP Lemmatizer Filter
+
+This filter replaces the text of each token with its lemma. Both a dictionary-based lemmatizer and a model-based lemmatizer are supported. If both are configured, the dictionary-based lemmatizer is tried first, and then the model-based lemmatizer is consulted for out-of-vocabulary tokens. See the http://opennlp.apache.org/models.html[OpenNLP website] for information on downloading pre-trained models.
+
+*Factory class:* `solr.OpenNLPLemmatizerFilter`
+
+*Arguments:*
+
+Either `dictionary` or `lemmatizerModel` must be provided, and both may be provided - see the examples below:
+
+`dictionary`:: (optional) The path of a lemmatization dictionary file. This path may be an absolute path, or path relative to the Solr config directory. The dictionary file must be encoded as UTF-8, with one entry per line, in the form `word[tab]lemma[tab]part-of-speech`, e.g. `wrote[tab]write[tab]VBD`.
+
+`lemmatizerModel`:: (optional) The path of a language-specific OpenNLP lemmatizer model file. This path may be an absolute path, or path relative to the Solr config directory.
+
+*Examples:*
+
+Perform dictionary-based lemmatization, and fall back to model-based lemmatization for out-of-vocabulary tokens (see the <<OpenNLP Part-Of-Speech Filter>> section above for information about using `TypeTokenFilter` to avoid indexing punctuation):
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.OpenNLPLemmatizerFilterFactory"
+          dictionary="lemmas.txt"
+          lemmatizerModel="en-lemmatizer.bin"/>
+  <filter class="solr.TypeTokenFilterFactory" types="stop.pos.txt"/>
+</analyzer>
+----
+
+Perform dictionary-based lemmatization only:
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.OpenNLPLemmatizerFilterFactory" dictionary="lemmas.txt"/>
+  <filter class="solr.TypeTokenFilterFactory" types="stop.pos.txt"/>
+</analyzer>
+----
+
+Perform model-based lemmatization only, preserving the original token and emitting the lemma as a synonym (see the <<KeywordRepeatFilterFactory,KeywordRepeatFilterFactory description>>)):
+
+[source,xml]
+----
+<analyzer>
+  <tokenizer class="solr.OpenNLPTokenizerFactory"
+             sentenceModel="en-sent.bin"
+             tokenizerModel="en-tokenizer.bin"/>
+  <filter class="solr.OpenNLPPOSFilterFactory" posTaggerModel="en-pos-maxent.bin"/>
+  <filter class="solr.KeywordRepeatFilterFactory"/>
+  <filter class="solr.OpenNLPLemmatizerFilterFactory" lemmatizerModel="en-lemmatizer.bin"/>
+  <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
+  <filter class="solr.TypeTokenFilterFactory" types="stop.pos.txt"/>
+</analyzer>
+----
+
 == Language-Specific Factories
 
 These factories are each designed to work with specific languages. The languages covered here are:
diff --git a/solr/solr-ref-guide/src/tokenizers.adoc b/solr/solr-ref-guide/src/tokenizers.adoc
index 89dad344a1..c2fcf60579 100644
--- a/solr/solr-ref-guide/src/tokenizers.adoc
+++ b/solr/solr-ref-guide/src/tokenizers.adoc
@@ -502,3 +502,7 @@ Specifies how to define whitespace for the purpose of tokenization. Valid values
 *In:* "To be, or what?"
 
 *Out:* "To", "be,", "or", "what?"
+
+== OpenNLP Tokenizer and OpenNLP Filters
+
+See <<language-analysis.adoc#opennlp-integration,OpenNLP Integration>> for information about using the OpenNLP Tokenizer, along with information about available OpenNLP token filters.
\ No newline at end of file
diff --git a/solr/solr-ref-guide/src/update-request-processors.adoc b/solr/solr-ref-guide/src/update-request-processors.adoc
index 09c49d1684..921677a0b5 100644
--- a/solr/solr-ref-guide/src/update-request-processors.adoc
+++ b/solr/solr-ref-guide/src/update-request-processors.adoc
@@ -275,6 +275,8 @@ What follows are brief descriptions of the currently available update request pr
 
 {solr-javadocs}/solr-core/org/apache/solr/update/processor/IgnoreCommitOptimizeUpdateProcessorFactory.html[IgnoreCommitOptimizeUpdateProcessorFactory]:: Allows you to ignore commit and/or optimize requests from client applications when running in SolrCloud mode, for more information, see: Shards and Indexing Data in SolrCloud
 
+{solr-javadocs}/solr-core/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactory.html[CloneFieldUpdateProcessorFactory]:: Clones the values found in any matching _source_ field into the configured _dest_ field.
+
 {solr-javadocs}/solr-core/org/apache/solr/update/processor/RegexpBoostProcessorFactory.html[RegexpBoostProcessorFactory]:: A processor which will match content of "inputField" against regular expressions found in "boostFilename", and if it matches will return the corresponding boost value from the file and output this to "boostField" as a double value.
 
 {solr-javadocs}/solr-core/org/apache/solr/update/processor/SignatureUpdateProcessorFactory.html[SignatureUpdateProcessorFactory]:: Uses a defined set of fields to generate a hash "signature" for the document. Useful for only indexing one copy of "similar" documents.
@@ -351,6 +353,10 @@ The {solr-javadocs}/solr-uima/index.html[`uima`] contrib provides::
 
 {solr-javadocs}/solr-uima/org/apache/solr/uima/processor/UIMAUpdateRequestProcessorFactory.html[UIMAUpdateRequestProcessorFactory]::: Update document(s) to be indexed with UIMA extracted information.
 
+The {solr-javadocs}/solr-analysis-extras/index.html[`analysis-extras`] contrib provides::
+
+{solr-javadocs}/solr-analysis-extras/org/apache/solr/update/processor/OpenNLPExtractNamedEntitiesProcessorFactory.html[OpenNLPExtractNamedEntitiesProcessorFactory]::: Update document(s) to be indexed with named entities extracted using an OpenNLP NER model.
+
 === Update Processor Factories You Should _Not_ Modify or Remove
 
 These are listed for completeness, but are part of the Solr infrastructure, particularly SolrCloud. Other than insuring you do _not_ remove them when modifying the update request handlers (or any copies you make), you will rarely, if ever, need to change these.
diff --git a/solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase.java b/solr/test-framework/src/java/org/apache/solr/update/processor/UpdateProcessorTestBase.java
similarity index 100%
rename from solr/core/src/test/org/apache/solr/update/processor/UpdateProcessorTestBase.java
rename to solr/test-framework/src/java/org/apache/solr/update/processor/UpdateProcessorTestBase.java
