diff --git build.xml build.xml
index 262e480..4b3ab6e 100644
--- build.xml
+++ build.xml
@@ -27,6 +27,7 @@
       </subant>
     </sequential>
   </target>
+
   <target name="javadocs" description="Generate Lucene and Solr javadocs">
     <sequential>
       <subant target="javadocs" inheritall="false" failonerror="true">
@@ -36,6 +37,7 @@
       </subant>
     </sequential>
   </target>
+
   <target name="validate" description="Validate dependencies, licenses, etc.">
     <sequential><subant target="validate" inheritall="false" failonerror="true">
         <fileset dir="lucene" includes="build.xml" />
@@ -43,6 +45,7 @@
         <fileset dir="solr" includes="build.xml" />
       </subant></sequential>
   </target>
+
   <target name="compile" description="Compile Lucene and Solr">
     <sequential>
 
diff --git lucene/build.xml lucene/build.xml
index 1b8c569..d42f91b 100644
--- lucene/build.xml
+++ lucene/build.xml
@@ -44,6 +44,7 @@
       <propertyset refid="uptodate.and.compiled.properties"/>
     </ant>
   </target>
+
   <target name="test" depends="test-core, test-contrib, test-backwards"
           description="Runs all unit tests (core, contrib and back-compat)"
   />
@@ -172,6 +173,11 @@
     </clover-report>
   </target>
 
+  <!-- Validate once from top-level. -->
+  <target name="validate" depends="validate-lucene">
+    <license-check-macro dir="${basedir}" />
+  </target>
+
   <!-- ================================================================== -->
   <!-- D O C U M E N T A T I O N                                          -->
   <!-- ================================================================== -->
diff --git lucene/common-build.xml lucene/common-build.xml
index ce77fd8..f733335 100644
--- lucene/common-build.xml
+++ lucene/common-build.xml
@@ -204,16 +204,17 @@
   <property name="clover.db.dir" location="${common.dir}/build/test/clover/db"/>
   <property name="clover.report.dir" location="${common.dir}/build/test/clover/reports"/>
 
-    <available
+  <available
             property="clover.present"
             classname="com.cenqua.clover.tasks.CloverReportTask"
-            />
-   <condition property="clover.enabled">
-       <and>
-           <isset property="run.clover"/>
-           <isset property="clover.present"/>
-       </and>
-   </condition>
+  />
+   
+  <condition property="clover.enabled">
+    <and>
+     <isset property="run.clover"/>
+     <isset property="clover.present"/>
+    </and>
+  </condition>
 
   <propertyset id="uptodate.and.compiled.properties" dynamic="true">
     <propertyref regex=".*\.uptodate$$"/>
@@ -225,6 +226,9 @@
               excludes="**/pom.xml,**/*.iml,site/build/"
   />
 
+  <!-- Import custom ANT tasks. -->
+  <import file="${common.dir}/tools/custom-tasks.xml" />
+
   <target name="clean"
     description="Removes contents of build and dist directories">
     <delete dir="${build.dir}"/>
@@ -820,12 +824,14 @@
     <attribute name="destdir"/>
     <attribute name="javac.source" default="${javac.source}"/>
     <attribute name="javac.target" default="${javac.target}"/>
+    <attribute name="includeantruntime" default="${javac.includeAntRuntime}" />
+
     <element name="nested" implicit="yes" optional="yes"/>
 
     <sequential>
       <mkdir dir="@{destdir}"/>
       <javac
-        includeAntRuntime="${javac.includeAntRuntime}"
+        includeAntRuntime="@{includeantruntime}"
         encoding="${build.encoding}"
         srcdir="@{srcdir}"
         destdir="@{destdir}"
@@ -956,17 +962,6 @@
   <!-- VALIDATION work -->
 
   <target name="check-legal-lucene" depends="compile-tools">
-    <java classname="org.apache.lucene.validation.DependencyChecker" failonerror="true" fork="true">
-      <classpath>
-        <path refid="tools.runtime.classpath" />
-      </classpath>
-      <!-- TODO: it might be better to just automatically find all directories that contain jar files, but that could take a
-       long time.  This should be faster, but we could miss a directory
-       -->
-      <!-- Lucene  -->
-      <arg value="-c" />
-      <arg value="${common.dir}/lib" />
-    </java>
   </target>
 
   <target name="check-legal" depends="check-legal-lucene"/>
@@ -974,7 +969,8 @@
   <target name="validate-lucene" depends="check-legal-lucene" unless="validated-lucene"/>
 
   <!-- Generic placeholder target for if we add other validation tasks -->
-  <target name="validate" depends="validate-lucene"/>
+  <target name="validate" depends="validate-lucene">
+  </target>
 
   <property name="svn.export.dir" location="${build.dir}/svn-export"/>
   <macrodef name="svn-export-source"
@@ -1096,5 +1092,4 @@
       </scp>
     </sequential>
   </macrodef>
-
 </project>
diff --git lucene/contrib/misc/ant_lib/cpptasks-NOTICE.txt lucene/contrib/misc/ant_lib/cpptasks-NOTICE.txt
new file mode 100644
index 0000000..f2e411f
--- /dev/null
+++ lucene/contrib/misc/ant_lib/cpptasks-NOTICE.txt
@@ -0,0 +1,4 @@
+cpptasks for Apache Ant
+
+This product includes software developed by
+The Apache Software Foundation (http://www.apache.org/).
diff --git lucene/lib/ant-junit-NOTICE.txt lucene/lib/ant-junit-NOTICE.txt
new file mode 100644
index 0000000..203ed03
--- /dev/null
+++ lucene/lib/ant-junit-NOTICE.txt
@@ -0,0 +1,6 @@
+Apache Ant
+Copyright 1999-2008 The Apache Software Foundation
+
+This product includes software developed by
+The Apache Software Foundation (http://www.apache.org/).
+
diff --git lucene/tools/build.xml lucene/tools/build.xml
index 2b3c2bf..ab07276 100644
--- lucene/tools/build.xml
+++ lucene/tools/build.xml
@@ -31,9 +31,13 @@
       classpath reference when compiling, and to not attempt to copy
       non-existent resource files to the build output directory.
    -->
-  <target name="compile-core" depends="init" description="Compiles tools classes">
-    <compile srcdir="${src.dir}" destdir="${build.dir}/classes/java"/>
+  <target name="compile-core" depends="init" description="Compiles tools classes.">
+    <compile srcdir="${src.dir}" destdir="${build.dir}/classes/java" 
+      includeantruntime="true" />
+    <copy todir="${build.dir}/classes/java">
+      <fileset dir="${src.dir}" excludes="**/*.java" />
+    </copy>
   </target>
-  
+
   <target name="javadocs"/> <!-- to make common-build.xml happy -->
 </project>
diff --git lucene/tools/custom-tasks.xml lucene/tools/custom-tasks.xml
new file mode 100644
index 0000000..d17bd30
--- /dev/null
+++ lucene/tools/custom-tasks.xml
@@ -0,0 +1,58 @@
+
+<project name="custom-tasks">
+  <description>
+    This file is designed for importing into a main build file, and not intended
+    for standalone use.
+  </description>
+
+  <macrodef name="license-check-macro">
+    <attribute name="dir" />
+    <element name="additional-excludes" optional="true" />
+    <element name="additional-filters"  optional="true" />
+    <sequential>
+      <!-- LICENSE and NOTICE verification macro. -->
+      <dirname file="${ant.file.custom-tasks}" property="custom-tasks.dir"/>
+      <taskdef resource="lucene-solr.antlib.xml">
+        <classpath>
+          <pathelement location="${custom-tasks.dir}/../build/tools/classes/java" />
+        </classpath>
+      </taskdef>
+
+      <echo>License check under: @{dir}</echo>
+      <licenses>
+        <fileset dir="@{dir}">
+          <include name="**/*.jar" />
+          <!-- Speed up scanning a bit. -->
+          <exclude name="**/.git/**" />
+          <exclude name="**/.svn/**" />
+          <exclude name="**/bin/**" />
+          <exclude name="**/build/**" />
+          <exclude name="**/src/**" />
+          <additional-excludes />
+        </fileset>
+
+        <licenseMapper>
+          <filtermapper id="license-mapper-defaults">
+            <!-- Normalize input paths. -->
+            <replacestring from="\" to="/" />
+            <replaceregex pattern="\.jar$" replace="" flags="gi" />
+    
+            <!-- Some typical snapshot/minimalized JAR suffixes. -->
+            <replaceregex pattern="-min$" replace="" flags="gi" />
+            <replaceregex pattern="SNAPSHOT$" replace="" flags="gi" />
+
+            <!-- Non-typical version patterns. -->
+            <additional-filters />
+            <replaceregex pattern="/xercesImpl([^/]+)$" replace="/xercesImpl" flags="gi" />
+            <replaceregex pattern="/commons-csv-([^/]+)$" replace="/commons-csv" flags="gi" />
+            <replaceregex pattern="/(bcmail|bcprov)-([^/]+)$" replace="/\1" flags="gi" />
+            <replaceregex pattern="/slf4j-([^/]+)$" replace="/slf4j" flags="gi" />
+    
+            <!-- Typical version patterns. -->
+            <replaceregex pattern="\-(r)?([0-9\-\_\.])+(b(eta)?([0-9\-\.])*)?$" replace="" flags="gi" />
+          </filtermapper>
+        </licenseMapper>
+      </licenses>
+    </sequential>
+  </macrodef>
+</project>
\ No newline at end of file
diff --git lucene/tools/src/java/lucene-solr.antlib.xml lucene/tools/src/java/lucene-solr.antlib.xml
new file mode 100644
index 0000000..21ad345
--- /dev/null
+++ lucene/tools/src/java/lucene-solr.antlib.xml
@@ -0,0 +1,5 @@
+<antlib>
+    <taskdef 
+        name="licenses" 
+        classname="org.apache.lucene.validation.LicenseCheckTask" />
+</antlib> 
\ No newline at end of file
diff --git lucene/tools/src/java/org/apache/lucene/validation/DependencyChecker.java lucene/tools/src/java/org/apache/lucene/validation/DependencyChecker.java
deleted file mode 100644
index a15de11..0000000
--- lucene/tools/src/java/org/apache/lucene/validation/DependencyChecker.java
+++ /dev/null
@@ -1,282 +0,0 @@
-package org.apache.lucene.validation;
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import java.io.File;
-import java.io.FileFilter;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-/**
- *
- *
- **/
-public class DependencyChecker {
-  private static Set<String> excludes = new HashSet<String>();
-  private static final String LINE_SEPARATOR = System.getProperty("line.separator");
-
-  static {
-    //Collections.addAll(excludes, );
-  }
-
-  public static void main(String[] args) throws IOException {
-    String dumpFile = null;
-    List<String> dirs = new ArrayList<String>();
-    for (int i = 0; i < args.length; i++) {
-      if (args[i].equalsIgnoreCase("--dump") || args[i].equalsIgnoreCase("-d")) {
-        dumpFile = args[++i];
-
-      } else if (args[i].equalsIgnoreCase("--check") || args[i].equalsIgnoreCase("-c")) {
-        dirs.add(args[++i]);
-      }
-    }
-
-
-    FileWriter writer = null;
-    boolean dump = false;
-    if (dumpFile != null) {
-      File out = new File(dumpFile);
-      System.out.println("Dumping to " + out);
-      writer = new FileWriter(out);
-      dump = true;
-    }
-    //TODO: put in NOTICE checks
-    for (String checkDir : dirs) {
-      File dir = new File(checkDir);
-      if (dir.exists()) {
-        System.out.println("----------------------");
-        System.out.println("Starting on dir: " + dir);
-        int numFailed = 0;
-        File[] list = dir.listFiles();
-        File[] licFiles = dir.listFiles(new FileFilter() {
-          public boolean accept(File file) {
-            return file.getName().indexOf("-LICENSE") != -1 && file.getName().endsWith(".txt");//check for a consistent end, so that we aren't fooled by emacs ~ files or other temp files
-          }
-        });
-        File[] noticeFiles = dir.listFiles(new FileFilter() {
-          public boolean accept(File file) {
-            return file.getName().indexOf("-NOTICE") != -1 && file.getName().endsWith(".txt");
-          }
-        });
-        File[] jarFiles = dir.listFiles(new FileFilter() {
-          public boolean accept(File file) {
-            return file.getName().endsWith(".jar");
-          }
-        });
-        if (licFiles.length == 0 && jarFiles.length != 0) {
-          System.out.println("No license files found: " + dir);
-          numFailed++;
-        }
-        if (jarFiles.length != licFiles.length) {
-          System.out.println("WARNING: There are missing LICENSE files in: " + dir + " Jar file count: " + jarFiles.length + " License Count: " + licFiles.length);
-          printDiffs(jarFiles, licFiles);
-          numFailed++;
-        }
-        if (jarFiles.length != noticeFiles.length) {
-          System.out.println("WARNING: There may be missing NOTICE files in: " + dir + ".  Note, not all files require a NOTICE. Jar file count: " + jarFiles.length + " Notice Count: " + noticeFiles.length);
-          //printDiffs(jarFiles, noticeFiles);
-        }
-        Map<String, UpdateableInt> licenseNames = new HashMap<String, UpdateableInt>();
-        for (int i = 0; i < licFiles.length; i++) {
-          licenseNames.put(licFiles[i].getName(), new UpdateableInt());
-        }
-        Map<String, UpdateableInt> noticeNames = new HashMap<String, UpdateableInt>();
-        for (int i = 0; i < noticeFiles.length; i++) {
-          noticeNames.put(noticeFiles[i].getName(), new UpdateableInt());
-        }
-
-
-        for (int i = 0; i < list.length; i++) {
-          File file = list[i];
-          String fileName = file.getName();
-          if (fileName.endsWith(".jar") && excludes.contains(fileName) == false) {
-            File licFile = getLicenseFile(file, licenseNames);
-            if (licFile != null && licFile.exists()) {
-              String licName = licFile.getName();
-              LicenseType[] types = getLicenseTypes(licName);
-              if (types != null && types.length > 0) {
-                for (int j = 0; j < types.length; j++) {
-                  LicenseType type = types[j];
-                  if (dump == true) {
-                    writer.write(file.getName() + "," + type.getDisplay() + LINE_SEPARATOR);
-                  }
-                  if (type.isNoticeRequired()) {
-                    File noticeFile = getNoticeFile(file, noticeNames);
-                    if (noticeFile != null && noticeFile.exists()) {
-
-                    } else {
-                      System.out.println("!!!!!! Missing NOTICE file for " + file + " and license type: " + type.getDisplay());
-                      if (dump) {
-                        writer.write("Missing NOTICE file for " + file + LINE_SEPARATOR);
-                      }
-                      numFailed++;
-                    }
-                  }
-                }
-              } else {
-                System.out.println("!!!!!! Couldn't determine license type for file: " + file);
-                if (dump == true) {
-                  writer.write("Invalid license for file: " + file + LINE_SEPARATOR);
-                }
-                numFailed++;
-              }
-            } else {
-              System.out.println("!!!!!!! Couldn't get license file for " + file);
-              if (dump == true) {
-                writer.write("Couldn't get license file for " + file + LINE_SEPARATOR);
-              }
-              numFailed++;
-            }
-          }
-        }
-        if (dump == true) {
-          writer.write(LINE_SEPARATOR + LINE_SEPARATOR);
-          writer.write("Other Licenses (installer, javascript, etc." + LINE_SEPARATOR);
-        }
-
-        if (dump == true) {
-          for (Map.Entry<String, UpdateableInt> entry : licenseNames.entrySet()) {
-            if (entry.getValue().theInt == 0) {
-              LicenseType[] types = getLicenseTypes(entry.getKey());
-              if (types != null && types.length > 0) {
-                for (int i = 0; i < types.length; i++) {
-                  writer.write(entry.getKey() + "," + types[i].getDisplay() + LINE_SEPARATOR);
-                }
-              } else {
-                System.out.println("Couldn't determine license for: " + entry.getKey());
-              }
-            }
-          }
-        }
-        if (writer != null) {
-          writer.close();
-        }
-        if (numFailed > 0) {
-          System.out.println("At least one file does not have a license, or it's license name is not in the proper format.  See the logs.");
-          System.exit(-1);
-        } else {
-          System.out.println("Found a license for every file in " + dir);
-        }
-      } else {
-        System.out.println("Could not find directory:" + dir);
-      }
-    }
-  }
-
-
-  /**
-   * Sort the two lists and then print them out for visual comparison
-   *
-   * @param left
-   * @param right
-   */
-
-  private static void printDiffs(File[] left, File[] right) {
-    Arrays.sort(left);
-    Arrays.sort(right);
-    System.out.println("Left\t\t\tRight");
-    System.out.println("----------------");
-    StringBuilder bldr = new StringBuilder();
-    int i = 0;
-    for (; i < left.length; i++) {
-      bldr.append(left[i]).append("\t\t\t");
-      if (i < right.length) {
-        bldr.append(right[i]);
-      }
-      bldr.append(LINE_SEPARATOR);
-    }
-    if (i < right.length) {
-      for (; i < right.length; i++) {
-        bldr.append("--- N/A ---\t\t\t").append(right[i]).append(LINE_SEPARATOR);
-      }
-    }
-    System.out.println(bldr.toString());
-    System.out.println("----------------");
-  }
-
-  private static LicenseType[] getLicenseTypes(String licName) {
-    LicenseType[] result = new LicenseType[0];
-    int idx = licName.lastIndexOf("-");
-    if (idx != -1) {
-      String licAbbrev = licName.substring(idx + 1, licName.length() - ".txt".length());
-      String[] lics = licAbbrev.split("__");
-      result = new LicenseType[lics.length];
-      for (int j = 0; j < lics.length; j++) {
-        try {
-          result[j] = LicenseType.valueOf(lics[j].toUpperCase());
-        } catch (IllegalArgumentException e) {
-          System.out.println("Invalid license: " + lics[j].toUpperCase() + " for " + licName);
-        }
-      }
-    }
-    return result;
-  }
-
-  private static File getLicenseFile(File file, Map<String, UpdateableInt> licenseNames) {
-    File result = null;
-    String filename = file.getName();
-    int length = 0;
-    for (String licName : licenseNames.keySet()) {
-      String prefix = licName.substring(0, licName.indexOf("-LICENSE"));
-      String name = null;
-      //System.out.println("prefix: " + prefix + " lic name: " + licName);
-      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {
-        result = new File(file.getParentFile(), licName);
-        UpdateableInt ui = licenseNames.get(licName);
-        ui.theInt++;
-      } else {
-      }
-
-    }
-    //System.out.println("License File: " + result + " for file: " + file);
-
-    return result;
-  }
-
-  private static File getNoticeFile(File file, Map<String, UpdateableInt> noticeNames) {
-    File result = null;
-    String filename = file.getName();
-    int length = 0;
-    for (String noticeName : noticeNames.keySet()) {
-      String prefix = noticeName.substring(0, noticeName.indexOf("-NOTICE"));
-      String name = null;
-      //System.out.println("prefix: " + prefix + " lic name: " + licName);
-      if (filename.toLowerCase().startsWith(prefix.toLowerCase())) {
-        result = new File(file.getParentFile(), noticeName);
-        UpdateableInt ui = noticeNames.get(noticeName);
-        ui.theInt++;
-      } else {
-      }
-
-    }
-    //System.out.println("License File: " + result + " for file: " + file);
-
-    return result;
-  }
-
-}
-
-class UpdateableInt {
-  public int theInt;
-}
diff --git lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask.java lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask.java
new file mode 100644
index 0000000..f743e50
--- /dev/null
+++ lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask.java
@@ -0,0 +1,179 @@
+package org.apache.lucene.validation;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+
+import org.apache.tools.ant.BuildException;
+import org.apache.tools.ant.Project;
+import org.apache.tools.ant.Task;
+import org.apache.tools.ant.types.Mapper;
+import org.apache.tools.ant.types.Resource;
+import org.apache.tools.ant.types.ResourceCollection;
+import org.apache.tools.ant.types.resources.FileResource;
+import org.apache.tools.ant.types.resources.Resources;
+import org.apache.tools.ant.util.FileNameMapper;
+
+/**
+ * An ANT task that verifies if JAR file have associated <tt>LICENSE</tt>
+ * and <tt>NOTICE</tt> files. 
+ */
+public class LicenseCheckTask extends Task {
+  /**
+   * All JAR files to check.
+   */
+  private Resources jarResources = new Resources();
+
+  /**
+   * License file mapper.
+   */
+  private FileNameMapper licenseMapper;
+
+  /**
+   * A logging level associated with verbose logging.
+   */
+  private int verboseLevel = Project.MSG_VERBOSE;
+  
+  /**
+   * Failure flag.
+   */
+  private boolean failures;
+
+  /**
+   * Adds a set of JAR resources to check.
+   */
+  public void add(ResourceCollection rc) {
+    jarResources.add(rc);
+  }
+  
+  /**
+   * Adds a license mapper.
+   */
+  public void addConfiguredLicenseMapper(Mapper mapper) {
+    if (licenseMapper != null) {
+      throw new BuildException("Only one license mapper is allowed.");
+    }
+    this.licenseMapper = mapper.getImplementation();
+  }
+
+  public void setVerbose(boolean verbose) {
+    verboseLevel = (verbose ? Project.MSG_INFO : Project.MSG_VERBOSE);
+  }
+
+  /**
+   * Execute the task.
+   */
+  @Override
+  public void execute() throws BuildException {
+    if (licenseMapper == null) {
+      throw new BuildException("Expected an embedded <licenseMapper>.");
+    }
+
+    jarResources.setProject(getProject());
+    processJars();
+
+    if (failures) {
+      throw new BuildException("License check failed. Check the logs.");
+    }
+  }
+
+  /**
+   * Process all JARs.
+   */
+  private void processJars() {
+    log("Starting scan.", verboseLevel);
+    long start = System.currentTimeMillis();
+
+    @SuppressWarnings("unchecked")
+    Iterator<Resource> iter = (Iterator<Resource>) jarResources.iterator();
+    int checked = 0;
+    int errors = 0;
+    while (iter.hasNext()) {
+      final Resource r = iter.next();
+      if (!r.isExists()) { 
+        throw new BuildException("JAR resource does not exist: " + r.getName());
+      }
+      if (!(r instanceof FileResource)) {
+        throw new BuildException("Only filesystem resource are supported: " + r.getName()
+            + ", was: " + r.getClass().getName());
+      }
+
+      File jarFile = ((FileResource) r).getFile();
+      if (!checkJarFile(jarFile)) {
+        errors++;
+      }
+      checked++;
+    }
+
+    log(String.format(Locale.ENGLISH, 
+        "Scanned %d JAR file(s) for licenses (in %.2fs.), %d error(s).",
+        checked, (System.currentTimeMillis() - start) / 1000.0, errors),
+        errors > 0 ? Project.MSG_ERR : Project.MSG_INFO);
+  }
+
+  /**
+   * Check a single JAR file.
+   */
+  private boolean checkJarFile(File jarFile) {
+    log("Scanning: " + jarFile.getPath(), verboseLevel);
+
+    // Get the expected license path base from the mapper and search for license files.
+    Map<File, LicenseType> foundLicenses = new LinkedHashMap<File, LicenseType>();
+    List<File> expectedLocations = new ArrayList<File>();
+outer:
+    for (String mappedPath : licenseMapper.mapFileName(jarFile.getPath())) {
+      for (LicenseType licenseType : LicenseType.values()) {
+        File licensePath = new File(mappedPath + licenseType.licenseFileSuffix());
+        if (licensePath.exists()) {
+          foundLicenses.put(licensePath, licenseType);
+          log(" FOUND " + licenseType.name() + " license at " + licensePath.getPath(), 
+              verboseLevel);
+          // We could continue scanning here to detect duplicate associations?
+          break outer;
+        } else {
+          expectedLocations.add(licensePath);
+        }
+      }
+    }
+
+    // Check for NOTICE files.
+    for (Map.Entry<File, LicenseType> e : foundLicenses.entrySet()) {
+      LicenseType license = e.getValue();
+      String licensePath = e.getKey().getAbsolutePath();
+      String baseName = licensePath.substring(
+          0, licensePath.length() - license.licenseFileSuffix().length());
+      File noticeFile = new File(baseName + license.noticeFileSuffix());
+
+      if (noticeFile.exists()) {
+        log(" FOUND NOTICE file at " + noticeFile.getAbsolutePath(), verboseLevel);
+      } else {
+        if (license.isNoticeRequired()) {
+            this.failures = true;
+            log("MISSING NOTICE for the license file:\n  "
+                + licensePath + "\n  Expected location below:\n  "
+                + noticeFile.getAbsolutePath(), Project.MSG_ERR);
+        }
+      }
+    }
+
+    // In case there is something missing, complain.
+    if (foundLicenses.isEmpty()) {
+      this.failures = true;
+      StringBuilder message = new StringBuilder();
+      message.append(
+          "MISSING LICENSE for the following file:\n  " + jarFile.getAbsolutePath()
+          + "\n  Expected locations below:\n");
+      for (File location : expectedLocations) {
+        message.append("  => ").append(location.getAbsolutePath()).append("\n");
+      }
+      log(message.toString(), Project.MSG_ERR);
+      return false;
+    }
+
+    return true;
+  }
+}
diff --git lucene/tools/src/java/org/apache/lucene/validation/LicenseType.java lucene/tools/src/java/org/apache/lucene/validation/LicenseType.java
index 61f7eb7..d0ae46d 100644
--- lucene/tools/src/java/org/apache/lucene/validation/LicenseType.java
+++ lucene/tools/src/java/org/apache/lucene/validation/LicenseType.java
@@ -23,7 +23,6 @@ package org.apache.lucene.validation;
  *
  **/
 public enum LicenseType {
-
   ASL("Apache Software License 2.0", true),
   BSD("Berkeley Software Distribution", true),
   BSD_LIKE("BSD like license", true),//BSD like just means someone has taken the BSD license and put in their name, copyright, or it's a very similar license.
@@ -35,14 +34,12 @@ public enum LicenseType {
   PD("Public Domain", false),
   //SUNBCLA("Sun Binary Code License Agreement"),
   SUN("Sun Open Source License", false),
-  FAKE("FAKE license - not needed", false)
-          ;
+  COMPOUND("Compound license (see NOTICE).", true),
+  FAKE("FAKE license - not needed", false);
 
   private String display;
-
   private boolean noticeRequired;
 
-
   LicenseType(String display, boolean noticeRequired) {
     this.display = display;
     this.noticeRequired = noticeRequired;
@@ -56,11 +53,24 @@ public enum LicenseType {
     return display;
   }
 
-
   public String toString() {
     return "LicenseType{" +
             "display='" + display + '\'' +
             '}';
   }
+
+  /**
+   * Expected license file suffix for a given license type.
+   */
+  public String licenseFileSuffix() {
+    return "-LICENSE-" + this.name() + ".txt";
+  }
+
+  /**
+   * Expected notice file suffix for a given license type.
+   */
+  public String noticeFileSuffix() {
+    return "-NOTICE.txt";
+  }
 }
 
diff --git modules/analysis/morfologik/lib/morfologik-polish-LICENSE-COMPOUND.txt modules/analysis/morfologik/lib/morfologik-polish-LICENSE-COMPOUND.txt
new file mode 100644
index 0000000..772cffe
--- /dev/null
+++ modules/analysis/morfologik/lib/morfologik-polish-LICENSE-COMPOUND.txt
@@ -0,0 +1,42 @@
+morfologik-polish, TERMS OF LICENCE
+
+This JAR contains and makes use of data from Polish ispell/myspell 
+dictionaries hosted at http://www.sjp.pl/slownik/en/ and is 
+licenced on the terms of (inter alia): GPL, LGPL, MPL or CC-SA licenses.
+
+Part-of-speech tags were added in Morfologik project and are not found 
+in the data from sjp.pl. 
+
+-----
+
+BSD-licensed dictionary of Polish (SGJP)
+http://sgjp.pl/morfeusz/
+
+Copyright © 2011 Zygmunt Saloni, Włodzimierz Gruszczyński, 
+	    	 Marcin Woliński, Robert Wołosz
+
+All rights reserved.
+
+Redistribution and  use in  source and binary  forms, with  or without
+modification, are permitted provided that the following conditions are
+met:
+
+1. Redistributions of source code must retain the above copyright
+   notice, this list of conditions and the following disclaimer.
+
+2. Redistributions in binary form must reproduce the above copyright
+   notice, this list of conditions and the following disclaimer in the
+   documentation and/or other materials provided with the
+   distribution.
+
+THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS “AS IS” AND ANY EXPRESS
+OR  IMPLIED WARRANTIES,  INCLUDING, BUT  NOT LIMITED  TO,  THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED.  IN NO EVENT  SHALL COPYRIGHT  HOLDERS OR  CONTRIBUTORS BE
+LIABLE FOR  ANY DIRECT,  INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR
+CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED  TO, PROCUREMENT OF
+SUBSTITUTE  GOODS OR  SERVICES;  LOSS  OF USE,  DATA,  OR PROFITS;  OR
+BUSINESS INTERRUPTION) HOWEVER CAUSED  AND ON ANY THEORY OF LIABILITY,
+WHETHER IN  CONTRACT, STRICT LIABILITY, OR  TORT (INCLUDING NEGLIGENCE
+OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
diff --git modules/analysis/morfologik/lib/morfologik-polish-LICENSE-MPL-BSD.txt modules/analysis/morfologik/lib/morfologik-polish-LICENSE-MPL-BSD.txt
deleted file mode 100644
index b5887da..0000000
--- modules/analysis/morfologik/lib/morfologik-polish-LICENSE-MPL-BSD.txt
+++ /dev/null
@@ -1,41 +0,0 @@
-morfologik-polish, TERMS OF LICENCE
-
-This JAR contains and makes use of data from Polish ispell/myspell 
-dictionaries hosted at http://www.sjp.pl/slownik/en/ and is 
-licenced on the terms of (inter alia): GPL, LGPL, MPL or CC-SA licenses.
-
-Part-of-speech tags were added in Morfologik project and are not found 
-in the data from sjp.pl. 
-
-
-BSD-licensed dictionary of Polish (SGJP)
-http://sgjp.pl/morfeusz/
-
-Copyright © 2011 Zygmunt Saloni, Włodzimierz Gruszczyński, 
-	    	 Marcin Woliński, Robert Wołosz
-
-All rights reserved.
-
-Redistribution and  use in  source and binary  forms, with  or without
-modification, are permitted provided that the following conditions are
-met:
-
-1. Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
-
-2. Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in the
-   documentation and/or other materials provided with the
-   distribution.
-
-THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS “AS IS” AND ANY EXPRESS
-OR  IMPLIED WARRANTIES,  INCLUDING, BUT  NOT LIMITED  TO,  THE IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED.  IN NO EVENT  SHALL COPYRIGHT  HOLDERS OR  CONTRIBUTORS BE
-LIABLE FOR  ANY DIRECT,  INDIRECT, INCIDENTAL, SPECIAL,  EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES  (INCLUDING, BUT NOT LIMITED  TO, PROCUREMENT OF
-SUBSTITUTE  GOODS OR  SERVICES;  LOSS  OF USE,  DATA,  OR PROFITS;  OR
-BUSINESS INTERRUPTION) HOWEVER CAUSED  AND ON ANY THEORY OF LIABILITY,
-WHETHER IN  CONTRACT, STRICT LIABILITY, OR  TORT (INCLUDING NEGLIGENCE
-OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
-IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
diff --git modules/analysis/morfologik/lib/morfologik-polish-NOTICE.txt modules/analysis/morfologik/lib/morfologik-polish-NOTICE.txt
index 6667b14..f4d3c6c 100644
--- modules/analysis/morfologik/lib/morfologik-polish-NOTICE.txt
+++ modules/analysis/morfologik/lib/morfologik-polish-NOTICE.txt
@@ -1,8 +1,9 @@
 This product includes BSD-licensed software developed by Dawid Weiss and Marcin Miłkowski
 (http://morfologik.blogspot.com/).
 
-This product includes data from Polish ispell/myspell dictionary (http://www.sjp.pl/slownik/en/)
-licenced on the terms of (inter alia) LGPL and Creative Commons ShareAlike.
+This JAR contains and makes use of data from Polish ispell/myspell 
+dictionaries hosted at http://www.sjp.pl/slownik/en/ and is 
+licenced on the terms of (inter alia): GPL, LGPL, MPL or CC-SA licenses.
 
 This product includes data from BSD-licensed dictionary of Polish (SGJP)
 (http://sgjp.pl/morfeusz/)
diff --git modules/build.xml modules/build.xml
index 6e7dc8c..cb0e79e 100644
--- modules/build.xml
+++ modules/build.xml
@@ -18,10 +18,13 @@
  -->
 
 <project name="modules" default="test" basedir=".">
-  <!-- TODO: at some point we should probably iterate like contrib-crawl -->
-  <target name="test" description="Test all modules">
+  <dirname file="${ant.file.modules}" property="modules.dir"/> 
+  <import file="${modules.dir}/../lucene/tools/custom-tasks.xml" /> 
+
+  <macrodef name="forall-modules">
+    <attribute name="target" />
     <sequential>
-      <subant target="test" inheritall="false" failonerror="true">
+      <subant target="@{target}" inheritall="false" failonerror="true">
         <fileset dir="analysis" includes="build.xml" />
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="facet" includes="build.xml" />
@@ -32,97 +35,37 @@
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
+  </macrodef>
+
+  <!-- TODO: at some point we should probably iterate like contrib-crawl -->
+  <target name="test" description="Test all modules">
+    <forall-modules target="test" />
   </target>
 
   <target name="compile" description="Compile all modules" depends="validate">
-    <sequential>
-      <subant target="compile" inheritall="false" failonerror="true">
-        <fileset dir="analysis" includes="build.xml" />
-        <fileset dir="benchmark" includes="build.xml" />
-        <fileset dir="facet" includes="build.xml" />
-        <fileset dir="queries" includes="build.xml" />
-        <fileset dir="grouping" includes="build.xml" />
-        <fileset dir="join" includes="build.xml" />
-        <fileset dir="queryparser" includes="build.xml" />
-        <fileset dir="suggest" includes="build.xml" />
-      </subant>
-    </sequential>
+    <forall-modules target="compile" />
   </target>
 
   <target name="compile-test" description="Compile all tests">
-    <sequential>
-      <subant target="compile-test" inheritall="false" failonerror="true">
-        <fileset dir="analysis" includes="build.xml" />
-        <fileset dir="benchmark" includes="build.xml" />
-        <fileset dir="facet" includes="build.xml" />
-        <fileset dir="queries" includes="build.xml" />
-        <fileset dir="grouping" includes="build.xml" />
-        <fileset dir="join" includes="build.xml" />
-        <fileset dir="queryparser" includes="build.xml" />
-        <fileset dir="suggest" includes="build.xml" />
-      </subant>
-    </sequential>
+    <forall-modules target="compile-test" />
   </target>
 
   <target name="javadocs" description="Generate javadocs">
-    <sequential>
-      <subant target="javadocs" inheritall="false" failonerror="true">
-        <fileset dir="analysis" includes="build.xml" />
-        <fileset dir="benchmark" includes="build.xml" />
-        <fileset dir="facet" includes="build.xml" />
-        <fileset dir="queries" includes="build.xml" />
-        <fileset dir="grouping" includes="build.xml" />
-        <fileset dir="join" includes="build.xml" />
-        <fileset dir="queryparser" includes="build.xml" />
-        <fileset dir="suggest" includes="build.xml" />
-      </subant>
-    </sequential>
+    <forall-modules target="javadocs" />
   </target>
 
   <target name="generate-maven-artifacts" description="Generate Maven Artifacts for Modules">
-    <sequential>
-      <ant target="get-maven-poms" dir=".."/>
-      <subant target="dist-maven" inheritall="false" failonerror="true">
-        <fileset dir="analysis" includes="build.xml" />
-        <fileset dir="benchmark" includes="build.xml" />
-        <fileset dir="facet" includes="build.xml" />
-        <fileset dir="queries" includes="build.xml" />
-        <fileset dir="grouping" includes="build.xml" />
-        <fileset dir="join" includes="build.xml" />
-        <fileset dir="queryparser" includes="build.xml" />
-        <fileset dir="suggest" includes="build.xml" />
-      </subant>
-    </sequential>
+    <ant target="get-maven-poms" dir=".."/>
+    <forall-modules target="dist-maven" />
   </target>
+
   <target name="validate">
-     <sequential>
-      <subant target="validate" inheritall="false" failonerror="true">
-        <fileset dir="analysis" includes="build.xml" />
-        <fileset dir="benchmark" includes="build.xml" />
-        <fileset dir="facet" includes="build.xml" />
-        <fileset dir="queries" includes="build.xml" />
-        <fileset dir="grouping" includes="build.xml" />
-        <fileset dir="join" includes="build.xml" />
-        <fileset dir="queryparser" includes="build.xml" />
-        <fileset dir="suggest" includes="build.xml" />
-      </subant>
-    </sequential>
+    <license-check-macro dir="${basedir}" />
+    <forall-modules target="validate" />
   </target>
 
   <target name="clean" description="Clean all modules">
-    <sequential>
-      <delete dir="dist"/>
-      <subant target="clean" inheritall="false" failonerror="true">
-        <fileset dir="analysis" includes="build.xml" />
-        <fileset dir="benchmark" includes="build.xml" />
-        <fileset dir="facet" includes="build.xml" />
-        <fileset dir="queries" includes="build.xml" />
-        <fileset dir="grouping" includes="build.xml" />
-        <fileset dir="join" includes="build.xml" />
-        <fileset dir="queryparser" includes="build.xml" />
-        <fileset dir="suggest" includes="build.xml" />
-      </subant>
-    </sequential>
+    <delete dir="dist"/>
+    <forall-modules target="clean" />
   </target>
-
 </project>
diff --git solr/build.xml solr/build.xml
index f57db03..67cdf99 100644
--- solr/build.xml
+++ solr/build.xml
@@ -130,7 +130,7 @@
   <target name="compile" description="Compile the source code."
           depends="compile-core, compile-contrib"/>
   <target name="test" description="Validate, then run core, solrj, and contrib unit tests."
-          depends="validate-solr, test-jsp, test-core, test-contrib"/>
+          depends="validate, test-jsp, test-core, test-contrib"/>
   <target name="test-core" description="Runs the core and solrj unit tests."
           depends="test-solr-core, test-solrj"/>
   <target name="compile-test" description="Compile unit tests."
@@ -177,6 +177,23 @@
     </ant>
   </target>
   
+  <!-- Validation (license/ notice checks). -->
+  <target name="validate" depends="validate-solr">
+    <license-check-macro dir="${basedir}">
+      <additional-excludes>
+        <!-- Exclude start.jar only (it'd be weird to have a license file there?) -->
+        <exclude name="example/start.jar" />
+        <exclude name="example/exampledocs/post.jar" />
+      </additional-excludes>
+      <additional-filters>
+        <replaceregex pattern="/jetty-util([^/]+)$" replace="/jetty-util" flags="gi" />
+        <replaceregex pattern="/jetty-6([^/]+)$" replace="/jetty" flags="gi" />
+        <replaceregex pattern="/jsp-2.1-glassfish([^/]+)$" replace="/jsp-2.1-glassfish" flags="gi" />
+        <replaceregex pattern="/jsp-api-2.1-glassfish([^/]+)$" replace="/jsp-api-2.1-glassfish" flags="gi" />
+      </additional-filters>
+    </license-check-macro>
+  </target>
+  
   <!-- Clean targets -->
   <target name="clean" description="Cleans compiled files and other temporary artifacts.">
     <delete dir="build" />
diff --git solr/common-build.xml solr/common-build.xml
index a2dc753..95d599a 100644
--- solr/common-build.xml
+++ solr/common-build.xml
@@ -122,45 +122,12 @@
     </sequential>
   </macrodef>
 
-  <target name="validate" depends="validate-solr"/>
+  <target name="validate" depends="validate-solr" />
   <target name="validate-solr" depends="check-legal-solr" unless="validated-solr.uptodate"/>
 
   <target name="check-legal-solr" depends="compile-tools">
-    <java classname="org.apache.lucene.validation.DependencyChecker" failonerror="true" fork="true">
-      <classpath>
-        <path refid="tools.runtime.classpath" />
-      </classpath>
-      <!-- TODO: it might be better to just automatically find all directories that contain jar files, but that could take a
-       long time.  This should be faster, but we could miss a directory
-       -->
-      <!-- Solr -->
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/contrib/analysis-extras/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/contrib/clustering/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/contrib/dataimporthandler/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/contrib/dataimporthandler-extras/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/contrib/extraction/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/contrib/uima/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/contrib/velocity/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/example/example-DIH/solr/db/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/example/example-DIH/solr/mail/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/example/example/lib" />
-      <arg value="-c" />
-      <arg value="${common-solr.dir}/core/src/test-files/solr/lib" />
-    </java>
-    <property name="validated-solr.uptodate" value="true"/>
   </target>
+
   <path id="tools.runtime.classpath">
     <pathelement location="${common.dir}/build/tools/classes/java"/>
   </path>
diff --git solr/contrib/clustering/lib/jackson-core-LICENSE-ASL.txt solr/contrib/clustering/lib/jackson-core-LICENSE-ASL.txt
deleted file mode 100644
index d645695..0000000
--- solr/contrib/clustering/lib/jackson-core-LICENSE-ASL.txt
+++ /dev/null
@@ -1,202 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git solr/contrib/clustering/lib/jackson-core-NOTICE.txt solr/contrib/clustering/lib/jackson-core-NOTICE.txt
deleted file mode 100644
index 0cae638..0000000
--- solr/contrib/clustering/lib/jackson-core-NOTICE.txt
+++ /dev/null
@@ -1,7 +0,0 @@
-This product currently only contains code developed by authors
-of specific components, as identified by the source code files;
-if such notes are missing files have been created by
-Tatu Saloranta.
-
-For additional credits (generally to people who reported problems)
-see CREDITS file.
diff --git solr/contrib/clustering/lib/jackson-core-asl-LICENSE-ASL.txt solr/contrib/clustering/lib/jackson-core-asl-LICENSE-ASL.txt
new file mode 100644
index 0000000..d645695
--- /dev/null
+++ solr/contrib/clustering/lib/jackson-core-asl-LICENSE-ASL.txt
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git solr/contrib/clustering/lib/jackson-core-asl-NOTICE.txt solr/contrib/clustering/lib/jackson-core-asl-NOTICE.txt
new file mode 100644
index 0000000..0cae638
--- /dev/null
+++ solr/contrib/clustering/lib/jackson-core-asl-NOTICE.txt
@@ -0,0 +1,7 @@
+This product currently only contains code developed by authors
+of specific components, as identified by the source code files;
+if such notes are missing files have been created by
+Tatu Saloranta.
+
+For additional credits (generally to people who reported problems)
+see CREDITS file.
diff --git solr/contrib/langid/lib/jsonic-LICENSE-ASL.txt solr/contrib/langid/lib/jsonic-LICENSE-ASL.txt
new file mode 100644
index 0000000..b09cd78
--- /dev/null
+++ solr/contrib/langid/lib/jsonic-LICENSE-ASL.txt
@@ -0,0 +1,201 @@
+Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git solr/contrib/langid/lib/jsonic-LICENSE.txt solr/contrib/langid/lib/jsonic-LICENSE.txt
deleted file mode 100644
index b09cd78..0000000
--- solr/contrib/langid/lib/jsonic-LICENSE.txt
+++ /dev/null
@@ -1,201 +0,0 @@
-Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git solr/contrib/langid/lib/jsonic-NOTICE.txt solr/contrib/langid/lib/jsonic-NOTICE.txt
new file mode 100644
index 0000000..c347472
--- /dev/null
+++ solr/contrib/langid/lib/jsonic-NOTICE.txt
@@ -0,0 +1,3 @@
+
+jsonic - simple json encoder/decoder for java
+http://jsonic.sourceforge.jp/
\ No newline at end of file
diff --git solr/contrib/langid/lib/langdetect-LICENSE-ASL.txt solr/contrib/langid/lib/langdetect-LICENSE-ASL.txt
new file mode 100644
index 0000000..b320a71
--- /dev/null
+++ solr/contrib/langid/lib/langdetect-LICENSE-ASL.txt
@@ -0,0 +1,13 @@
+(c)2010 All rights reserved by Cybozu Labs, Inc.
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       <a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a>
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
diff --git solr/contrib/langid/lib/langdetect-LICENSE.txt solr/contrib/langid/lib/langdetect-LICENSE.txt
deleted file mode 100644
index b320a71..0000000
--- solr/contrib/langid/lib/langdetect-LICENSE.txt
+++ /dev/null
@@ -1,13 +0,0 @@
-(c)2010 All rights reserved by Cybozu Labs, Inc.
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       <a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a>
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git solr/contrib/langid/lib/langdetect-NOTICE.txt solr/contrib/langid/lib/langdetect-NOTICE.txt
new file mode 100644
index 0000000..22a4cff
--- /dev/null
+++ solr/contrib/langid/lib/langdetect-NOTICE.txt
@@ -0,0 +1,3 @@
+langdetect
+
+http://code.google.com/p/language-detection/
\ No newline at end of file
diff --git solr/lib/slf4j-api-LICENSE-BSD_LIKE.txt solr/lib/slf4j-api-LICENSE-BSD_LIKE.txt
deleted file mode 100644
index f5ecafa..0000000
--- solr/lib/slf4j-api-LICENSE-BSD_LIKE.txt
+++ /dev/null
@@ -1,21 +0,0 @@
-Copyright (c) 2004-2008 QOS.ch
-All rights reserved.
-
-Permission is hereby granted, free  of charge, to any person obtaining
-a  copy  of this  software  and  associated  documentation files  (the
-"Software"), to  deal in  the Software without  restriction, including
-without limitation  the rights to  use, copy, modify,  merge, publish,
-distribute,  sublicense, and/or sell  copies of  the Software,  and to
-permit persons to whom the Software  is furnished to do so, subject to
-the following conditions:
-
-The  above  copyright  notice  and  this permission  notice  shall  be
-included in all copies or substantial portions of the Software.
-
-THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
-EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
-MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
diff --git solr/lib/slf4j-api-NOTICE.txt solr/lib/slf4j-api-NOTICE.txt
deleted file mode 100644
index cf43894..0000000
--- solr/lib/slf4j-api-NOTICE.txt
+++ /dev/null
@@ -1,25 +0,0 @@
-=========================================================================
-==  SLF4J Notice -- http://www.slf4j.org/license.html                  ==
-=========================================================================
-
-Copyright (c) 2004-2008 QOS.ch
-All rights reserved.
-
-Permission is hereby granted, free  of charge, to any person obtaining
-a  copy  of this  software  and  associated  documentation files  (the
-"Software"), to  deal in  the Software without  restriction, including
-without limitation  the rights to  use, copy, modify,  merge, publish,
-distribute,  sublicense, and/or sell  copies of  the Software,  and to
-permit persons to whom the Software  is furnished to do so, subject to
-the following conditions:
-
-The  above  copyright  notice  and  this permission  notice  shall  be
-included in all copies or substantial portions of the Software.
-
-THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,
-EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF
-MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
