Index: lucene/CHANGES.txt
===================================================================
--- lucene/CHANGES.txt	(revision 1653610)
+++ lucene/CHANGES.txt	(working copy)
@@ -396,7 +396,7 @@
 
 * LUCENE-5980: Don't let document length overflow. (Robert Muir)
 
-* LUCENE-5961: Fix the exists() method for FunctionValues returned by many ValueSoures to
+* LUCENE-5961: Fix the exists() method for FunctionValues returned by many ValueSources to
   behave properly when wrapping other ValueSources which do not exist for the specified document
   (hossman)
 
@@ -659,7 +659,7 @@
 * LUCENE-5883: You can now change the MergePolicy instance on a live IndexWriter,
   without first closing and reopening the writer. This allows to e.g. run a special
   merge with UpgradeIndexMergePolicy without reopening the writer. Also, MergePolicy
-  no longer implements Closeable; if you need to release your custom MegePolicy's
+  no longer implements Closeable; if you need to release your custom MergePolicy's
   resources, you need to implement close() and call it explicitly. (Shai Erera)
 
 * LUCENE-5859: Deprecate Analyzer constructors taking Version.  Use Analyzer.setVersion()
@@ -794,7 +794,7 @@
   Mike McCandless)
 
 * LUCENE-5827: Make all Directory implementations correctly fail with
-  IllegalArgumentException if slices are out of bounds.  (Uwe SChindler)
+  IllegalArgumentException if slices are out of bounds.  (Uwe Schindler)
 
 * LUCENE-5897, LUCENE-5400: JFlex-based tokenizers StandardTokenizer and
   UAX29URLEmailTokenizer tokenize extremely slowly over long sequences of
@@ -866,7 +866,7 @@
 API Changes
 
 * LUCENE-5756: IndexWriter now implements Accountable and IW#ramSizeInBytes()
-  has been deprecated infavor of IW#ramBytesUsed() (Simon Willnauer)
+  has been deprecated in favor of IW#ramBytesUsed() (Simon Willnauer)
 
 * LUCENE-5725: MoreLikeThis#like now accepts multiple values per field.
   The pre-existing method has been deprecated in favor of a variable arguments
@@ -1339,7 +1339,7 @@
   to obtain the lock. (Uwe Schindler, Robert Muir)
 
 * LUCENE-5626: Fix bug in SimpleFSLockFactory's obtain() that sometimes throwed
-  IOException (ERROR_ACESS_DENIED) on Windows if the lock file was created
+  IOException (ERROR_ACCESS_DENIED) on Windows if the lock file was created
   concurrently. This error is now handled the same way like in NativeFSLockFactory
   by returning false.  (Uwe Schindler, Robert Muir, Dawid Weiss)
 
@@ -1455,8 +1455,8 @@
 
 * LUCENE-5553: IndexReader#ReaderClosedListener is not always invoked when 
   IndexReader#close() is called or if refCount is 0. If an exception is 
-  thrown during interal close or on any of the close listerns some or all
-  listerners might be missed. This can cause memory leaks if the core listeners
+  thrown during internal close or on any of the close listeners some or all
+  listeners might be missed. This can cause memory leaks if the core listeners
   are used to clear caches. (Simon Willnauer)
 
 Build
@@ -1472,7 +1472,7 @@
   (Jack Conradson via Robert Muir)
   
 * LUCENE-5337: Add Payload support to FileDictionary (Suggest) and make it more
-  configurable (Areek Zilluer via Erick Erickson)
+  configurable (Areek Zillur via Erick Erickson)
 
 * LUCENE-5329: suggest: DocumentDictionary and
   DocumentExpressionDictionary are now lenient for dirty documents
@@ -1641,8 +1641,8 @@
   to byte, before calling Similarity.decodeNormValue.  (Peng Cheng via
   Mike McCandless)
 
-* LUCENE-5436: RefrenceManager#accquire can result in infinite loop if
-  managed resource is abused outside of the RefrenceManager. Decrementing
+* LUCENE-5436: ReferenceManager#accquire can result in infinite loop if
+  managed resource is abused outside of the ReferenceManager. Decrementing
   the reference without a corresponding incRef() call can cause an infinite
   loop. ReferenceManager now throws IllegalStateException if currently managed
   resources ref count is 0. (Simon Willnauer)
@@ -1650,7 +1650,7 @@
 * LUCENE-5443: Lucene45DocValuesProducer.ramBytesUsed() may throw
   ConcurrentModificationException. (Shai Erera, Simon Willnauer)
 
-* LUCENE-5444: MemoryIndex did't respect the analyzers offset gap and
+* LUCENE-5444: MemoryIndex didn't respect the analyzers offset gap and
   offsets were corrupted if multiple fields with the same name were
   added to the memory index. (Britta Weber, Simon Willnauer)
 
@@ -1674,7 +1674,7 @@
   to IndexWriter.addDocument(). (Shai Erera, Gilad Barkai, Rob
   Muir, Mike McCandless)
 
-* LUCENE-5405: Make ShingleAnalzyerWrapper.getWrappedAnalyzer() public final (gsingers)
+* LUCENE-5405: Make ShingleAnalyzerWrapper.getWrappedAnalyzer() public final (gsingers)
 
 * LUCENE-5395: The SpatialArgsParser now only reads WKT, no more "lat, lon"
   etc. but it's easy to override the parseShape method if you wish. (David
@@ -1718,7 +1718,7 @@
   to the analysis package overview.  
   (Benson Margulies via Robert Muir - pull request #12)
 
-* LUCENE-5389: Add more guidance in the analyis documentation 
+* LUCENE-5389: Add more guidance in the analysis documentation 
   package overview.
   (Benson Margulies via Robert Muir - pull request #14)
 
@@ -1917,7 +1917,7 @@
 Documentation
 
 * LUCENE-5211: Better javadocs and error checking of 'format' option in 
-  StopFilterFactory, as well as comments in all snowball formated files
+  StopFilterFactory, as well as comments in all snowball formatted files
   about specifying format option.  (hossman)
 
 Changes in backwards compatibility policy
@@ -2075,7 +2075,7 @@
   some result documents were missing category associations. (Shai Erera)
 
 * LUCENE-5152: Fix MemoryPostingsFormat to not modify borrowed BytesRef from FSTEnum
-  seek/lookup which can cause sideeffects if done on a cached FST root arc.
+  seek/lookup which can cause side effects if done on a cached FST root arc.
   (Simon Willnauer)
 
 * LUCENE-5160: Handle the case where reading from a file or FileChannel returns -1,
@@ -2148,7 +2148,7 @@
 
 * LUCENE-5144: StandardFacetsAccumulator renamed to OldFacetsAccumulator, and all
   associated classes were moved under o.a.l.facet.old. The intention to remove it
-  one day, when the features it covers (complements, partitiona, sampling) will be
+  one day, when the features it covers (complements, partitions, sampling) will be
   migrated to the new FacetsAggregator and FacetsAccumulator API. Also,
   FacetRequest.createAggregator was replaced by OldFacetsAccumulator.createAggregator.
   (Shai Erera)
@@ -2225,7 +2225,7 @@
   synchronization and concurrent interaction with IndexWriter. DWPT is now
   only setup once and has no reset logic. All segment publishing and state
   transition from DWPT into IndexWriter is now done via an Event-Queue
-  processed from within the IndexWriter in order to prevent suituations
+  processed from within the IndexWriter in order to prevent situations
   where DWPT or DW calling int IW causing deadlocks. (Simon Willnauer)
 
 * LUCENE-5182: Terminate phrase searches early if max phrase window is 
@@ -2346,7 +2346,7 @@
   jvms and it's faster not to cache.  (Robert Muir)
 
 * LUCENE-5038: MergePolicy now has a default implementation for useCompoundFile based
-  on segment size and noCFSRatio. The default implemantion was pulled up from
+  on segment size and noCFSRatio. The default implementation was pulled up from
   TieredMergePolicy. (Simon Willnauer)
 
 * LUCENE-5063: FieldCache.get(Bytes|Shorts), SortField.Type.(BYTE|SHORT) and
@@ -2546,7 +2546,7 @@
   
 * LUCENE-5097: Analyzer now has an additional tokenStream(String fieldName,
   String text) method, so wrapping by StringReader for common use is no
-  longer needed. This method uses an internal reuseable reader, which was
+  longer needed. This method uses an internal reusable reader, which was
   previously only used by the Field class.  (Uwe Schindler, Robert Muir)
   
 * LUCENE-4542: HunspellStemFilter's maximum recursion level is now configurable.
@@ -2555,7 +2555,7 @@
 Build
 
 * LUCENE-4987: Upgrade randomized testing to version 2.0.10: 
-  Test framework may fail internally due to overly aggresive J9 optimizations. 
+  Test framework may fail internally due to overly aggressive J9 optimizations. 
   (Dawid Weiss, Shai Erera)
 
 * LUCENE-5043: The eclipse target now uses the containing directory for the
@@ -2602,7 +2602,7 @@
   large heap/explicitly disabled.  (Mike McCandless, Uwe Schindler, Robert Muir)
 
 * LUCENE-4953: Fixed ParallelCompositeReader to inform ReaderClosedListeners of
-  its synthetic subreaders. FieldCaches keyed on the atomic childs will be purged
+  its synthetic subreaders. FieldCaches keyed on the atomic children will be purged
   earlier and FC insanity prevented.  In addition, ParallelCompositeReader's
   toString() was changed to better reflect the reader structure.
   (Mike McCandless, Uwe Schindler)
@@ -2967,7 +2967,7 @@
   OpenMode.CREATE_OR_APPEND is used. This might also affect application that set
   the open mode manually using DirectoryReader#indexExists. (Simon Willnauer)
 
-* LUCENE-4878: Override getRegexpQuery in MultiFieldQueryParser to prefent
+* LUCENE-4878: Override getRegexpQuery in MultiFieldQueryParser to prevent
   NullPointerException when regular expression syntax is used with
   MultiFieldQueryParser. (Simon Willnauer, Adam Rauch)
 
@@ -3036,7 +3036,7 @@
   sorted by value, while ties are broken by category ordinal. (Shai Erera)
 
 * LUCENE-4772: Facet associations moved to new FacetsAggregator API. You
-  should override FacetsAccumualtor and return the relevant aggregator,
+  should override FacetsAccumulator and return the relevant aggregator,
   for aggregating the association values. (Shai Erera)
   
 * LUCENE-4748: A FacetRequest on a non-existent field now returns an
@@ -3727,7 +3727,7 @@
 * LUCENE-4391, LUCENE-4440: All methods of Lucene40Codec but
   getPostingsFormatForField are now final. To reuse functionality 
   of Lucene40, you should extend FilterCodec and delegate to Lucene40
-  instead of extending Lucene40Codec.  (Adrien Grand, Shai Erea,
+  instead of extending Lucene40Codec.  (Adrien Grand, Shai Erera,
   Robert Muir, Uwe Schindler)
 
 * LUCENE-4299: Added Terms.hasPositions() and Terms.hasOffsets().
Index: solr/CHANGES.txt
===================================================================
--- solr/CHANGES.txt	(revision 1653610)
+++ solr/CHANGES.txt	(working copy)
@@ -135,8 +135,8 @@
   in the "def()" function. Example: changing "fl=sum(fieldA,fieldB)" to 
   "fl=sum(def(fieldA,0.0),def(fieldB,0.0))".  See LUCENE-5961 for more details.
 
-* AdminHandlers is deprecated , /admin/* are implicitly defined, /get ,/replacation and
-   handlers are also implicitly registered (refer to SOLR-6792)
+* AdminHandlers is deprecated, /admin/* are implicitly defined, /get, /replication and
+  handlers are also implicitly registered (refer to SOLR-6792)
 
 * SolrCore.reload(ConfigSet coreConfig, SolrCore prev) was deprecated in 4.10.3 and
   removed in 5.0. use SolrCore.reload(ConfigSet coreConfig). See SOLR-5864.
@@ -203,7 +203,7 @@
       FacetParams.FACET_SORT_COUNT or FacetParams.FACET_SORT_INDEX
     - setSortField(String, ORDER) should use setSort(SortClause)
     - addSortField(String, ORDER) should use addSort(SortClause)
-    - removeSortField(String, ORDER) shoudl use removeSort(SortClause)
+    - removeSortField(String, ORDER) should use removeSort(SortClause)
     - getSortFields() should use getSorts()
     - set/getQueryType() should use set/getRequestHandler()
 
@@ -312,7 +312,7 @@
 
 * SOLR-6533: Support editing common solrconfig.xml values (Noble Paul)
 
-* SOLR-6607: Managing requesthandlers throuh API (Noble Paul)
+* SOLR-6607: Managing requesthandlers through API (Noble Paul)
 
 * SOLR-4799: faster join using join="zipper" aka merge join for nested DIH EntityProcessors
   (Mikhail Khludnev via Noble Paul)
@@ -430,7 +430,7 @@
   in local map before writing to ZK. (shalin)
 
 * SOLR-6679: Disabled suggester component from techproduct solrconfig.xml since
-  it caused long startup times on lage indexes even when it wasn't used.
+  it caused long startup times on large indexes even when it wasn't used.
   (yonik, hossman)
 
 * SOLR-6738: Admin UI - Escape Data on Plugins-View (steffkes)
@@ -570,10 +570,10 @@
   constructors, improve javadocs for CloudSolrClient constructors.
   (Steve Davids via Shawn Heisey)
 
-* LUCENE-5901: Replaced all occurences of LUCENE_CURRENT with LATEST for luceneMatchVersion.
+* LUCENE-5901: Replaced all occurrences of LUCENE_CURRENT with LATEST for luceneMatchVersion.
   (Ryan Ernst)
 
-* SOLR-6445: Upgrade Noggit to verion 0.6 to support more flexible JSON input (Noble Paul , Yonik Seeley)
+* SOLR-6445: Upgrade Noggit to version 0.6 to support more flexible JSON input (Noble Paul, Yonik Seeley)
 
 * SOLR-6073: Remove helper methods from CollectionsRequest (SolrJ) for CollectionsAPI
   calls and move to a builder design for the same. (Varun Thacker, Anshum Gupta)
@@ -734,7 +734,7 @@
   Erick Erickson)
 
 * SOLR-6906: Fix typo bug in DistributedDebugComponentTest.testCompareWithNonDistributedRequest
-  (Ramkumar Aiyenga via Erick Erickson)
+  (Ramkumar Aiyengar via Erick Erickson)
 
 * SOLR-6905: Test pseudo-field retrieval in distributed search.
   (Ramkumar Aiyengar via shalin)
@@ -810,7 +810,7 @@
 
 * SOLR-6780: Fixed a bug in how default/appends/invariants params were affecting the set 
   of all "keys" found in the request parameters, resulting in some key=value param pairs 
-  being duplicated.  This was noticably affecting some areas of the code where iteration 
+  being duplicated.  This was noticeably affecting some areas of the code where iteration 
   was done over the set of all params: 
     * literal.* in ExtractingRequestHandler
     * facet.* in FacetComponent
@@ -1316,7 +1316,7 @@
   (Joel Bernstein)
 
 * SOLR-5285: Added a new [child ...] DocTransformer for optionally including 
-  Block-Join decendent documents inline in the results of a search.  This works 
+  Block-Join descendant documents inline in the results of a search.  This works 
   independent of whether the search itself is a block-join related query and is 
   supported by he xml, json, and javabin response formats.
   (Varun Thacker via hossman)
@@ -1519,7 +1519,7 @@
 ----------------------
 
 * In previous versions of Solr, Terms that exceeded Lucene's MAX_TERM_LENGTH were
-  silently ignored when indexing documents.  Begining with Solr 4.8, a document
+  silently ignored when indexing documents.  Beginning with Solr 4.8, a document
   an error will be generated when attempting to index a document with a term
   that is too large.  If you wish to continue to have large terms ignored,
   use "solr.LengthFilterFactory" in all of your Analyzers.  See LUCENE-5472 for
@@ -2079,7 +2079,7 @@
 
 * SOLR-5667: Performance problem when not using hdfs block cache. (Mark Miller)
 
-* SOLR-5526: Fixed NPE that could arrise when explicitly configuring some built 
+* SOLR-5526: Fixed NPE that could arise when explicitly configuring some built 
   in QParserPlugins (Nikolay Khitrin, Vitaliy Zhovtyuk, hossman)
 
 * SOLR-5598: LanguageIdentifierUpdateProcessor ignores all but the first value
@@ -2630,11 +2630,11 @@
   SOLR-5108 for more details.
 
 * In the past, schema.xml parsing would silently ignore "default" or "required" 
-  options specified on <dynamicField/> declarations.  Begining with 4.5, attempting
+  options specified on <dynamicField/> declarations.  Beginning with 4.5, attempting
   to do configured these on a dynamic field will cause an init error.  If you 
   encounter one of these errors when upgrading an existing schema.xml, you can 
   safely remove these attributes, regardless of their value, from your config and 
-  Solr will continue to bahave exactly as it did in previous versions.  See 
+  Solr will continue to behave exactly as it did in previous versions.  See 
   SOLR-5227 for more details.
 
 * The UniqFieldsUpdateProcessorFactory has been improved to support all of the
@@ -2868,7 +2868,7 @@
 * TieredMergePolicy and the various subtypes of LogMergePolicy no longer have 
   an explicit "setUseCompoundFile" method.  Instead the behavior of new 
   segments is determined by the IndexWriter configuration, and the MergePolicy 
-  is only consulted to determine if merge segements should use the compound 
+  is only consulted to determine if merge segments should use the compound 
   file format (based on the value of "setNoCFSRatio").  If you have explicitly 
   configured one of these classes using <mergePolicy> and include an init arg 
   like this...
@@ -3010,7 +3010,7 @@
 * SOLR-4891: JsonLoader should preserve field value types from the JSON content stream.
   (Steve Rowe)
  
-* SOLR-4805: SolreCore#reload should not call preRegister and publish a DOWN state to
+* SOLR-4805: SolrCore#reload should not call preRegister and publish a DOWN state to
   ZooKeeper. (Mark Miller, Jared Rodriguez)
 
 * SOLR-4899: When reconnecting after ZooKeeper expiration, we need to be willing to wait 
@@ -3170,7 +3170,7 @@
 * SOLR-4931: SolrDeletionPolicy onInit and onCommit methods changed to override
   exact signatures (with generics) from IndexDeletionPolicy (shalin)
 
-* SOLR-4942: test improvements to randomize use of compound files (hosman)
+* SOLR-4942: test improvements to randomize use of compound files (hossman)
 
 * SOLR-4966: CSS, JS and other files in webapp without license (uschindler,
   steffkes)
@@ -3298,7 +3298,7 @@
   you would like. If you are using another webapp container, these jars will 
   need to go in the corresponding location for that container. 
   In conjunction, the dist-excl-slf4j and dist-war-excl-slf4 build targets 
-  have been removed since they are redundent.  See the Slf4j documentation, 
+  have been removed since they are redundant.  See the Slf4j documentation, 
   SOLR-3706, and SOLR-4651 for more details.
 
 * The hardcoded SolrCloud defaults for 'hostContext="solr"' and 
@@ -3515,7 +3515,7 @@
   fullpath not path. (Mark Miller)
 
 * SOLR-4555: When forceNew is used with CachingDirectoryFactory#get, the old
-  CachValue should give up its path as it will be used by a new Directory
+  CacheValue should give up its path as it will be used by a new Directory
   instance. (Mark Miller)
 
 * SOLR-4578: CoreAdminHandler#handleCreateAction gets a SolrCore and does not
@@ -3729,7 +3729,7 @@
   when more unused nodes are available. 
   (Eric Falcao, Brett Hoerner, Mark Miller)
 
-* SOLR-4345 : Solr Admin UI dosent work in IE 10 (steffkes)
+* SOLR-4345 : Solr Admin UI doesn't work in IE 10 (steffkes)
 
 * SOLR-4349 : Admin UI - Query Interface does not work in IE
   (steffkes)
@@ -3892,7 +3892,7 @@
   (Shawn Heisey via hossman)
 
 * SOLR-2996: A bare * without a field specification is treated as *:*
-  by the lucene and edismax query paesers.
+  by the lucene and edismax query parsers.
   (hossman, Jan Høydahl, Alan Woodward, yonik)
 
 * SOLR-4416: Upgrade to Tika 1.3. (Markus Jelsma via Mark Miller)
