diff --git a/build.gradle b/build.gradle
index 0dc2c14f0fb..e312e69708e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,6 +5,7 @@ plugins {
   id "base"
   id "com.palantir.consistent-versions" version "1.14.0"
   id 'de.thetaphi.forbiddenapis' version '2.7' apply false
+  id "de.undercouch.download" version "4.0.2" apply false
 }
 
 // Project version and main properties. Applies to all projects.
@@ -21,7 +22,8 @@ ext {
   // Workaround for this one, for now:
   // https://github.com/palantir/gradle-consistent-versions/issues/383
   scriptDepVersions = [
-      "apache-rat": "0.11"
+      "apache-rat": "0.11",
+      "jgit": "5.3.0.201903130848-r",
   ]
 }
 
@@ -59,6 +61,9 @@ apply from: file('gradle/validation/validate-source-patterns.gradle')
 apply from: file('gradle/validation/config-file-sanity.gradle')
 apply from: file('gradle/validation/rat-sources.gradle')
 
+// Source/data generation or regeneration tasks.
+apply from: file('gradle/generate/kuromoji.gradle')
+
 // Additional development aids.
 apply from: file('gradle/maven/maven-local.gradle')
 apply from: file('gradle/testing/per-project-summary.gradle')
diff --git a/gradle/generate/kuromoji.gradle b/gradle/generate/kuromoji.gradle
new file mode 100644
index 00000000000..a86859d8270
--- /dev/null
+++ b/gradle/generate/kuromoji.gradle
@@ -0,0 +1,79 @@
+// This downloads and compiles Kuromoji dictionaries.
+
+import java.nio.file.Paths
+import org.eclipse.jgit.api.*;
+import org.eclipse.jgit.storage.file.FileRepositoryBuilder;
+import org.eclipse.jgit.errors.*;
+
+buildscript {
+  repositories {
+    mavenCentral()
+  }
+
+  dependencies {
+    classpath "org.eclipse.jgit:org.eclipse.jgit:${scriptDepVersions['jgit']}"
+  }
+}
+
+configure(project(":lucene:analysis:kuromoji")) {
+  apply plugin: 'java-library'
+  apply plugin: "de.undercouch.download"
+
+  ext {
+    dictionarySource = "https://jaist.dl.sourceforge.net/project/mecab/mecab-ipadic/2.7.0-20070801/mecab-ipadic-2.7.0-20070801.tar.gz"
+    dictionaryEncoding = 'euc-jp'
+    dictionaryNormalize = false
+    dictionaryType = 'ipadic'
+
+    dictionaryName = Paths.get(new URI(dictionarySource).path).getFileName().toString()
+    dictionaryArchive = file("${buildDir}/generate/${dictionaryName}")
+    unpackedDir = file("${buildDir}/generate/${dictionaryName.replaceAll('.tar.gz', '')}")
+    dictionaryDir = file("${unpackedDir}/mecab-ipadic-2.7.0-20070801")
+
+    targetDir = file("${buildDir}/generate/compiled")
+  }
+
+  task downloadDictionary(type: Download) {
+    src dictionarySource
+    dest dictionaryArchive
+    onlyIfModified true
+  }
+
+  task patchDictionary() {
+    dependsOn downloadDictionary
+    doFirst {
+      delete unpackedDir
+      ant.untar(src: dictionaryArchive, dest: unpackedDir, compression: "gzip")
+
+      // Apply patch via jgit.
+      def git = new Git(new FileRepositoryBuilder()
+          .setWorkTree(dictionaryDir)
+          .setMustExist(false)
+          .build())
+
+      git.init().call()
+
+      file("src/tools/patches/Noun.proper.csv.patch").withInputStream { is ->
+        git.apply().setPatch(is).call()
+      }
+
+      delete file("${dictionaryDir}/.git")
+    }
+  }
+
+  task compileDictionary(type: JavaExec) {
+    //dependsOn patchDictionary
+    main = "org.apache.lucene.analysis.ja.util.DictionaryBuilder"
+    classpath = sourceSets.main.runtimeClasspath
+
+    jvmArgs '-Xmx1G'
+
+    args += [
+        dictionaryType,
+        dictionaryDir,
+        targetDir,
+        dictionaryEncoding,
+        dictionaryNormalize
+    ]
+  }
+}
diff --git a/gradle/validation/git-status.gradle b/gradle/validation/git-status.gradle
index 37eaf132dce..183effc3392 100644
--- a/gradle/validation/git-status.gradle
+++ b/gradle/validation/git-status.gradle
@@ -5,15 +5,13 @@ import org.eclipse.jgit.api.*;
 import org.eclipse.jgit.storage.file.FileRepositoryBuilder;
 import org.eclipse.jgit.errors.*;
 
-
 buildscript {
   repositories {
     mavenCentral()
   }
 
   dependencies {
-    classpath 'org.eclipse.jgit:org.eclipse.jgit:5.3.0.201903130848-r'
-    classpath 'commons-codec:commons-codec:1.6'
+    classpath "org.eclipse.jgit:org.eclipse.jgit:${scriptDepVersions['jgit']}"
   }
 }
 
