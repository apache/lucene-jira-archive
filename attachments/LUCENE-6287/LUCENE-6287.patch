Index: lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/IndexWriter.java	(revision 1662037)
+++ lucene/core/src/java/org/apache/lucene/index/IndexWriter.java	(working copy)
@@ -4529,6 +4529,15 @@
           toSync.prepareCommit(directory);
           //System.out.println("DONE prepareCommit");
 
+          // prepareCommit may have created new _N.si and _N_upgraded.si
+          // (marker) files if the segments file was 3.x, so we must now
+          // (while still under IW's monitor lock) incRef these files in
+          // IFD to protect them until the commit is done:
+          final Collection<String> newFiles = toSync.files(directory, false);
+          deleter.incRef(newFiles);
+          deleter.decRef(filesToCommit);
+          filesToCommit = newFiles;
+
           pendingCommitSet = true;
           pendingCommit = toSync;
         }
@@ -4536,10 +4545,8 @@
         // This call can take a long time -- 10s of seconds
         // or more.  We do it without syncing on this:
         boolean success = false;
-        final Collection<String> filesToSync;
         try {
-          filesToSync = toSync.files(directory, false);
-          directory.sync(filesToSync);
+          directory.sync(filesToCommit);
           success = true;
         } finally {
           if (!success) {
@@ -4550,7 +4557,7 @@
         }
 
         if (infoStream.isEnabled("IW")) {
-          infoStream.message("IW", "done all syncs: " + filesToSync);
+          infoStream.message("IW", "done all syncs: " + filesToCommit);
         }
 
         assert testPoint("midStartCommitSuccess");
Index: lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility3x.java
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility3x.java	(revision 1662037)
+++ lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility3x.java	(working copy)
@@ -1040,4 +1040,50 @@
     // Causes FNFE on _0.si during check index before the fix:
     dir.close();
   }
+
+  // LUCENE-6287: copy this back to a 3.6.x checkout, run it, then cd to
+  // the index dir and run "zip manysegments.362.zip *" and copy to this dir:
+  /*
+  public void testCreateManySegmentsIndex() throws Exception {
+    // we use a real directory name that is not cleaned up, because this method is only used to create backwards indexes:
+    File indexDir = new File(LuceneTestCase.TEMP_DIR, "manysegments");
+    System.out.println("TEST: indexDir " + indexDir);
+    _TestUtil.rmDir(indexDir);
+    Directory dir = newFSDirectory(indexDir);
+    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))
+      .setMaxBufferedDocs(2);
+    TieredMergePolicy tmp = (TieredMergePolicy) conf.getMergePolicy();
+    tmp.setSegmentsPerTier(1000);
+    tmp.setFloorSegmentMB(.0000001);
+    IndexWriter writer = new IndexWriter(dir, conf);
+    //writer.setInfoStream(System.out);
+    
+    for(int i=0;i<200;i++) {
+      Document doc = new Document();
+      doc.add(new Field("content", "doc " + i, Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));
+      writer.addDocument(doc);
+    }
+    assertEquals("wrong doc count", 200, writer.maxDoc());
+    writer.close();
+    dir.close();
+  }
+  */
+
+  static final String manySegments3xIndex = "manysegments.362.zip";
+
+  // LUCENE-6287
+  public void testMergeDuringUpgrade() throws Exception {
+    // NOTE: this fails only rarely
+    for(int i=0;i<10;i++) {
+      File indexPath = createTempDir("manysegments.362");
+      TestUtil.unzip(getDataFile(manySegments3xIndex), indexPath);
+      Directory dir = newFSDirectory(indexPath);
+      IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));
+      IndexWriter writer = new IndexWriter(dir, conf);
+      writer.addDocument(new Document());
+      writer.commit();
+      writer.rollback();
+      dir.close();
+    }
+  }
 }
Index: lucene/core/src/test/org/apache/lucene/index/manysegments.362.zip
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: lucene/core/src/test/org/apache/lucene/index/manysegments.362.zip
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/manysegments.362.zip	(revision 0)
+++ lucene/core/src/test/org/apache/lucene/index/manysegments.362.zip	(working copy)

Property changes on: lucene/core/src/test/org/apache/lucene/index/manysegments.362.zip
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
