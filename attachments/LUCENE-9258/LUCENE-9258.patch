From 8370d4b9564cf8c634a78a70bdc13215fc2dc5e7 Mon Sep 17 00:00:00 2001
From: Michele Palmia <micpalmia@gmail.com>
Date: Tue, 3 Mar 2020 00:09:35 +0100
Subject: [PATCH] LUCENE-9258: Fix DocTermsIndexDocValues's range scorer

---
 .../docvalues/DocTermsIndexDocValues.java     | 30 +++++--------------
 .../valuesource/SortedSetFieldSource.java     |  2 +-
 .../valuesource/VectorValueSource.java        |  1 -
 .../function/TestSortedSetFieldSource.java    | 15 +++++++---
 4 files changed, 20 insertions(+), 28 deletions(-)

diff --git a/lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues.java b/lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues.java
index 1cc79a4b3fe..fd0b9a80986 100644
--- a/lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues.java
+++ b/lucene/queries/src/java/org/apache/lucene/queries/function/docvalues/DocTermsIndexDocValues.java
@@ -16,8 +16,6 @@
  */
 package org.apache.lucene.queries.function.docvalues;
 
-import java.io.IOException;
-
 import org.apache.lucene.index.DocValues;
 import org.apache.lucene.index.LeafReaderContext;
 import org.apache.lucene.index.SortedDocValues;
@@ -31,6 +29,8 @@ import org.apache.lucene.util.CharsRefBuilder;
 import org.apache.lucene.util.mutable.MutableValue;
 import org.apache.lucene.util.mutable.MutableValueStr;
 
+import java.io.IOException;
+
 /**
  * Serves as base class for FunctionValues based on DocTermsIndex.
  * @lucene.internal
@@ -40,15 +40,13 @@ public abstract class DocTermsIndexDocValues extends FunctionValues {
   protected final ValueSource vs;
   protected final MutableValueStr val = new MutableValueStr();
   protected final CharsRefBuilder spareChars = new CharsRefBuilder();
-  private final String field;
   private int lastDocID;
 
   public DocTermsIndexDocValues(ValueSource vs, LeafReaderContext context, String field) throws IOException {
-    this(field, vs, open(context, field));
+    this(vs, open(context, field));
   }
-  
-  protected DocTermsIndexDocValues(String field, ValueSource vs, SortedDocValues termsIndex) {
-    this.field = field;
+
+  protected DocTermsIndexDocValues(ValueSource vs, SortedDocValues termsIndex) {
     this.vs = vs;
     this.termsIndex = termsIndex;
   }
@@ -145,23 +143,11 @@ public abstract class DocTermsIndexDocValues extends FunctionValues {
     final int uu = upper;
 
     return new ValueSourceScorer(weight, readerContext, this) {
-      final SortedDocValues values = readerContext.reader().getSortedDocValues(field);
-      private int lastDocID;
-      
       @Override
       public boolean matches(int doc) throws IOException {
-        if (doc < lastDocID) {
-          throw new IllegalArgumentException("docs were sent out-of-order: lastDocID=" + lastDocID + " vs docID=" + doc);
-        }
-        if (doc > values.docID()) {
-          values.advance(doc);
-        }
-        if (doc == values.docID()) {
-          int ord = values.ordValue();
-          return ord >= ll && ord <= uu;
-        } else {
-          return false;
-        }
+        if (!exists(doc)) return false;
+        float docVal = ordVal(doc);
+        return docVal >= ll && docVal <= uu;
       }
     };
   }
diff --git a/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SortedSetFieldSource.java b/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SortedSetFieldSource.java
index d32cc3bc116..ddf71292b0c 100644
--- a/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SortedSetFieldSource.java
+++ b/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SortedSetFieldSource.java
@@ -58,7 +58,7 @@ public class SortedSetFieldSource extends FieldCacheSource {
   public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {
     SortedSetDocValues sortedSet = DocValues.getSortedSet(readerContext.reader(), field);
     SortedDocValues view = SortedSetSelector.wrap(sortedSet, selector);
-    return new DocTermsIndexDocValues(this.field, this, view) {
+    return new DocTermsIndexDocValues(this, view) {
       @Override
       protected String toTerm(String readableValue) {
         return readableValue;
diff --git a/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/VectorValueSource.java b/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/VectorValueSource.java
index 768243a0495..9b72f63162e 100644
--- a/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/VectorValueSource.java
+++ b/lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/VectorValueSource.java
@@ -33,7 +33,6 @@ import java.util.Map;
 public class VectorValueSource extends MultiValueSource {
   protected final List<ValueSource> sources;
 
-
   public VectorValueSource(List<ValueSource> sources) {
     this.sources = sources;
   }
diff --git a/lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource.java b/lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource.java
index b72bfebfa44..84dd263dd5e 100644
--- a/lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource.java
+++ b/lucene/queries/src/test/org/apache/lucene/queries/function/TestSortedSetFieldSource.java
@@ -25,9 +25,7 @@ import org.apache.lucene.index.LeafReader;
 import org.apache.lucene.index.DirectoryReader;
 import org.apache.lucene.index.IndexWriter;
 import org.apache.lucene.queries.function.valuesource.SortedSetFieldSource;
-import org.apache.lucene.search.IndexSearcher;
-import org.apache.lucene.search.SortField;
-import org.apache.lucene.search.SortedSetSortField;
+import org.apache.lucene.search.*;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.LuceneTestCase;
@@ -66,7 +64,16 @@ public class TestSortedSetFieldSource extends LuceneTestCase {
     vssf = vssf.rewrite(searcher);
     sf = sf.rewrite(searcher);
     assertEquals(sf, vssf);
-      
+
+    // test scorer
+    vs = new SortedSetFieldSource("value");
+    values = vs.getValues(Collections.emptyMap(), ar.getContext());
+    ValueSourceScorer vss = values.getRangeScorer(new MatchAllDocsQuery().createWeight(searcher, ScoreMode.TOP_SCORES, 1), ar.getContext(), "a", "z", true, true);
+
+    DocIdSetIterator iterator = vss.iterator();
+    assertEquals("baz", values.strVal(iterator.nextDoc()));
+    assertEquals("bar", values.strVal(iterator.nextDoc()));
+
     ir.close();
     dir.close();
   }
-- 
2.21.1 (Apple Git-122.3)

