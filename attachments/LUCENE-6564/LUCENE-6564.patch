Index: lucene/core/src/java/org/apache/lucene/util/PrintStreamInfoStream.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/util/PrintStreamInfoStream.java	(revision 1685624)
+++ lucene/core/src/java/org/apache/lucene/util/PrintStreamInfoStream.java	(working copy)
@@ -19,10 +19,7 @@
 
 import java.io.IOException;
 import java.io.PrintStream;
-import java.text.DateFormat;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.Locale;
+import java.nio.file.attribute.FileTime;
 import java.util.concurrent.atomic.AtomicInteger;
 
 /**
@@ -36,8 +33,6 @@
   private static final AtomicInteger MESSAGE_ID = new AtomicInteger();
   protected final int messageID;
 
-  private static final DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS", Locale.ROOT);
-  
   protected final PrintStream stream;
   
   public PrintStreamInfoStream(PrintStream stream) {
@@ -51,7 +46,7 @@
   
   @Override
   public void message(String component, String message) {
-    stream.println(component + " " + messageID + " [" + dateFormat.format(new Date()) + "; " + Thread.currentThread().getName() + "]: " + message);    
+    stream.println(component + " " + messageID + " [" + getTimestamp() + "; " + Thread.currentThread().getName() + "]: " + message);    
   }
 
   @Override
@@ -70,4 +65,9 @@
   public boolean isSystemStream() {
     return stream == System.out || stream == System.err;
   }
+  
+  /** Returns the current time as string for insertion into log messages. */
+  protected String getTimestamp() {
+    return FileTime.fromMillis(System.currentTimeMillis()).toString();
+  }  
 }
Index: lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreClassEnv.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreClassEnv.java	(revision 1685624)
+++ lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreClassEnv.java	(working copy)
@@ -19,11 +19,9 @@
 
 import java.io.PrintStream;
 import java.util.Arrays;
-import java.util.Date;
 import java.util.HashSet;
 import java.util.Locale;
 import java.util.Random;
-import java.util.Set;
 import java.util.TimeZone;
 
 import org.apache.lucene.codecs.Codec;
@@ -99,7 +97,7 @@
       } else {
         name = Thread.currentThread().getName();
       }
-      stream.println(component + " " + messageID + " [" + new Date() + "; " + name + "]: " + message);    
+      stream.println(component + " " + messageID + " [" + getTimestamp() + "; " + name + "]: " + message);    
     }
   }
 
