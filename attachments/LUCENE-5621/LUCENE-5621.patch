Index: lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.java
===================================================================
--- lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.java	(revision 1588643)
+++ lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.java	(working copy)
@@ -383,7 +383,6 @@
 
           final byte[] payloads;
           if (hasPayloads) {
-            ros.flush();
             payloads = new byte[(int) ros.getFilePointer()];
             ros.writeTo(payloads, 0);
           } else {
Index: lucene/core/src/java/org/apache/lucene/store/BufferedIndexOutput.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/BufferedIndexOutput.java	(revision 1588643)
+++ lucene/core/src/java/org/apache/lucene/store/BufferedIndexOutput.java	(working copy)
@@ -100,8 +100,8 @@
     }
   }
 
-  @Override
-  public void flush() throws IOException {
+  /** Forces any buffered output to be written. */
+  protected void flush() throws IOException {
     crc.update(buffer, 0, bufferPosition);
     flushBuffer(buffer, bufferPosition);
     bufferStart += bufferPosition;
Index: lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.java	(revision 1588643)
+++ lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.java	(working copy)
@@ -299,11 +299,6 @@
     }
 
     @Override
-    public void flush() throws IOException {
-      delegate.flush();
-    }
-
-    @Override
     public void close() throws IOException {
       if (!closed) {
         closed = true;
Index: lucene/core/src/java/org/apache/lucene/store/IndexOutput.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/IndexOutput.java	(revision 1588643)
+++ lucene/core/src/java/org/apache/lucene/store/IndexOutput.java	(working copy)
@@ -31,9 +31,6 @@
  */
 public abstract class IndexOutput extends DataOutput implements Closeable {
 
-  /** Forces any buffered output to be written. */
-  public abstract void flush() throws IOException;
-
   /** Closes this stream to further operations. */
   @Override
   public abstract void close() throws IOException;
Index: lucene/core/src/java/org/apache/lucene/store/RAMOutputStream.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/RAMOutputStream.java	(revision 1588643)
+++ lucene/core/src/java/org/apache/lucene/store/RAMOutputStream.java	(working copy)
@@ -154,8 +154,8 @@
     }
   }
 
-  @Override
-  public void flush() throws IOException {
+  /** Forces any buffered output to be written. */
+  protected void flush() throws IOException {
     setFileLength();
   }
 
Index: lucene/core/src/java/org/apache/lucene/store/RateLimitedIndexOutput.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/RateLimitedIndexOutput.java	(revision 1588643)
+++ lucene/core/src/java/org/apache/lucene/store/RateLimitedIndexOutput.java	(working copy)
@@ -50,15 +50,6 @@
     }
     
   }
-  
-  @Override
-  public void flush() throws IOException {
-    try {
-      super.flush();
-    } finally { 
-      delegate.flush();
-    }
-  }
 
   @Override
   public void close() throws IOException {
Index: lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper.java
===================================================================
--- lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper.java	(revision 1588643)
+++ lucene/core/src/test/org/apache/lucene/store/TestMockDirectoryWrapper.java	(working copy)
@@ -59,9 +59,10 @@
     final byte[] bytes = new byte[] { 1, 2};
     IndexOutput out = dir.createOutput("foo", IOContext.DEFAULT);
     out.writeBytes(bytes, bytes.length); // first write should succeed
-    // flush() to ensure the written bytes are not buffered and counted
+    // close() to ensure the written bytes are not buffered and counted
     // against the directory size
-    out.flush();
+    out.close();
+    out = dir.createOutput("bar", IOContext.DEFAULT);
     try {
       out.writeBytes(bytes, bytes.length);
       fail("should have failed on disk full");
@@ -76,9 +77,10 @@
     dir.setMaxSizeInBytes(3);
     out = dir.createOutput("foo", IOContext.DEFAULT);
     out.copyBytes(new ByteArrayDataInput(bytes), bytes.length); // first copy should succeed
-    // flush() to ensure the written bytes are not buffered and counted
+    // close() to ensure the written bytes are not buffered and counted
     // against the directory size
-    out.flush();
+    out.close();
+    out = dir.createOutput("bar", IOContext.DEFAULT);
     try {
       out.copyBytes(new ByteArrayDataInput(bytes), bytes.length);
       fail("should have failed on disk full");
Index: lucene/facet/src/test/org/apache/lucene/facet/SlowRAMDirectory.java
===================================================================
--- lucene/facet/src/test/org/apache/lucene/facet/SlowRAMDirectory.java	(revision 1588643)
+++ lucene/facet/src/test/org/apache/lucene/facet/SlowRAMDirectory.java	(working copy)
@@ -164,7 +164,6 @@
     }
     
     @Override public void close() throws IOException { io.close(); }
-    @Override public void flush() throws IOException { io.flush(); }
     @Override public long getFilePointer() { return io.getFilePointer(); }
     @Override public long getChecksum() throws IOException { return io.getChecksum(); }
   }
Index: lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java
===================================================================
--- lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java	(revision 1588643)
+++ lucene/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.java	(working copy)
@@ -198,11 +198,6 @@
     //   FileChannel provides an API?
     //}
 
-    @Override
-    public void flush() {
-      // TODO -- I don't think this method is necessary?
-    }
-
     private void dump() throws IOException {
       buffer.flip();
       final long limit = filePos + buffer.limit();
Index: lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper.java	(revision 1588643)
+++ lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper.java	(working copy)
@@ -984,15 +984,6 @@
     }
     
     @Override
-    public void flush() throws IOException {
-      try {
-        super.flush();
-      } finally { 
-        io.flush();
-      }
-    }
-    
-    @Override
     public void close() throws IOException {
       try {
         super.close();
Index: lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper.java	(revision 1588643)
+++ lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper.java	(working copy)
@@ -106,12 +106,6 @@
   }
 
   @Override
-  public void flush() throws IOException {
-    dir.maybeThrowDeterministicException();
-    delegate.flush();
-  }
-
-  @Override
   public void writeByte(byte b) throws IOException {
     singleByte[0] = b;
     writeBytes(singleByte, 0, 1);
Index: lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput.java	(revision 1588643)
+++ lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput.java	(working copy)
@@ -69,12 +69,6 @@
   }
 
   @Override
-  public void flush() throws IOException {
-    sleep(flushDelayMillis);
-    delegate.flush();
-  }
-
-  @Override
   public void close() throws IOException {
     try {
       sleep(closeDelayMillis + getDelay(true));
Index: solr/core/src/java/org/apache/solr/store/blockcache/CachedIndexOutput.java
===================================================================
--- solr/core/src/java/org/apache/solr/store/blockcache/CachedIndexOutput.java	(revision 1588643)
+++ solr/core/src/java/org/apache/solr/store/blockcache/CachedIndexOutput.java	(working copy)
@@ -45,13 +45,8 @@
     this.location = directory.getFileCacheLocation(name);
     this.cache = cache;
   }
-  
+
   @Override
-  public void flushInternal() throws IOException {
-    dest.flush();
-  }
-  
-  @Override
   public void closeInternal() throws IOException {
     dest.close();
     cache.renameCacheFile(location, directory.getFileCacheName(name));
@@ -91,7 +86,7 @@
 
   @Override
   public long getChecksum() throws IOException {
-    flush();
+    flushBufferToCache();
     return dest.getChecksum();
   }
 }
Index: solr/core/src/java/org/apache/solr/store/blockcache/ReusedBufferedIndexOutput.java
===================================================================
--- solr/core/src/java/org/apache/solr/store/blockcache/ReusedBufferedIndexOutput.java	(revision 1588643)
+++ solr/core/src/java/org/apache/solr/store/blockcache/ReusedBufferedIndexOutput.java	(working copy)
@@ -64,7 +64,7 @@
   }
   
   /** Write the buffered bytes to cache */
-  private void flushBufferToCache() throws IOException {
+  protected void flushBufferToCache() throws IOException {
     writeInternal(buffer, 0, bufferLength);
     
     bufferStart += bufferLength;
@@ -72,14 +72,6 @@
     bufferPosition = 0;
   }
   
-  protected abstract void flushInternal() throws IOException;
-  
-  @Override
-  public void flush() throws IOException {
-    flushBufferToCache();
-    flushInternal();
-  }
-  
   protected abstract void closeInternal() throws IOException;
   
   @Override
Index: solr/core/src/java/org/apache/solr/store/hdfs/NullIndexOutput.java
===================================================================
--- solr/core/src/java/org/apache/solr/store/hdfs/NullIndexOutput.java	(revision 1588643)
+++ solr/core/src/java/org/apache/solr/store/hdfs/NullIndexOutput.java	(working copy)
@@ -35,11 +35,6 @@
   }
   
   @Override
-  public void flush() throws IOException {
-    
-  }
-  
-  @Override
   public long getFilePointer() {
     return pos;
   }
Index: solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java
===================================================================
--- solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java	(revision 1588643)
+++ solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest.java	(working copy)
@@ -92,7 +92,6 @@
     
     IndexOutput output = directory.createOutput("testing.test", new IOContext());
     output.writeInt(12345);
-    output.flush();
     output.close();
 
     IndexInput input = directory.openInput("testing.test", new IOContext());
