Index: contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java
===================================================================
--- contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java	(revision 812472)
+++ contrib/analyzers/common/src/java/org/apache/lucene/analysis/fr/FrenchAnalyzer.java	(working copy)
@@ -140,10 +140,6 @@
    *         {@link FrenchStemFilter} and {@link LowerCaseFilter}
    */
   public final TokenStream tokenStream(String fieldName, Reader reader) {
-
-    if (fieldName == null) throw new IllegalArgumentException("fieldName must not be null");
-    if (reader == null) throw new IllegalArgumentException("reader must not be null");
-
     TokenStream result = new StandardTokenizer(reader);
     result = new StandardFilter(result);
     result = new StopFilter(result, stoptable);
Index: contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java
===================================================================
--- contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java	(revision 812472)
+++ contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java	(working copy)
@@ -34,24 +34,6 @@
 	public void testAnalyzer() throws Exception {
 		FrenchAnalyzer fa = new FrenchAnalyzer();
 	
-		// test null reader
-		boolean iaeFlag = false;
-		try {
-			fa.tokenStream("dummy", null);
-		} catch (IllegalArgumentException iae) {
-			iaeFlag = true;
-		}
-		assertEquals(iaeFlag, true);
-
-		// test null fieldname
-		iaeFlag = false;
-		try {
-			fa.tokenStream(null, new StringReader("dummy"));
-		} catch (IllegalArgumentException iae) {
-			iaeFlag = true;
-		}
-		assertEquals(iaeFlag, true);
-
 		assertAnalyzesTo(fa, "", new String[] {
 		});
 
