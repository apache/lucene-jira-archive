Index: lucene/sandbox/src/java/org/apache/lucene/document/LatLonBoundingBox.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/sandbox/src/java/org/apache/lucene/document/LatLonBoundingBox.java	(revision 0c18acb00f3083553e782c916638dfd6bb15cfe9)
+++ lucene/sandbox/src/java/org/apache/lucene/document/LatLonBoundingBox.java	(date 1515510965000)
@@ -203,29 +203,30 @@
     sb.append(" <");
     sb.append(name);
     sb.append(':');
+    sb.append('[');
     byte[] b = ((BytesRef)fieldsData).bytes;
-    toString(b, 0);
+    sb.append(toString(b, 0));
+    sb.append(',');
+    sb.append(toString(b, 1));
+    sb.append(']');
     sb.append('>');
-
     return sb.toString();
   }
 
   private static String toString(byte[] ranges, int dimension) {
-    double min, max;
-    int minOfs = 0;
-    int maxOfs = ranges.length/2;
+    double lat, lon;
     switch (dimension) {
       case 0:
-        min = decodeLatitude(ranges, minOfs);
-        max = decodeLatitude(ranges, maxOfs);
+        lat = decodeLatitude(ranges, 0);
+        lon = decodeLongitude(ranges, 4);
         break;
       case 1:
-        min = decodeLongitude(ranges, minOfs);
-        max = decodeLongitude(ranges, maxOfs);
+        lat = decodeLatitude(ranges, 8);
+        lon = decodeLongitude(ranges, 12);
         break;
       default:
         throw new IllegalArgumentException("invalid dimension [" + dimension + "] in toString");
     }
-    return "[" + min + " : " + max + "]";
+    return lat + "," + lon;
   }
 }
Index: lucene/sandbox/src/test/org/apache/lucene/search/TestLatLonBoundingBoxQueries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/sandbox/src/test/org/apache/lucene/search/TestLatLonBoundingBoxQueries.java	(revision 0c18acb00f3083553e782c916638dfd6bb15cfe9)
+++ lucene/sandbox/src/test/org/apache/lucene/search/TestLatLonBoundingBoxQueries.java	(date 1515510918000)
@@ -97,6 +97,12 @@
     dir.close();
   }
 
+  public void testToString() {
+    LatLonBoundingBox field = new LatLonBoundingBox(FIELD_NAME, -20d, -180d, 20d, -100d);
+    String expected = "LatLonBoundingBox <geoBoundingBoxField:[-20.000000023283064,-180.0,19.99999998137355,-100.0000000745058]>";
+    assertEquals(expected, field.toString());
+  }
+
   @Override
   protected int dimension() {
     return 2;
