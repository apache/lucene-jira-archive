Index: lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer.java
===================================================================
--- lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer.java	(revision 1238798)
+++ lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer.java	(working copy)
@@ -3,6 +3,9 @@
 import java.io.StringReader;
 import java.util.Arrays;
 
+import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
+import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
+import org.apache.lucene.util._TestUtil;
 import org.apache.lucene.util.automaton.Automaton;
 import org.apache.lucene.util.automaton.BasicAutomata;
 import org.apache.lucene.util.automaton.BasicOperations;
@@ -116,4 +119,21 @@
   public void testRandomStrings() throws Exception {
     checkRandomData(random, new MockAnalyzer(random), atLeast(1000));
   }
+  
+  public void testForwardOffsets() throws Exception {
+    int num = atLeast(10000);
+    for (int i = 0; i < num; i++) {
+      String s = _TestUtil.randomHtmlishString(random, 20);
+      StringReader reader = new StringReader(s);
+      MockCharFilter charfilter = new MockCharFilter(CharReader.get(reader), 2);
+      MockAnalyzer analyzer = new MockAnalyzer(random);
+      TokenStream ts = analyzer.tokenStream("bogus", charfilter);
+      ts.reset();
+      while (ts.incrementToken()) {
+        ;
+      }
+      ts.end();
+      ts.close();
+    }
+  }
 }
Index: lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer.java
===================================================================
--- lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer.java	(revision 1238798)
+++ lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer.java	(working copy)
@@ -75,6 +75,7 @@
   };
   
   private State streamState = State.CLOSE;
+  private int lastOffset = 0; // only for asserting
   private boolean enableChecks = true;
   
   public MockTokenizer(AttributeFactory factory, Reader input, CharacterRunAutomaton runAutomaton, boolean lowerCase, int maxTokenLength) {
@@ -116,7 +117,15 @@
           }
           cp = readCodePoint();
         } while (cp >= 0 && isTokenChar(cp));
-        offsetAtt.setOffset(correctOffset(startOffset), correctOffset(endOffset));
+        
+        int correctedStartOffset = correctOffset(startOffset);
+        int correctedEndOffset = correctOffset(endOffset);
+        assert correctedStartOffset >= 0;
+        assert correctedEndOffset >= 0;
+        assert correctedStartOffset >= lastOffset;
+        lastOffset = correctedStartOffset;
+        assert correctedEndOffset >= correctedStartOffset;
+        offsetAtt.setOffset(correctedStartOffset, correctedEndOffset);
         streamState = State.INCREMENT;
         return true;
       }
@@ -162,7 +171,7 @@
   public void reset() throws IOException {
     super.reset();
     state = runAutomaton.getInitialState();
-    off = 0;
+    lastOffset = off = 0;
     assert !enableChecks || streamState != State.RESET : "double reset()";
     streamState = State.RESET;
   }
Index: lucene/src/test-framework/java/org/apache/lucene/analysis/MockCharFilter.java
===================================================================
--- lucene/src/test-framework/java/org/apache/lucene/analysis/MockCharFilter.java	(revision 1238798)
+++ lucene/src/test-framework/java/org/apache/lucene/analysis/MockCharFilter.java	(working copy)
@@ -52,7 +52,7 @@
       bufferedCh = -1;
       currentOffset++;
       
-      addOffCorrectMap(currentOffset+delta, delta-1);
+      addOffCorrectMap(currentOffset, delta-1);
       delta--;
       return ch;
     }
