diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
index f5f31d8..d381ca6 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
@@ -50,8 +50,6 @@ public class PatternParser extends DefaultHandler {
 
   char hyphenChar;
 
-  String errMsg;
-
   static final int ELEM_CLASSES = 1;
 
   static final int ELEM_EXCEPTIONS = 2;
diff --git a/lucene/backward-codecs/src/java/org/apache/lucene/index/FixBrokenOffsets.java b/lucene/backward-codecs/src/java/org/apache/lucene/index/FixBrokenOffsets.java
index 9b3615e..0133ecc 100644
--- a/lucene/backward-codecs/src/java/org/apache/lucene/index/FixBrokenOffsets.java
+++ b/lucene/backward-codecs/src/java/org/apache/lucene/index/FixBrokenOffsets.java
@@ -37,10 +37,6 @@ import org.apache.lucene.util.SuppressForbidden;
 public class FixBrokenOffsets {
   public SegmentInfos infos;
 
-  FSDirectory fsDir;
-
-  Path dir;
-
   @SuppressForbidden(reason = "System.out required: command line tool")
   public static void main(String[] args) throws IOException {
     if (args.length < 2) {
diff --git a/lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.java b/lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.java
index f19cd2c..98d51a8 100644
--- a/lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.java
+++ b/lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.java
@@ -206,7 +206,6 @@ public class BlockTermsWriter extends FieldsConsumer implements Closeable {
     private final FixedBitSet docsSeen;
     long sumTotalTermFreq;
     long sumDocFreq;
-    int docCount;
     int longsSize;
 
     private TermEntry[] pendingTerms;
diff --git a/lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer.java b/lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer.java
index fe6c8f6..73e6d58 100644
--- a/lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer.java
+++ b/lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesProducer.java
@@ -743,7 +743,6 @@ class DirectDocValuesProducer extends DocValuesProducer {
     long missingOffset;
     long missingBytes;
     byte byteWidth;
-    int packedIntsVersion;
   }
 
   static class BinaryEntry {
@@ -752,10 +751,6 @@ class DirectDocValuesProducer extends DocValuesProducer {
     long missingBytes;
     int count;
     int numBytes;
-    int minLength;
-    int maxLength;
-    int packedIntsVersion;
-    int blockSize;
   }
   
   static class SortedEntry {
@@ -773,9 +768,4 @@ class DirectDocValuesProducer extends DocValuesProducer {
     NumericEntry docToAddress;
     NumericEntry values;
   }
-  
-  static class FSTEntry {
-    long offset;
-    long numOrds;
-  }
 }
diff --git a/lucene/core/src/java/org/apache/lucene/search/PhrasePositions.java b/lucene/core/src/java/org/apache/lucene/search/PhrasePositions.java
index 640cd5f..56cd2c9 100644
--- a/lucene/core/src/java/org/apache/lucene/search/PhrasePositions.java
+++ b/lucene/core/src/java/org/apache/lucene/search/PhrasePositions.java
@@ -29,7 +29,6 @@ final class PhrasePositions {
   int offset;           // position in phrase
   final int ord;                                  // unique across all PhrasePositions instances
   final PostingsEnum postings;            // stream of docs & positions
-  PhrasePositions next;                           // used to make lists
   int rptGroup = -1; // >=0 indicates that this is a repeating PP
   int rptInd; // index in the rptGroup
   final Term[] terms; // for repetitions initialization 
diff --git a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java
index 6c950b8..1312679 100644
--- a/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java
+++ b/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java
@@ -55,7 +55,6 @@ public class TestIndexWriterWithThreads extends LuceneTestCase {
 
     boolean diskFull;
     Throwable error;
-    AlreadyClosedException ace;
     IndexWriter writer;
     boolean noErrors;
     volatile int addCount;
diff --git a/lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat.java b/lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat.java
index d173762..a5eac79 100644
--- a/lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat.java
+++ b/lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat.java
@@ -155,7 +155,6 @@ public class TestIDVersionPostingsFormat extends LuceneTestCase {
       }
       ids = new IDSource() {
           final int radix = TestUtil.nextInt(random(), Character.MIN_RADIX, Character.MAX_RADIX);
-          int upto;
           @Override
           public String next() {
             return Long.toString(random().nextLong() & 0x3ffffffffffffffL, radix);
@@ -169,8 +168,6 @@ public class TestIDVersionPostingsFormat extends LuceneTestCase {
       }
       ids = new IDSource() {
           final int radix = TestUtil.nextInt(random(), Character.MIN_RADIX, Character.MAX_RADIX);
-          final String zeroPad = String.format(Locale.ROOT, "%015d", 0);
-          int upto;
           @Override
           public String next() {
             return Long.toString(random().nextLong() & 0x3ffffffffffffffL, radix);
diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger.java
index 2fd9303..e9ab99e 100644
--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger.java
+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DebugLogger.java
@@ -254,7 +254,7 @@ class DebugLogger {
   private static class DebugInfo {
     String name;
 
-    int tCount, rowCount;
+    int rowCount;
 
     NamedList lst;
 
diff --git a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
index 72da77a..fbb92d2 100644
--- a/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
+++ b/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathEntityProcessor.java
@@ -249,8 +249,6 @@ public class TestXPathEntityProcessor extends AbstractDataImportHandlerTestCase
     Context c = getContext(null,
         new VariableResolver(), getDataSource(cdData), Context.FULL_DUMP, fields, entityAttrs);
     XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor() {
-      private int count;
-      
       @Override
       protected Map<String, Object> readRow(Map<String, Object> record,
           String xpath) {
diff --git a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.java
index 0616ac8..f61d0b7 100644
--- a/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.java
+++ b/solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.java
@@ -439,9 +439,6 @@ public final class ZookeeperInfoHandler extends RequestHandlerBase {
     final Writer out = new OutputStreamWriter(baos,  StandardCharsets.UTF_8);
     SolrZkClient zkClient;
 
-    int level;
-    int maxData = 95;
-
     PageOfCollections page;
     PagedCollectionSupport pagingSupport;
     ZkController zkController;
diff --git a/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java b/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java
index 2b8373a..f6d6833 100644
--- a/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java
+++ b/solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats.java
@@ -52,7 +52,6 @@ public class FieldFacetStats {
   List<HashMap<String, Integer>> facetStatsTerms;
 
   final LeafReader topLevelReader;
-  LeafReaderContext leave;
   final ValueSource valueSource;
   LeafReaderContext context;
   FunctionValues values;
diff --git a/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java b/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java
index 326220c..48ca0d7 100644
--- a/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java
+++ b/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java
@@ -20,7 +20,6 @@ import java.io.CharArrayWriter;
 import java.io.IOException;
 import java.io.Writer;
 import java.util.ArrayList;
-import java.util.Calendar;
 import java.util.Collection;
 import java.util.Date;
 import java.util.Iterator;
@@ -31,7 +30,6 @@ import java.util.Map;
 
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Sets;
-import org.apache.lucene.index.IndexableField;
 import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrDocumentList;
 import org.apache.solr.common.SolrException;
@@ -152,17 +150,10 @@ class CSVWriter extends TextResponseWriter {
     String name;
     SchemaField sf;
     CSVSharedBufPrinter mvPrinter;  // printer used to encode multiple values in a single CSV value
-
-    // used to collect values
-    List<IndexableField> values = new ArrayList<>(1);  // low starting amount in case there are many fields
-    int tmp;
   }
 
-  int pass;
   Map<String,CSVField> csvFields = new LinkedHashMap<>();
 
-  Calendar cal;  // for formatting date objects
-
   CSVStrategy strategy;  // strategy for encoding the fields of documents
   CSVPrinter printer;
   ResettableFastWriter mvWriter = new ResettableFastWriter();  // writer used for multi-valued fields
diff --git a/solr/core/src/java/org/apache/solr/search/Grouping.java b/solr/core/src/java/org/apache/solr/search/Grouping.java
index 302383a..9cf9ebc 100644
--- a/solr/core/src/java/org/apache/solr/search/Grouping.java
+++ b/solr/core/src/java/org/apache/solr/search/Grouping.java
@@ -103,8 +103,6 @@ public class Grouping {
   private boolean getGroupedDocSet;
   private boolean getDocList; // doclist needed for debugging or highlighting
   private Query query;
-  private DocSet filter;
-  private Filter luceneFilter;
   private NamedList grouped = new SimpleOrderedMap();
   private Set<Integer> idSet = new LinkedHashSet<>();  // used for tracking unique docs when we need a doclist
   private int maxMatches;  // max number of matches from any grouping command
diff --git a/solr/core/src/java/org/apache/solr/search/HashDocSet.java b/solr/core/src/java/org/apache/solr/search/HashDocSet.java
index 44aba6f..c9a60e2 100644
--- a/solr/core/src/java/org/apache/solr/search/HashDocSet.java
+++ b/solr/core/src/java/org/apache/solr/search/HashDocSet.java
@@ -123,7 +123,6 @@ public final class HashDocSet extends DocSetBase {
   public DocIterator iterator() {
     return new DocIterator() {
       int pos=0;
-      int doc;
       { goNext(); }
 
       @Override
diff --git a/solr/core/src/java/org/apache/solr/search/JoinQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/JoinQParserPlugin.java
index bf64060..fe4fff8 100644
--- a/solr/core/src/java/org/apache/solr/search/JoinQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/JoinQParserPlugin.java
@@ -38,7 +38,6 @@ import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.Scorer;
 import org.apache.lucene.search.Weight;
-import org.apache.lucene.search.similarities.Similarity;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.FixedBitSet;
@@ -155,7 +154,6 @@ class JoinQuery extends Query {
     SolrIndexSearcher fromSearcher;
     RefCounted<SolrIndexSearcher> fromRef;
     SolrIndexSearcher toSearcher;
-    private Similarity similarity;
     ResponseBuilder rb;
 
     public JoinQueryWeight(SolrIndexSearcher searcher, float boost) {
diff --git a/solr/core/src/java/org/apache/solr/search/NestedQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/NestedQParserPlugin.java
index 9b0dc5a..c505c15 100644
--- a/solr/core/src/java/org/apache/solr/search/NestedQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/NestedQParserPlugin.java
@@ -16,7 +16,6 @@
  */
 package org.apache.solr.search;
 
-import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.Query;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
@@ -38,8 +37,6 @@ public class NestedQParserPlugin extends QParserPlugin {
   public QParser createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {
     return new QParser(qstr, localParams, params, req) {
       QParser baseParser;
-      ValueSource vs;
-      String b;
 
       @Override
       public Query parse() throws SyntaxError {
diff --git a/solr/core/src/java/org/apache/solr/search/SurroundQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/SurroundQParserPlugin.java
index a90cb25..8b14ea8 100644
--- a/solr/core/src/java/org/apache/solr/search/SurroundQParserPlugin.java
+++ b/solr/core/src/java/org/apache/solr/search/SurroundQParserPlugin.java
@@ -56,8 +56,6 @@ public class SurroundQParserPlugin extends QParserPlugin {
     static final int DEFMAXBASICQUERIES = 1000;
     static final String MBQParam = "maxBasicQueries";
     
-    String sortStr;
-    SolrQueryParser lparser;
     int maxBasicQueries;
 
     public SurroundQParser(String qstr, SolrParams localParams,
diff --git a/solr/core/src/java/org/apache/solr/search/facet/FieldUtil.java b/solr/core/src/java/org/apache/solr/search/facet/FieldUtil.java
index 389b6d7..21b7e25 100644
--- a/solr/core/src/java/org/apache/solr/search/facet/FieldUtil.java
+++ b/solr/core/src/java/org/apache/solr/search/facet/FieldUtil.java
@@ -163,7 +163,6 @@ public class FieldUtil {
   public static class DVOrdValues extends OrdValues {
     SortedDocValues vals;
     DocIdSetIterator disi;
-    int valDoc;
 
     public DVOrdValues(SortedDocValues vals, DocIdSetIterator disi) {
       this.vals = vals;
diff --git a/solr/core/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory.java b/solr/core/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory.java
index 40ef398..e4ada2c 100644
--- a/solr/core/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory.java
+++ b/solr/core/src/java/org/apache/solr/update/processor/SignatureUpdateProcessorFactory.java
@@ -43,7 +43,6 @@ public class SignatureUpdateProcessorFactory
   private List<String> sigFields;
   private String signatureField;
 
-  private Term signatureTerm;
   private boolean enabled = true;
   private String signatureClass;
   private boolean overwriteDupes;
diff --git a/solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest.java b/solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest.java
index b4ec29f..8509301 100644
--- a/solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest.java
+++ b/solr/core/src/test/org/apache/solr/core/OpenCloseCoreStressTest.java
@@ -78,8 +78,6 @@ public class OpenCloseCoreStressTest extends SolrTestCaseJ4 {
   List<HttpSolrClient> indexingClients = new ArrayList<>(indexingThreads);
   List<HttpSolrClient> queryingClients = new ArrayList<>(queryThreads);
 
-  static String savedFactory;
-  
   @BeforeClass
   public static void beforeClass() {
 
diff --git a/solr/core/src/test/org/apache/solr/handler/admin/TestCollectionAPIs.java b/solr/core/src/test/org/apache/solr/handler/admin/TestCollectionAPIs.java
index 7f072ec..26387ec 100644
--- a/solr/core/src/test/org/apache/solr/handler/admin/TestCollectionAPIs.java
+++ b/solr/core/src/test/org/apache/solr/handler/admin/TestCollectionAPIs.java
@@ -210,7 +210,6 @@ public class TestCollectionAPIs extends SolrTestCaseJ4 {
   }
 
   static class MockCollectionsHandler extends CollectionsHandler {
-    LocalSolrQueryRequest req;
 
     MockCollectionsHandler() {
     }
diff --git a/solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java b/solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java
index ed7a9e7..c615220 100644
--- a/solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java
+++ b/solr/core/src/test/org/apache/solr/handler/component/SuggestComponentTest.java
@@ -30,8 +30,6 @@ public class SuggestComponentTest extends SolrTestCaseJ4 {
 
   private static final String rh = "/suggest";
 
-  private static CoreContainer cc;
-
   @BeforeClass
   public static void beforeClass() throws Exception {
     initCore("solrconfig-suggestercomponent.xml","schema.xml");
diff --git a/solr/core/src/test/org/apache/solr/util/UtilsToolTest.java b/solr/core/src/test/org/apache/solr/util/UtilsToolTest.java
index 0ca65ed..84d5f57 100644
--- a/solr/core/src/test/org/apache/solr/util/UtilsToolTest.java
+++ b/solr/core/src/test/org/apache/solr/util/UtilsToolTest.java
@@ -42,7 +42,6 @@ import static org.apache.solr.util.SolrCLI.parseCmdLine;
 public class UtilsToolTest extends SolrTestCaseJ4 {
 
   private Path dir;
-  private SolrCLI.UtilsTool tool;
   private List<String> files = Arrays.asList(
       "solr.log", 
       "solr.log.1", 
diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream.java
index e6c2ee3..301b4c8 100644
--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream.java
+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream.java
@@ -20,7 +20,6 @@ import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.Reader;
-import java.util.List;
 import java.util.Map;
 
 import org.apache.solr.client.solrj.SolrClient;
@@ -41,7 +40,6 @@ import org.noggit.ObjectBuilder;
 */
 
 public class JSONTupleStream implements TupleStreamParser {
-  private List<String> path;  // future... for more general stream handling
   private Reader reader;
   private JSONParser parser;
   private boolean atDocs;
diff --git a/solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java b/solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java
index 1f16415..9508a27 100644
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/MergeIndexesExampleTestBase.java
@@ -44,7 +44,6 @@ public abstract class MergeIndexesExampleTestBase extends SolrExampleTestBase {
 
   protected CoreContainer cores;
   private String saveProp;
-  private File dataDir1;
   private File dataDir2;
 
   private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());
