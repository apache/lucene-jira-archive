Index: lucene/src/java/org/apache/lucene/codecs/PostingsConsumer.java
===================================================================
--- lucene/src/java/org/apache/lucene/codecs/PostingsConsumer.java	(revision 1232980)
+++ lucene/src/java/org/apache/lucene/codecs/PostingsConsumer.java	(working copy)
@@ -33,9 +33,7 @@
 
 public abstract class PostingsConsumer {
 
-  /** Adds a new doc in this term.  If this field omits term
-   *  freqs & positions then termDocFreq should be ignored,
-   *  and, finishDoc will not be called. */
+  /** Adds a new doc in this term. */
   public abstract void startDoc(int docID, int termDocFreq) throws IOException;
 
   public static class PostingsMergeState {
@@ -52,8 +50,7 @@
   public abstract void addPosition(int position, BytesRef payload, int startOffset, int endOffset) throws IOException;
 
   /** Called when we are done adding positions & payloads
-   *  for each doc.  Not called  when the field omits term
-   *  freq and positions. */
+   *  for each doc. */
   public abstract void finishDoc() throws IOException;
 
   /** Default merge impl: append documents, mapping around
Index: lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField.java
===================================================================
--- lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField.java	(revision 1232980)
+++ lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField.java	(working copy)
@@ -517,9 +517,8 @@
               }
             }
           }
-
-          postingsConsumer.finishDoc();
         }
+        postingsConsumer.finishDoc();
       }
       termsConsumer.finishTerm(text, new TermStats(numDocs, totTF));
       sumTotalTermFreq += totTF;
