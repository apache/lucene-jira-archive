Index: lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsFormat.java
===================================================================
--- lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsFormat.java	(revision 1396626)
+++ lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsFormat.java	(working copy)
@@ -306,10 +306,10 @@
  *       PayloadLength is stored at the current position, then it indicates the length
  *       of this payload. If PayloadLength is not stored, then this payload has the same
  *       length as the payload at the previous position.</li>
- *   <li>OffsetDelta is the difference between this position's startOffset from the
+ *   <li>OffsetDelta/2 is the difference between this position's startOffset from the
  *       previous occurrence (or zero, if this is the first occurrence in this document).
- *       OffsetLength follows, encoding the difference between endOffset and startOffset. 
- *       Offset data is only written for
+ *       If OffsetDelta is odd, then the length (endOffset-startOffset) differs from the
+ *       previous occurrence and an OffsetLength follows. Offset data is only written for
  *       {@link IndexOptions#DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS}.</li>
  * </ul>
  * </dd>
Index: lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter.java
===================================================================
--- lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter.java	(revision 1396626)
+++ lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsWriter.java	(working copy)
@@ -424,7 +424,8 @@
         // majority)
 
         // vInt encode the remaining positions/payloads/offsets:
-        int lastPayloadLength = -1;
+        int lastPayloadLength = -1;  // force first payload length to be written
+        int lastOffsetLength = -1;   // force first offset length to be written
         int payloadBytesReadUpto = 0;
         for(int i=0;i<posBufferUpto;i++) {
           final int posDelta = posDeltaBuffer[i];
@@ -457,8 +458,15 @@
             // if (DEBUG) {
             //   System.out.println("          write offset @ pos.fp=" + posOut.getFilePointer());
             // }
-            posOut.writeVInt(offsetStartDeltaBuffer[i]);
-            posOut.writeVInt(offsetLengthBuffer[i]);
+            int delta = offsetStartDeltaBuffer[i];
+            int length = offsetLengthBuffer[i];
+            if (length == lastOffsetLength) {
+              posOut.writeVInt(delta << 1);
+            } else {
+              posOut.writeVInt(delta << 1 | 1);
+              posOut.writeVInt(length);
+              lastOffsetLength = length;
+            }
           }
         }
 
Index: lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.java
===================================================================
--- lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.java	(revision 1396626)
+++ lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.java	(working copy)
@@ -729,8 +729,10 @@
             posDeltaBuffer[i] = code;
           }
           if (indexHasOffsets) {
-            posIn.readVInt();
-            posIn.readVInt();
+            if ((posIn.readVInt() & 1) != 0) {
+              // offset length changed
+              posIn.readVInt();
+            }
           }
         }
       } else {
@@ -1149,6 +1151,7 @@
         // }
         final int count = posIn.readVInt();
         int payloadLength = 0;
+        int offsetLength = 0;
         payloadByteUpto = 0;
         for(int i=0;i<count;i++) {
           int code = posIn.readVInt();
@@ -1177,8 +1180,12 @@
             // if (DEBUG) {
             //   System.out.println("        i=" + i + " read offsets from posIn.fp=" + posIn.getFilePointer());
             // }
-            offsetStartDeltaBuffer[i] = posIn.readVInt();
-            offsetLengthBuffer[i] = posIn.readVInt();
+            int deltaCode = posIn.readVInt();
+            if ((deltaCode & 1) != 0) {
+              offsetLength = posIn.readVInt();
+            }
+            offsetStartDeltaBuffer[i] = deltaCode >>> 1;
+            offsetLengthBuffer[i] = offsetLength;
             // if (DEBUG) {
             //   System.out.println("          startOffDelta=" + offsetStartDeltaBuffer[i] + " offsetLen=" + offsetLengthBuffer[i]);
             // }
