Index: Field.java
===================================================================
RCS file: /home/cvspublic/jakarta-lucene/src/java/org/apache/lucene/document/Field.java,v
retrieving revision 1.14
diff -u -r1.14 Field.java
--- Field.java	16 Apr 2004 09:48:25 -0000	1.14
+++ Field.java	10 Jul 2004 20:27:46 -0000
@@ -89,23 +89,36 @@
     return new Field(name, value, true, false, false);
   }
 
-  /** Constructs a String-valued Field that is tokenized and indexed,
-    and is stored in the index, for return with hits.  Useful for short text
-    fields, like "title" or "subject". Term vector will not be stored for this field. */
+  /** @deprecated Use {@link #StoredText(String, String)} instead
+    */
   public static final Field Text(String name, String value) {
     return Text(name, value, false);
   }
 
+  /** Constructs a String-valued Field that is tokenized and indexed,
+    and is stored in the index, for return with hits.  Useful for short text
+    fields, like "title" or "subject". Term vector will not be stored for this field.
+  */
+  public static final Field StoredText(String name, String value) {
+    return StoredText(name, value, false);
+  }
+
   /** Constructs a Date-valued Field that is not tokenized and is indexed,
       and stored in the index, for return with hits. */
   public static final Field Keyword(String name, Date value) {
     return new Field(name, DateField.dateToString(value), true, true, false);
   }
 
+  /** @deprecated Use {@link #StoredText(String, String, boolean)} instead
+    */
+  public static final Field Text(String name, String value, boolean storeTermVector) {
+    return new Field(name, value, true, true, true, storeTermVector);
+  }
+
   /** Constructs a String-valued Field that is tokenized and indexed,
     and is stored in the index, for return with hits.  Useful for short text
     fields, like "title" or "subject". */
-  public static final Field Text(String name, String value, boolean storeTermVector) {
+  public static final Field StoredText(String name, String value, boolean storeTermVector) {
     return new Field(name, value, true, true, true, storeTermVector);
   }
 
