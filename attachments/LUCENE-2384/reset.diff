diff -u ../lucene-3.0.1-orig/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java ./src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java
--- ../lucene-3.0.1-orig/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java	2010-04-08 12:36:27.151786600 +0200
+++ ./src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java	2010-04-08 12:22:46.322879900 +0200
@@ -211,7 +211,7 @@
   @Override
   public void reset() throws IOException {
     super.reset();
-    scanner.yyreset(input);
+    scanner.reset(input,0);
   }
 
   @Override
diff -u ../lucene-3.0.1-orig/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex ./src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex
--- ../lucene-3.0.1-orig/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex	2010-04-08 12:36:27.180786600 +0200
+++ ./src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex	2010-04-08 12:21:52.853533500 +0200
@@ -34,6 +34,7 @@
 
 %%
 
+%buffer 0
 %class StandardTokenizerImpl
 %unicode
 %integer
@@ -78,6 +79,22 @@
   t.setTermBuffer(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
 }
 
+/**
+ * Set the input for the lexer. The size parameter really speeds things up,
+ * because by default, the lexer allocates an internal buffer of 16k. For
+ * most strings, this is unnecessarily large. If the size param is 0 or greater
+ * than 16k, then the buffer is set to 16k. If the size param is smaller, then
+ * the buf will be set to the exact size.
+ * @param r the reader that provides the data
+ * @param the size of the data in the reader.
+ */
+public void reset(java.io.Reader r, int size) {
+  if (size == 0 || size > 16384)
+          size = 16384;
+  zzBuffer = new char[size];
+  yyreset(r);
+}
+
 %}
 
 THAI       = [\u0E00-\u0E59]
