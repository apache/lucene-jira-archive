Index: lucene/core/src/java/org/apache/lucene/search/spans/SpanQuery.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/search/spans/SpanQuery.java	(revision 1725191)
+++ lucene/core/src/java/org/apache/lucene/search/spans/SpanQuery.java	(working copy)
@@ -17,16 +17,16 @@
  * limitations under the License.
  */
 
+import java.io.IOException;
+import java.util.Collection;
+import java.util.Map;
+import java.util.TreeMap;
+
 import org.apache.lucene.index.Term;
 import org.apache.lucene.index.TermContext;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Query;
 
-import java.io.IOException;
-import java.util.Collection;
-import java.util.Map;
-import java.util.TreeMap;
-
 /** Base class for span-based queries. */
 public abstract class SpanQuery extends Query {
 
@@ -42,7 +42,7 @@
    * Build a map of terms to termcontexts, for use in constructing SpanWeights
    * @lucene.internal
    */
-  protected static Map<Term, TermContext> getTermContexts(SpanWeight... weights) {
+  public static Map<Term, TermContext> getTermContexts(SpanWeight... weights) {
     Map<Term, TermContext> terms = new TreeMap<>();
     for (SpanWeight w : weights) {
       w.extractTermContexts(terms);
@@ -54,7 +54,7 @@
    * Build a map of terms to termcontexts, for use in constructing SpanWeights
    * @lucene.internal
    */
-  protected static Map<Term, TermContext> getTermContexts(Collection<SpanWeight> weights) {
+  public static Map<Term, TermContext> getTermContexts(Collection<SpanWeight> weights) {
     Map<Term, TermContext> terms = new TreeMap<>();
     for (SpanWeight w : weights) {
       w.extractTermContexts(terms);
Index: lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java	(revision 1725191)
+++ lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java	(working copy)
@@ -47,6 +47,11 @@
     this.docScorer = docScorer;
   }
 
+  /** return the Spans for this Scorer **/
+  public Spans getSpans() {
+    return spans;
+  }
+
   @Override
   public int docID() {
     return spans.docID();
