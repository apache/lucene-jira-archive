Index: DB4oController.java
===================================================================
--- DB4oController.java	(revision 430578)
+++ DB4oController.java	(working copy)
@@ -166,6 +166,8 @@
         Db4o.configure().optimizeNativeQueries(false);
         if (this.runAsServer) {
             this.server = Db4o.openServer(this.filePath, this.port);
+            if(this.server == null)
+                throw new RuntimeException("Can't create server at confiugred destination -- "+this.filePath);
             this.server.grantAccess(this.user, this.password);
         } else {
             InvocationHandler handler = new ObjectServerDecorator(this.user,
Index: DB4oStorage.java
===================================================================
--- DB4oStorage.java	(revision 430578)
+++ DB4oStorage.java	(working copy)
@@ -46,6 +46,8 @@
 public class DB4oStorage implements Storage {
     private static final Log LOG = LogFactory.getLog(DB4oStorage.class);
 
+    private static final int RENDER_ACTIVATION_DEPTH = 100;
+
     private final ObjectContainer container;
 
     private final StorageController controller;
@@ -309,6 +311,7 @@
         for (DB4oEntry entry : sublist) {
             persistentFeed.getEntries().add(clearDynamicElements(entry.getEntry()));
         }
+        this.container.activate(persistentFeed,RENDER_ACTIVATION_DEPTH);
         return persistentFeed;
 
     }
@@ -361,6 +364,7 @@
             throw new StorageException("can not retrieve entry -- id is null");
         if (LOG.isInfoEnabled())
             LOG.info("Retrieving entry for entryID: " + entry.getId());
+        this.container.activate(entry.getEntry(),RENDER_ACTIVATION_DEPTH);
         return clearDynamicElements(getInternalEntry(entry.getId()).getEntry());
     }
 
