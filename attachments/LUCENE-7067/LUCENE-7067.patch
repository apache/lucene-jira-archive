diff --git a/lucene/core/src/java/org/apache/lucene/codecs/PointWriter.java b/lucene/core/src/java/org/apache/lucene/codecs/PointWriter.java
index d244093..c2972a8 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/PointWriter.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/PointWriter.java
@@ -131,6 +131,13 @@ public abstract class PointWriter implements Closeable {
   /** Default merge implementation to merge incoming points readers by visiting all their points and
    *  adding to this writer */
   public void merge(MergeState mergeState) throws IOException {
+    // check each incoming reader
+    for (PointReader reader : mergeState.pointReaders) {
+      if (reader != null) {
+        reader.checkIntegrity();
+      }
+    }
+    // merge field at a time
     for (FieldInfo fieldInfo : mergeState.mergeFieldInfos) {
       if (fieldInfo.getPointDimensionCount() != 0) {
         mergeOneField(mergeState, fieldInfo);
diff --git a/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointWriter.java b/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointWriter.java
index 63fc134..8a00d4c 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointWriter.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointWriter.java
@@ -122,6 +122,11 @@ public class Lucene60PointWriter extends PointWriter implements Closeable {
         return;
       }
     }
+    for (PointReader reader : mergeState.pointReaders) {
+      if (reader != null) {
+        reader.checkIntegrity();
+      }
+    }
 
     for (FieldInfo fieldInfo : mergeState.mergeFieldInfos) {
       if (fieldInfo.getPointDimensionCount() != 0) {
diff --git a/lucene/core/src/java/org/apache/lucene/index/CodecReader.java b/lucene/core/src/java/org/apache/lucene/index/CodecReader.java
index 8a492c2..eb53648 100644
--- a/lucene/core/src/java/org/apache/lucene/index/CodecReader.java
+++ b/lucene/core/src/java/org/apache/lucene/index/CodecReader.java
@@ -392,5 +392,10 @@ public abstract class CodecReader extends LeafReader implements Accountable {
     if (getTermVectorsReader() != null) {
       getTermVectorsReader().checkIntegrity();
     }
+
+    // points
+    if (getPointReader() != null) {
+      getPointReader().checkIntegrity();
+    }
   }
 }
