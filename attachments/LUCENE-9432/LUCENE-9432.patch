diff --git a/lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum.java b/lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum.java
index 587aaeb12e6..f832dcc0f1f 100644
--- a/lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum.java
+++ b/lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum.java
@@ -19,6 +19,8 @@ package org.apache.lucene.codecs.blocktree;
 
 import java.io.IOException;
 import java.io.PrintStream;
+import java.util.Iterator;
+import java.util.LinkedList;
 
 import org.apache.lucene.codecs.BlockTermState;
 import org.apache.lucene.index.BaseTermsEnum;
@@ -41,7 +43,7 @@ final class SegmentTermsEnum extends BaseTermsEnum {
   // Lazy init:
   IndexInput in;
 
-  private SegmentTermsEnumFrame[] stack;
+  private LinkedList<SegmentTermsEnumFrame> stack;
   private final SegmentTermsEnumFrame staticFrame;
   SegmentTermsEnumFrame currentFrame;
   boolean termExists;
@@ -71,8 +73,8 @@ final class SegmentTermsEnum extends BaseTermsEnum {
     // if (DEBUG) {
     //   System.out.println("BTTR.init seg=" + fr.parent.segment);
     // }
-    stack = new SegmentTermsEnumFrame[0];
-        
+    stack = new LinkedList<>();
+
     // Used to hold seek by TermState, or cached seek
     staticFrame = new SegmentTermsEnumFrame(this, -1);
 
@@ -160,7 +162,7 @@ final class SegmentTermsEnum extends BaseTermsEnum {
             break allTerms;
           }
           final long lastFP = currentFrame.fpOrig;
-          currentFrame = stack[currentFrame.ord-1];
+          currentFrame = stack.get(currentFrame.ord-1);
           assert lastFP == currentFrame.lastSubFP;
           // if (DEBUG) {
           //   System.out.println("  reset validIndexPrefix=" + validIndexPrefix);
@@ -206,16 +208,12 @@ final class SegmentTermsEnum extends BaseTermsEnum {
   }
 
   private SegmentTermsEnumFrame getFrame(int ord) throws IOException {
-    if (ord >= stack.length) {
-      final SegmentTermsEnumFrame[] next = new SegmentTermsEnumFrame[ArrayUtil.oversize(1+ord, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];
-      System.arraycopy(stack, 0, next, 0, stack.length);
-      for(int stackOrd=stack.length;stackOrd<next.length;stackOrd++) {
-        next[stackOrd] = new SegmentTermsEnumFrame(this, stackOrd);
-      }
-      stack = next;
+    while(ord >= stack.size()){
+      stack.addLast(new SegmentTermsEnumFrame(this, stack.size()));
     }
-    assert stack[ord].ord == ord;
-    return stack[ord];
+    SegmentTermsEnumFrame frame = stack.get(ord);
+    assert frame.ord == ord;
+    return frame;
   }
 
   private FST.Arc<BytesRef> getArc(int ord) {
@@ -357,8 +355,9 @@ final class SegmentTermsEnum extends BaseTermsEnum {
       assert arc.isFinal();
       output = arc.output();
       targetUpto = 0;
-          
-      SegmentTermsEnumFrame lastFrame = stack[0];
+
+      Iterator<SegmentTermsEnumFrame> stackIterator = stack.listIterator();
+      SegmentTermsEnumFrame lastFrame = stackIterator.next();
       assert validIndexPrefix <= term.length();
 
       final int targetLimit = Math.min(target.length, validIndexPrefix);
@@ -383,7 +382,7 @@ final class SegmentTermsEnum extends BaseTermsEnum {
           output = BlockTreeTermsReader.FST_OUTPUTS.add(output, arc.output());
         }
         if (arc.isFinal()) {
-          lastFrame = stack[1+lastFrame.ord];
+          lastFrame = stackIterator.next();
         }
         targetUpto++;
       }
@@ -614,8 +613,9 @@ final class SegmentTermsEnum extends BaseTermsEnum {
       assert arc.isFinal();
       output = arc.output();
       targetUpto = 0;
-          
-      SegmentTermsEnumFrame lastFrame = stack[0];
+
+      Iterator<SegmentTermsEnumFrame> frameIterator = stack.listIterator();
+      SegmentTermsEnumFrame lastFrame = frameIterator.next();
       assert validIndexPrefix <= term.length();
 
       final int targetLimit = Math.min(target.length, validIndexPrefix);
@@ -645,7 +645,7 @@ final class SegmentTermsEnum extends BaseTermsEnum {
           output = BlockTreeTermsReader.FST_OUTPUTS.add(output, arc.output());
         }
         if (arc.isFinal()) {
-          lastFrame = stack[1+lastFrame.ord];
+          lastFrame = frameIterator.next();
         }
         targetUpto++;
       }
@@ -934,7 +934,7 @@ final class SegmentTermsEnum extends BaseTermsEnum {
           return null;
         }
         final long lastFP = currentFrame.fpOrig;
-        currentFrame = stack[currentFrame.ord-1];
+        currentFrame = stack.get(currentFrame.ord-1);
 
         if (currentFrame.nextEnt == -1 || currentFrame.lastSubFP != lastFP) {
           // We popped into a frame that's not loaded
