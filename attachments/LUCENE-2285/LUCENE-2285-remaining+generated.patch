Index: contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKTokenizer.java
===================================================================
--- contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKTokenizer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKTokenizer.java	(working copy)
@@ -197,7 +197,7 @@
                     || (ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS)
                ) {
                 if (ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS) {
-                  int i = (int) c;
+                  int i = c;
                   if (i >= 65281 && i <= 65374) {
                     // convert certain HALFWIDTH_AND_FULLWIDTH_FORMS to BASIC_LATIN
                     i = i - 65248;
Index: contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree.java
===================================================================
--- contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree.java	(working copy)
@@ -249,7 +249,7 @@
   public static int strcmp(String str, char[] a, int start) {
     int i, d, len = str.length();
     for (i = 0; i < len; i++) {
-      d = (int) str.charAt(i) - a[start + i];
+      d = str.charAt(i) - a[start + i];
       if (d != 0) {
         return d;
       }
@@ -258,7 +258,7 @@
       }
     }
     if (a[start + i] != 0) {
-      return (int) -a[start + i];
+      return -a[start + i];
     }
     return 0;
 
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/Among.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/Among.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/Among.java	(working copy)
@@ -60,4 +60,4 @@
     public final Method method; /* method to use if substring matches */
     public final SnowballProgram methodobject; /* object to invoke method on */
    
-};
+}
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DanishStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DanishStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DanishStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class DanishStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -252,14 +253,14 @@
                 // [, line 66
                 ket = cursor;
                 // literal, line 66
-                if (!(eq_s_b(2, "st")))
+                if (!(eq_s_b(2, (CharSequence) "st")))
                 {
                     break lab0;
                 }
                 // ], line 66
                 bra = cursor;
                 // literal, line 66
-                if (!(eq_s_b(2, "ig")))
+                if (!(eq_s_b(2, (CharSequence) "ig")))
                 {
                     break lab0;
                 }
@@ -312,7 +313,7 @@
                 case 2:
                     // (, line 72
                     // <-, line 72
-                    slice_from("l\u00F8s");
+                    slice_from((CharSequence) "l\u00F8s");
                     break;
             }
             return true;
@@ -347,7 +348,7 @@
             S_ch = slice_to(S_ch);
             limit_backward = v_2;
             // name ch, line 77
-            if (!(eq_v_b(S_ch)))
+            if (!(eq_v_b((CharSequence) S_ch)))
             {
                 return false;
             }
@@ -356,6 +357,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class DutchStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -109,27 +110,27 @@
                         case 1:
                             // (, line 45
                             // <-, line 45
-                            slice_from("a");
+                            slice_from((CharSequence) "a");
                             break;
                         case 2:
                             // (, line 47
                             // <-, line 47
-                            slice_from("e");
+                            slice_from((CharSequence) "e");
                             break;
                         case 3:
                             // (, line 49
                             // <-, line 49
-                            slice_from("i");
+                            slice_from((CharSequence) "i");
                             break;
                         case 4:
                             // (, line 51
                             // <-, line 51
-                            slice_from("o");
+                            slice_from((CharSequence) "o");
                             break;
                         case 5:
                             // (, line 53
                             // <-, line 53
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 6:
                             // (, line 54
@@ -154,7 +155,7 @@
                 // [, line 57
                 bra = cursor;
                 // literal, line 57
-                if (!(eq_s(1, "y")))
+                if (!(eq_s(1, (CharSequence) "y")))
                 {
                     cursor = v_3;
                     break lab2;
@@ -162,7 +163,7 @@
                 // ], line 57
                 ket = cursor;
                 // <-, line 57
-                slice_from("Y");
+                slice_from((CharSequence) "Y");
             } while (false);
             // repeat, line 58
             replab3: while(true)
@@ -187,7 +188,7 @@
                                 lab8: do {
                                     // (, line 59
                                     // literal, line 59
-                                    if (!(eq_s(1, "i")))
+                                    if (!(eq_s(1, (CharSequence) "i")))
                                     {
                                         break lab8;
                                     }
@@ -198,20 +199,20 @@
                                         break lab8;
                                     }
                                     // <-, line 59
-                                    slice_from("I");
+                                    slice_from((CharSequence) "I");
                                     break lab7;
                                 } while (false);
                                 cursor = v_6;
                                 // (, line 60
                                 // literal, line 60
-                                if (!(eq_s(1, "y")))
+                                if (!(eq_s(1, (CharSequence)  "y")))
                                 {
                                     break lab6;
                                 }
                                 // ], line 60
                                 ket = cursor;
                                 // <-, line 60
-                                slice_from("Y");
+                                slice_from((CharSequence) "Y");
                             } while (false);
                             cursor = v_5;
                             break golab5;
@@ -340,12 +341,12 @@
                         case 1:
                             // (, line 78
                             // <-, line 78
-                            slice_from("y");
+                            slice_from((CharSequence) "y");
                             break;
                         case 2:
                             // (, line 79
                             // <-, line 79
-                            slice_from("i");
+                            slice_from((CharSequence) "i");
                             break;
                         case 3:
                             // (, line 80
@@ -415,7 +416,7 @@
             // [, line 96
             ket = cursor;
             // literal, line 96
-            if (!(eq_s_b(1, "e")))
+            if (!(eq_s_b(1, (CharSequence)  "e")))
             {
                 return false;
             }
@@ -466,7 +467,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 102
-                    if (!(eq_s_b(3, "gem")))
+                    if (!(eq_s_b(3, (CharSequence) "gem")))
                     {
                         break lab0;
                     }
@@ -522,7 +523,7 @@
                             break lab0;
                         }
                         // <-, line 110
-                        slice_from("heid");
+                        slice_from((CharSequence) "heid");
                         break;
                     case 2:
                         // (, line 113
@@ -566,7 +567,7 @@
                 // [, line 122
                 ket = cursor;
                 // literal, line 122
-                if (!(eq_s_b(4, "heid")))
+                if (!(eq_s_b(4, (CharSequence) "heid")))
                 {
                     break lab2;
                 }
@@ -582,7 +583,7 @@
                     v_4 = limit - cursor;
                     lab3: do {
                         // literal, line 122
-                        if (!(eq_s_b(1, "c")))
+                        if (!(eq_s_b(1, (CharSequence)  "c")))
                         {
                             break lab3;
                         }
@@ -595,7 +596,7 @@
                 // [, line 123
                 ket = cursor;
                 // literal, line 123
-                if (!(eq_s_b(2, "en")))
+                if (!(eq_s_b(2, (CharSequence) "en")))
                 {
                     break lab2;
                 }
@@ -642,7 +643,7 @@
                                 // [, line 130
                                 ket = cursor;
                                 // literal, line 130
-                                if (!(eq_s_b(2, "ig")))
+                                if (!(eq_s_b(2, (CharSequence) "ig")))
                                 {
                                     break lab6;
                                 }
@@ -658,7 +659,7 @@
                                     v_7 = limit - cursor;
                                     lab7: do {
                                         // literal, line 130
-                                        if (!(eq_s_b(1, "e")))
+                                        if (!(eq_s_b(1, (CharSequence)  "e")))
                                         {
                                             break lab7;
                                         }
@@ -690,7 +691,7 @@
                             v_8 = limit - cursor;
                             lab8: do {
                                 // literal, line 133
-                                if (!(eq_s_b(1, "e")))
+                                if (!(eq_s_b(1, (CharSequence)  "e")))
                                 {
                                     break lab8;
                                 }
@@ -782,6 +783,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class EnglishStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -185,7 +186,7 @@
                 // [, line 27
                 bra = cursor;
                 // literal, line 27
-                if (!(eq_s(1, "'")))
+                if (!(eq_s(1, (CharSequence) "'")))
                 {
                     break lab0;
                 }
@@ -202,14 +203,14 @@
                 // [, line 28
                 bra = cursor;
                 // literal, line 28
-                if (!(eq_s(1, "y")))
+                if (!(eq_s(1, (CharSequence) "y")))
                 {
                     break lab1;
                 }
                 // ], line 28
                 ket = cursor;
                 // <-, line 28
-                slice_from("Y");
+                slice_from((CharSequence) "Y");
                 // set Y_found, line 28
                 B_Y_found = true;
             } while (false);
@@ -236,7 +237,7 @@
                                 // [, line 29
                                 bra = cursor;
                                 // literal, line 29
-                                if (!(eq_s(1, "y")))
+                                if (!(eq_s(1, (CharSequence) "y")))
                                 {
                                     break lab6;
                                 }
@@ -253,7 +254,7 @@
                             cursor++;
                         }
                         // <-, line 29
-                        slice_from("Y");
+                        slice_from((CharSequence) "Y");
                         // set Y_found, line 29
                         B_Y_found = true;
                         continue replab3;
@@ -467,7 +468,7 @@
                 case 1:
                     // (, line 66
                     // <-, line 66
-                    slice_from("ss");
+                    slice_from((CharSequence) "ss");
                     break;
                 case 2:
                     // (, line 68
@@ -486,12 +487,12 @@
                                 cursor = c;
                             }
                             // <-, line 68
-                            slice_from("i");
+                            slice_from((CharSequence) "i");
                             break lab1;
                         } while (false);
                         cursor = limit - v_2;
                         // <-, line 68
-                        slice_from("ie");
+                        slice_from((CharSequence) "ie");
                     } while (false);
                     break;
                 case 3:
@@ -552,7 +553,7 @@
                         return false;
                     }
                     // <-, line 77
-                    slice_from("ee");
+                    slice_from((CharSequence) "ee");
                     break;
                 case 2:
                     // (, line 79
@@ -594,7 +595,7 @@
                             // <+, line 83
                             {
                                 int c = cursor;
-                                insert(cursor, cursor, "e");
+                                insert(cursor, cursor, (CharSequence) "e");
                                 cursor = c;
                             }
                             break;
@@ -631,7 +632,7 @@
                             // <+, line 87
                             {
                                 int c = cursor;
-                                insert(cursor, cursor, "e");
+                                insert(cursor, cursor, (CharSequence) "e");
                                 cursor = c;
                             }
                             break;
@@ -652,7 +653,7 @@
                 v_1 = limit - cursor;
                 lab1: do {
                     // literal, line 94
-                    if (!(eq_s_b(1, "y")))
+                    if (!(eq_s_b(1, (CharSequence)  "y")))
                     {
                         break lab1;
                     }
@@ -660,7 +661,7 @@
                 } while (false);
                 cursor = limit - v_1;
                 // literal, line 94
-                if (!(eq_s_b(1, "Y")))
+                if (!(eq_s_b(1, (CharSequence)  "Y")))
                 {
                     return false;
                 }
@@ -685,7 +686,7 @@
                 cursor = limit - v_2;
             }
             // <-, line 96
-            slice_from("i");
+            slice_from((CharSequence) "i");
             return true;
         }
 
@@ -713,82 +714,82 @@
                 case 1:
                     // (, line 101
                     // <-, line 101
-                    slice_from("tion");
+                    slice_from((CharSequence) "tion");
                     break;
                 case 2:
                     // (, line 102
                     // <-, line 102
-                    slice_from("ence");
+                    slice_from((CharSequence) "ence");
                     break;
                 case 3:
                     // (, line 103
                     // <-, line 103
-                    slice_from("ance");
+                    slice_from((CharSequence) "ance");
                     break;
                 case 4:
                     // (, line 104
                     // <-, line 104
-                    slice_from("able");
+                    slice_from((CharSequence) "able");
                     break;
                 case 5:
                     // (, line 105
                     // <-, line 105
-                    slice_from("ent");
+                    slice_from((CharSequence) "ent");
                     break;
                 case 6:
                     // (, line 107
                     // <-, line 107
-                    slice_from("ize");
+                    slice_from((CharSequence) "ize");
                     break;
                 case 7:
                     // (, line 109
                     // <-, line 109
-                    slice_from("ate");
+                    slice_from((CharSequence) "ate");
                     break;
                 case 8:
                     // (, line 111
                     // <-, line 111
-                    slice_from("al");
+                    slice_from((CharSequence) "al");
                     break;
                 case 9:
                     // (, line 112
                     // <-, line 112
-                    slice_from("ful");
+                    slice_from((CharSequence) "ful");
                     break;
                 case 10:
                     // (, line 114
                     // <-, line 114
-                    slice_from("ous");
+                    slice_from((CharSequence) "ous");
                     break;
                 case 11:
                     // (, line 116
                     // <-, line 116
-                    slice_from("ive");
+                    slice_from((CharSequence) "ive");
                     break;
                 case 12:
                     // (, line 118
                     // <-, line 118
-                    slice_from("ble");
+                    slice_from((CharSequence) "ble");
                     break;
                 case 13:
                     // (, line 119
                     // literal, line 119
-                    if (!(eq_s_b(1, "l")))
+                    if (!(eq_s_b(1, (CharSequence)  "l")))
                     {
                         return false;
                     }
                     // <-, line 119
-                    slice_from("og");
+                    slice_from((CharSequence) "og");
                     break;
                 case 14:
                     // (, line 120
                     // <-, line 120
-                    slice_from("ful");
+                    slice_from((CharSequence) "ful");
                     break;
                 case 15:
                     // (, line 121
                     // <-, line 121
-                    slice_from("less");
+                    slice_from((CharSequence) "less");
                     break;
                 case 16:
                     // (, line 122
@@ -827,22 +828,22 @@
                 case 1:
                     // (, line 128
                     // <-, line 128
-                    slice_from("tion");
+                    slice_from((CharSequence) "tion");
                     break;
                 case 2:
                     // (, line 129
                     // <-, line 129
-                    slice_from("ate");
+                    slice_from((CharSequence) "ate");
                     break;
                 case 3:
                     // (, line 130
                     // <-, line 130
-                    slice_from("al");
+                    slice_from((CharSequence) "al");
                     break;
                 case 4:
                     // (, line 132
                     // <-, line 132
-                    slice_from("ic");
+                    slice_from((CharSequence) "ic");
                     break;
                 case 5:
                     // (, line 134
@@ -897,7 +898,7 @@
                         v_1 = limit - cursor;
                         lab1: do {
                             // literal, line 145
-                            if (!(eq_s_b(1, "s")))
+                            if (!(eq_s_b(1, (CharSequence)  "s")))
                             {
                                 break lab1;
                             }
@@ -905,7 +906,7 @@
                         } while (false);
                         cursor = limit - v_1;
                         // literal, line 145
-                        if (!(eq_s_b(1, "t")))
+                        if (!(eq_s_b(1, (CharSequence)  "t")))
                         {
                             return false;
                         }
@@ -980,7 +981,7 @@
                         return false;
                     }
                     // literal, line 152
-                    if (!(eq_s_b(1, "l")))
+                    if (!(eq_s_b(1, (CharSequence) "l")))
                     {
                         return false;
                     }
@@ -1034,57 +1035,57 @@
                 case 1:
                     // (, line 174
                     // <-, line 174
-                    slice_from("ski");
+                    slice_from((CharSequence) "ski");
                     break;
                 case 2:
                     // (, line 175
                     // <-, line 175
-                    slice_from("sky");
+                    slice_from((CharSequence) "sky");
                     break;
                 case 3:
                     // (, line 176
                     // <-, line 176
-                    slice_from("die");
+                    slice_from((CharSequence) "die");
                     break;
                 case 4:
                     // (, line 177
                     // <-, line 177
-                    slice_from("lie");
+                    slice_from((CharSequence) "lie");
                     break;
                 case 5:
                     // (, line 178
                     // <-, line 178
-                    slice_from("tie");
+                    slice_from((CharSequence) "tie");
                     break;
                 case 6:
                     // (, line 182
                     // <-, line 182
-                    slice_from("idl");
+                    slice_from((CharSequence) "idl");
                     break;
                 case 7:
                     // (, line 183
                     // <-, line 183
-                    slice_from("gentl");
+                    slice_from((CharSequence) "gentl");
                     break;
                 case 8:
                     // (, line 184
                     // <-, line 184
-                    slice_from("ugli");
+                    slice_from((CharSequence) "ugli");
                     break;
                 case 9:
                     // (, line 185
                     // <-, line 185
-                    slice_from("earli");
+                    slice_from((CharSequence) "earli");
                     break;
                 case 10:
                     // (, line 186
                     // <-, line 186
-                    slice_from("onli");
+                    slice_from((CharSequence) "onli");
                     break;
                 case 11:
                     // (, line 187
                     // <-, line 187
-                    slice_from("singl");
+                    slice_from((CharSequence) "singl");
                     break;
             }
             return true;
@@ -1114,7 +1115,7 @@
                             // [, line 203
                             bra = cursor;
                             // literal, line 203
-                            if (!(eq_s(1, "Y")))
+                            if (!(eq_s(1, (CharSequence) "Y")))
                             {
                                 break lab3;
                             }
@@ -1131,7 +1132,7 @@
                         cursor++;
                     }
                     // <-, line 203
-                    slice_from("y");
+                    slice_from((CharSequence) "y");
                     continue replab0;
                 } while (false);
                 cursor = v_1;
@@ -1140,6 +1141,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FinnishStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FinnishStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FinnishStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class FinnishStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -332,7 +333,7 @@
                         v_3 = limit - cursor;
                         lab0: do {
                             // literal, line 72
-                            if (!(eq_s_b(1, "k")))
+                            if (!(eq_s_b(1, (CharSequence)  "k")))
                             {
                                 break lab0;
                             }
@@ -350,14 +351,14 @@
                     // [, line 74
                     ket = cursor;
                     // literal, line 74
-                    if (!(eq_s_b(3, "kse")))
+                    if (!(eq_s_b(3, (CharSequence) "kse")))
                     {
                         return false;
                     }
                     // ], line 74
                     bra = cursor;
                     // <-, line 74
-                    slice_from("ksi");
+                    slice_from((CharSequence) "ksi");
                     break;
                 case 3:
                     // (, line 78
@@ -410,7 +411,7 @@
         private boolean r_VI() {
             // (, line 93
             // literal, line 93
-            if (!(eq_s_b(1, "i")))
+            if (!(eq_s_b(1, (CharSequence)  "i")))
             {
                 return false;
             }
@@ -459,7 +460,7 @@
                 case 1:
                     // (, line 98
                     // literal, line 98
-                    if (!(eq_s_b(1, "a")))
+                    if (!(eq_s_b(1, (CharSequence)  "a")))
                     {
                         return false;
                     }
@@ -467,7 +468,7 @@
                 case 2:
                     // (, line 99
                     // literal, line 99
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence)  "e")))
                     {
                         return false;
                     }
@@ -475,7 +476,7 @@
                 case 3:
                     // (, line 100
                     // literal, line 100
-                    if (!(eq_s_b(1, "i")))
+                    if (!(eq_s_b(1, (CharSequence)  "i")))
                     {
                         return false;
                     }
@@ -483,7 +484,7 @@
                 case 4:
                     // (, line 101
                     // literal, line 101
-                    if (!(eq_s_b(1, "o")))
+                    if (!(eq_s_b(1, (CharSequence)  "o")))
                     {
                         return false;
                     }
@@ -491,7 +492,7 @@
                 case 5:
                     // (, line 102
                     // literal, line 102
-                    if (!(eq_s_b(1, "\u00E4")))
+                    if (!(eq_s_b(1, (CharSequence)  "\u00E4")))
                     {
                         return false;
                     }
@@ -499,7 +500,7 @@
                 case 6:
                     // (, line 103
                     // literal, line 103
-                    if (!(eq_s_b(1, "\u00F6")))
+                    if (!(eq_s_b(1, (CharSequence)  "\u00F6")))
                     {
                         return false;
                     }
@@ -525,7 +526,7 @@
                             } while (false);
                             cursor = limit - v_5;
                             // literal, line 112
-                            if (!(eq_s_b(2, "ie")))
+                            if (!(eq_s_b(2, (CharSequence) "ie")))
                             {
                                 cursor = limit - v_3;
                                 break lab0;
@@ -557,7 +558,7 @@
                 case 9:
                     // (, line 121
                     // literal, line 121
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence)  "e")))
                     {
                         return false;
                     }
@@ -610,7 +611,7 @@
                         v_3 = limit - cursor;
                         lab0: do {
                             // literal, line 146
-                            if (!(eq_s_b(2, "po")))
+                            if (!(eq_s_b(2, (CharSequence) "po")))
                             {
                                 break lab0;
                             }
@@ -681,7 +682,7 @@
             // [, line 162
             ket = cursor;
             // literal, line 162
-            if (!(eq_s_b(1, "t")))
+            if (!(eq_s_b(1, (CharSequence)  "t")))
             {
                 limit_backward = v_2;
                 return false;
@@ -733,7 +734,7 @@
                         v_6 = limit - cursor;
                         lab0: do {
                             // literal, line 167
-                            if (!(eq_s_b(2, "po")))
+                            if (!(eq_s_b(2, (CharSequence) "po")))
                             {
                                 break lab0;
                             }
@@ -825,7 +826,7 @@
                 // [, line 176
                 ket = cursor;
                 // literal, line 176
-                if (!(eq_s_b(1, "j")))
+                if (!(eq_s_b(1, (CharSequence)  "j")))
                 {
                     break lab2;
                 }
@@ -836,7 +837,7 @@
                     v_7 = limit - cursor;
                     lab4: do {
                         // literal, line 176
-                        if (!(eq_s_b(1, "o")))
+                        if (!(eq_s_b(1, (CharSequence)  "o")))
                         {
                             break lab4;
                         }
@@ -844,7 +845,7 @@
                     } while (false);
                     cursor = limit - v_7;
                     // literal, line 176
-                    if (!(eq_s_b(1, "u")))
+                    if (!(eq_s_b(1, (CharSequence)  "u")))
                     {
                         break lab2;
                     }
@@ -860,14 +861,14 @@
                 // [, line 177
                 ket = cursor;
                 // literal, line 177
-                if (!(eq_s_b(1, "o")))
+                if (!(eq_s_b(1, (CharSequence)  "o")))
                 {
                     break lab5;
                 }
                 // ], line 177
                 bra = cursor;
                 // literal, line 177
-                if (!(eq_s_b(1, "j")))
+                if (!(eq_s_b(1, (CharSequence)  "j")))
                 {
                     break lab5;
                 }
@@ -908,7 +909,7 @@
             // -> x, line 179
             S_x = slice_to(S_x);
             // name x, line 179
-            if (!(eq_v_b(S_x)))
+            if (!(eq_v_b((CharSequence) S_x)))
             {
                 return false;
             }
@@ -917,6 +918,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class FrenchStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -228,7 +229,7 @@
                                         lab7: do {
                                             // (, line 40
                                             // literal, line 40
-                                            if (!(eq_s(1, "u")))
+                                            if (!(eq_s(1, (CharSequence)  "u")))
                                             {
                                                 break lab7;
                                             }
@@ -239,14 +240,14 @@
                                                 break lab7;
                                             }
                                             // <-, line 40
-                                            slice_from("U");
+                                            slice_from((CharSequence) "U");
                                             break lab6;
                                         } while (false);
                                         cursor = v_4;
                                         lab8: do {
                                             // (, line 41
                                             // literal, line 41
-                                            if (!(eq_s(1, "i")))
+                                            if (!(eq_s(1, (CharSequence)  "i")))
                                             {
                                                 break lab8;
                                             }
@@ -257,20 +258,20 @@
                                                 break lab8;
                                             }
                                             // <-, line 41
-                                            slice_from("I");
+                                            slice_from((CharSequence) "I");
                                             break lab6;
                                         } while (false);
                                         cursor = v_4;
                                         // (, line 42
                                         // literal, line 42
-                                        if (!(eq_s(1, "y")))
+                                        if (!(eq_s(1, (CharSequence)  "y")))
                                         {
                                             break lab5;
                                         }
                                         // ], line 42
                                         ket = cursor;
                                         // <-, line 42
-                                        slice_from("Y");
+                                        slice_from((CharSequence) "Y");
                                     } while (false);
                                     break lab4;
                                 } while (false);
@@ -280,7 +281,7 @@
                                     // [, line 45
                                     bra = cursor;
                                     // literal, line 45
-                                    if (!(eq_s(1, "y")))
+                                    if (!(eq_s(1, (CharSequence)  "y")))
                                     {
                                         break lab9;
                                     }
@@ -291,27 +292,27 @@
                                         break lab9;
                                     }
                                     // <-, line 45
-                                    slice_from("Y");
+                                    slice_from((CharSequence) "Y");
                                     break lab4;
                                 } while (false);
                                 cursor = v_3;
                                 // (, line 47
                                 // literal, line 47
-                                if (!(eq_s(1, "q")))
+                                if (!(eq_s(1, (CharSequence)  "q")))
                                 {
                                     break lab3;
                                 }
                                 // [, line 47
                                 bra = cursor;
                                 // literal, line 47
-                                if (!(eq_s(1, "u")))
+                                if (!(eq_s(1, (CharSequence)  "u")))
                                 {
                                     break lab3;
                                 }
                                 // ], line 47
                                 ket = cursor;
                                 // <-, line 47
-                                slice_from("U");
+                                slice_from((CharSequence) "U");
                             } while (false);
                             cursor = v_2;
                             break golab2;
@@ -504,17 +505,17 @@
                         case 1:
                             // (, line 78
                             // <-, line 78
-                            slice_from("i");
+                            slice_from((CharSequence) "i");
                             break;
                         case 2:
                             // (, line 79
                             // <-, line 79
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 3:
                             // (, line 80
                             // <-, line 80
-                            slice_from("y");
+                            slice_from((CharSequence) "y");
                             break;
                         case 4:
                             // (, line 81
@@ -611,7 +612,7 @@
                         // [, line 100
                         ket = cursor;
                         // literal, line 100
-                        if (!(eq_s_b(2, "ic")))
+                        if (!(eq_s_b(2, (CharSequence) "ic")))
                         {
                             cursor = limit - v_1;
                             break lab0;
@@ -634,7 +635,7 @@
                             } while (false);
                             cursor = limit - v_2;
                             // <-, line 100
-                            slice_from("iqU");
+                            slice_from((CharSequence) "iqU");
                         } while (false);
                     } while (false);
                     break;
@@ -646,7 +647,7 @@
                         return false;
                     }
                     // <-, line 104
-                    slice_from("log");
+                    slice_from((CharSequence) "log");
                     break;
                 case 4:
                     // (, line 107
@@ -656,7 +657,7 @@
                         return false;
                     }
                     // <-, line 107
-                    slice_from("u");
+                    slice_from((CharSequence) "u");
                     break;
                 case 5:
                     // (, line 110
@@ -666,7 +667,7 @@
                         return false;
                     }
                     // <-, line 110
-                    slice_from("ent");
+                    slice_from((CharSequence) "ent");
                     break;
                 case 6:
                     // (, line 113
@@ -709,7 +710,7 @@
                                 // [, line 117
                                 ket = cursor;
                                 // literal, line 117
-                                if (!(eq_s_b(2, "at")))
+                                if (!(eq_s_b(2, (CharSequence) "at")))
                                 {
                                     cursor = limit - v_3;
                                     break lab3;
@@ -750,7 +751,7 @@
                                         break lab3;
                                     }
                                     // <-, line 118
-                                    slice_from("eux");
+                                    slice_from((CharSequence) "eux");
                                 } while (false);
                                 break;
                             case 3:
@@ -773,7 +774,7 @@
                                     break lab3;
                                 }
                                 // <-, line 122
-                                slice_from("i");
+                                slice_from((CharSequence) "i");
                                 break;
                         }
                     } while (false);
@@ -824,7 +825,7 @@
                                     } while (false);
                                     cursor = limit - v_6;
                                     // <-, line 132
-                                    slice_from("abl");
+                                    slice_from((CharSequence) "abl");
                                 } while (false);
                                 break;
                             case 2:
@@ -845,7 +846,7 @@
                                     } while (false);
                                     cursor = limit - v_7;
                                     // <-, line 133
-                                    slice_from("iqU");
+                                    slice_from((CharSequence) "iqU");
                                 } while (false);
                                 break;
                             case 3:
@@ -878,7 +879,7 @@
                         // [, line 142
                         ket = cursor;
                         // literal, line 142
-                        if (!(eq_s_b(2, "at")))
+                        if (!(eq_s_b(2, (CharSequence) "at")))
                         {
                             cursor = limit - v_8;
                             break lab11;
@@ -896,7 +897,7 @@
                         // [, line 142
                         ket = cursor;
                         // literal, line 142
-                        if (!(eq_s_b(2, "ic")))
+                        if (!(eq_s_b(2, (CharSequence) "ic")))
                         {
                             cursor = limit - v_8;
                             break lab11;
@@ -919,14 +920,14 @@
                             } while (false);
                             cursor = limit - v_9;
                             // <-, line 142
-                            slice_from("iqU");
+                            slice_from((CharSequence) "iqU");
                         } while (false);
                     } while (false);
                     break;
                 case 9:
                     // (, line 144
                     // <-, line 144
-                    slice_from("eau");
+                    slice_from((CharSequence) "eau");
                     break;
                 case 10:
                     // (, line 145
@@ -936,7 +937,7 @@
                         return false;
                     }
                     // <-, line 145
-                    slice_from("al");
+                    slice_from((CharSequence) "al");
                     break;
                 case 11:
                     // (, line 147
@@ -962,7 +963,7 @@
                             return false;
                         }
                         // <-, line 147
-                        slice_from("eux");
+                        slice_from((CharSequence) "eux");
                     } while (false);
                     break;
                 case 12:
@@ -989,7 +990,7 @@
                     // fail, line 155
                     // (, line 155
                     // <-, line 155
-                    slice_from("ant");
+                    slice_from((CharSequence) "ant");
                     return false;
                 case 14:
                     // (, line 156
@@ -1001,7 +1002,7 @@
                     // fail, line 156
                     // (, line 156
                     // <-, line 156
-                    slice_from("ent");
+                    slice_from((CharSequence) "ent");
                     return false;
                 case 15:
                     // (, line 158
@@ -1132,7 +1133,7 @@
                         // [, line 191
                         ket = cursor;
                         // literal, line 191
-                        if (!(eq_s_b(1, "e")))
+                        if (!(eq_s_b(1, (CharSequence)  "e")))
                         {
                             cursor = limit - v_3;
                             break lab0;
@@ -1163,7 +1164,7 @@
                 // [, line 199
                 ket = cursor;
                 // literal, line 199
-                if (!(eq_s_b(1, "s")))
+                if (!(eq_s_b(1, (CharSequence)  "s")))
                 {
                     cursor = limit - v_1;
                     break lab0;
@@ -1221,7 +1222,7 @@
                         v_5 = limit - cursor;
                         lab2: do {
                             // literal, line 202
-                            if (!(eq_s_b(1, "s")))
+                            if (!(eq_s_b(1, (CharSequence)  "s")))
                             {
                                 break lab2;
                             }
@@ -1229,7 +1230,7 @@
                         } while (false);
                         cursor = limit - v_5;
                         // literal, line 202
-                        if (!(eq_s_b(1, "t")))
+                        if (!(eq_s_b(1, (CharSequence)  "t")))
                         {
                             limit_backward = v_4;
                             return false;
@@ -1241,7 +1242,7 @@
                 case 2:
                     // (, line 204
                     // <-, line 204
-                    slice_from("i");
+                    slice_from((CharSequence) "i");
                     break;
                 case 3:
                     // (, line 205
@@ -1251,7 +1252,7 @@
                 case 4:
                     // (, line 206
                     // literal, line 206
-                    if (!(eq_s_b(2, "gu")))
+                    if (!(eq_s_b(2, (CharSequence) "gu")))
                     {
                         limit_backward = v_4;
                         return false;
@@ -1321,7 +1322,7 @@
                 v_3 = limit - cursor;
                 lab3: do {
                     // literal, line 217
-                    if (!(eq_s_b(1, "\u00E9")))
+                    if (!(eq_s_b(1, (CharSequence)  "\u00E9")))
                     {
                         break lab3;
                     }
@@ -1329,7 +1330,7 @@
                 } while (false);
                 cursor = limit - v_3;
                 // literal, line 217
-                if (!(eq_s_b(1, "\u00E8")))
+                if (!(eq_s_b(1, (CharSequence)  "\u00E8")))
                 {
                     return false;
                 }
@@ -1337,10 +1338,11 @@
             // ], line 217
             bra = cursor;
             // <-, line 217
-            slice_from("e");
+            slice_from((CharSequence) "e");
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
@@ -1429,20 +1431,20 @@
                                 lab10: do {
                                     // (, line 234
                                     // literal, line 234
-                                    if (!(eq_s_b(1, "Y")))
+                                    if (!(eq_s_b(1, (CharSequence)  "Y")))
                                     {
                                         break lab10;
                                     }
                                     // ], line 234
                                     bra = cursor;
                                     // <-, line 234
-                                    slice_from("i");
+                                    slice_from((CharSequence) "i");
                                     break lab9;
                                 } while (false);
                                 cursor = limit - v_8;
                                 // (, line 235
                                 // literal, line 235
-                                if (!(eq_s_b(1, "\u00E7")))
+                                if (!(eq_s_b(1, (CharSequence)  "\u00E7")))
                                 {
                                     cursor = limit - v_7;
                                     break lab8;
@@ -1450,7 +1452,7 @@
                                 // ], line 235
                                 bra = cursor;
                                 // <-, line 235
-                                slice_from("c");
+                                slice_from((CharSequence) "c");
                             } while (false);
                         } while (false);
                         break lab3;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/German2Stemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/German2Stemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/German2Stemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class German2Stemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -110,7 +111,7 @@
                                 lab5: do {
                                     // (, line 31
                                     // literal, line 31
-                                    if (!(eq_s(1, "u")))
+                                    if (!(eq_s(1, (CharSequence)  "u")))
                                     {
                                         break lab5;
                                     }
@@ -121,13 +122,13 @@
                                         break lab5;
                                     }
                                     // <-, line 31
-                                    slice_from("U");
+                                    slice_from((CharSequence) "U");
                                     break lab4;
                                 } while (false);
                                 cursor = v_4;
                                 // (, line 32
                                 // literal, line 32
-                                if (!(eq_s(1, "y")))
+                                if (!(eq_s(1, (CharSequence)  "y")))
                                 {
                                     break lab3;
                                 }
@@ -138,7 +139,7 @@
                                     break lab3;
                                 }
                                 // <-, line 32
-                                slice_from("Y");
+                                slice_from((CharSequence) "Y");
                             } while (false);
                             cursor = v_3;
                             break golab2;
@@ -178,22 +179,22 @@
                         case 1:
                             // (, line 37
                             // <-, line 37
-                            slice_from("ss");
+                            slice_from((CharSequence) "ss");
                             break;
                         case 2:
                             // (, line 38
                             // <-, line 38
-                            slice_from("\u00E4");
+                            slice_from((CharSequence) "\u00E4");
                             break;
                         case 3:
                             // (, line 39
                             // <-, line 39
-                            slice_from("\u00F6");
+                            slice_from((CharSequence) "\u00F6");
                             break;
                         case 4:
                             // (, line 40
                             // <-, line 40
-                            slice_from("\u00FC");
+                            slice_from((CharSequence) "\u00FC");
                             break;
                         case 5:
                             // (, line 41
@@ -350,27 +351,27 @@
                         case 1:
                             // (, line 64
                             // <-, line 64
-                            slice_from("y");
+                            slice_from((CharSequence) "y");
                             break;
                         case 2:
                             // (, line 65
                             // <-, line 65
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 3:
                             // (, line 66
                             // <-, line 66
-                            slice_from("a");
+                            slice_from((CharSequence) "a");
                             break;
                         case 4:
                             // (, line 67
                             // <-, line 67
-                            slice_from("o");
+                            slice_from((CharSequence) "o");
                             break;
                         case 5:
                             // (, line 68
                             // <-, line 68
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 6:
                             // (, line 69
@@ -538,7 +539,7 @@
                             // [, line 104
                             ket = cursor;
                             // literal, line 104
-                            if (!(eq_s_b(2, "ig")))
+                            if (!(eq_s_b(2, (CharSequence) "ig")))
                             {
                                 cursor = limit - v_4;
                                 break lab3;
@@ -550,7 +551,7 @@
                                 v_5 = limit - cursor;
                                 lab4: do {
                                     // literal, line 104
-                                    if (!(eq_s_b(1, "e")))
+                                    if (!(eq_s_b(1, (CharSequence)  "e")))
                                     {
                                         break lab4;
                                     }
@@ -576,7 +577,7 @@
                             v_6 = limit - cursor;
                             lab5: do {
                                 // literal, line 107
-                                if (!(eq_s_b(1, "e")))
+                                if (!(eq_s_b(1, (CharSequence)  "e")))
                                 {
                                     break lab5;
                                 }
@@ -602,7 +603,7 @@
                                 v_8 = limit - cursor;
                                 lab8: do {
                                     // literal, line 112
-                                    if (!(eq_s_b(2, "er")))
+                                    if (!(eq_s_b(2, (CharSequence) "er")))
                                     {
                                         break lab8;
                                     }
@@ -610,7 +611,7 @@
                                 } while (false);
                                 cursor = limit - v_8;
                                 // literal, line 112
-                                if (!(eq_s_b(2, "en")))
+                                if (!(eq_s_b(2, (CharSequence) "en")))
                                 {
                                     cursor = limit - v_7;
                                     break lab6;
@@ -671,6 +672,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/GermanStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/GermanStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/GermanStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class GermanStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -92,14 +93,14 @@
                             // [, line 32
                             bra = cursor;
                             // literal, line 32
-                            if (!(eq_s(1, "\u00DF")))
+                            if (!(eq_s(1, (CharSequence) "\u00DF")))
                             {
                                 break lab3;
                             }
                             // ], line 32
                             ket = cursor;
                             // <-, line 32
-                            slice_from("ss");
+                            slice_from((CharSequence) "ss");
                             break lab2;
                         } while (false);
                         cursor = v_3;
@@ -139,7 +140,7 @@
                                 lab9: do {
                                     // (, line 37
                                     // literal, line 37
-                                    if (!(eq_s(1, "u")))
+                                    if (!(eq_s(1, (CharSequence)  "u")))
                                     {
                                         break lab9;
                                     }
@@ -150,13 +151,13 @@
                                         break lab9;
                                     }
                                     // <-, line 37
-                                    slice_from("U");
+                                    slice_from((CharSequence) "U");
                                     break lab8;
                                 } while (false);
                                 cursor = v_6;
                                 // (, line 38
                                 // literal, line 38
-                                if (!(eq_s(1, "y")))
+                                if (!(eq_s(1, (CharSequence)  "y")))
                                 {
                                     break lab7;
                                 }
@@ -167,7 +168,7 @@
                                     break lab7;
                                 }
                                 // <-, line 38
-                                slice_from("Y");
+                                slice_from((CharSequence) "Y");
                             } while (false);
                             cursor = v_5;
                             break golab6;
@@ -312,27 +313,27 @@
                         case 1:
                             // (, line 58
                             // <-, line 58
-                            slice_from("y");
+                            slice_from((CharSequence) "y");
                             break;
                         case 2:
                             // (, line 59
                             // <-, line 59
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 3:
                             // (, line 60
                             // <-, line 60
-                            slice_from("a");
+                            slice_from((CharSequence) "a");
                             break;
                         case 4:
                             // (, line 61
                             // <-, line 61
-                            slice_from("o");
+                            slice_from((CharSequence) "o");
                             break;
                         case 5:
                             // (, line 62
                             // <-, line 62
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 6:
                             // (, line 63
@@ -500,7 +501,7 @@
                             // [, line 98
                             ket = cursor;
                             // literal, line 98
-                            if (!(eq_s_b(2, "ig")))
+                            if (!(eq_s_b(2, (CharSequence) "ig")))
                             {
                                 cursor = limit - v_4;
                                 break lab3;
@@ -512,7 +513,7 @@
                                 v_5 = limit - cursor;
                                 lab4: do {
                                     // literal, line 98
-                                    if (!(eq_s_b(1, "e")))
+                                    if (!(eq_s_b(1, (CharSequence)  "e")))
                                     {
                                         break lab4;
                                     }
@@ -538,7 +539,7 @@
                             v_6 = limit - cursor;
                             lab5: do {
                                 // literal, line 101
-                                if (!(eq_s_b(1, "e")))
+                                if (!(eq_s_b(1, (CharSequence)  "e")))
                                 {
                                     break lab5;
                                 }
@@ -564,7 +565,7 @@
                                 v_8 = limit - cursor;
                                 lab8: do {
                                     // literal, line 106
-                                    if (!(eq_s_b(2, "er")))
+                                    if (!(eq_s_b(2, (CharSequence) "er")))
                                     {
                                         break lab8;
                                     }
@@ -572,7 +573,7 @@
                                 } while (false);
                                 cursor = limit - v_8;
                                 // literal, line 106
-                                if (!(eq_s_b(2, "en")))
+                                if (!(eq_s_b(2, (CharSequence) "en")))
                                 {
                                     cursor = limit - v_7;
                                     break lab6;
@@ -633,6 +634,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/HungarianStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/HungarianStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/HungarianStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class HungarianStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -353,12 +354,12 @@
                 case 1:
                     // (, line 62
                     // <-, line 62
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 2:
                     // (, line 63
                     // <-, line 63
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
             }
             return true;
@@ -502,17 +503,17 @@
                 case 1:
                     // (, line 117
                     // <-, line 117
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 2:
                     // (, line 118
                     // <-, line 118
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 3:
                     // (, line 119
                     // <-, line 119
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
             }
             return true;
@@ -552,12 +553,12 @@
                 case 3:
                     // (, line 127
                     // <-, line 127
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 4:
                     // (, line 128
                     // <-, line 128
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
             }
             return true;
@@ -635,12 +636,12 @@
                 case 1:
                     // (, line 143
                     // <-, line 143
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 2:
                     // (, line 144
                     // <-, line 144
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 3:
                     // (, line 145
@@ -700,12 +701,12 @@
                 case 2:
                     // (, line 156
                     // <-, line 156
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 3:
                     // (, line 157
                     // <-, line 157
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 4:
                     // (, line 158
@@ -715,12 +716,12 @@
                 case 5:
                     // (, line 159
                     // <-, line 159
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 6:
                     // (, line 160
                     // <-, line 160
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 7:
                     // (, line 161
@@ -730,7 +731,7 @@
                 case 8:
                     // (, line 162
                     // <-, line 162
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 9:
                     // (, line 163
@@ -770,12 +771,12 @@
                 case 2:
                     // (, line 170
                     // <-, line 170
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 3:
                     // (, line 171
                     // <-, line 171
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 4:
                     // (, line 172
@@ -785,12 +786,12 @@
                 case 5:
                     // (, line 173
                     // <-, line 173
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 6:
                     // (, line 174
                     // <-, line 174
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 7:
                     // (, line 175
@@ -810,12 +811,12 @@
                 case 10:
                     // (, line 178
                     // <-, line 178
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 11:
                     // (, line 179
                     // <-, line 179
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 12:
                     // (, line 180
@@ -830,12 +831,12 @@
                 case 14:
                     // (, line 182
                     // <-, line 182
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 15:
                     // (, line 183
                     // <-, line 183
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 16:
                     // (, line 184
@@ -855,12 +856,12 @@
                 case 19:
                     // (, line 187
                     // <-, line 187
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 20:
                     // (, line 188
                     // <-, line 188
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
             }
             return true;
@@ -895,12 +896,12 @@
                 case 2:
                     // (, line 195
                     // <-, line 195
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 3:
                     // (, line 196
                     // <-, line 196
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 4:
                     // (, line 197
@@ -920,12 +921,12 @@
                 case 7:
                     // (, line 200
                     // <-, line 200
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 8:
                     // (, line 201
                     // <-, line 201
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 9:
                     // (, line 202
@@ -945,12 +946,12 @@
                 case 12:
                     // (, line 205
                     // <-, line 205
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 13:
                     // (, line 206
                     // <-, line 206
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 14:
                     // (, line 207
@@ -975,12 +976,12 @@
                 case 18:
                     // (, line 211
                     // <-, line 211
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 19:
                     // (, line 212
                     // <-, line 212
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 20:
                     // (, line 214
@@ -995,12 +996,12 @@
                 case 22:
                     // (, line 216
                     // <-, line 216
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 23:
                     // (, line 217
                     // <-, line 217
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 24:
                     // (, line 218
@@ -1020,12 +1021,12 @@
                 case 27:
                     // (, line 221
                     // <-, line 221
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 28:
                     // (, line 222
                     // <-, line 222
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 29:
                     // (, line 223
@@ -1036,6 +1037,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/ItalianStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/ItalianStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/ItalianStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class ItalianStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -279,32 +280,32 @@
                         case 1:
                             // (, line 37
                             // <-, line 37
-                            slice_from("\u00E0");
+                            slice_from((CharSequence) "\u00E0");
                             break;
                         case 2:
                             // (, line 38
                             // <-, line 38
-                            slice_from("\u00E8");
+                            slice_from((CharSequence) "\u00E8");
                             break;
                         case 3:
                             // (, line 39
                             // <-, line 39
-                            slice_from("\u00EC");
+                            slice_from((CharSequence) "\u00EC");
                             break;
                         case 4:
                             // (, line 40
                             // <-, line 40
-                            slice_from("\u00F2");
+                            slice_from((CharSequence) "\u00F2");
                             break;
                         case 5:
                             // (, line 41
                             // <-, line 41
-                            slice_from("\u00F9");
+                            slice_from((CharSequence) "\u00F9");
                             break;
                         case 6:
                             // (, line 42
                             // <-, line 42
-                            slice_from("qU");
+                            slice_from((CharSequence) "qU");
                             break;
                         case 7:
                             // (, line 43
@@ -345,7 +346,7 @@
                                 lab7: do {
                                     // (, line 47
                                     // literal, line 47
-                                    if (!(eq_s(1, "u")))
+                                    if (!(eq_s(1, (CharSequence)  "u")))
                                     {
                                         break lab7;
                                     }
@@ -356,13 +357,13 @@
                                         break lab7;
                                     }
                                     // <-, line 47
-                                    slice_from("U");
+                                    slice_from((CharSequence) "U");
                                     break lab6;
                                 } while (false);
                                 cursor = v_5;
                                 // (, line 48
                                 // literal, line 48
-                                if (!(eq_s(1, "i")))
+                                if (!(eq_s(1, (CharSequence)  "i")))
                                 {
                                     break lab5;
                                 }
@@ -373,7 +374,7 @@
                                     break lab5;
                                 }
                                 // <-, line 48
-                                slice_from("I");
+                                slice_from((CharSequence) "I");
                             } while (false);
                             cursor = v_4;
                             break golab4;
@@ -621,12 +622,12 @@
                         case 1:
                             // (, line 73
                             // <-, line 73
-                            slice_from("i");
+                            slice_from((CharSequence) "i");
                             break;
                         case 2:
                             // (, line 74
                             // <-, line 74
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 3:
                             // (, line 75
@@ -705,7 +706,7 @@
                 case 2:
                     // (, line 99
                     // <-, line 99
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
             }
             return true;
@@ -757,7 +758,7 @@
                         // [, line 114
                         ket = cursor;
                         // literal, line 114
-                        if (!(eq_s_b(2, "ic")))
+                        if (!(eq_s_b(2, (CharSequence) "ic")))
                         {
                             cursor = limit - v_1;
                             break lab0;
@@ -782,7 +783,7 @@
                         return false;
                     }
                     // <-, line 117
-                    slice_from("log");
+                    slice_from((CharSequence) "log");
                     break;
                 case 4:
                     // (, line 119
@@ -792,7 +793,7 @@
                         return false;
                     }
                     // <-, line 119
-                    slice_from("u");
+                    slice_from((CharSequence) "u");
                     break;
                 case 5:
                     // (, line 121
@@ -802,7 +803,7 @@
                         return false;
                     }
                     // <-, line 121
-                    slice_from("ente");
+                    slice_from((CharSequence) "ente");
                     break;
                 case 6:
                     // (, line 123
@@ -855,7 +856,7 @@
                                 // [, line 128
                                 ket = cursor;
                                 // literal, line 128
-                                if (!(eq_s_b(2, "at")))
+                                if (!(eq_s_b(2, (CharSequence) "at")))
                                 {
                                     cursor = limit - v_2;
                                     break lab1;
@@ -932,7 +933,7 @@
                         // [, line 143
                         ket = cursor;
                         // literal, line 143
-                        if (!(eq_s_b(2, "at")))
+                        if (!(eq_s_b(2, (CharSequence) "at")))
                         {
                             cursor = limit - v_4;
                             break lab3;
@@ -950,7 +951,7 @@
                         // [, line 143
                         ket = cursor;
                         // literal, line 143
-                        if (!(eq_s_b(2, "ic")))
+                        if (!(eq_s_b(2, (CharSequence) "ic")))
                         {
                             cursor = limit - v_4;
                             break lab3;
@@ -1040,7 +1041,7 @@
                 // [, line 173
                 ket = cursor;
                 // literal, line 173
-                if (!(eq_s_b(1, "i")))
+                if (!(eq_s_b(1, (CharSequence)  "i")))
                 {
                     cursor = limit - v_1;
                     break lab0;
@@ -1063,7 +1064,7 @@
                 // [, line 176
                 ket = cursor;
                 // literal, line 176
-                if (!(eq_s_b(1, "h")))
+                if (!(eq_s_b(1, (CharSequence)  "h")))
                 {
                     cursor = limit - v_2;
                     break lab1;
@@ -1087,6 +1088,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/KpStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class KpStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -178,7 +179,7 @@
                 } while (false);
                 cursor = limit - v_2;
                 // literal, line 35
-                if (!(eq_s_b(2, "ij")))
+                if (!(eq_s_b(2, (CharSequence)  "ij")))
                 {
                     return false;
                 }
@@ -211,7 +212,7 @@
                 } while (false);
                 cursor = limit - v_2;
                 // literal, line 36
-                if (!(eq_s_b(2, "ij")))
+                if (!(eq_s_b(2, (CharSequence) "ij")))
                 {
                     return false;
                 }
@@ -231,7 +232,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 37
-                    if (!(eq_s_b(2, "ij")))
+                    if (!(eq_s_b(2, (CharSequence) "ij")))
                     {
                         break lab0;
                     }
@@ -303,7 +304,7 @@
                     cursor = limit - v_2;
                     // (, line 41
                     // literal, line 41
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence)  "e")))
                     {
                         break lab0;
                     }
@@ -371,7 +372,7 @@
                 // <+ ch, line 44
                 {
                     int c = cursor;
-                    insert(cursor, cursor, S_ch);
+                    insert(cursor, cursor, (CharSequence) S_ch);
                     cursor = c;
                 }
             } while (false);
@@ -418,7 +419,7 @@
                         lab0: do {
                             // (, line 52
                             // literal, line 52
-                            if (!(eq_s_b(1, "t")))
+                            if (!(eq_s_b(1, (CharSequence)  "t")))
                             {
                                 break lab0;
                             }
@@ -447,7 +448,7 @@
                         return false;
                     }
                     // <-, line 53
-                    slice_from("ie");
+                    slice_from((CharSequence) "ie");
                     break;
                 case 4:
                     // (, line 55
@@ -457,7 +458,7 @@
                         lab2: do {
                             // (, line 55
                             // literal, line 55
-                            if (!(eq_s_b(2, "ar")))
+                            if (!(eq_s_b(2, (CharSequence)  "ar")))
                             {
                                 break lab2;
                             }
@@ -486,7 +487,7 @@
                         lab3: do {
                             // (, line 56
                             // literal, line 56
-                            if (!(eq_s_b(2, "er")))
+                            if (!(eq_s_b(2, (CharSequence)  "er")))
                             {
                                 break lab3;
                             }
@@ -519,7 +520,7 @@
                             return false;
                         }
                         // <-, line 57
-                        slice_from("e");
+                        slice_from((CharSequence) "e");
                     } while (false);
                     break;
                 case 5:
@@ -535,7 +536,7 @@
                         return false;
                     }
                     // <-, line 59
-                    slice_from("au");
+                    slice_from((CharSequence) "au");
                     break;
                 case 6:
                     // (, line 60
@@ -545,7 +546,7 @@
                         lab5: do {
                             // (, line 60
                             // literal, line 60
-                            if (!(eq_s_b(3, "hed")))
+                            if (!(eq_s_b(3, (CharSequence) "hed")))
                             {
                                 break lab5;
                             }
@@ -557,14 +558,14 @@
                             // ], line 60
                             bra = cursor;
                             // <-, line 60
-                            slice_from("heid");
+                            slice_from((CharSequence) "heid");
                             break lab4;
                         } while (false);
                         cursor = limit - v_3;
                         lab6: do {
                             // (, line 61
                             // literal, line 61
-                            if (!(eq_s_b(2, "nd")))
+                            if (!(eq_s_b(2, (CharSequence)  "nd")))
                             {
                                 break lab6;
                             }
@@ -576,7 +577,7 @@
                         lab7: do {
                             // (, line 62
                             // literal, line 62
-                            if (!(eq_s_b(1, "d")))
+                            if (!(eq_s_b(1, (CharSequence)  "d")))
                             {
                                 break lab7;
                             }
@@ -604,7 +605,7 @@
                                 v_4 = limit - cursor;
                                 lab10: do {
                                     // literal, line 63
-                                    if (!(eq_s_b(1, "i")))
+                                    if (!(eq_s_b(1, (CharSequence)  "i")))
                                     {
                                         break lab10;
                                     }
@@ -612,7 +613,7 @@
                                 } while (false);
                                 cursor = limit - v_4;
                                 // literal, line 63
-                                if (!(eq_s_b(1, "j")))
+                                if (!(eq_s_b(1, (CharSequence)  "j")))
                                 {
                                     break lab8;
                                 }
@@ -650,7 +651,7 @@
                 case 7:
                     // (, line 65
                     // <-, line 65
-                    slice_from("nd");
+                    slice_from((CharSequence) "nd");
                     break;
             }
             return true;
@@ -682,7 +683,7 @@
                         lab1: do {
                             // (, line 72
                             // literal, line 72
-                            if (!(eq_s_b(2, "'t")))
+                            if (!(eq_s_b(2, (CharSequence)  "'t")))
                             {
                                 break lab1;
                             }
@@ -696,7 +697,7 @@
                         lab2: do {
                             // (, line 73
                             // literal, line 73
-                            if (!(eq_s_b(2, "et")))
+                            if (!(eq_s_b(2, (CharSequence)  "et")))
                             {
                                 break lab2;
                             }
@@ -720,21 +721,21 @@
                         lab3: do {
                             // (, line 74
                             // literal, line 74
-                            if (!(eq_s_b(3, "rnt")))
+                            if (!(eq_s_b(3, (CharSequence) "rnt")))
                             {
                                 break lab3;
                             }
                             // ], line 74
                             bra = cursor;
                             // <-, line 74
-                            slice_from("rn");
+                            slice_from((CharSequence) "rn");
                             break lab0;
                         } while (false);
                         cursor = limit - v_1;
                         lab4: do {
                             // (, line 75
                             // literal, line 75
-                            if (!(eq_s_b(1, "t")))
+                            if (!(eq_s_b(1, (CharSequence)  "t")))
                             {
                                 break lab4;
                             }
@@ -758,35 +759,35 @@
                         lab5: do {
                             // (, line 76
                             // literal, line 76
-                            if (!(eq_s_b(3, "ink")))
+                            if (!(eq_s_b(3, (CharSequence) "ink")))
                             {
                                 break lab5;
                             }
                             // ], line 76
                             bra = cursor;
                             // <-, line 76
-                            slice_from("ing");
+                            slice_from((CharSequence) "ing");
                             break lab0;
                         } while (false);
                         cursor = limit - v_1;
                         lab6: do {
                             // (, line 77
                             // literal, line 77
-                            if (!(eq_s_b(2, "mp")))
+                            if (!(eq_s_b(2, (CharSequence)  "mp")))
                             {
                                 break lab6;
                             }
                             // ], line 77
                             bra = cursor;
                             // <-, line 77
-                            slice_from("m");
+                            slice_from((CharSequence) "m");
                             break lab0;
                         } while (false);
                         cursor = limit - v_1;
                         lab7: do {
                             // (, line 78
                             // literal, line 78
-                            if (!(eq_s_b(1, "'")))
+                            if (!(eq_s_b(1, (CharSequence)  "'")))
                             {
                                 break lab7;
                             }
@@ -827,7 +828,7 @@
                         return false;
                     }
                     // <-, line 80
-                    slice_from("g");
+                    slice_from((CharSequence) "g");
                     break;
                 case 3:
                     // (, line 81
@@ -837,7 +838,7 @@
                         return false;
                     }
                     // <-, line 81
-                    slice_from("lijk");
+                    slice_from((CharSequence) "lijk");
                     break;
                 case 4:
                     // (, line 82
@@ -847,7 +848,7 @@
                         return false;
                     }
                     // <-, line 82
-                    slice_from("isch");
+                    slice_from((CharSequence) "isch");
                     break;
                 case 5:
                     // (, line 83
@@ -872,7 +873,7 @@
                         return false;
                     }
                     // <-, line 84
-                    slice_from("t");
+                    slice_from((CharSequence) "t");
                     break;
                 case 7:
                     // (, line 85
@@ -882,7 +883,7 @@
                         return false;
                     }
                     // <-, line 85
-                    slice_from("s");
+                    slice_from((CharSequence) "s");
                     break;
                 case 8:
                     // (, line 86
@@ -892,7 +893,7 @@
                         return false;
                     }
                     // <-, line 86
-                    slice_from("r");
+                    slice_from((CharSequence) "r");
                     break;
                 case 9:
                     // (, line 87
@@ -904,7 +905,7 @@
                     // delete, line 87
                     slice_del();
                     // attach, line 87
-                    insert(cursor, cursor, "l");
+                    insert(cursor, cursor, (CharSequence) "l");
                     // call lengthen_V, line 87
                     if (!r_lengthen_V())
                     {
@@ -926,7 +927,7 @@
                     // delete, line 88
                     slice_del();
                     // attach, line 88
-                    insert(cursor, cursor, "en");
+                    insert(cursor, cursor, (CharSequence) "en");
                     // call lengthen_V, line 88
                     if (!r_lengthen_V())
                     {
@@ -946,7 +947,7 @@
                         return false;
                     }
                     // <-, line 89
-                    slice_from("ief");
+                    slice_from((CharSequence) "ief");
                     break;
             }
             return true;
@@ -977,7 +978,7 @@
                         return false;
                     }
                     // <-, line 96
-                    slice_from("eer");
+                    slice_from((CharSequence) "eer");
                     break;
                 case 2:
                     // (, line 97
@@ -1007,7 +1008,7 @@
                 case 4:
                     // (, line 101
                     // <-, line 101
-                    slice_from("r");
+                    slice_from((CharSequence) "r");
                     break;
                 case 5:
                     // (, line 104
@@ -1037,7 +1038,7 @@
                         return false;
                     }
                     // <-, line 105
-                    slice_from("aar");
+                    slice_from((CharSequence) "aar");
                     break;
                 case 7:
                     // (, line 106
@@ -1049,7 +1050,7 @@
                     // delete, line 106
                     slice_del();
                     // attach, line 106
-                    insert(cursor, cursor, "f");
+                    insert(cursor, cursor, (CharSequence) "f");
                     // call lengthen_V, line 106
                     if (!r_lengthen_V())
                     {
@@ -1066,7 +1067,7 @@
                     // delete, line 107
                     slice_del();
                     // attach, line 107
-                    insert(cursor, cursor, "g");
+                    insert(cursor, cursor, (CharSequence) "g");
                     // call lengthen_V, line 107
                     if (!r_lengthen_V())
                     {
@@ -1086,7 +1087,7 @@
                         return false;
                     }
                     // <-, line 108
-                    slice_from("t");
+                    slice_from((CharSequence) "t");
                     break;
                 case 10:
                     // (, line 109
@@ -1101,7 +1102,7 @@
                         return false;
                     }
                     // <-, line 109
-                    slice_from("d");
+                    slice_from((CharSequence) "d");
                     break;
             }
             return true;
@@ -1138,7 +1139,7 @@
                                 break lab1;
                             }
                             // <-, line 116
-                            slice_from("ie");
+                            slice_from((CharSequence) "ie");
                             break;
                         case 2:
                             // (, line 117
@@ -1148,7 +1149,7 @@
                                 break lab1;
                             }
                             // <-, line 117
-                            slice_from("eer");
+                            slice_from((CharSequence) "eer");
                             break;
                         case 3:
                             // (, line 118
@@ -1173,7 +1174,7 @@
                                 break lab1;
                             }
                             // <-, line 119
-                            slice_from("n");
+                            slice_from((CharSequence) "n");
                             break;
                         case 5:
                             // (, line 120
@@ -1188,7 +1189,7 @@
                                 break lab1;
                             }
                             // <-, line 120
-                            slice_from("l");
+                            slice_from((CharSequence) "l");
                             break;
                         case 6:
                             // (, line 121
@@ -1203,7 +1204,7 @@
                                 break lab1;
                             }
                             // <-, line 121
-                            slice_from("r");
+                            slice_from((CharSequence) "r");
                             break;
                         case 7:
                             // (, line 122
@@ -1213,7 +1214,7 @@
                                 break lab1;
                             }
                             // <-, line 122
-                            slice_from("teer");
+                            slice_from((CharSequence) "teer");
                             break;
                         case 8:
                             // (, line 124
@@ -1223,7 +1224,7 @@
                                 break lab1;
                             }
                             // <-, line 124
-                            slice_from("lijk");
+                            slice_from((CharSequence) "lijk");
                             break;
                         case 9:
                             // (, line 127
@@ -1319,17 +1320,17 @@
                 case 1:
                     // (, line 146
                     // <-, line 146
-                    slice_from("k");
+                    slice_from((CharSequence) "k");
                     break;
                 case 2:
                     // (, line 147
                     // <-, line 147
-                    slice_from("f");
+                    slice_from((CharSequence) "f");
                     break;
                 case 3:
                     // (, line 148
                     // <-, line 148
-                    slice_from("p");
+                    slice_from((CharSequence) "p");
                     break;
             }
             return true;
@@ -1355,112 +1356,112 @@
                 case 1:
                     // (, line 155
                     // <-, line 155
-                    slice_from("b");
+                    slice_from((CharSequence) "b");
                     break;
                 case 2:
                     // (, line 156
                     // <-, line 156
-                    slice_from("c");
+                    slice_from((CharSequence) "c");
                     break;
                 case 3:
                     // (, line 157
                     // <-, line 157
-                    slice_from("d");
+                    slice_from((CharSequence) "d");
                     break;
                 case 4:
                     // (, line 158
                     // <-, line 158
-                    slice_from("f");
+                    slice_from((CharSequence) "f");
                     break;
                 case 5:
                     // (, line 159
                     // <-, line 159
-                    slice_from("g");
+                    slice_from((CharSequence) "g");
                     break;
                 case 6:
                     // (, line 160
                     // <-, line 160
-                    slice_from("h");
+                    slice_from((CharSequence) "h");
                     break;
                 case 7:
                     // (, line 161
                     // <-, line 161
-                    slice_from("j");
+                    slice_from((CharSequence) "j");
                     break;
                 case 8:
                     // (, line 162
                     // <-, line 162
-                    slice_from("k");
+                    slice_from((CharSequence) "k");
                     break;
                 case 9:
                     // (, line 163
                     // <-, line 163
-                    slice_from("l");
+                    slice_from((CharSequence) "l");
                     break;
                 case 10:
                     // (, line 164
                     // <-, line 164
-                    slice_from("m");
+                    slice_from((CharSequence) "m");
                     break;
                 case 11:
                     // (, line 165
                     // <-, line 165
-                    slice_from("n");
+                    slice_from((CharSequence) "n");
                     break;
                 case 12:
                     // (, line 166
                     // <-, line 166
-                    slice_from("p");
+                    slice_from((CharSequence) "p");
                     break;
                 case 13:
                     // (, line 167
                     // <-, line 167
-                    slice_from("q");
+                    slice_from((CharSequence) "q");
                     break;
                 case 14:
                     // (, line 168
                     // <-, line 168
-                    slice_from("r");
+                    slice_from((CharSequence) "r");
                     break;
                 case 15:
                     // (, line 169
                     // <-, line 169
-                    slice_from("s");
+                    slice_from((CharSequence) "s");
                     break;
                 case 16:
                     // (, line 170
                     // <-, line 170
-                    slice_from("t");
+                    slice_from((CharSequence) "t");
                     break;
                 case 17:
                     // (, line 171
                     // <-, line 171
-                    slice_from("v");
+                    slice_from((CharSequence) "v");
                     break;
                 case 18:
                     // (, line 172
                     // <-, line 172
-                    slice_from("w");
+                    slice_from((CharSequence) "w");
                     break;
                 case 19:
                     // (, line 173
                     // <-, line 173
-                    slice_from("x");
+                    slice_from((CharSequence) "x");
                     break;
                 case 20:
                     // (, line 174
                     // <-, line 174
-                    slice_from("z");
+                    slice_from((CharSequence) "z");
                     break;
                 case 21:
                     // (, line 175
                     // <-, line 175
-                    slice_from("f");
+                    slice_from((CharSequence) "f");
                     break;
                 case 22:
                     // (, line 176
                     // <-, line 176
-                    slice_from("s");
+                    slice_from((CharSequence) "s");
                     break;
             }
             return true;
@@ -1503,7 +1504,7 @@
                         lab0: do {
                             // (, line 183
                             // literal, line 183
-                            if (!(eq_s_b(1, "n")))
+                            if (!(eq_s_b(1, (CharSequence)  "n")))
                             {
                                 break lab0;
                             }
@@ -1527,7 +1528,7 @@
                         lab1: do {
                             // (, line 184
                             // literal, line 184
-                            if (!(eq_s_b(1, "h")))
+                            if (!(eq_s_b(1, (CharSequence)  "h")))
                             {
                                 break lab1;
                             }
@@ -1555,7 +1556,7 @@
             // [, line 190
             bra = cursor;
             // literal, line 190
-            if (!(eq_s(2, "ge")))
+            if (!(eq_s(2, (CharSequence)  "ge")))
             {
                 return false;
             }
@@ -1638,7 +1639,7 @@
                     // [, line 197
                     bra = cursor;
                     // literal, line 197
-                    if (!(eq_s(2, "ge")))
+                    if (!(eq_s(2, (CharSequence)  "ge")))
                     {
                         break lab1;
                     }
@@ -1760,7 +1761,7 @@
                                 v_6 = cursor;
                                 lab7: do {
                                     // literal, line 209
-                                    if (!(eq_s(2, "ij")))
+                                    if (!(eq_s(2, (CharSequence)  "ij")))
                                     {
                                         break lab7;
                                     }
@@ -1815,7 +1816,7 @@
                                 v_10 = cursor;
                                 lab13: do {
                                     // literal, line 210
-                                    if (!(eq_s(2, "ij")))
+                                    if (!(eq_s(2, (CharSequence)  "ij")))
                                     {
                                         break lab13;
                                     }
@@ -1849,6 +1850,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
@@ -1881,14 +1883,14 @@
                 // [, line 218
                 bra = cursor;
                 // literal, line 218
-                if (!(eq_s(1, "y")))
+                if (!(eq_s(1, (CharSequence)  "y")))
                 {
                     break lab0;
                 }
                 // ], line 218
                 ket = cursor;
                 // <-, line 218
-                slice_from("Y");
+                slice_from((CharSequence) "Y");
                 // set Y_found, line 218
                 B_Y_found = true;
             } while (false);
@@ -1915,7 +1917,7 @@
                                 // [, line 219
                                 bra = cursor;
                                 // literal, line 219
-                                if (!(eq_s(1, "y")))
+                                if (!(eq_s(1, (CharSequence)  "y")))
                                 {
                                     break lab5;
                                 }
@@ -1932,7 +1934,7 @@
                             cursor++;
                         }
                         // <-, line 219
-                        slice_from("Y");
+                        slice_from((CharSequence) "Y");
                         // set Y_found, line 219
                         B_Y_found = true;
                         continue replab2;
@@ -2149,7 +2151,7 @@
                                 // [, line 243
                                 bra = cursor;
                                 // literal, line 243
-                                if (!(eq_s(1, "Y")))
+                                if (!(eq_s(1, (CharSequence)  "Y")))
                                 {
                                     break lab22;
                                 }
@@ -2166,7 +2168,7 @@
                             cursor++;
                         }
                         // <-, line 243
-                        slice_from("y");
+                        slice_from((CharSequence) "y");
                         continue replab19;
                     } while (false);
                     cursor = v_19;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/LovinsStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/LovinsStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/LovinsStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class LovinsStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -450,7 +451,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 25
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence) "e")))
                     {
                         break lab0;
                     }
@@ -482,7 +483,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 26
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence) "e")))
                     {
                         break lab0;
                     }
@@ -509,7 +510,7 @@
             }
             cursor = limit - v_1;
             // literal, line 27
-            if (!(eq_s_b(1, "f")))
+            if (!(eq_s_b(1, (CharSequence) "f")))
             {
                 return false;
             }
@@ -537,7 +538,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 28
-                    if (!(eq_s_b(1, "t")))
+                    if (!(eq_s_b(1, (CharSequence) "t")))
                     {
                         break lab1;
                     }
@@ -545,7 +546,7 @@
                 } while (false);
                 cursor = limit - v_2;
                 // literal, line 28
-                if (!(eq_s_b(2, "ll")))
+                if (!(eq_s_b(2, (CharSequence) "ll")))
                 {
                     return false;
                 }
@@ -575,7 +576,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 29
-                    if (!(eq_s_b(1, "o")))
+                    if (!(eq_s_b(1, (CharSequence) "o")))
                     {
                         break lab0;
                     }
@@ -588,7 +589,7 @@
                 v_3 = limit - cursor;
                 lab1: do {
                     // literal, line 29
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence) "e")))
                     {
                         break lab1;
                     }
@@ -621,7 +622,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 30
-                    if (!(eq_s_b(1, "a")))
+                    if (!(eq_s_b(1, (CharSequence) "a")))
                     {
                         break lab0;
                     }
@@ -634,7 +635,7 @@
                 v_3 = limit - cursor;
                 lab1: do {
                     // literal, line 30
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence) "e")))
                     {
                         break lab1;
                     }
@@ -666,7 +667,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 31
-                    if (!(eq_s_b(1, "l")))
+                    if (!(eq_s_b(1, (CharSequence) "l")))
                     {
                         break lab1;
                     }
@@ -675,7 +676,7 @@
                 cursor = limit - v_2;
                 lab2: do {
                     // literal, line 31
-                    if (!(eq_s_b(1, "i")))
+                    if (!(eq_s_b(1, (CharSequence) "i")))
                     {
                         break lab2;
                     }
@@ -684,7 +685,7 @@
                 cursor = limit - v_2;
                 // (, line 31
                 // literal, line 31
-                if (!(eq_s_b(1, "e")))
+                if (!(eq_s_b(1, (CharSequence) "e")))
                 {
                     return false;
                 }
@@ -695,7 +696,7 @@
                 }
                 cursor--;
                 // literal, line 31
-                if (!(eq_s_b(1, "u")))
+                if (!(eq_s_b(1, (CharSequence)  "u")))
                 {
                     return false;
                 }
@@ -727,7 +728,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 32
-                    if (!(eq_s_b(1, "u")))
+                    if (!(eq_s_b(1, (CharSequence)  "u")))
                     {
                         break lab0;
                     }
@@ -740,7 +741,7 @@
                 v_3 = limit - cursor;
                 lab1: do {
                     // literal, line 32
-                    if (!(eq_s_b(1, "x")))
+                    if (!(eq_s_b(1, (CharSequence)  "x")))
                     {
                         break lab1;
                     }
@@ -754,7 +755,7 @@
                 lab2: do {
                     // (, line 32
                     // literal, line 32
-                    if (!(eq_s_b(1, "s")))
+                    if (!(eq_s_b(1, (CharSequence)  "s")))
                     {
                         break lab2;
                     }
@@ -763,7 +764,7 @@
                         v_5 = limit - cursor;
                         lab3: do {
                             // literal, line 32
-                            if (!(eq_s_b(1, "o")))
+                            if (!(eq_s_b(1, (CharSequence)  "o")))
                             {
                                 break lab3;
                             }
@@ -802,7 +803,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 33
-                    if (!(eq_s_b(1, "a")))
+                    if (!(eq_s_b(1, (CharSequence)  "a")))
                     {
                         break lab0;
                     }
@@ -815,7 +816,7 @@
                 v_3 = limit - cursor;
                 lab1: do {
                     // literal, line 33
-                    if (!(eq_s_b(1, "c")))
+                    if (!(eq_s_b(1, (CharSequence)  "c")))
                     {
                         break lab1;
                     }
@@ -828,7 +829,7 @@
                 v_4 = limit - cursor;
                 lab2: do {
                     // literal, line 33
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence)  "e")))
                     {
                         break lab2;
                     }
@@ -841,7 +842,7 @@
                 v_5 = limit - cursor;
                 lab3: do {
                     // literal, line 33
-                    if (!(eq_s_b(1, "m")))
+                    if (!(eq_s_b(1, (CharSequence)  "m")))
                     {
                         break lab3;
                     }
@@ -888,7 +889,7 @@
                         v_3 = limit - cursor;
                         lab2: do {
                             // literal, line 34
-                            if (!(eq_s_b(1, "s")))
+                            if (!(eq_s_b(1, (CharSequence)  "s")))
                             {
                                 break lab2;
                             }
@@ -933,7 +934,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 35
-                    if (!(eq_s_b(1, "l")))
+                    if (!(eq_s_b(1, (CharSequence)  "l")))
                     {
                         break lab1;
                     }
@@ -941,7 +942,7 @@
                 } while (false);
                 cursor = limit - v_2;
                 // literal, line 35
-                if (!(eq_s_b(1, "i")))
+                if (!(eq_s_b(1, (CharSequence)  "i")))
                 {
                     return false;
                 }
@@ -970,7 +971,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 36
-                    if (!(eq_s_b(1, "c")))
+                    if (!(eq_s_b(1, (CharSequence)  "c")))
                     {
                         break lab0;
                     }
@@ -1016,7 +1017,7 @@
                 v_3 = limit - cursor;
                 lab0: do {
                     // literal, line 37
-                    if (!(eq_s_b(1, "l")))
+                    if (!(eq_s_b(1, (CharSequence)  "l")))
                     {
                         break lab0;
                     }
@@ -1029,7 +1030,7 @@
                 v_4 = limit - cursor;
                 lab1: do {
                     // literal, line 37
-                    if (!(eq_s_b(1, "n")))
+                    if (!(eq_s_b(1, (CharSequence)  "n")))
                     {
                         break lab1;
                     }
@@ -1061,7 +1062,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 38
-                    if (!(eq_s_b(1, "n")))
+                    if (!(eq_s_b(1, (CharSequence)  "n")))
                     {
                         break lab1;
                     }
@@ -1069,7 +1070,7 @@
                 } while (false);
                 cursor = limit - v_2;
                 // literal, line 38
-                if (!(eq_s_b(1, "r")))
+                if (!(eq_s_b(1, (CharSequence)  "r")))
                 {
                     return false;
                 }
@@ -1099,7 +1100,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 39
-                    if (!(eq_s_b(2, "dr")))
+                    if (!(eq_s_b(2, (CharSequence)  "dr")))
                     {
                         break lab1;
                     }
@@ -1108,7 +1109,7 @@
                 cursor = limit - v_2;
                 // (, line 39
                 // literal, line 39
-                if (!(eq_s_b(1, "t")))
+                if (!(eq_s_b(1, (CharSequence)  "t")))
                 {
                     return false;
                 }
@@ -1117,7 +1118,7 @@
                     v_3 = limit - cursor;
                     lab2: do {
                         // literal, line 39
-                        if (!(eq_s_b(1, "t")))
+                        if (!(eq_s_b(1, (CharSequence)  "t")))
                         {
                             break lab2;
                         }
@@ -1151,7 +1152,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 40
-                    if (!(eq_s_b(1, "s")))
+                    if (!(eq_s_b(1, (CharSequence)  "s")))
                     {
                         break lab1;
                     }
@@ -1160,7 +1161,7 @@
                 cursor = limit - v_2;
                 // (, line 40
                 // literal, line 40
-                if (!(eq_s_b(1, "t")))
+                if (!(eq_s_b(1, (CharSequence)  "t")))
                 {
                     return false;
                 }
@@ -1169,7 +1170,7 @@
                     v_3 = limit - cursor;
                     lab2: do {
                         // literal, line 40
-                        if (!(eq_s_b(1, "o")))
+                        if (!(eq_s_b(1, (CharSequence)  "o")))
                         {
                             break lab2;
                         }
@@ -1202,7 +1203,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 41
-                    if (!(eq_s_b(1, "l")))
+                    if (!(eq_s_b(1, (CharSequence)  "l")))
                     {
                         break lab1;
                     }
@@ -1211,7 +1212,7 @@
                 cursor = limit - v_2;
                 lab2: do {
                     // literal, line 41
-                    if (!(eq_s_b(1, "m")))
+                    if (!(eq_s_b(1, (CharSequence)  "m")))
                     {
                         break lab2;
                     }
@@ -1220,7 +1221,7 @@
                 cursor = limit - v_2;
                 lab3: do {
                     // literal, line 41
-                    if (!(eq_s_b(1, "n")))
+                    if (!(eq_s_b(1, (CharSequence)  "n")))
                     {
                         break lab3;
                     }
@@ -1228,7 +1229,7 @@
                 } while (false);
                 cursor = limit - v_2;
                 // literal, line 41
-                if (!(eq_s_b(1, "r")))
+                if (!(eq_s_b(1, (CharSequence)  "r")))
                 {
                     return false;
                 }
@@ -1252,7 +1253,7 @@
             }
             cursor = limit - v_1;
             // literal, line 42
-            if (!(eq_s_b(1, "c")))
+            if (!(eq_s_b(1, (CharSequence)  "c")))
             {
                 return false;
             }
@@ -1281,7 +1282,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 43
-                    if (!(eq_s_b(1, "s")))
+                    if (!(eq_s_b(1, (CharSequence)  "s")))
                     {
                         break lab0;
                     }
@@ -1294,7 +1295,7 @@
                 v_3 = limit - cursor;
                 lab1: do {
                     // literal, line 43
-                    if (!(eq_s_b(1, "u")))
+                    if (!(eq_s_b(1, (CharSequence)  "u")))
                     {
                         break lab1;
                     }
@@ -1326,7 +1327,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 44
-                    if (!(eq_s_b(1, "l")))
+                    if (!(eq_s_b(1, (CharSequence)  "l")))
                     {
                         break lab1;
                     }
@@ -1335,7 +1336,7 @@
                 cursor = limit - v_2;
                 lab2: do {
                     // literal, line 44
-                    if (!(eq_s_b(1, "i")))
+                    if (!(eq_s_b(1, (CharSequence)  "i")))
                     {
                         break lab2;
                     }
@@ -1344,7 +1345,7 @@
                 cursor = limit - v_2;
                 // (, line 44
                 // literal, line 44
-                if (!(eq_s_b(1, "e")))
+                if (!(eq_s_b(1, (CharSequence)  "e")))
                 {
                     return false;
                 }
@@ -1355,7 +1356,7 @@
                 }
                 cursor--;
                 // literal, line 44
-                if (!(eq_s_b(1, "u")))
+                if (!(eq_s_b(1, (CharSequence)  "u")))
                 {
                     return false;
                 }
@@ -1379,7 +1380,7 @@
             }
             cursor = limit - v_1;
             // literal, line 45
-            if (!(eq_s_b(2, "in")))
+            if (!(eq_s_b(2, (CharSequence)  "in")))
             {
                 return false;
             }
@@ -1407,7 +1408,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 46
-                    if (!(eq_s_b(1, "f")))
+                    if (!(eq_s_b(1, (CharSequence)  "f")))
                     {
                         break lab0;
                     }
@@ -1463,7 +1464,7 @@
                 v_2 = limit - cursor;
                 lab0: do {
                     // literal, line 49
-                    if (!(eq_s_b(3, "met")))
+                    if (!(eq_s_b(3, (CharSequence) "met")))
                     {
                         break lab0;
                     }
@@ -1476,7 +1477,7 @@
                 v_3 = limit - cursor;
                 lab1: do {
                     // literal, line 49
-                    if (!(eq_s_b(4, "ryst")))
+                    if (!(eq_s_b(4, (CharSequence) "ryst")))
                     {
                         break lab1;
                     }
@@ -1503,7 +1504,7 @@
             }
             cursor = limit - v_1;
             // literal, line 50
-            if (!(eq_s_b(1, "l")))
+            if (!(eq_s_b(1, (CharSequence)  "l")))
             {
                 return false;
             }
@@ -1588,42 +1589,42 @@
                 case 1:
                     // (, line 161
                     // <-, line 161
-                    slice_from("ief");
+                    slice_from((CharSequence) "ief");
                     break;
                 case 2:
                     // (, line 162
                     // <-, line 162
-                    slice_from("uc");
+                    slice_from((CharSequence) "uc");
                     break;
                 case 3:
                     // (, line 163
                     // <-, line 163
-                    slice_from("um");
+                    slice_from((CharSequence) "um");
                     break;
                 case 4:
                     // (, line 164
                     // <-, line 164
-                    slice_from("rb");
+                    slice_from((CharSequence) "rb");
                     break;
                 case 5:
                     // (, line 165
                     // <-, line 165
-                    slice_from("ur");
+                    slice_from((CharSequence) "ur");
                     break;
                 case 6:
                     // (, line 166
                     // <-, line 166
-                    slice_from("ister");
+                    slice_from((CharSequence) "ister");
                     break;
                 case 7:
                     // (, line 167
                     // <-, line 167
-                    slice_from("meter");
+                    slice_from((CharSequence) "meter");
                     break;
                 case 8:
                     // (, line 168
                     // <-, line 168
-                    slice_from("olut");
+                    slice_from((CharSequence) "olut");
                     break;
                 case 9:
                     // (, line 169
@@ -1632,7 +1633,7 @@
                         v_1 = limit - cursor;
                         lab0: do {
                             // literal, line 169
-                            if (!(eq_s_b(1, "a")))
+                            if (!(eq_s_b(1, (CharSequence)  "a")))
                             {
                                 break lab0;
                             }
@@ -1645,7 +1646,7 @@
                         v_2 = limit - cursor;
                         lab1: do {
                             // literal, line 169
-                            if (!(eq_s_b(1, "i")))
+                            if (!(eq_s_b(1, (CharSequence)  "i")))
                             {
                                 break lab1;
                             }
@@ -1658,7 +1659,7 @@
                         v_3 = limit - cursor;
                         lab2: do {
                             // literal, line 169
-                            if (!(eq_s_b(1, "o")))
+                            if (!(eq_s_b(1, (CharSequence)  "o")))
                             {
                                 break lab2;
                             }
@@ -1667,77 +1668,77 @@
                         cursor = limit - v_3;
                     }
                     // <-, line 169
-                    slice_from("l");
+                    slice_from((CharSequence) "l");
                     break;
                 case 10:
                     // (, line 170
                     // <-, line 170
-                    slice_from("bic");
+                    slice_from((CharSequence) "bic");
                     break;
                 case 11:
                     // (, line 171
                     // <-, line 171
-                    slice_from("dic");
+                    slice_from((CharSequence) "dic");
                     break;
                 case 12:
                     // (, line 172
                     // <-, line 172
-                    slice_from("pic");
+                    slice_from((CharSequence) "pic");
                     break;
                 case 13:
                     // (, line 173
                     // <-, line 173
-                    slice_from("tic");
+                    slice_from((CharSequence) "tic");
                     break;
                 case 14:
                     // (, line 174
                     // <-, line 174
-                    slice_from("ac");
+                    slice_from((CharSequence) "ac");
                     break;
                 case 15:
                     // (, line 175
                     // <-, line 175
-                    slice_from("ec");
+                    slice_from((CharSequence) "ec");
                     break;
                 case 16:
                     // (, line 176
                     // <-, line 176
-                    slice_from("ic");
+                    slice_from((CharSequence) "ic");
                     break;
                 case 17:
                     // (, line 177
                     // <-, line 177
-                    slice_from("luc");
+                    slice_from((CharSequence) "luc");
                     break;
                 case 18:
                     // (, line 178
                     // <-, line 178
-                    slice_from("uas");
+                    slice_from((CharSequence) "uas");
                     break;
                 case 19:
                     // (, line 179
                     // <-, line 179
-                    slice_from("vas");
+                    slice_from((CharSequence) "vas");
                     break;
                 case 20:
                     // (, line 180
                     // <-, line 180
-                    slice_from("cis");
+                    slice_from((CharSequence) "cis");
                     break;
                 case 21:
                     // (, line 181
                     // <-, line 181
-                    slice_from("lis");
+                    slice_from((CharSequence) "lis");
                     break;
                 case 22:
                     // (, line 182
                     // <-, line 182
-                    slice_from("eris");
+                    slice_from((CharSequence) "eris");
                     break;
                 case 23:
                     // (, line 183
                     // <-, line 183
-                    slice_from("pans");
+                    slice_from((CharSequence) "pans");
                     break;
                 case 24:
                     // (, line 184
@@ -1746,7 +1747,7 @@
                         v_4 = limit - cursor;
                         lab3: do {
                             // literal, line 184
-                            if (!(eq_s_b(1, "s")))
+                            if (!(eq_s_b(1, (CharSequence)  "s")))
                             {
                                 break lab3;
                             }
@@ -1755,22 +1756,22 @@
                         cursor = limit - v_4;
                     }
                     // <-, line 184
-                    slice_from("ens");
+                    slice_from((CharSequence) "ens");
                     break;
                 case 25:
                     // (, line 185
                     // <-, line 185
-                    slice_from("ons");
+                    slice_from((CharSequence) "ons");
                     break;
                 case 26:
                     // (, line 186
                     // <-, line 186
-                    slice_from("lus");
+                    slice_from((CharSequence) "lus");
                     break;
                 case 27:
                     // (, line 187
                     // <-, line 187
-                    slice_from("rus");
+                    slice_from((CharSequence) "rus");
                     break;
                 case 28:
                     // (, line 188
@@ -1779,7 +1780,7 @@
                         v_5 = limit - cursor;
                         lab4: do {
                             // literal, line 188
-                            if (!(eq_s_b(1, "p")))
+                            if (!(eq_s_b(1, (CharSequence)  "p")))
                             {
                                 break lab4;
                             }
@@ -1792,7 +1793,7 @@
                         v_6 = limit - cursor;
                         lab5: do {
                             // literal, line 188
-                            if (!(eq_s_b(1, "t")))
+                            if (!(eq_s_b(1, (CharSequence)  "t")))
                             {
                                 break lab5;
                             }
@@ -1801,12 +1802,12 @@
                         cursor = limit - v_6;
                     }
                     // <-, line 188
-                    slice_from("hes");
+                    slice_from((CharSequence) "hes");
                     break;
                 case 29:
                     // (, line 189
                     // <-, line 189
-                    slice_from("mis");
+                    slice_from((CharSequence) "mis");
                     break;
                 case 30:
                     // (, line 190
@@ -1815,7 +1816,7 @@
                         v_7 = limit - cursor;
                         lab6: do {
                             // literal, line 190
-                            if (!(eq_s_b(1, "m")))
+                            if (!(eq_s_b(1, (CharSequence)  "m")))
                             {
                                 break lab6;
                             }
@@ -1824,12 +1825,12 @@
                         cursor = limit - v_7;
                     }
                     // <-, line 190
-                    slice_from("ens");
+                    slice_from((CharSequence) "ens");
                     break;
                 case 31:
                     // (, line 192
                     // <-, line 192
-                    slice_from("ers");
+                    slice_from((CharSequence) "ers");
                     break;
                 case 32:
                     // (, line 193
@@ -1838,7 +1839,7 @@
                         v_8 = limit - cursor;
                         lab7: do {
                             // literal, line 193
-                            if (!(eq_s_b(1, "n")))
+                            if (!(eq_s_b(1, (CharSequence)  "n")))
                             {
                                 break lab7;
                             }
@@ -1847,22 +1848,23 @@
                         cursor = limit - v_8;
                     }
                     // <-, line 193
-                    slice_from("es");
+                    slice_from((CharSequence) "es");
                     break;
                 case 33:
                     // (, line 194
                     // <-, line 194
-                    slice_from("ys");
+                    slice_from((CharSequence) "ys");
                     break;
                 case 34:
                     // (, line 195
                     // <-, line 195
-                    slice_from("ys");
+                    slice_from((CharSequence) "ys");
                     break;
             }
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/NorwegianStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/NorwegianStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/NorwegianStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class NorwegianStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -195,7 +196,7 @@
                         cursor = limit - v_3;
                         // (, line 46
                         // literal, line 46
-                        if (!(eq_s_b(1, "k")))
+                        if (!(eq_s_b(1, (CharSequence) "k")))
                         {
                             return false;
                         }
@@ -210,7 +211,7 @@
                 case 3:
                     // (, line 48
                     // <-, line 48
-                    slice_from("er");
+                    slice_from((CharSequence) "er");
                     break;
             }
             return true;
@@ -302,6 +303,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PorterStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PorterStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PorterStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class PorterStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -160,12 +161,12 @@
                 case 1:
                     // (, line 26
                     // <-, line 26
-                    slice_from("ss");
+                    slice_from((CharSequence) "ss");
                     break;
                 case 2:
                     // (, line 27
                     // <-, line 27
-                    slice_from("i");
+                    slice_from((CharSequence) "i");
                     break;
                 case 3:
                     // (, line 29
@@ -203,7 +204,7 @@
                         return false;
                     }
                     // <-, line 35
-                    slice_from("ee");
+                    slice_from((CharSequence) "ee");
                     break;
                 case 2:
                     // (, line 37
@@ -245,7 +246,7 @@
                             // <+, line 41
                             {
                                 int c = cursor;
-                                insert(cursor, cursor, "e");
+                                insert(cursor, cursor, (CharSequence) "e");
                                 cursor = c;
                             }
                             break;
@@ -282,7 +283,7 @@
                             // <+, line 45
                             {
                                 int c = cursor;
-                                insert(cursor, cursor, "e");
+                                insert(cursor, cursor, (CharSequence) "e");
                                 cursor = c;
                             }
                             break;
@@ -302,7 +303,7 @@
                 v_1 = limit - cursor;
                 lab1: do {
                     // literal, line 52
-                    if (!(eq_s_b(1, "y")))
+                    if (!(eq_s_b(1,(CharSequence) "y")))
                     {
                         break lab1;
                     }
@@ -310,7 +311,7 @@
                 } while (false);
                 cursor = limit - v_1;
                 // literal, line 52
-                if (!(eq_s_b(1, "Y")))
+                if (!(eq_s_b(1,(CharSequence) "Y")))
                 {
                     return false;
                 }
@@ -334,7 +335,7 @@
                 cursor--;
             }
             // <-, line 54
-            slice_from("i");
+            slice_from((CharSequence) "i");
             return true;
         }
 
@@ -362,72 +363,72 @@
                 case 1:
                     // (, line 59
                     // <-, line 59
-                    slice_from("tion");
+                    slice_from((CharSequence) "tion");
                     break;
                 case 2:
                     // (, line 60
                     // <-, line 60
-                    slice_from("ence");
+                    slice_from((CharSequence) "ence");
                     break;
                 case 3:
                     // (, line 61
                     // <-, line 61
-                    slice_from("ance");
+                    slice_from((CharSequence) "ance");
                     break;
                 case 4:
                     // (, line 62
                     // <-, line 62
-                    slice_from("able");
+                    slice_from((CharSequence) "able");
                     break;
                 case 5:
                     // (, line 63
                     // <-, line 63
-                    slice_from("ent");
+                    slice_from((CharSequence) "ent");
                     break;
                 case 6:
                     // (, line 64
                     // <-, line 64
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 7:
                     // (, line 66
                     // <-, line 66
-                    slice_from("ize");
+                    slice_from((CharSequence) "ize");
                     break;
                 case 8:
                     // (, line 68
                     // <-, line 68
-                    slice_from("ate");
+                    slice_from((CharSequence) "ate");
                     break;
                 case 9:
                     // (, line 69
                     // <-, line 69
-                    slice_from("al");
+                    slice_from((CharSequence) "al");
                     break;
                 case 10:
                     // (, line 71
                     // <-, line 71
-                    slice_from("al");
+                    slice_from((CharSequence) "al");
                     break;
                 case 11:
                     // (, line 72
                     // <-, line 72
-                    slice_from("ful");
+                    slice_from((CharSequence) "ful");
                     break;
                 case 12:
                     // (, line 74
                     // <-, line 74
-                    slice_from("ous");
+                    slice_from((CharSequence) "ous");
                     break;
                 case 13:
                     // (, line 76
                     // <-, line 76
-                    slice_from("ive");
+                    slice_from((CharSequence) "ive");
                     break;
                 case 14:
                     // (, line 77
                     // <-, line 77
-                    slice_from("ble");
+                    slice_from((CharSequence) "ble");
                     break;
             }
             return true;
@@ -457,12 +458,12 @@
                 case 1:
                     // (, line 83
                     // <-, line 83
-                    slice_from("al");
+                    slice_from((CharSequence) "al");
                     break;
                 case 2:
                     // (, line 85
                     // <-, line 85
-                    slice_from("ic");
+                    slice_from((CharSequence) "ic");
                     break;
                 case 3:
                     // (, line 87
@@ -507,7 +508,7 @@
                         v_1 = limit - cursor;
                         lab1: do {
                             // literal, line 96
-                            if (!(eq_s_b(1, "s")))
+                            if (!(eq_s_b(1,(CharSequence) "s")))
                             {
                                 break lab1;
                             }
@@ -515,7 +516,7 @@
                         } while (false);
                         cursor = limit - v_1;
                         // literal, line 96
-                        if (!(eq_s_b(1, "t")))
+                        if (!(eq_s_b(1,(CharSequence) "t")))
                         {
                             return false;
                         }
@@ -534,7 +535,7 @@
             // [, line 101
             ket = cursor;
             // literal, line 101
-            if (!(eq_s_b(1, "e")))
+            if (!(eq_s_b(1,(CharSequence) "e")))
             {
                 return false;
             }
@@ -582,7 +583,7 @@
             // [, line 107
             ket = cursor;
             // literal, line 107
-            if (!(eq_s_b(1, "l")))
+            if (!(eq_s_b(1,(CharSequence) "l")))
             {
                 return false;
             }
@@ -594,7 +595,7 @@
                 return false;
             }
             // literal, line 108
-            if (!(eq_s_b(1, "l")))
+            if (!(eq_s_b(1,(CharSequence) "l")))
             {
                 return false;
             }
@@ -603,6 +604,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
@@ -630,14 +632,14 @@
                 // [, line 116
                 bra = cursor;
                 // literal, line 116
-                if (!(eq_s(1, "y")))
+                if (!(eq_s(1,(CharSequence) "y")))
                 {
                     break lab0;
                 }
                 // ], line 116
                 ket = cursor;
                 // <-, line 116
-                slice_from("Y");
+                slice_from((CharSequence) "Y");
                 // set Y_found, line 116
                 B_Y_found = true;
             } while (false);
@@ -664,7 +666,7 @@
                                 // [, line 117
                                 bra = cursor;
                                 // literal, line 117
-                                if (!(eq_s(1, "y")))
+                                if (!(eq_s(1,(CharSequence) "y")))
                                 {
                                     break lab5;
                                 }
@@ -681,7 +683,7 @@
                             cursor++;
                         }
                         // <-, line 117
-                        slice_from("Y");
+                        slice_from((CharSequence) "Y");
                         // set Y_found, line 117
                         B_Y_found = true;
                         continue replab2;
@@ -874,7 +876,7 @@
                                 // [, line 137
                                 bra = cursor;
                                 // literal, line 137
-                                if (!(eq_s(1, "Y")))
+                                if (!(eq_s(1, (CharSequence) "Y")))
                                 {
                                     break lab27;
                                 }
@@ -891,7 +893,7 @@
                             cursor++;
                         }
                         // <-, line 137
-                        slice_from("y");
+                        slice_from((CharSequence) "y");
                         continue replab24;
                     } while (false);
                     cursor = v_19;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PortugueseStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PortugueseStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/PortugueseStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class PortugueseStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -266,12 +267,12 @@
                         case 1:
                             // (, line 38
                             // <-, line 38
-                            slice_from("a~");
+                            slice_from((CharSequence) "a~");
                             break;
                         case 2:
                             // (, line 39
                             // <-, line 39
-                            slice_from("o~");
+                            slice_from((CharSequence) "o~");
                             break;
                         case 3:
                             // (, line 40
@@ -519,12 +520,12 @@
                         case 1:
                             // (, line 64
                             // <-, line 64
-                            slice_from("\u00E3");
+                            slice_from((CharSequence) "\u00E3");
                             break;
                         case 2:
                             // (, line 65
                             // <-, line 65
-                            slice_from("\u00F5");
+                            slice_from((CharSequence) "\u00F5");
                             break;
                         case 3:
                             // (, line 66
@@ -606,7 +607,7 @@
                         return false;
                     }
                     // <-, line 98
-                    slice_from("log");
+                    slice_from((CharSequence) "log");
                     break;
                 case 3:
                     // (, line 101
@@ -616,7 +617,7 @@
                         return false;
                     }
                     // <-, line 102
-                    slice_from("u");
+                    slice_from((CharSequence) "u");
                     break;
                 case 4:
                     // (, line 105
@@ -626,7 +627,7 @@
                         return false;
                     }
                     // <-, line 106
-                    slice_from("ente");
+                    slice_from((CharSequence) "ente");
                     break;
                 case 5:
                     // (, line 109
@@ -669,7 +670,7 @@
                                 // [, line 113
                                 ket = cursor;
                                 // literal, line 113
-                                if (!(eq_s_b(2, "at")))
+                                if (!(eq_s_b(2, (CharSequence) "at")))
                                 {
                                     cursor = limit - v_1;
                                     break lab0;
@@ -788,7 +789,7 @@
                         // [, line 148
                         ket = cursor;
                         // literal, line 148
-                        if (!(eq_s_b(2, "at")))
+                        if (!(eq_s_b(2, (CharSequence) "at")))
                         {
                             cursor = limit - v_4;
                             break lab3;
@@ -813,12 +814,12 @@
                         return false;
                     }
                     // literal, line 153
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence)  "e")))
                     {
                         return false;
                     }
                     // <-, line 154
-                    slice_from("ir");
+                    slice_from((CharSequence) "ir");
                     break;
             }
             return true;
@@ -931,7 +932,7 @@
                         lab1: do {
                             // (, line 194
                             // literal, line 194
-                            if (!(eq_s_b(1, "u")))
+                            if (!(eq_s_b(1, (CharSequence)  "u")))
                             {
                                 break lab1;
                             }
@@ -940,7 +941,7 @@
                             // test, line 194
                             v_2 = limit - cursor;
                             // literal, line 194
-                            if (!(eq_s_b(1, "g")))
+                            if (!(eq_s_b(1, (CharSequence)  "g")))
                             {
                                 break lab1;
                             }
@@ -950,7 +951,7 @@
                         cursor = limit - v_1;
                         // (, line 195
                         // literal, line 195
-                        if (!(eq_s_b(1, "i")))
+                        if (!(eq_s_b(1, (CharSequence)  "i")))
                         {
                             return false;
                         }
@@ -959,7 +960,7 @@
                         // test, line 195
                         v_3 = limit - cursor;
                         // literal, line 195
-                        if (!(eq_s_b(1, "c")))
+                        if (!(eq_s_b(1, (CharSequence)  "c")))
                         {
                             return false;
                         }
@@ -976,12 +977,13 @@
                 case 2:
                     // (, line 196
                     // <-, line 196
-                    slice_from("c");
+                    slice_from((CharSequence) "c");
                     break;
             }
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
@@ -1055,7 +1057,7 @@
                             // [, line 207
                             ket = cursor;
                             // literal, line 207
-                            if (!(eq_s_b(1, "i")))
+                            if (!(eq_s_b(1, (CharSequence)  "i")))
                             {
                                 break lab7;
                             }
@@ -1064,7 +1066,7 @@
                             // test, line 207
                             v_8 = limit - cursor;
                             // literal, line 207
-                            if (!(eq_s_b(1, "c")))
+                            if (!(eq_s_b(1, (CharSequence)  "c")))
                             {
                                 break lab7;
                             }
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RomanianStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class RomanianStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -296,7 +297,7 @@
                                 lab5: do {
                                     // (, line 33
                                     // literal, line 33
-                                    if (!(eq_s(1, "u")))
+                                    if (!(eq_s(1,(CharSequence) "u")))
                                     {
                                         break lab5;
                                     }
@@ -307,13 +308,13 @@
                                         break lab5;
                                     }
                                     // <-, line 33
-                                    slice_from("U");
+                                    slice_from((CharSequence) "U");
                                     break lab4;
                                 } while (false);
                                 cursor = v_3;
                                 // (, line 34
                                 // literal, line 34
-                                if (!(eq_s(1, "i")))
+                                if (!(eq_s(1,(CharSequence) "i")))
                                 {
                                     break lab3;
                                 }
@@ -324,7 +325,7 @@
                                     break lab3;
                                 }
                                 // <-, line 34
-                                slice_from("I");
+                                slice_from((CharSequence) "I");
                             } while (false);
                             cursor = v_2;
                             break golab2;
@@ -572,12 +573,12 @@
                         case 1:
                             // (, line 59
                             // <-, line 59
-                            slice_from("i");
+                            slice_from((CharSequence) "i");
                             break;
                         case 2:
                             // (, line 60
                             // <-, line 60
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 3:
                             // (, line 61
@@ -651,17 +652,17 @@
                 case 2:
                     // (, line 77
                     // <-, line 77
-                    slice_from("a");
+                    slice_from((CharSequence) "a");
                     break;
                 case 3:
                     // (, line 79
                     // <-, line 79
-                    slice_from("e");
+                    slice_from((CharSequence) "e");
                     break;
                 case 4:
                     // (, line 81
                     // <-, line 81
-                    slice_from("i");
+                    slice_from((CharSequence) "i");
                     break;
                 case 5:
                     // (, line 83
@@ -670,7 +671,7 @@
                         v_1 = limit - cursor;
                         lab0: do {
                             // literal, line 83
-                            if (!(eq_s_b(2, "ab")))
+                            if (!(eq_s_b(2,(CharSequence) "ab")))
                             {
                                 break lab0;
                             }
@@ -679,17 +680,17 @@
                         cursor = limit - v_1;
                     }
                     // <-, line 83
-                    slice_from("i");
+                    slice_from((CharSequence) "i");
                     break;
                 case 6:
                     // (, line 85
                     // <-, line 85
-                    slice_from("at");
+                    slice_from((CharSequence) "at");
                     break;
                 case 7:
                     // (, line 87
                     // <-, line 87
-                    slice_from("a\u0163i");
+                    slice_from((CharSequence) "a\u0163i");
                     break;
             }
             return true;
@@ -723,32 +724,32 @@
                 case 1:
                     // (, line 100
                     // <-, line 101
-                    slice_from("abil");
+                    slice_from((CharSequence) "abil");
                     break;
                 case 2:
                     // (, line 103
                     // <-, line 104
-                    slice_from("ibil");
+                    slice_from((CharSequence) "ibil");
                     break;
                 case 3:
                     // (, line 106
                     // <-, line 107
-                    slice_from("iv");
+                    slice_from((CharSequence) "iv");
                     break;
                 case 4:
                     // (, line 112
                     // <-, line 113
-                    slice_from("ic");
+                    slice_from((CharSequence) "ic");
                     break;
                 case 5:
                     // (, line 117
                     // <-, line 118
-                    slice_from("at");
+                    slice_from((CharSequence) "at");
                     break;
                 case 6:
                     // (, line 121
                     // <-, line 122
-                    slice_from("it");
+                    slice_from((CharSequence) "it");
                     break;
             }
             // set standard_suffix_removed, line 125
@@ -805,19 +806,19 @@
                 case 2:
                     // (, line 151
                     // literal, line 152
-                    if (!(eq_s_b(1, "\u0163")))
+                    if (!(eq_s_b(1,(CharSequence) "\u0163")))
                     {
                         return false;
                     }
                     // ], line 152
                     bra = cursor;
                     // <-, line 152
-                    slice_from("t");
+                    slice_from((CharSequence) "t");
                     break;
                 case 3:
                     // (, line 155
                     // <-, line 156
-                    slice_from("ist");
+                    slice_from((CharSequence) "ist");
                     break;
             }
             // set standard_suffix_removed, line 160
@@ -871,7 +872,7 @@
                         } while (false);
                         cursor = limit - v_3;
                         // literal, line 200
-                        if (!(eq_s_b(1, "u")))
+                        if (!(eq_s_b(1,(CharSequence) "u")))
                         {
                             limit_backward = v_2;
                             return false;
@@ -920,6 +921,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/RussianStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class RussianStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -291,7 +292,7 @@
                         v_1 = limit - cursor;
                         lab1: do {
                             // literal, line 76
-                            if (!(eq_s_b(1, "\u0430")))
+                            if (!(eq_s_b(1,(CharSequence) "\u0430")))
                             {
                                 break lab1;
                             }
@@ -299,7 +300,7 @@
                         } while (false);
                         cursor = limit - v_1;
                         // literal, line 76
-                        if (!(eq_s_b(1, "\u044F")))
+                        if (!(eq_s_b(1,(CharSequence) "\u044F")))
                         {
                             return false;
                         }
@@ -377,7 +378,7 @@
                             v_2 = limit - cursor;
                             lab2: do {
                                 // literal, line 115
-                                if (!(eq_s_b(1, "\u0430")))
+                                if (!(eq_s_b(1,(CharSequence) "\u0430")))
                                 {
                                     break lab2;
                                 }
@@ -385,7 +386,7 @@
                             } while (false);
                             cursor = limit - v_2;
                             // literal, line 115
-                            if (!(eq_s_b(1, "\u044F")))
+                            if (!(eq_s_b(1,(CharSequence) "\u044F")))
                             {
                                 cursor = limit - v_1;
                                 break lab0;
@@ -453,7 +454,7 @@
                         v_1 = limit - cursor;
                         lab1: do {
                             // literal, line 143
-                            if (!(eq_s_b(1, "\u0430")))
+                            if (!(eq_s_b(1,(CharSequence) "\u0430")))
                             {
                                 break lab1;
                             }
@@ -461,7 +462,7 @@
                         } while (false);
                         cursor = limit - v_1;
                         // literal, line 143
-                        if (!(eq_s_b(1, "\u044F")))
+                        if (!(eq_s_b(1,(CharSequence) "\u044F")))
                         {
                             return false;
                         }
@@ -556,14 +557,14 @@
                     // [, line 189
                     ket = cursor;
                     // literal, line 189
-                    if (!(eq_s_b(1, "\u043D")))
+                    if (!(eq_s_b(1,(CharSequence) "\u043D")))
                     {
                         return false;
                     }
                     // ], line 189
                     bra = cursor;
                     // literal, line 189
-                    if (!(eq_s_b(1, "\u043D")))
+                    if (!(eq_s_b(1,(CharSequence) "\u043D")))
                     {
                         return false;
                     }
@@ -573,7 +574,7 @@
                 case 2:
                     // (, line 192
                     // literal, line 192
-                    if (!(eq_s_b(1, "\u043D")))
+                    if (!(eq_s_b(1,(CharSequence) "\u043D")))
                     {
                         return false;
                     }
@@ -589,6 +590,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
@@ -689,7 +691,7 @@
                 // [, line 209
                 ket = cursor;
                 // literal, line 209
-                if (!(eq_s_b(1, "\u0438")))
+                if (!(eq_s_b(1,(CharSequence) "\u0438")))
                 {
                     cursor = limit - v_8;
                     break lab8;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/SpanishStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/SpanishStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/SpanishStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class SpanishStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -482,27 +483,27 @@
                         case 1:
                             // (, line 51
                             // <-, line 51
-                            slice_from("a");
+                            slice_from((CharSequence) "a");
                             break;
                         case 2:
                             // (, line 52
                             // <-, line 52
-                            slice_from("e");
+                            slice_from((CharSequence) "e");
                             break;
                         case 3:
                             // (, line 53
                             // <-, line 53
-                            slice_from("i");
+                            slice_from((CharSequence) "i");
                             break;
                         case 4:
                             // (, line 54
                             // <-, line 54
-                            slice_from("o");
+                            slice_from((CharSequence) "o");
                             break;
                         case 5:
                             // (, line 55
                             // <-, line 55
-                            slice_from("u");
+                            slice_from((CharSequence) "u");
                             break;
                         case 6:
                             // (, line 57
@@ -577,35 +578,35 @@
                     // ], line 73
                     bra = cursor;
                     // <-, line 73
-                    slice_from("iendo");
+                    slice_from((CharSequence) "iendo");
                     break;
                 case 2:
                     // (, line 74
                     // ], line 74
                     bra = cursor;
                     // <-, line 74
-                    slice_from("ando");
+                    slice_from((CharSequence) "ando");
                     break;
                 case 3:
                     // (, line 75
                     // ], line 75
                     bra = cursor;
                     // <-, line 75
-                    slice_from("ar");
+                    slice_from((CharSequence) "ar");
                     break;
                 case 4:
                     // (, line 76
                     // ], line 76
                     bra = cursor;
                     // <-, line 76
-                    slice_from("er");
+                    slice_from((CharSequence) "er");
                     break;
                 case 5:
                     // (, line 77
                     // ], line 77
                     bra = cursor;
                     // <-, line 77
-                    slice_from("ir");
+                    slice_from((CharSequence) "ir");
                     break;
                 case 6:
                     // (, line 81
@@ -615,7 +616,7 @@
                 case 7:
                     // (, line 82
                     // literal, line 82
-                    if (!(eq_s_b(1, "u")))
+                    if (!(eq_s_b(1,(CharSequence) "u")))
                     {
                         return false;
                     }
@@ -673,7 +674,7 @@
                         // [, line 106
                         ket = cursor;
                         // literal, line 106
-                        if (!(eq_s_b(2, "ic")))
+                        if (!(eq_s_b(2,(CharSequence) "ic")))
                         {
                             cursor = limit - v_1;
                             break lab0;
@@ -698,7 +699,7 @@
                         return false;
                     }
                     // <-, line 111
-                    slice_from("log");
+                    slice_from((CharSequence) "log");
                     break;
                 case 4:
                     // (, line 114
@@ -708,7 +709,7 @@
                         return false;
                     }
                     // <-, line 115
-                    slice_from("u");
+                    slice_from((CharSequence) "u");
                     break;
                 case 5:
                     // (, line 118
@@ -718,7 +719,7 @@
                         return false;
                     }
                     // <-, line 119
-                    slice_from("ente");
+                    slice_from((CharSequence) "ente");
                     break;
                 case 6:
                     // (, line 122
@@ -761,7 +762,7 @@
                                 // [, line 126
                                 ket = cursor;
                                 // literal, line 126
-                                if (!(eq_s_b(2, "at")))
+                                if (!(eq_s_b(2,(CharSequence) "at")))
                                 {
                                     cursor = limit - v_2;
                                     break lab1;
@@ -880,7 +881,7 @@
                         // [, line 161
                         ket = cursor;
                         // literal, line 161
-                        if (!(eq_s_b(2, "at")))
+                        if (!(eq_s_b(2,(CharSequence) "at")))
                         {
                             cursor = limit - v_5;
                             break lab4;
@@ -936,7 +937,7 @@
                 case 1:
                     // (, line 171
                     // literal, line 171
-                    if (!(eq_s_b(1, "u")))
+                    if (!(eq_s_b(1,(CharSequence) "u")))
                     {
                         return false;
                     }
@@ -988,7 +989,7 @@
                     lab0: do {
                         // (, line 179
                         // literal, line 179
-                        if (!(eq_s_b(1, "u")))
+                        if (!(eq_s_b(1,(CharSequence) "u")))
                         {
                             cursor = limit - v_3;
                             break lab0;
@@ -996,7 +997,7 @@
                         // test, line 179
                         v_4 = limit - cursor;
                         // literal, line 179
-                        if (!(eq_s_b(1, "g")))
+                        if (!(eq_s_b(1,(CharSequence) "g")))
                         {
                             cursor = limit - v_3;
                             break lab0;
@@ -1061,7 +1062,7 @@
                         // [, line 210
                         ket = cursor;
                         // literal, line 210
-                        if (!(eq_s_b(1, "u")))
+                        if (!(eq_s_b(1,(CharSequence) "u")))
                         {
                             cursor = limit - v_1;
                             break lab0;
@@ -1071,7 +1072,7 @@
                         // test, line 210
                         v_2 = limit - cursor;
                         // literal, line 210
-                        if (!(eq_s_b(1, "g")))
+                        if (!(eq_s_b(1,(CharSequence) "g")))
                         {
                             cursor = limit - v_1;
                             break lab0;
@@ -1091,6 +1092,7 @@
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/SwedishStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/SwedishStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/SwedishStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class SwedishStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -281,18 +282,19 @@
                 case 2:
                     // (, line 58
                     // <-, line 58
-                    slice_from("l\u00F6s");
+                    slice_from((CharSequence) "l\u00F6s");
                     break;
                 case 3:
                     // (, line 59
                     // <-, line 59
-                    slice_from("full");
+                    slice_from((CharSequence) "full");
                     break;
             }
             limit_backward = v_2;
             return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/ext/TurkishStemmer.java	(working copy)
@@ -7,6 +7,7 @@
 /**
  * Generated class implementing code defined by a snowball script.
  */
+@SuppressWarnings("unused")
 public class TurkishStemmer extends SnowballProgram {
 
         private Among a_0[] = {
@@ -269,7 +270,7 @@
                 lab3: do {
                     // (, line 116
                     // literal, line 116
-                    if (!(eq_s_b(1, "a")))
+                    if (!(eq_s_b(1, (CharSequence)  "a")))
                     {
                         break lab3;
                     }
@@ -298,7 +299,7 @@
                 lab6: do {
                     // (, line 117
                     // literal, line 117
-                    if (!(eq_s_b(1, "e")))
+                    if (!(eq_s_b(1, (CharSequence)  "e")))
                     {
                         break lab6;
                     }
@@ -327,7 +328,7 @@
                 lab9: do {
                     // (, line 118
                     // literal, line 118
-                    if (!(eq_s_b(1, "\u0131")))
+                    if (!(eq_s_b(1, (CharSequence)  "\u0131")))
                     {
                         break lab9;
                     }
@@ -356,7 +357,7 @@
                 lab12: do {
                     // (, line 119
                     // literal, line 119
-                    if (!(eq_s_b(1, "i")))
+                    if (!(eq_s_b(1, (CharSequence)  "i")))
                     {
                         break lab12;
                     }
@@ -385,7 +386,7 @@
                 lab15: do {
                     // (, line 120
                     // literal, line 120
-                    if (!(eq_s_b(1, "o")))
+                    if (!(eq_s_b(1, (CharSequence)  "o")))
                     {
                         break lab15;
                     }
@@ -414,7 +415,7 @@
                 lab18: do {
                     // (, line 121
                     // literal, line 121
-                    if (!(eq_s_b(1, "\u00F6")))
+                    if (!(eq_s_b(1, (CharSequence)  "\u00F6")))
                     {
                         break lab18;
                     }
@@ -443,7 +444,7 @@
                 lab21: do {
                     // (, line 122
                     // literal, line 122
-                    if (!(eq_s_b(1, "u")))
+                    if (!(eq_s_b(1, (CharSequence)  "u")))
                     {
                         break lab21;
                     }
@@ -471,7 +472,7 @@
                 cursor = limit - v_3;
                 // (, line 123
                 // literal, line 123
-                if (!(eq_s_b(1, "\u00FC")))
+                if (!(eq_s_b(1, (CharSequence)  "\u00FC")))
                 {
                     return false;
                 }
@@ -517,7 +518,7 @@
                     // test, line 133
                     v_2 = limit - cursor;
                     // literal, line 133
-                    if (!(eq_s_b(1, "n")))
+                    if (!(eq_s_b(1, (CharSequence)  "n")))
                     {
                         break lab1;
                     }
@@ -549,7 +550,7 @@
                         // test, line 135
                         v_5 = limit - cursor;
                         // literal, line 135
-                        if (!(eq_s_b(1, "n")))
+                        if (!(eq_s_b(1, (CharSequence)  "n")))
                         {
                             break lab2;
                         }
@@ -598,7 +599,7 @@
                     // test, line 144
                     v_2 = limit - cursor;
                     // literal, line 144
-                    if (!(eq_s_b(1, "s")))
+                    if (!(eq_s_b(1, (CharSequence)  "s")))
                     {
                         break lab1;
                     }
@@ -630,7 +631,7 @@
                         // test, line 146
                         v_5 = limit - cursor;
                         // literal, line 146
-                        if (!(eq_s_b(1, "s")))
+                        if (!(eq_s_b(1, (CharSequence)  "s")))
                         {
                             break lab2;
                         }
@@ -679,7 +680,7 @@
                     // test, line 154
                     v_2 = limit - cursor;
                     // literal, line 154
-                    if (!(eq_s_b(1, "y")))
+                    if (!(eq_s_b(1, (CharSequence)  "y")))
                     {
                         break lab1;
                     }
@@ -711,7 +712,7 @@
                         // test, line 156
                         v_5 = limit - cursor;
                         // literal, line 156
-                        if (!(eq_s_b(1, "y")))
+                        if (!(eq_s_b(1, (CharSequence)  "y")))
                         {
                             break lab2;
                         }
@@ -1043,7 +1044,7 @@
         private boolean r_mark_ki() {
             // (, line 236
             // literal, line 237
-            if (!(eq_s_b(2, "ki")))
+            if (!(eq_s_b(2, (CharSequence) "ki")))
             {
                 return false;
             }
@@ -1254,7 +1255,7 @@
         private boolean r_mark_yken() {
             // (, line 307
             // literal, line 308
-            if (!(eq_s_b(3, "ken")))
+            if (!(eq_s_b(3, (CharSequence) "ken")))
             {
                 return false;
             }
@@ -2640,22 +2641,22 @@
                 case 1:
                     // (, line 417
                     // <-, line 417
-                    slice_from("p");
+                    slice_from((CharSequence) "p");
                     break;
                 case 2:
                     // (, line 418
                     // <-, line 418
-                    slice_from("\u00E7");
+                    slice_from((CharSequence) "\u00E7");
                     break;
                 case 3:
                     // (, line 419
                     // <-, line 419
-                    slice_from("t");
+                    slice_from((CharSequence) "t");
                     break;
                 case 4:
                     // (, line 420
                     // <-, line 420
-                    slice_from("k");
+                    slice_from((CharSequence) "k");
                     break;
             }
             return true;
@@ -2686,7 +2687,7 @@
                 v_2 = limit - cursor;
                 lab1: do {
                     // literal, line 431
-                    if (!(eq_s_b(1, "d")))
+                    if (!(eq_s_b(1, (CharSequence)  "d")))
                     {
                         break lab1;
                     }
@@ -2694,7 +2695,7 @@
                 } while (false);
                 cursor = limit - v_2;
                 // literal, line 431
-                if (!(eq_s_b(1, "g")))
+                if (!(eq_s_b(1, (CharSequence)  "g")))
                 {
                     return false;
                 }
@@ -2733,7 +2734,7 @@
                         v_6 = limit - cursor;
                         lab7: do {
                             // literal, line 432
-                            if (!(eq_s_b(1, "a")))
+                            if (!(eq_s_b(1, (CharSequence)  "a")))
                             {
                                 break lab7;
                             }
@@ -2741,7 +2742,7 @@
                         } while (false);
                         cursor = limit - v_6;
                         // literal, line 432
-                        if (!(eq_s_b(1, "\u0131")))
+                        if (!(eq_s_b(1, (CharSequence)  "\u0131")))
                         {
                             break lab3;
                         }
@@ -2750,7 +2751,7 @@
                     // <+, line 432
                     {
                         int c = cursor;
-                        insert(cursor, cursor, "\u0131");
+                        insert(cursor, cursor, (CharSequence) "\u0131");
                         cursor = c;
                     }
                     break lab2;
@@ -2786,7 +2787,7 @@
                         v_9 = limit - cursor;
                         lab12: do {
                             // literal, line 434
-                            if (!(eq_s_b(1, "e")))
+                            if (!(eq_s_b(1, (CharSequence)  "e")))
                             {
                                 break lab12;
                             }
@@ -2794,7 +2795,7 @@
                         } while (false);
                         cursor = limit - v_9;
                         // literal, line 434
-                        if (!(eq_s_b(1, "i")))
+                        if (!(eq_s_b(1, (CharSequence)  "i")))
                         {
                             break lab8;
                         }
@@ -2803,7 +2804,7 @@
                     // <+, line 434
                     {
                         int c = cursor;
-                        insert(cursor, cursor, "i");
+                        insert(cursor, cursor, (CharSequence) "i");
                         cursor = c;
                     }
                     break lab2;
@@ -2839,7 +2840,7 @@
                         v_12 = limit - cursor;
                         lab17: do {
                             // literal, line 436
-                            if (!(eq_s_b(1, "o")))
+                            if (!(eq_s_b(1, (CharSequence)  "o")))
                             {
                                 break lab17;
                             }
@@ -2847,7 +2848,7 @@
                         } while (false);
                         cursor = limit - v_12;
                         // literal, line 436
-                        if (!(eq_s_b(1, "u")))
+                        if (!(eq_s_b(1, (CharSequence)  "u")))
                         {
                             break lab13;
                         }
@@ -2856,7 +2857,7 @@
                     // <+, line 436
                     {
                         int c = cursor;
-                        insert(cursor, cursor, "u");
+                        insert(cursor, cursor, (CharSequence) "u");
                         cursor = c;
                     }
                     break lab2;
@@ -2891,7 +2892,7 @@
                     v_15 = limit - cursor;
                     lab21: do {
                         // literal, line 438
-                        if (!(eq_s_b(1, "\u00F6")))
+                        if (!(eq_s_b(1, (CharSequence)  "\u00F6")))
                         {
                             break lab21;
                         }
@@ -2899,7 +2900,7 @@
                     } while (false);
                     cursor = limit - v_15;
                     // literal, line 438
-                    if (!(eq_s_b(1, "\u00FC")))
+                    if (!(eq_s_b(1, (CharSequence)  "\u00FC")))
                     {
                         return false;
                     }
@@ -2908,7 +2909,7 @@
                 // <+, line 438
                 {
                     int c = cursor;
-                    insert(cursor, cursor, "\u00FC");
+                    insert(cursor, cursor, (CharSequence) "\u00FC");
                     cursor = c;
                 }
             } while (false);
@@ -2979,7 +2980,7 @@
                     {
                         lab3: do {
                             // literal, line 450
-                            if (!(eq_s(2, "ad")))
+                            if (!(eq_s(2, (CharSequence) "ad")))
                             {
                                 break lab3;
                             }
@@ -3010,7 +3011,7 @@
                 {
                     lab5: do {
                         // literal, line 452
-                        if (!(eq_s(5, "soyad")))
+                        if (!(eq_s(5, (CharSequence) "soyad")))
                         {
                             break lab5;
                         }
@@ -3079,6 +3080,7 @@
             cursor = limit_backward;            return true;
         }
 
+        @Override
         public boolean stem() {
             int v_1;
             int v_2;
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/SnowballProgram.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/SnowballProgram.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/SnowballProgram.java	(working copy)
@@ -270,7 +270,7 @@
     @Deprecated
     protected boolean eq_v(StringBuilder s)
     {
-	return eq_s(s.length(), (CharSequence)s);
+	return eq_s(s.length(), s);
     }
 
     protected boolean eq_v_b(CharSequence s)
@@ -280,7 +280,7 @@
     /** @deprecated for binary back compat. Will be removed in Lucene 4.0 */
     @Deprecated
     protected boolean eq_v_b(StringBuilder s)
-    {   return eq_s_b(s.length(), (CharSequence)s);
+    {   return eq_s_b(s.length(), s);
     }
 
     protected int find_among(Among v[], int v_size)
@@ -562,5 +562,5 @@
 }
 */
 
-};
+}
 
Index: contrib/analyzers/common/src/java/org/tartarus/snowball/TestApp.java
===================================================================
--- contrib/analyzers/common/src/java/org/tartarus/snowball/TestApp.java	(revision 917020)
+++ contrib/analyzers/common/src/java/org/tartarus/snowball/TestApp.java	(working copy)
@@ -54,7 +54,7 @@
             return;
         }
 
-	Class stemClass = Class.forName("org.tartarus.snowball.ext." +
+	Class<?> stemClass = Class.forName("org.tartarus.snowball.ext." +
 					args[0] + "Stemmer");
         SnowballProgram stemmer = (SnowballProgram) stemClass.newInstance();
 	Method stemMethod = stemClass.getMethod("stem", new Class[0]);
@@ -89,7 +89,7 @@
 	int character;
 	while ((character = reader.read()) != -1) {
 	    char ch = (char) character;
-	    if (Character.isWhitespace((char) ch)) {
+	    if (Character.isWhitespace(ch)) {
 		if (input.length() > 0) {
 		    stemmer.setCurrent(input.toString());
 		    for (int i = repeat; i != 0; i--) {
Index: contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/index/MultiPassIndexSplitter.java	(working copy)
@@ -223,7 +223,7 @@
         @Override
         public boolean next() throws IOException {
           boolean res;
-          while ((res = super.next())) {
+          while ((res = super.next()) == true) {
             if (!dels.get(doc())) {
               break;
             }
Index: contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity.java	(working copy)
@@ -189,7 +189,7 @@
        (
         (
          s *
-         (float)(Math.abs(numTerms - l) + Math.abs(numTerms - h) - (h-l))
+         (Math.abs(numTerms - l) + Math.abs(numTerms - h) - (h-l))
          )
         + 1.0f
         )
@@ -248,7 +248,7 @@
     final float max = tf_hyper_max;
     final double base = tf_hyper_base;
     final float xoffset = tf_hyper_xoffset;
-    final double x = (double)(freq - xoffset);
+    final double x = (freq - xoffset);
   
     final float result = min +
       (float)(
Index: contrib/misc/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java	(working copy)
@@ -141,7 +141,7 @@
     if (tlist.size() == 0) {
       return null;
     } else if (tlist.size() == 1) {
-      if (wlist != null && wlist.size() == 1) {
+      if (wlist.size() == 1) {
         /* if wlist contains one wildcard, it must be at the end, because:
          * 1) wildcards are not allowed in 1st position of a term by QueryParser
          * 2) if wildcard was *not* in end, there would be *two* or more tokens */
Index: contrib/misc/src/java/org/apache/lucene/queryParser/precedence/ParseException.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/precedence/ParseException.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/precedence/ParseException.java	(working copy)
@@ -96,6 +96,7 @@
    * of the final stack trace, and hence the correct error message
    * gets displayed.
    */
+  @Override
   public String getMessage() {
     if (!specialConstructor) {
       return super.getMessage();
Index: contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser.java	(working copy)
@@ -87,8 +87,8 @@
 
   // make it possible to call setDefaultOperator() without accessing
   // the nested class:
-  public static final Operator AND_OPERATOR = Operator.AND;
-  public static final Operator OR_OPERATOR = Operator.OR;
+  public static final Operator AND_OPERATOR = Operator.OP_AND;
+  public static final Operator OR_OPERATOR = Operator.OP_OR;
 
   /** The actual operator that parser uses to combine query terms */
   private Operator operator = OR_OPERATOR;
@@ -102,7 +102,7 @@
   int fuzzyPrefixLength = FuzzyQuery.defaultPrefixLength;
   Locale locale = Locale.getDefault();
 
-  static enum Operator { OR, AND }
+  static enum Operator { OP_OR, OP_AND }
 
   /** Constructs a query parser.
    *  @param f  the default field for query terms.
@@ -617,7 +617,6 @@
       break;
     default:
       jj_la1[1] = jj_gen;
-      ;
     }
     {if (true) return ret;}
     throw new Error("Missing return statement in function");
@@ -650,7 +649,6 @@
       break;
     default:
       jj_la1[3] = jj_gen;
-      ;
     }
     {if (true) return ret;}
     throw new Error("Missing return statement in function");
@@ -681,7 +679,6 @@
       case RANGEIN_START:
       case RANGEEX_START:
       case NUMBER:
-        ;
         break;
       default:
         jj_la1[4] = jj_gen;
@@ -694,7 +691,6 @@
         break;
       default:
         jj_la1[5] = jj_gen;
-        ;
       }
       modifier = Modifier();
       q = andExpression(field);
@@ -719,7 +715,6 @@
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case AND:
-        ;
         break;
       default:
         jj_la1[6] = jj_gen;
@@ -746,7 +741,6 @@
       jj_consume_token(COLON);
       field=discardEscapeChar(fieldToken.image);
     } else {
-      ;
     }
     switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
     case QUOTED:
@@ -769,7 +763,6 @@
         break;
       default:
         jj_la1[7] = jj_gen;
-        ;
       }
       break;
     default:
@@ -826,7 +819,6 @@
         break;
       default:
         jj_la1[10] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case CARAT:
@@ -839,12 +831,10 @@
           break;
         default:
           jj_la1[11] = jj_gen;
-          ;
         }
         break;
       default:
         jj_la1[12] = jj_gen;
-        ;
       }
        String termImage=discardEscapeChar(term.image);
        if (wildcard) {
@@ -886,7 +876,6 @@
         break;
       default:
         jj_la1[14] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case RANGEIN_GOOP:
@@ -908,7 +897,6 @@
         break;
       default:
         jj_la1[16] = jj_gen;
-        ;
       }
           if (goop1.kind == RANGEIN_QUOTED) {
             goop1.image = goop1.image.substring(1, goop1.image.length()-1);
@@ -942,7 +930,6 @@
         break;
       default:
         jj_la1[18] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case RANGEEX_GOOP:
@@ -964,7 +951,6 @@
         break;
       default:
         jj_la1[20] = jj_gen;
-        ;
       }
           if (goop1.kind == RANGEEX_QUOTED) {
             goop1.image = goop1.image.substring(1, goop1.image.length()-1);
@@ -987,7 +973,6 @@
         break;
       default:
         jj_la1[21] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case CARAT:
@@ -996,7 +981,6 @@
         break;
       default:
         jj_la1[22] = jj_gen;
-        ;
       }
          int s = phraseSlop;
 
Index: contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager.java	(working copy)
@@ -1,30 +1,8 @@
 /* Generated By:JavaCC: Do not edit this line. PrecedenceQueryParserTokenManager.java */
 package org.apache.lucene.queryParser.precedence;
-import java.io.IOException;
-import java.io.StringReader;
-import java.text.DateFormat;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.List;
-import java.util.Locale;
-import org.apache.lucene.analysis.Analyzer;
-import org.apache.lucene.analysis.TokenStream;
-import org.apache.lucene.analysis.tokenattributes.*;
-import org.apache.lucene.document.DateTools;
-import org.apache.lucene.index.Term;
-import org.apache.lucene.search.BooleanClause;
-import org.apache.lucene.search.BooleanQuery;
-import org.apache.lucene.search.FuzzyQuery;
-import org.apache.lucene.search.MultiPhraseQuery;
-import org.apache.lucene.search.PhraseQuery;
-import org.apache.lucene.search.PrefixQuery;
-import org.apache.lucene.search.Query;
-import org.apache.lucene.search.TermRangeQuery;
-import org.apache.lucene.search.TermQuery;
-import org.apache.lucene.search.WildcardQuery;
-import org.apache.lucene.util.AttributeSource;
 
 /** Token Manager. */
+@SuppressWarnings("unused")
 public class PrecedenceQueryParserTokenManager implements PrecedenceQueryParserConstants
 {
 
@@ -359,7 +337,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -551,7 +529,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -646,7 +624,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -809,7 +787,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
Index: contrib/misc/src/java/org/apache/lucene/queryParser/precedence/Token.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/precedence/Token.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/precedence/Token.java	(working copy)
@@ -90,6 +90,7 @@
   /**
    * Returns the image.
    */
+  @Override
   public String toString()
   {
      return image;
Index: contrib/misc/src/java/org/apache/lucene/queryParser/precedence/TokenMgrError.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/precedence/TokenMgrError.java	(revision 917020)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/precedence/TokenMgrError.java	(working copy)
@@ -115,7 +115,8 @@
     *
     * from this method for such cases in the release version of your parser.
     */
-   public String getMessage() {
+   @Override
+  public String getMessage() {
       return super.getMessage();
    }
 
Index: contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager.java
===================================================================
--- contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager.java	(revision 917020)
+++ contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager.java	(working copy)
@@ -19,6 +19,7 @@
 
 
 /** Token Manager. */
+@SuppressWarnings("unused")
 public class StandardSyntaxParserTokenManager implements StandardSyntaxParserConstants
 {
 
@@ -304,7 +305,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -508,7 +509,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -615,7 +616,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -786,7 +787,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
Index: contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/Token.java
===================================================================
--- contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/Token.java	(revision 917020)
+++ contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/Token.java	(working copy)
@@ -97,6 +97,7 @@
   /**
    * Returns the image.
    */
+  @Override
   public String toString()
   {
     return image;
Index: contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/TokenMgrError.java
===================================================================
--- contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/TokenMgrError.java	(revision 917020)
+++ contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/TokenMgrError.java	(working copy)
@@ -121,6 +121,7 @@
    *
    * from this method for such cases in the release version of your parser.
    */
+  @Override
   public String getMessage() {
     return super.getMessage();
   }
Index: contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/ParseException.java
===================================================================
--- contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/ParseException.java	(revision 917020)
+++ contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/ParseException.java	(working copy)
@@ -96,6 +96,7 @@
    * of the final stack trace, and hence the correct error message
    * gets displayed.
    */
+  @Override
   public String getMessage() {
     if (!specialConstructor) {
       return super.getMessage();
Index: contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser.java
===================================================================
--- contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser.java	(revision 917020)
+++ contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser.java	(working copy)
@@ -6,8 +6,6 @@
 import java.io.StringReader;
 
 
-import org.apache.lucene.analysis.TokenStream;
-
 import org.apache.lucene.queryParser.surround.query.SrndQuery;
 import org.apache.lucene.queryParser.surround.query.FieldsQuery;
 import org.apache.lucene.queryParser.surround.query.OrQuery;
@@ -56,22 +54,22 @@
   }
 
   protected SrndQuery getFieldsQuery(
-      SrndQuery q, ArrayList fieldNames) {
+      SrndQuery q, ArrayList<String> fieldNames) {
     /* FIXME: check acceptable subquery: at least one subquery should not be
      * a fields query.
      */
     return new FieldsQuery(q, fieldNames, fieldOperator);
   }
 
-  protected SrndQuery getOrQuery(List queries, boolean infix, Token orToken) {
+  protected SrndQuery getOrQuery(List<SrndQuery> queries, boolean infix, Token orToken) {
     return new OrQuery(queries, infix, orToken.image);
   }
 
-  protected SrndQuery getAndQuery(List queries, boolean infix, Token andToken) {
+  protected SrndQuery getAndQuery(List<SrndQuery> queries, boolean infix, Token andToken) {
     return new AndQuery( queries, infix, andToken.image);
   }
 
-  protected SrndQuery getNotQuery(List queries, Token notToken) {
+  protected SrndQuery getNotQuery(List<SrndQuery> queries, Token notToken) {
     return new NotQuery( queries, notToken.image);
   }
 
@@ -91,7 +89,7 @@
   }
 
   protected SrndQuery getDistanceQuery(
-        List queries,
+        List<SrndQuery> queries,
         boolean infix,
         Token dToken,
         boolean ordered) throws ParseException {
@@ -144,20 +142,19 @@
 
   final public SrndQuery FieldsQuery() throws ParseException {
   SrndQuery q;
-  ArrayList fieldNames;
+  ArrayList<String> fieldNames;
     fieldNames = OptionalFields();
     q = OrQuery();
    {if (true) return (fieldNames == null) ? q : getFieldsQuery(q, fieldNames);}
     throw new Error("Missing return statement in function");
   }
 
-  final public ArrayList OptionalFields() throws ParseException {
+  final public ArrayList<String> OptionalFields() throws ParseException {
   Token fieldName;
-  ArrayList fieldNames = null;
+  ArrayList<String> fieldNames = null;
     label_1:
     while (true) {
       if (jj_2_1(2)) {
-        ;
       } else {
         break label_1;
       }
@@ -165,7 +162,7 @@
           fieldName = jj_consume_token(TERM);
       jj_consume_token(COLON);
       if (fieldNames == null) {
-        fieldNames = new ArrayList();
+        fieldNames = new ArrayList<String>();
       }
       fieldNames.add(fieldName.image);
     }
@@ -175,14 +172,13 @@
 
   final public SrndQuery OrQuery() throws ParseException {
   SrndQuery q;
-  ArrayList queries = null;
+  ArrayList<SrndQuery> queries = null;
   Token oprt = null;
     q = AndQuery();
     label_2:
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case OR:
-        ;
         break;
       default:
         jj_la1[0] = jj_gen;
@@ -191,7 +187,7 @@
       oprt = jj_consume_token(OR);
                   /* keep only last used operator */
       if (queries == null) {
-        queries = new ArrayList();
+        queries = new ArrayList<SrndQuery>();
         queries.add(q);
       }
       q = AndQuery();
@@ -203,14 +199,13 @@
 
   final public SrndQuery AndQuery() throws ParseException {
   SrndQuery q;
-  ArrayList queries = null;
+  ArrayList<SrndQuery> queries = null;
   Token oprt = null;
     q = NotQuery();
     label_3:
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case AND:
-        ;
         break;
       default:
         jj_la1[1] = jj_gen;
@@ -219,7 +214,7 @@
       oprt = jj_consume_token(AND);
                    /* keep only last used operator */
       if (queries == null) {
-        queries = new ArrayList();
+        queries = new ArrayList<SrndQuery>();
         queries.add(q);
       }
       q = NotQuery();
@@ -231,14 +226,13 @@
 
   final public SrndQuery NotQuery() throws ParseException {
   SrndQuery q;
-  ArrayList queries = null;
+  ArrayList<SrndQuery> queries = null;
   Token oprt = null;
     q = NQuery();
     label_4:
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case NOT:
-        ;
         break;
       default:
         jj_la1[2] = jj_gen;
@@ -247,7 +241,7 @@
       oprt = jj_consume_token(NOT);
                     /* keep only last used operator */
       if (queries == null) {
-        queries = new ArrayList();
+        queries = new ArrayList<SrndQuery>();
         queries.add(q);
       }
       q = NQuery();
@@ -259,21 +253,20 @@
 
   final public SrndQuery NQuery() throws ParseException {
   SrndQuery q;
-  ArrayList queries;
+  ArrayList<SrndQuery> queries;
   Token dt;
     q = WQuery();
     label_5:
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case N:
-        ;
         break;
       default:
         jj_la1[3] = jj_gen;
         break label_5;
       }
       dt = jj_consume_token(N);
-      queries = new ArrayList();
+      queries = new ArrayList<SrndQuery>();
       queries.add(q); /* left associative */
 
       q = WQuery();
@@ -286,21 +279,20 @@
 
   final public SrndQuery WQuery() throws ParseException {
   SrndQuery q;
-  ArrayList queries;
+  ArrayList<SrndQuery> queries;
   Token wt;
     q = PrimaryQuery();
     label_6:
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case W:
-        ;
         break;
       default:
         jj_la1[4] = jj_gen;
         break label_6;
       }
       wt = jj_consume_token(W);
-      queries = new ArrayList();
+      queries = new ArrayList<SrndQuery>();
       queries.add(q); /* left associative */
 
       q = PrimaryQuery();
@@ -345,7 +337,7 @@
 
   final public SrndQuery PrefixOperatorQuery() throws ParseException {
   Token oprt;
-  List queries;
+  List<SrndQuery> queries;
     switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
     case OR:
       oprt = jj_consume_token(OR);
@@ -379,9 +371,9 @@
     throw new Error("Missing return statement in function");
   }
 
-  final public List FieldsQueryList() throws ParseException {
+  final public List<SrndQuery> FieldsQueryList() throws ParseException {
   SrndQuery q;
-  ArrayList queries = new ArrayList();
+  ArrayList<SrndQuery> queries = new ArrayList<SrndQuery>();
     jj_consume_token(LPAREN);
     q = FieldsQuery();
                      queries.add(q);
@@ -392,7 +384,6 @@
                               queries.add(q);
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case COMMA:
-        ;
         break;
       default:
         jj_la1[7] = jj_gen;
@@ -453,7 +444,6 @@
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case CARAT:
-        ;
         break;
       default:
         jj_la1[9] = jj_gen;
@@ -639,8 +629,8 @@
       for (int i = 0; i < jj_endpos; i++) {
         jj_expentry[i] = jj_lasttokens[i];
       }
-      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {
-        int[] oldentry = (int[])(it.next());
+      jj_entries_loop: for (java.util.Iterator<int[]> it = jj_expentries.iterator(); it.hasNext();) {
+        int[] oldentry = (it.next());
         if (oldentry.length == jj_expentry.length) {
           for (int i = 0; i < jj_expentry.length; i++) {
             if (oldentry[i] != jj_expentry[i]) {
Index: contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParserTokenManager.java
===================================================================
--- contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParserTokenManager.java	(revision 917020)
+++ contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParserTokenManager.java	(working copy)
@@ -1,20 +1,8 @@
 /* Generated By:JavaCC: Do not edit this line. QueryParserTokenManager.java */
 package org.apache.lucene.queryParser.surround.parser;
-import java.util.ArrayList;
-import java.util.List;
-import java.io.StringReader;
-import org.apache.lucene.analysis.TokenStream;
-import org.apache.lucene.queryParser.surround.query.SrndQuery;
-import org.apache.lucene.queryParser.surround.query.FieldsQuery;
-import org.apache.lucene.queryParser.surround.query.OrQuery;
-import org.apache.lucene.queryParser.surround.query.AndQuery;
-import org.apache.lucene.queryParser.surround.query.NotQuery;
-import org.apache.lucene.queryParser.surround.query.DistanceQuery;
-import org.apache.lucene.queryParser.surround.query.SrndTermQuery;
-import org.apache.lucene.queryParser.surround.query.SrndPrefixQuery;
-import org.apache.lucene.queryParser.surround.query.SrndTruncQuery;
 
 /** Token Manager. */
+@SuppressWarnings("unused")
 public class QueryParserTokenManager implements QueryParserConstants
 {
 
@@ -348,7 +336,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -468,7 +456,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
Index: contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/Token.java
===================================================================
--- contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/Token.java	(revision 917020)
+++ contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/Token.java	(working copy)
@@ -90,6 +90,7 @@
   /**
    * Returns the image.
    */
+  @Override
   public String toString()
   {
      return image;
Index: contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/TokenMgrError.java
===================================================================
--- contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/TokenMgrError.java	(revision 917020)
+++ contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/TokenMgrError.java	(working copy)
@@ -115,7 +115,8 @@
     *
     * from this method for such cases in the release version of your parser.
     */
-   public String getMessage() {
+   @Override
+  public String getMessage() {
       return super.getMessage();
    }
 
Index: contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerImpl.java
===================================================================
--- contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerImpl.java	(revision 917020)
+++ contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerImpl.java	(working copy)
@@ -21,6 +21,7 @@
 
 import org.apache.lucene.analysis.tokenattributes.TermAttribute;
 
+@SuppressWarnings("unused")
 
 /**
  * This class is a scanner generated by 
Index: contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerImpl.jflex
===================================================================
--- contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerImpl.jflex	(revision 917020)
+++ contrib/wikipedia/src/java/org/apache/lucene/wikipedia/analysis/WikipediaTokenizerImpl.jflex	(working copy)
@@ -19,6 +19,7 @@
 
 import org.apache.lucene.analysis.Token;
 
+@SuppressWarnings("unused")
 %%
 
 %class WikipediaTokenizerImpl
Index: src/demo/org/apache/lucene/demo/html/HTMLParser.java
===================================================================
--- src/demo/org/apache/lucene/demo/html/HTMLParser.java	(revision 917020)
+++ src/demo/org/apache/lucene/demo/html/HTMLParser.java	(working copy)
@@ -178,7 +178,6 @@
       case Entity:
       case Space:
       case Punct:
-        ;
         break;
       default:
         jj_la1[0] = jj_gen;
@@ -244,7 +243,6 @@
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case ArgName:
-        ;
         break;
       default:
         jj_la1[2] = jj_gen;
@@ -284,12 +282,10 @@
           break;
         default:
           jj_la1[3] = jj_gen;
-          ;
         }
         break;
       default:
         jj_la1[4] = jj_gen;
-        ;
       }
     }
     jj_consume_token(TagEnd);
@@ -353,7 +349,6 @@
       case ArgValue:
       case ArgQuote1:
       case ArgQuote2:
-        ;
         break;
       default:
         jj_la1[8] = jj_gen;
@@ -390,7 +385,6 @@
       while (true) {
         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
         case CommentText1:
-          ;
           break;
         default:
           jj_la1[10] = jj_gen;
@@ -406,7 +400,6 @@
       while (true) {
         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
         case CommentText2:
-          ;
           break;
         default:
           jj_la1[11] = jj_gen;
@@ -429,7 +422,6 @@
     while (true) {
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case ScriptText:
-        ;
         break;
       default:
         jj_la1[13] = jj_gen;
Index: src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager.java
===================================================================
--- src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager.java	(revision 917020)
+++ src/demo/org/apache/lucene/demo/html/HTMLParserTokenManager.java	(working copy)
@@ -1,11 +1,9 @@
 /* Generated By:JavaCC: Do not edit this line. HTMLParserTokenManager.java */
 package org.apache.lucene.demo.html;
-import java.io.*;
-import java.util.Properties;
 
 /** Token Manager. */
-public class HTMLParserTokenManager implements HTMLParserConstants
-{
+@SuppressWarnings("unused")
+public class HTMLParserTokenManager implements HTMLParserConstants {
 
   /** Debug output. */
   public  java.io.PrintStream debugStream = System.out;
@@ -546,7 +544,7 @@
       }
       else if (curChar < 128)
       {
-         long l = 1L << (curChar & 077);
+        long l = 1L << (curChar & 077);
          do
          {
             switch(jjstateSet[--i])
Index: src/demo/org/apache/lucene/demo/html/ParseException.java
===================================================================
--- src/demo/org/apache/lucene/demo/html/ParseException.java	(revision 917020)
+++ src/demo/org/apache/lucene/demo/html/ParseException.java	(working copy)
@@ -96,6 +96,7 @@
    * of the final stack trace, and hence the correct error message
    * gets displayed.
    */
+  @Override
   public String getMessage() {
     if (!specialConstructor) {
       return super.getMessage();
Index: src/demo/org/apache/lucene/demo/html/Token.java
===================================================================
--- src/demo/org/apache/lucene/demo/html/Token.java	(revision 917020)
+++ src/demo/org/apache/lucene/demo/html/Token.java	(working copy)
@@ -90,6 +90,7 @@
   /**
    * Returns the image.
    */
+  @Override
   public String toString()
   {
      return image;
Index: src/demo/org/apache/lucene/demo/html/TokenMgrError.java
===================================================================
--- src/demo/org/apache/lucene/demo/html/TokenMgrError.java	(revision 917020)
+++ src/demo/org/apache/lucene/demo/html/TokenMgrError.java	(working copy)
@@ -115,7 +115,8 @@
     *
     * from this method for such cases in the release version of your parser.
     */
-   public String getMessage() {
+   @Override
+  public String getMessage() {
       return super.getMessage();
    }
 
Index: src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java
===================================================================
--- src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java	(revision 917020)
+++ src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java	(working copy)
@@ -34,6 +34,7 @@
 import org.apache.lucene.analysis.Token;
 import org.apache.lucene.analysis.tokenattributes.TermAttribute;
 
+@SuppressWarnings("unused")
 
 /**
  * This class is a scanner generated by 
Index: src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex
===================================================================
--- src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex	(revision 917020)
+++ src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex	(working copy)
@@ -32,6 +32,7 @@
 import org.apache.lucene.analysis.Token;
 import org.apache.lucene.analysis.tokenattributes.TermAttribute;
 
+@SuppressWarnings("unused")
 %%
 
 %class StandardTokenizerImpl
Index: src/java/org/apache/lucene/queryParser/FastCharStream.java
===================================================================
--- src/java/org/apache/lucene/queryParser/FastCharStream.java	(revision 917020)
+++ src/java/org/apache/lucene/queryParser/FastCharStream.java	(working copy)
@@ -103,9 +103,12 @@
     }
   }
 
+  @Deprecated
   public final int getColumn() {
     return bufferStart + bufferPosition;
   }
+  
+  @Deprecated
   public final int getLine() {
     return 1;
   }
Index: src/java/org/apache/lucene/queryParser/ParseException.java
===================================================================
--- src/java/org/apache/lucene/queryParser/ParseException.java	(revision 917020)
+++ src/java/org/apache/lucene/queryParser/ParseException.java	(working copy)
@@ -96,6 +96,7 @@
    * of the final stack trace, and hence the correct error message
    * gets displayed.
    */
+  @Override
   public String getMessage() {
     if (!specialConstructor) {
       return super.getMessage();
Index: src/java/org/apache/lucene/queryParser/QueryParser.java
===================================================================
--- src/java/org/apache/lucene/queryParser/QueryParser.java	(revision 917020)
+++ src/java/org/apache/lucene/queryParser/QueryParser.java	(working copy)
@@ -1122,7 +1122,6 @@
       break;
     default:
       jj_la1[1] = jj_gen;
-      ;
     }
     {if (true) return ret;}
     throw new Error("Missing return statement in function");
@@ -1155,7 +1154,6 @@
       break;
     default:
       jj_la1[3] = jj_gen;
-      ;
     }
     {if (true) return ret;}
     throw new Error("Missing return statement in function");
@@ -1196,7 +1194,6 @@
       case RANGEIN_START:
       case RANGEEX_START:
       case NUMBER:
-        ;
         break;
       default:
         jj_la1[4] = jj_gen;
@@ -1236,7 +1233,6 @@
         throw new ParseException();
       }
     } else {
-      ;
     }
     switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
     case STAR:
@@ -1260,7 +1256,6 @@
         break;
       default:
         jj_la1[6] = jj_gen;
-        ;
       }
       break;
     default:
@@ -1322,7 +1317,6 @@
         break;
       default:
         jj_la1[9] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case CARAT:
@@ -1335,12 +1329,10 @@
           break;
         default:
           jj_la1[10] = jj_gen;
-          ;
         }
         break;
       default:
         jj_la1[11] = jj_gen;
-        ;
       }
        String termImage=discardEscapeChar(term.image);
        if (wildcard) {
@@ -1382,7 +1374,6 @@
         break;
       default:
         jj_la1[13] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case RANGEIN_GOOP:
@@ -1404,7 +1395,6 @@
         break;
       default:
         jj_la1[15] = jj_gen;
-        ;
       }
           if (goop1.kind == RANGEIN_QUOTED) {
             goop1.image = goop1.image.substring(1, goop1.image.length()-1);
@@ -1434,7 +1424,6 @@
         break;
       default:
         jj_la1[17] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case RANGEEX_GOOP:
@@ -1456,7 +1445,6 @@
         break;
       default:
         jj_la1[19] = jj_gen;
-        ;
       }
           if (goop1.kind == RANGEEX_QUOTED) {
             goop1.image = goop1.image.substring(1, goop1.image.length()-1);
@@ -1475,7 +1463,6 @@
         break;
       default:
         jj_la1[20] = jj_gen;
-        ;
       }
       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
       case CARAT:
@@ -1484,7 +1471,6 @@
         break;
       default:
         jj_la1[21] = jj_gen;
-        ;
       }
          int s = phraseSlop;
 
Index: src/java/org/apache/lucene/queryParser/QueryParserTokenManager.java
===================================================================
--- src/java/org/apache/lucene/queryParser/QueryParserTokenManager.java	(revision 917020)
+++ src/java/org/apache/lucene/queryParser/QueryParserTokenManager.java	(working copy)
@@ -1,42 +1,9 @@
 /* Generated By:JavaCC: Do not edit this line. QueryParserTokenManager.java */
 package org.apache.lucene.queryParser;
-import java.io.IOException;
-import java.io.StringReader;
-import java.text.Collator;
-import java.text.DateFormat;
-import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Locale;
-import java.util.Map;
-import java.util.Vector;
-import org.apache.lucene.analysis.Analyzer;
-import org.apache.lucene.analysis.CachingTokenFilter;
-import org.apache.lucene.analysis.TokenStream;
-import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;
-import org.apache.lucene.analysis.tokenattributes.TermAttribute;
-import org.apache.lucene.document.DateField;
-import org.apache.lucene.document.DateTools;
-import org.apache.lucene.index.Term;
-import org.apache.lucene.search.BooleanClause;
-import org.apache.lucene.search.BooleanQuery;
-import org.apache.lucene.search.FuzzyQuery;
-import org.apache.lucene.search.MultiTermQuery;
-import org.apache.lucene.search.MatchAllDocsQuery;
-import org.apache.lucene.search.MultiPhraseQuery;
-import org.apache.lucene.search.PhraseQuery;
-import org.apache.lucene.search.PrefixQuery;
-import org.apache.lucene.search.Query;
-import org.apache.lucene.search.TermRangeQuery;
-import org.apache.lucene.search.TermQuery;
-import org.apache.lucene.search.WildcardQuery;
-import org.apache.lucene.util.Version;
 
 /** Token Manager. */
-public class QueryParserTokenManager implements QueryParserConstants
-{
+@SuppressWarnings("unused")
+public class QueryParserTokenManager implements QueryParserConstants {
 
   /** Debug output. */
   public  java.io.PrintStream debugStream = System.out;
@@ -428,7 +395,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -674,7 +641,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -781,7 +748,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
@@ -952,7 +919,7 @@
       }
       else
       {
-         int hiByte = (int)(curChar >> 8);
+         int hiByte = (curChar >> 8);
          int i1 = hiByte >> 6;
          long l1 = 1L << (hiByte & 077);
          int i2 = (curChar & 0xff) >> 6;
Index: src/java/org/apache/lucene/queryParser/Token.java
===================================================================
--- src/java/org/apache/lucene/queryParser/Token.java	(revision 917020)
+++ src/java/org/apache/lucene/queryParser/Token.java	(working copy)
@@ -90,6 +90,7 @@
   /**
    * Returns the image.
    */
+  @Override
   public String toString()
   {
      return image;
Index: src/java/org/apache/lucene/queryParser/TokenMgrError.java
===================================================================
--- src/java/org/apache/lucene/queryParser/TokenMgrError.java	(revision 917020)
+++ src/java/org/apache/lucene/queryParser/TokenMgrError.java	(working copy)
@@ -115,7 +115,8 @@
     *
     * from this method for such cases in the release version of your parser.
     */
-   public String getMessage() {
+   @Override
+  public String getMessage() {
       return super.getMessage();
    }
 
Index: src/java/org/apache/lucene/util/UnicodeUtil.java
===================================================================
--- src/java/org/apache/lucene/util/UnicodeUtil.java	(revision 917020)
+++ src/java/org/apache/lucene/util/UnicodeUtil.java	(working copy)
@@ -118,7 +118,7 @@
 
     while(true) {
       
-      final int code = (int) source[i++];
+      final int code = source[i++];
 
       if (upto+4 > out.length) {
         out = result.result = ArrayUtil.grow(out, upto+4);
@@ -139,7 +139,7 @@
         // surrogate pair
         // confirm valid high surrogate
         if (code < 0xDC00 && source[i] != 0xffff) {
-          int utf32 = (int) source[i];
+          int utf32 = source[i];
           // confirm valid low surrogate and write pair
           if (utf32 >= 0xDC00 && utf32 <= 0xDFFF) { 
             utf32 = ((code - 0xD7C0) << 10) + (utf32 & 0x3FF);
@@ -174,7 +174,7 @@
 
     while(i < end) {
       
-      final int code = (int) source[i++];
+      final int code = source[i++];
 
       if (upto+4 > out.length) {
         out = result.result = ArrayUtil.grow(out, upto+4);
@@ -192,7 +192,7 @@
         // surrogate pair
         // confirm valid high surrogate
         if (code < 0xDC00 && i < end && source[i] != 0xffff) {
-          int utf32 = (int) source[i];
+          int utf32 = source[i];
           // confirm valid low surrogate and write pair
           if (utf32 >= 0xDC00 && utf32 <= 0xDFFF) { 
             utf32 = ((code - 0xD7C0) << 10) + (utf32 & 0x3FF);
@@ -225,7 +225,7 @@
 
     int upto = 0;
     for(int i=offset;i<end;i++) {
-      final int code = (int) s.charAt(i);
+      final int code = s.charAt(i);
 
       if (upto+4 > out.length) {
         out = result.result = ArrayUtil.grow(out, upto+4);
@@ -243,7 +243,7 @@
         // surrogate pair
         // confirm valid high surrogate
         if (code < 0xDC00 && (i < end-1)) {
-          int utf32 = (int) s.charAt(i+1);
+          int utf32 = s.charAt(i+1);
           // confirm valid low surrogate and write pair
           if (utf32 >= 0xDC00 && utf32 <= 0xDFFF) { 
             utf32 = ((code - 0xD7C0) << 10) + (utf32 & 0x3FF);
Index: src/test/org/apache/lucene/util/TestCharacterUtils.java
===================================================================
--- src/test/org/apache/lucene/util/TestCharacterUtils.java	(revision 917020)
+++ src/test/org/apache/lucene/util/TestCharacterUtils.java	(working copy)
@@ -37,9 +37,9 @@
     CharacterUtils java4 = CharacterUtils.getInstance(Version.LUCENE_30);
     char[] cpAt3 = "Abc\ud801\udc1c".toCharArray();
     char[] highSurrogateAt3 = "Abc\ud801".toCharArray();
-    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));
-    assertEquals((int) '\ud801', java4.codePointAt(cpAt3, 3));
-    assertEquals((int) '\ud801', java4.codePointAt(highSurrogateAt3, 3));
+    assertEquals('A', java4.codePointAt(cpAt3, 0));
+    assertEquals('\ud801', java4.codePointAt(cpAt3, 3));
+    assertEquals('\ud801', java4.codePointAt(highSurrogateAt3, 3));
     try {
       java4.codePointAt(highSurrogateAt3, 4);
       fail("array index out of bounds");
@@ -47,10 +47,10 @@
     }
 
     CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);
-    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));
+    assertEquals('A', java5.codePointAt(cpAt3, 0));
     assertEquals(Character.toCodePoint('\ud801', '\udc1c'), java5.codePointAt(
         cpAt3, 3));
-    assertEquals((int) '\ud801', java5.codePointAt(highSurrogateAt3, 3));
+    assertEquals('\ud801', java5.codePointAt(highSurrogateAt3, 3));
     try {
       java5.codePointAt(highSurrogateAt3, 4);
       fail("array index out of bounds");
@@ -63,9 +63,9 @@
     CharacterUtils java4 = CharacterUtils.getInstance(Version.LUCENE_30);
     String cpAt3 = "Abc\ud801\udc1c";
     String highSurrogateAt3 = "Abc\ud801";
-    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0));
-    assertEquals((int) '\ud801', java4.codePointAt(cpAt3, 3));
-    assertEquals((int) '\ud801', java4.codePointAt(highSurrogateAt3, 3));
+    assertEquals('A', java4.codePointAt(cpAt3, 0));
+    assertEquals('\ud801', java4.codePointAt(cpAt3, 3));
+    assertEquals('\ud801', java4.codePointAt(highSurrogateAt3, 3));
     try {
       java4.codePointAt(highSurrogateAt3, 4);
       fail("string index out of bounds");
@@ -73,10 +73,10 @@
     }
 
     CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);
-    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0));
+    assertEquals('A', java5.codePointAt(cpAt3, 0));
     assertEquals(Character.toCodePoint('\ud801', '\udc1c'), java5.codePointAt(
         cpAt3, 3));
-    assertEquals((int) '\ud801', java5.codePointAt(highSurrogateAt3, 3));
+    assertEquals('\ud801', java5.codePointAt(highSurrogateAt3, 3));
     try {
       java5.codePointAt(highSurrogateAt3, 4);
       fail("string index out of bounds");
@@ -90,15 +90,15 @@
     CharacterUtils java4 = CharacterUtils.getInstance(Version.LUCENE_30);
     char[] cpAt3 = "Abc\ud801\udc1c".toCharArray();
     char[] highSurrogateAt3 = "Abc\ud801".toCharArray();
-    assertEquals((int) 'A', java4.codePointAt(cpAt3, 0, 2));
-    assertEquals((int) '\ud801', java4.codePointAt(cpAt3, 3, 5));
-    assertEquals((int) '\ud801', java4.codePointAt(highSurrogateAt3, 3, 4));
+    assertEquals('A', java4.codePointAt(cpAt3, 0, 2));
+    assertEquals('\ud801', java4.codePointAt(cpAt3, 3, 5));
+    assertEquals('\ud801', java4.codePointAt(highSurrogateAt3, 3, 4));
 
     CharacterUtils java5 = CharacterUtils.getInstance(TEST_VERSION_CURRENT);
-    assertEquals((int) 'A', java5.codePointAt(cpAt3, 0, 2));
+    assertEquals('A', java5.codePointAt(cpAt3, 0, 2));
     assertEquals(Character.toCodePoint('\ud801', '\udc1c'), java5.codePointAt(
         cpAt3, 3, 5));
-    assertEquals((int) '\ud801', java5.codePointAt(highSurrogateAt3, 3, 4));
+    assertEquals('\ud801', java5.codePointAt(highSurrogateAt3, 3, 4));
 
   }
 
