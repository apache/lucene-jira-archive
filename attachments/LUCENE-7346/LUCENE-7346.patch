 dev-tools/maven/pom.xml.template                                    | 4 ++--
 dev-tools/maven/solr/pom.xml.template                               | 6 ++----
 lucene/common-build.xml                                             | 2 +-
 solr/common-build.xml                                               | 3 +--
 solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java     | 4 ++--
 .../src/test/org/apache/solr/cloud/TestConfigSetsAPIZkFailure.java  | 2 +-
 .../org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos.java     | 3 ++-
 .../test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java    | 3 ++-
 solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable.java | 3 ++-
 9 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/dev-tools/maven/pom.xml.template b/dev-tools/maven/pom.xml.template
index ccf22ca..adfe5b6 100644
--- a/dev-tools/maven/pom.xml.template
+++ b/dev-tools/maven/pom.xml.template
@@ -44,7 +44,7 @@
     <specification.version>@spec.version@</specification.version>
     <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
     <java.compat.version>8</java.compat.version>
-    <!-- HACK: the enforce and forbiddenapis plugin does not like new versioning: -->
+    <!-- HACK: the enforce plugin does not like new versioning: -->
     <java.legacy-compat.version>1.${java.compat.version}</java.legacy-compat.version>
     <jetty.version>9.3.8.v20160314</jetty.version>
 
@@ -161,7 +161,7 @@
         <plugin>
           <groupId>de.thetaphi</groupId>
           <artifactId>forbiddenapis</artifactId>
-          <version>2.1</version>
+          <version>2.2</version>
           <configuration>
             <!--
               This is the default setting, we don't support too new Java versions.
diff --git a/dev-tools/maven/solr/pom.xml.template b/dev-tools/maven/solr/pom.xml.template
index 92b493d..6f2eb6d 100644
--- a/dev-tools/maven/solr/pom.xml.template
+++ b/dev-tools/maven/solr/pom.xml.template
@@ -124,8 +124,7 @@
                 <bundledSignature>jdk-deprecated</bundledSignature>
                 <bundledSignature>jdk-non-portable</bundledSignature>
                 <bundledSignature>jdk-reflection</bundledSignature>
-                <!--TODO: fix this <bundledSignature>commons-io-unsafe-@commons-io:commons-io.version@</bundledSignature>-->
-                <bundledSignature>commons-io-unsafe-2.4</bundledSignature>
+                <bundledSignature>commons-io-unsafe-@commons-io:commons-io.version@</bundledSignature>
               </bundledSignatures>
               <signaturesFiles>
                 <signaturesFile>${top-level}/lucene/tools/forbiddenApis/base.txt</signaturesFile>
@@ -147,8 +146,7 @@
                 <bundledSignature>jdk-deprecated</bundledSignature>
                 <bundledSignature>jdk-non-portable</bundledSignature>
                 <bundledSignature>jdk-reflection</bundledSignature>
-                <!--TODO: fix this <bundledSignature>commons-io-unsafe-@commons-io:commons-io.version@</bundledSignature>-->
-                <bundledSignature>commons-io-unsafe-2.4</bundledSignature>
+                <bundledSignature>commons-io-unsafe-@commons-io:commons-io.version@</bundledSignature>
               </bundledSignatures>
               <signaturesFiles>
                 <signaturesFile>${top-level}/lucene/tools/forbiddenApis/base.txt</signaturesFile>
diff --git a/lucene/common-build.xml b/lucene/common-build.xml
index 94b7910..0e588c6 100644
--- a/lucene/common-build.xml
+++ b/lucene/common-build.xml
@@ -2330,7 +2330,7 @@ ${ant.project.name}.test.dependencies=${test.classpath.list}
   <property name="forbidden-sysout-excludes" value=""/>
   
   <target name="-install-forbidden-apis" unless="forbidden-apis.loaded" depends="ivy-availability-check,ivy-configure">
-    <ivy:cachepath organisation="de.thetaphi" module="forbiddenapis" revision="2.1"
+    <ivy:cachepath organisation="de.thetaphi" module="forbiddenapis" revision="2.2"
       inline="true" conf="default" transitive="true" pathid="forbidden-apis.classpath"/>
     <taskdef name="forbidden-apis" classname="de.thetaphi.forbiddenapis.ant.AntTask" classpathref="forbidden-apis.classpath"/>
     <property name="forbidden-apis.loaded" value="true"/>
diff --git a/solr/common-build.xml b/solr/common-build.xml
index c6ff092..235070a 100644
--- a/solr/common-build.xml
+++ b/solr/common-build.xml
@@ -504,8 +504,7 @@
   
   <!-- Forbidden API Task, customizations for Solr -->
   <target name="-check-forbidden-all" depends="-init-forbidden-apis,compile-core,compile-test">
-    <!--<property prefix="ivyversions" file="${common.dir}/ivy-versions.properties"/>--> <!-- for commons-io version -->
-    <!-- HACK: --><property name="ivyversions./commons-io/commons-io" value="2.4"/>
+    <property prefix="ivyversions" file="${common.dir}/ivy-versions.properties"/><!-- for commons-io version -->
     <forbidden-apis suppressAnnotation="**.SuppressForbidden" classpathref="forbidden-apis.allclasses.classpath" targetVersion="${javac.release}">
       <signatures>
         <bundled name="jdk-unsafe"/>
diff --git a/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java b/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java
index d7c590d..e3870dc 100644
--- a/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java
+++ b/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI.java
@@ -135,7 +135,7 @@ public class TestConfigSetsAPI extends SolrTestCaseJ4 {
     FileUtils.copyDirectory(configDir, tmpConfigDir);
     if (oldProps != null) {
       FileUtils.write(new File(tmpConfigDir, ConfigSetProperties.DEFAULT_FILENAME),
-          getConfigSetProps(oldProps));
+          getConfigSetProps(oldProps), StandardCharsets.UTF_8);
     }
     solrCluster.uploadConfigDir(tmpConfigDir, baseConfigSetName);
   }
@@ -242,7 +242,7 @@ public class TestConfigSetsAPI extends SolrTestCaseJ4 {
     // Ensure ConfigSet is immutable
     FileUtils.copyDirectory(configDir, tmpConfigDir);
     FileUtils.write(new File(tmpConfigDir, "configsetprops.json"),
-        getConfigSetProps(ImmutableMap.<String, String>of("immutable", "true")));
+        getConfigSetProps(ImmutableMap.<String, String>of("immutable", "true")), StandardCharsets.UTF_8);
     solrCluster.uploadConfigDir(tmpConfigDir, "configSet");
 
     // no ConfigSet name
diff --git a/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIZkFailure.java b/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIZkFailure.java
index eaade28..8fe9cb6 100644
--- a/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIZkFailure.java
+++ b/solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPIZkFailure.java
@@ -134,7 +134,7 @@ public class TestConfigSetsAPIZkFailure extends SolrTestCaseJ4 {
     FileUtils.copyDirectory(configDir, tmpConfigDir);
     if (oldProps != null) {
       FileUtils.write(new File(tmpConfigDir, ConfigSetProperties.DEFAULT_FILENAME),
-          getConfigSetProps(oldProps));
+          getConfigSetProps(oldProps), StandardCharsets.UTF_8);
     }
     solrCluster.uploadConfigDir(tmpConfigDir, baseConfigSetName);
   }
diff --git a/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos.java b/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos.java
index 48f1710..37439b0 100644
--- a/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos.java
+++ b/solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterKerberos.java
@@ -18,6 +18,7 @@ package org.apache.solr.cloud;
 
 import javax.security.auth.login.Configuration;
 import java.io.File;
+import java.nio.charset.StandardCharsets;
 import java.util.Locale;
 
 import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters;
@@ -113,7 +114,7 @@ public class TestMiniSolrCloudClusterKerberos extends TestMiniSolrCloudCluster {
     javax.security.auth.login.Configuration.setConfiguration(conf);
     
     String jaasFilePath = kdcDir+File.separator + "jaas-client.conf";
-    FileUtils.write(new File(jaasFilePath), jaas);
+    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);
     System.setProperty("java.security.auth.login.config", jaasFilePath);
     System.setProperty("solr.kerberos.cookie.domain", "127.0.0.1");
     System.setProperty("solr.kerberos.principal", principal);
diff --git a/solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java b/solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java
index 1e2b242..6ac2254 100644
--- a/solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java
+++ b/solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberosAlt.java
@@ -17,6 +17,7 @@
 package org.apache.solr.cloud;
 
 import java.io.File;
+import java.nio.charset.StandardCharsets;
 import java.util.List;
 import java.util.Locale;
 import java.util.Properties;
@@ -127,7 +128,7 @@ public class TestSolrCloudWithKerberosAlt extends LuceneTestCase {
     Configuration.setConfiguration(conf);
 
     String jaasFilePath = kdcDir+File.separator+"jaas-client.conf";
-    FileUtils.write(new File(jaasFilePath), jaas);
+    FileUtils.write(new File(jaasFilePath), jaas, StandardCharsets.UTF_8);
     System.setProperty("java.security.auth.login.config", jaasFilePath);
     System.setProperty("solr.kerberos.jaas.appname", "SolrClient"); // Get this app name from the jaas file
     System.setProperty("solr.kerberos.cookie.domain", "127.0.0.1");
diff --git a/solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable.java b/solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable.java
index 7c47ab1..30fac6a 100644
--- a/solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable.java
+++ b/solr/core/src/test/org/apache/solr/core/TestConfigSetImmutable.java
@@ -18,6 +18,7 @@ package org.apache.solr.core;
 
 import java.io.File;
 import java.io.StringReader;
+import java.nio.charset.StandardCharsets;
 import java.util.Map;
 
 import org.apache.commons.io.FileUtils;
@@ -46,7 +47,7 @@ public class TestConfigSetImmutable extends RestTestBase {
     File tmpConfDir = new File(tmpSolrHome, confDir);
     FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());
     // make the ConfigSet immutable
-    FileUtils.write(new File(tmpConfDir, "configsetprops.json"), new StringBuilder("{\"immutable\":\"true\"}"));
+    FileUtils.write(new File(tmpConfDir, "configsetprops.json"), new StringBuilder("{\"immutable\":\"true\"}"), StandardCharsets.UTF_8);
 
     System.setProperty("managed.schema.mutable", "true");
 
