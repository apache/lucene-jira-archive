Index: dev-tools/scripts/poll-mirrors.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dev-tools/scripts/poll-mirrors.py	(revision cfd3ffafd2ee41beb11540c52065544e7c81cd0c)
+++ dev-tools/scripts/poll-mirrors.py	(date 1559655950000)
@@ -36,7 +36,7 @@
   from urllib.parse import urlparse
 except:
   from urlparse import urlparse
-
+from multiprocessing import Pool
 try:
   import http.client as http
 except ImportError:
@@ -80,16 +80,15 @@
 
   return len(listing) > 0
 
-def check_url_list(lst):
-  ret = []
-  for url in lst:
-    if mirror_contains_file(url):
-      p('.')
-    else:
-      p('\nFAIL: ' + url + '\n' if args.details else 'X')
-      ret.append(url)
+
+def check_mirror(url):
+  if mirror_contains_file(url):
+    p('.')
+    return None
+  else:
+    p('\nFAIL: ' + url + '\n' if args.details else 'X')
+    return url
 
-  return ret
 
 desc = 'Periodically checks that all Lucene/Solr mirrors contain either a copy of a release or a specified path'
 parser = argparse.ArgumentParser(description=desc)
@@ -143,7 +142,8 @@
     maven_available = mirror_contains_file(maven_url)
 
   start = time.time()
-  pending_mirrors = check_url_list(pending_mirrors)
+  with Pool(processes=10) as pool:
+    pending_mirrors = list(filter(lambda x: x is not None, pool.map(check_mirror, pending_mirrors)))
   stop = time.time()
   remaining = args.interval - (stop - start)
 
