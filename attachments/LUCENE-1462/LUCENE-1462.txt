Index: src/java/org/apache/lucene/index/TermVectorOffsetInfo.java
===================================================================
--- src/java/org/apache/lucene/index/TermVectorOffsetInfo.java	(revision 721075)
+++ src/java/org/apache/lucene/index/TermVectorOffsetInfo.java	(arbetskopia)
@@ -1,5 +1,7 @@
 package org.apache.lucene.index;
 
+import java.io.Serializable;
+
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
@@ -22,7 +24,7 @@
  * offset information.  This offset information is the character offset as set during the Analysis phase (and thus may not be the actual offset in the
  * original content).
  */
-public class TermVectorOffsetInfo {
+public class TermVectorOffsetInfo implements Serializable {
   /**
    * Convenience declaration when creating a {@link org.apache.lucene.index.TermPositionVector} that stores only position information.
    */
Index: contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization.java
===================================================================
--- contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization.java	(revision 0)
+++ contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestSerialization.java	(revision 0)
@@ -0,0 +1,58 @@
+package org.apache.lucene.store.instantiated;
+
+/**
+ * Copyright 2006 The Apache Software Foundation
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+import junit.framework.TestCase;
+import org.apache.lucene.store.RAMDirectory;
+import org.apache.lucene.store.Directory;
+import org.apache.lucene.index.IndexWriter;
+import org.apache.lucene.index.IndexReader;
+import org.apache.lucene.analysis.WhitespaceAnalyzer;
+import org.apache.lucene.document.Document;
+import org.apache.lucene.document.Field;
+
+import java.io.ByteArrayOutputStream;
+import java.io.ObjectOutputStream;
+
+public class TestSerialization extends TestCase {
+
+  public void test() throws Exception {
+
+    Directory dir = new RAMDirectory();
+
+    IndexWriter iw = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);
+    Document doc = new Document();
+    doc.add(new Field("foo", "bar rab abr bra rba", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));
+    doc.add(new Field("moo", "bar rab abr bra rba", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));
+    iw.addDocument(doc);
+    iw.close();
+
+    IndexReader ir = IndexReader.open(dir);
+    InstantiatedIndex ii = new InstantiatedIndex(ir);
+    ir.close();
+
+    ByteArrayOutputStream baos = new ByteArrayOutputStream(5000);
+    ObjectOutputStream oos = new ObjectOutputStream(baos);
+    oos.writeObject(ii);
+    oos.close();
+    baos.close();
+
+    
+  }
+
+}
Index: contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSettings.java
===================================================================
--- contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSettings.java	(revision 721075)
+++ contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSettings.java	(arbetskopia)
@@ -3,6 +3,7 @@
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Collection;
+import java.io.Serializable;
 
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
@@ -24,7 +25,7 @@
 /**
  * Essetially a Map<FieldName, {@link org.apache.lucene.store.instantiated.FieldSetting}> 
  */
-class FieldSettings {
+class FieldSettings implements Serializable {
 
 
   FieldSettings() {
Index: contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java
===================================================================
--- contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java	(revision 721075)
+++ contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java	(arbetskopia)
@@ -522,6 +522,9 @@
             tokenStream = analyzer.tokenStream(field.name(), new StringReader(field.stringValue()));
           }
 
+          // reset the TokenStream to the first token          
+          tokenStream.reset();
+
           final Token reusableToken = new Token();
           for (Token nextToken = tokenStream.next(reusableToken); nextToken != null; nextToken = tokenStream.next(reusableToken)) {
             tokens.add((Token) nextToken.clone()); // the vector will be built on commit.
Index: contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSetting.java
===================================================================
--- contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSetting.java	(revision 721075)
+++ contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSetting.java	(arbetskopia)
@@ -1,5 +1,7 @@
 package org.apache.lucene.store.instantiated;
 
+import java.io.Serializable;
+
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
@@ -20,7 +22,7 @@
 /**
  * For non package access see {@link org.apache.lucene.index.IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)} 
  */
-class FieldSetting {
+class FieldSetting implements Serializable {
   String fieldName;
 
   boolean storeTermVector = false;
