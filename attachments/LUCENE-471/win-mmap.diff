diff -uB --recursive --exclude=build lucene-1.9-200511081055.orig/src/gcj/org/apache/lucene/store/GCJIndexInput.cc lucene-1.9-200511081055/src/gcj/org/apache/lucene/store/GCJIndexInput.cc
--- src/gcj/org/apache/lucene/store/GCJIndexInput.cc	Wed Oct 13 19:19:06 2004
+++ src/gcj/org/apache/lucene/store/GCJIndexInput.cc	Thu Nov 10 08:57:18 2005
@@ -5,10 +5,19 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
-#include <sys/mman.h>
 #include <errno.h>
 #include <unistd.h>
-#include <iostream>
+
+#ifndef _WIN32
+# include <sys/mman.h>
+#else
+# include <windows.h>
+#endif
+
+#define DEBUG_THIS 0
+#if DEBUG_THIS
+# include <iostream>
+#endif
 
 using namespace ::std;
 using namespace ::java::io;
@@ -25,6 +34,7 @@
   jsize total = JvGetStringUTFRegion (file, 0, file->length(), buf);
   buf[total] = '\0';
 
+#ifndef _WIN32
   // open the file
   fd = ::open (buf, O_RDONLY);
   if (fd < 0)
@@ -39,10 +49,37 @@
   fileLength = sb.st_size;
 
   // mmap the file
-  // cout << "mmapping " << buf << "\n";
+#if DEBUG_THIS
+  cout << "mmapping " << buf << "\n";
+#endif
   void* address = ::mmap(0, fileLength, PROT_READ, MAP_SHARED, fd, 0);
   if (address == MAP_FAILED)
     throw new IOException(JvNewStringLatin1(strerror(errno)));
+#else
+  winFileHandle =
+    (jint)CreateFile(buf,
+		     STANDARD_RIGHTS_READ,
+		     FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,
+		     NULL,
+		     OPEN_EXISTING,
+		     FILE_ATTRIBUTE_NOT_CONTENT_INDEXED,
+		     NULL);
+  if ((HANDLE)winFileHandle == INVALID_HANDLE_VALUE) {
+    //GetLastError();
+    //throw new IOException("Cannot open");
+  }
+  winMappingHandle =
+    (jint)CreateFileMapping((HANDLE)winFileHandle, NULL, PAGE_READONLY, 0, 0, NULL);
+  if ((HANDLE)winMappingHandle == NULL) {
+    //GetLastError();
+    //throw new IOException("Cannot create mapping");
+  }
+  void* address = MapViewOfFile((HANDLE)winMappingHandle, FILE_MAP_READ, 0, 0, 0);
+  if (address == NULL) {
+    //GetLastError();
+    //throw new IOException("Cannot map vm");
+  }
+#endif
 
   // initialize pointer to the start of the file
   data = RAW(address);
@@ -89,8 +126,14 @@
 }
 
 void GCJIndexInput::doClose() {
+#ifndef _WIN32
   ::munmap(data, fileLength);
   ::close(fd);
+#else
+  UnmapViewOfFile(data);
+  CloseHandle((HANDLE)winMappingHandle);
+  CloseHandle((HANDLE)winFileHandle);
+#endif
 }
 
 
diff -uB --recursive --exclude=build lucene-1.9-200511081055.orig/src/gcj/org/apache/lucene/store/GCJIndexInput.java lucene-1.9-200511081055/src/gcj/org/apache/lucene/store/GCJIndexInput.java
--- src/gcj/org/apache/lucene/store/GCJIndexInput.java	Wed Sep 22 20:32:27 2004
+++ src/gcj/org/apache/lucene/store/GCJIndexInput.java	Thu Nov 10 15:11:11 2005
@@ -32,6 +32,10 @@
   public RawData pointer;
   private boolean isClone;
 
+  // These are used in the native methods on windows
+  private int winFileHandle;
+  private int winMappingHandle;
+
   public GCJIndexInput(String file) throws IOException {
     this.file = file;
     open();
