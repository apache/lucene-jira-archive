Index: lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest.java	(revision 97875af3f93477f48e4ead1979b2f36797106e06)
+++ lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest.java	(date 1550577952000)
@@ -402,4 +402,24 @@
 
   }
 
+  @Test
+  public void testLUCEN8696() {
+    GeoPoint[] points = new GeoPoint[4];
+    points[0] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.017453291479645996);
+    points[1] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.8952476719156919);
+    points[2] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.6491968536639036);
+    points[3] = new GeoPoint(PlanetModel.WGS84, -0.7718789008737459, 0.9236607495528212);
+    GeoPoint check = new GeoPoint(0.02071783020158524, 0.9523290535474472, 0.30699177256064203);
+    GeoPath path1  = GeoPathFactory.makeGeoPath(PlanetModel.WGS84, 0, points);
+    double dist = path1.computeOutsideDistance(DistanceStyle.LINEAR, check);
+    //distance is lower that 1
+    assertTrue(dist < 1);
+    //Path with cutoff angle 1 should contain the point
+    GeoPath path2  = GeoPathFactory.makeGeoPath(PlanetModel.WGS84, 1.0, points);
+    assertTrue(path2.isWithin(check));
+    //Then a path with a bigger cutoff angle must contain it as well?
+    GeoPath path3  = GeoPathFactory.makeGeoPath(PlanetModel.WGS84, 1.3439035240356338, points);
+    assertTrue(path3.isWithin(check));
+  }
+
 }
