diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.java
index 78f86405656..d25f382b935 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.java
@@ -203,7 +203,6 @@ public final class ASCIIFoldingFilter extends TokenFilter {
           case '\u00C2': // Â  [LATIN CAPITAL LETTER A WITH CIRCUMFLEX]
           case '\u00C3': // Ã  [LATIN CAPITAL LETTER A WITH TILDE]
           case '\u00C4': // Ä  [LATIN CAPITAL LETTER A WITH DIAERESIS]
-          case '\u00C5': // Å  [LATIN CAPITAL LETTER A WITH RING ABOVE]
           case '\u0100': // Ā  [LATIN CAPITAL LETTER A WITH MACRON]
           case '\u0102': // Ă  [LATIN CAPITAL LETTER A WITH BREVE]
           case '\u0104': // Ą  [LATIN CAPITAL LETTER A WITH OGONEK]
@@ -239,7 +238,6 @@ public final class ASCIIFoldingFilter extends TokenFilter {
           case '\u00E2': // â  [LATIN SMALL LETTER A WITH CIRCUMFLEX]
           case '\u00E3': // ã  [LATIN SMALL LETTER A WITH TILDE]
           case '\u00E4': // ä  [LATIN SMALL LETTER A WITH DIAERESIS]
-          case '\u00E5': // å  [LATIN SMALL LETTER A WITH RING ABOVE]
           case '\u0101': // ā  [LATIN SMALL LETTER A WITH MACRON]
           case '\u0103': // ă  [LATIN SMALL LETTER A WITH BREVE]
           case '\u0105': // ą  [LATIN SMALL LETTER A WITH OGONEK]
@@ -277,6 +275,7 @@ public final class ASCIIFoldingFilter extends TokenFilter {
           case '\uFF41': // ａ  [FULLWIDTH LATIN SMALL LETTER A]
             output[outputPos++] = 'a';
             break;
+          case '\u00C5': // Å  [LATIN CAPITAL LETTER A WITH RING ABOVE]
           case '\uA732': // Ꜳ  [LATIN CAPITAL LETTER AA]
             output[outputPos++] = 'A';
             output[outputPos++] = 'A';
@@ -310,6 +309,7 @@ public final class ASCIIFoldingFilter extends TokenFilter {
             output[outputPos++] = 'a';
             output[outputPos++] = ')';
             break;
+          case '\u00E5': // å  [LATIN SMALL LETTER A WITH RING ABOVE]
           case '\uA733': // ꜳ  [LATIN SMALL LETTER AA]
             output[outputPos++] = 'a';
             output[outputPos++] = 'a';
@@ -973,7 +973,6 @@ public final class ASCIIFoldingFilter extends TokenFilter {
           case '\u00D4': // Ô  [LATIN CAPITAL LETTER O WITH CIRCUMFLEX]
           case '\u00D5': // Õ  [LATIN CAPITAL LETTER O WITH TILDE]
           case '\u00D6': // Ö  [LATIN CAPITAL LETTER O WITH DIAERESIS]
-          case '\u00D8': // Ø  [LATIN CAPITAL LETTER O WITH STROKE]
           case '\u014C': // Ō  [LATIN CAPITAL LETTER O WITH MACRON]
           case '\u014E': // Ŏ  [LATIN CAPITAL LETTER O WITH BREVE]
           case '\u0150': // Ő  [LATIN CAPITAL LETTER O WITH DOUBLE ACUTE]
@@ -1019,7 +1018,6 @@ public final class ASCIIFoldingFilter extends TokenFilter {
           case '\u00F4': // ô  [LATIN SMALL LETTER O WITH CIRCUMFLEX]
           case '\u00F5': // õ  [LATIN SMALL LETTER O WITH TILDE]
           case '\u00F6': // ö  [LATIN SMALL LETTER O WITH DIAERESIS]
-          case '\u00F8': // ø  [LATIN SMALL LETTER O WITH STROKE]
           case '\u014D': // ō  [LATIN SMALL LETTER O WITH MACRON]
           case '\u014F': // ŏ  [LATIN SMALL LETTER O WITH BREVE]
           case '\u0151': // ő  [LATIN SMALL LETTER O WITH DOUBLE ACUTE]
@@ -1063,6 +1061,7 @@ public final class ASCIIFoldingFilter extends TokenFilter {
           case '\uFF4F': // ｏ  [FULLWIDTH LATIN SMALL LETTER O]
             output[outputPos++] = 'o';
             break;
+          case '\u00D8': // Ø  [LATIN CAPITAL LETTER O WITH STROKE]
           case '\u0152': // Œ  [LATIN CAPITAL LIGATURE OE]
           case '\u0276': // ɶ  [LATIN LETTER SMALL CAPITAL OE]
             output[outputPos++] = 'O';
@@ -1082,6 +1081,7 @@ public final class ASCIIFoldingFilter extends TokenFilter {
             output[outputPos++] = 'o';
             output[outputPos++] = ')';
             break;
+          case '\u00F8': // ø  [LATIN SMALL LETTER O WITH STROKE]
           case '\u0153': // œ  [LATIN SMALL LIGATURE OE]
           case '\u1D14': // ᴔ  [LATIN SMALL LETTER TURNED OE]
             output[outputPos++] = 'o';
diff --git a/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestASCIIFoldingFilter.java b/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestASCIIFoldingFilter.java
index d42ac6c5934..753f5959d0b 100644
--- a/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestASCIIFoldingFilter.java
+++ b/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestASCIIFoldingFilter.java
@@ -66,7 +66,7 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
     assertNextTerms("Â", "A", filter, termAtt);
     assertNextTerms("Ã", "A", filter, termAtt);
     assertNextTerms("Ä", "A", filter, termAtt);
-    assertNextTerms("Å", "A", filter, termAtt);
+    assertNextTerms("Å", "AA", filter, termAtt);
     assertNextTerms("Æ", "AE", filter, termAtt);
     assertNextTerms("Ç", "C", filter, termAtt);
     assertNextTerms("È", "E", filter, termAtt);
@@ -85,7 +85,7 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
     assertNextTerms("Ô", "O", filter, termAtt);
     assertNextTerms("Õ", "O", filter, termAtt);
     assertNextTerms("Ö", "O", filter, termAtt);
-    assertNextTerms("Ø", "O", filter, termAtt);
+    assertNextTerms("Ø", "OE", filter, termAtt);
     assertNextTerms("Œ", "OE", filter, termAtt);
     assertNextTerms("Þ", "TH", filter, termAtt);
     assertNextTerms("Ù", "U", filter, termAtt);
@@ -99,7 +99,7 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
     assertNextTerms("â", "a", filter, termAtt);
     assertNextTerms("ã", "a", filter, termAtt);
     assertNextTerms("ä", "a", filter, termAtt);
-    assertNextTerms("å", "a", filter, termAtt);
+    assertNextTerms("å", "aa", filter, termAtt);
     assertNextTerms("æ", "ae", filter, termAtt);
     assertNextTerms("ç", "c", filter, termAtt);
     assertNextTerms("è", "e", filter, termAtt);
@@ -118,7 +118,7 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
     assertNextTerms("ô", "o", filter, termAtt);
     assertNextTerms("õ", "o", filter, termAtt);
     assertNextTerms("ö", "o", filter, termAtt);
-    assertNextTerms("ø", "o", filter, termAtt);
+    assertNextTerms("ø", "oe", filter, termAtt);
     assertNextTerms("œ", "oe", filter, termAtt);
     assertNextTerms("ß", "ss", filter, termAtt);
     assertNextTerms("þ", "th", filter, termAtt);
@@ -206,7 +206,6 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
           + "Â" // U+00C2: LATIN CAPITAL LETTER A WITH CIRCUMFLEX
           + "Ã" // U+00C3: LATIN CAPITAL LETTER A WITH TILDE
           + "Ä" // U+00C4: LATIN CAPITAL LETTER A WITH DIAERESIS
-          + "Å" // U+00C5: LATIN CAPITAL LETTER A WITH RING ABOVE
           + "Ā" // U+0100: LATIN CAPITAL LETTER A WITH MACRON
           + "Ă" // U+0102: LATIN CAPITAL LETTER A WITH BREVE
           + "Ą" // U+0104: LATIN CAPITAL LETTER A WITH OGONEK
@@ -242,7 +241,6 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
           + "â" // U+00E2: LATIN SMALL LETTER A WITH CIRCUMFLEX
           + "ã" // U+00E3: LATIN SMALL LETTER A WITH TILDE
           + "ä" // U+00E4: LATIN SMALL LETTER A WITH DIAERESIS
-          + "å" // U+00E5: LATIN SMALL LETTER A WITH RING ABOVE
           + "ā" // U+0101: LATIN SMALL LETTER A WITH MACRON
           + "ă" // U+0103: LATIN SMALL LETTER A WITH BREVE
           + "ą" // U+0105: LATIN SMALL LETTER A WITH OGONEK
@@ -280,7 +278,8 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
           + "ａ" // U+FF41: FULLWIDTH LATIN SMALL LETTER A
       ,
       "a", // Folded result
-      "Ꜳ" // U+A732: LATIN CAPITAL LETTER AA
+      "Å" // U+00C5: LATIN CAPITAL LETTER A WITH RING ABOVE
+          + "Ꜳ" // U+A732: LATIN CAPITAL LETTER AA
       ,
       "AA", // Folded result
       "Æ" // U+00C6: LATIN CAPITAL LETTER AE
@@ -305,7 +304,8 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
       "⒜" // U+249C: PARENTHESIZED LATIN SMALL LETTER A
       ,
       "(a)", // Folded result
-      "ꜳ" // U+A733: LATIN SMALL LETTER AA
+      "å" // U+00E5: LATIN SMALL LETTER A WITH RING ABOVE
+          + "ꜳ" // U+A733: LATIN SMALL LETTER AA
       ,
       "aa", // Folded result
       "æ" // U+00E6: LATIN SMALL LETTER AE
@@ -911,7 +911,6 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
           + "Ô" // U+00D4: LATIN CAPITAL LETTER O WITH CIRCUMFLEX
           + "Õ" // U+00D5: LATIN CAPITAL LETTER O WITH TILDE
           + "Ö" // U+00D6: LATIN CAPITAL LETTER O WITH DIAERESIS
-          + "Ø" // U+00D8: LATIN CAPITAL LETTER O WITH STROKE
           + "Ō" // U+014C: LATIN CAPITAL LETTER O WITH MACRON
           + "Ŏ" // U+014E: LATIN CAPITAL LETTER O WITH BREVE
           + "Ő" // U+0150: LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
@@ -957,7 +956,6 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
           + "ô" // U+00F4: LATIN SMALL LETTER O WITH CIRCUMFLEX
           + "õ" // U+00F5: LATIN SMALL LETTER O WITH TILDE
           + "ö" // U+00F6: LATIN SMALL LETTER O WITH DIAERESIS
-          + "ø" // U+00F8: LATIN SMALL LETTER O WITH STROKE
           + "ō" // U+014D: LATIN SMALL LETTER O WITH MACRON
           + "ŏ" // U+014F: LATIN SMALL LETTER O WITH BREVE
           + "ő" // U+0151: LATIN SMALL LETTER O WITH DOUBLE ACUTE
@@ -1001,7 +999,8 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
           + "ｏ" // U+FF4F: FULLWIDTH LATIN SMALL LETTER O
       ,
       "o", // Folded result
-      "Œ" // U+0152: LATIN CAPITAL LIGATURE OE
+      "Ø" // U+00D8: LATIN CAPITAL LETTER O WITH STROKE
+          + "Œ" // U+0152: LATIN CAPITAL LIGATURE OE
           + "ɶ" // U+0276: LATIN LETTER SMALL CAPITAL OE
       ,
       "OE", // Folded result
@@ -1015,7 +1014,8 @@ public class TestASCIIFoldingFilter extends BaseTokenStreamTestCase {
       "⒪" // U+24AA: PARENTHESIZED LATIN SMALL LETTER O
       ,
       "(o)", // Folded result
-      "œ" // U+0153: LATIN SMALL LIGATURE OE
+      "ø" // U+00F8: LATIN SMALL LETTER O WITH STROKE
+          + "œ" // U+0153: LATIN SMALL LIGATURE OE
           + "ᴔ" // U+1D14: LATIN SMALL LETTER TURNED OE
       ,
       "oe", // Folded result
