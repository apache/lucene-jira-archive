Index: lucene/CHANGES.txt
===================================================================
--- lucene/CHANGES.txt	(revision 1611879)
+++ lucene/CHANGES.txt	(working copy)
@@ -157,6 +157,9 @@
   warning in javadocs. It is almost always a better idea to implement
   slicing on your own!  (Uwe Schindler, Robert Muir)
 
+* LUCENE-5834: Empty sorted set and numeric doc values are now singletons.
+  (Adrien Grand)
+
 Bug Fixes
 
 * LUCENE-5796: Fixes the Scorer.getChildren() method for two combinations 
Index: lucene/core/src/java/org/apache/lucene/index/DocValues.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/DocValues.java	(revision 1611879)
+++ lucene/core/src/java/org/apache/lucene/index/DocValues.java	(working copy)
@@ -77,66 +77,25 @@
       }
     };
   }
-  
-  /** 
+
+  /**
    * An empty SortedNumericDocValues which returns zero values for every document 
    */
-  public static final SortedNumericDocValues emptySortedNumeric() {
-    return new SortedNumericDocValues() {
-      @Override
-      public void setDocument(int doc) {}
-
-      @Override
-      public long valueAt(int index) {
-        throw new IndexOutOfBoundsException();
-      }
-
-      @Override
-      public int count() {
-        return 0;
-      }
-    };
+  public static final SortedNumericDocValues emptySortedNumeric(int maxDoc) {
+    return singleton(emptyNumeric(), new Bits.MatchNoBits(maxDoc));
   }
 
   /** 
    * An empty SortedDocValues which returns {@link SortedSetDocValues#NO_MORE_ORDS} for every document 
    */
-  public static final SortedSetDocValues emptySortedSet() {
-    return new RandomAccessOrds() {
-      @Override
-      public long nextOrd() {
-        return NO_MORE_ORDS;
-      }
-      
-      @Override
-      public void setDocument(int docID) {}
-      
-      @Override
-      public BytesRef lookupOrd(long ord) {
-        throw new IndexOutOfBoundsException();
-      }
-      
-      @Override
-      public long getValueCount() {
-        return 0;
-      }
-      
-      @Override
-      public long ordAt(int index) {
-        throw new IndexOutOfBoundsException();
-      }
-      
-      @Override
-      public int cardinality() {
-        return 0;
-      }
-    };
+  public static final RandomAccessOrds emptySortedSet() {
+    return singleton(emptySorted());
   }
   
   /** 
    * Returns a multi-valued view over the provided SortedDocValues 
    */
-  public static SortedSetDocValues singleton(SortedDocValues dv) {
+  public static RandomAccessOrds singleton(SortedDocValues dv) {
     return new SingletonSortedSetDocValues(dv);
   }
   
@@ -286,7 +245,7 @@
     if (dv == null) {
       NumericDocValues single = in.getNumericDocValues(field);
       if (single == null) {
-        return emptySortedNumeric();
+        return emptySortedNumeric(in.maxDoc());
       }
       Bits bits = in.getDocsWithField(field);
       return singleton(single, bits);
Index: lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java	(revision 1611879)
+++ lucene/core/src/java/org/apache/lucene/index/MultiDocValues.java	(working copy)
@@ -253,7 +253,7 @@
       AtomicReaderContext context = leaves.get(i);
       SortedNumericDocValues v = context.reader().getSortedNumericDocValues(field);
       if (v == null) {
-        v = DocValues.emptySortedNumeric();
+        v = DocValues.emptySortedNumeric(context.reader().maxDoc());
       } else {
         anyReal = true;
       }
Index: lucene/core/src/java/org/apache/lucene/index/SegmentMerger.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/SegmentMerger.java	(revision 1611879)
+++ lucene/core/src/java/org/apache/lucene/index/SegmentMerger.java	(working copy)
@@ -214,7 +214,7 @@
             for (AtomicReader reader : mergeState.readers) {
               SortedNumericDocValues values = reader.getSortedNumericDocValues(field.name);
               if (values == null) {
-                values = DocValues.emptySortedNumeric();
+                values = DocValues.emptySortedNumeric(reader.maxDoc());
               }
               toMerge.add(values);
             }
