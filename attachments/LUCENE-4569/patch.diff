Index: lucene/core/src/java/org/apache/lucene/index/NormsConsumer.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/NormsConsumer.java	(revision 1412417)
+++ lucene/core/src/java/org/apache/lucene/index/NormsConsumer.java	(working copy)
@@ -38,8 +38,12 @@
   private PerDocConsumer consumer;
   
   public NormsConsumer(DocumentsWriterPerThread dwpt) {
-    normsFormat = dwpt.codec.normsFormat();
+    this(dwpt.codec.normsFormat());
   }
+  
+  public NormsConsumer(NormsFormat normsFormat){
+    this.normsFormat = normsFormat;
+  }
 
   @Override
   public void abort(){
Index: lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor.java	(revision 1412417)
+++ lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor.java	(working copy)
@@ -26,6 +26,7 @@
 
 import org.apache.lucene.codecs.Codec;
 import org.apache.lucene.codecs.DocValuesConsumer;
+import org.apache.lucene.codecs.DocValuesFormat;
 import org.apache.lucene.codecs.FieldInfosWriter;
 import org.apache.lucene.codecs.PerDocConsumer;
 import org.apache.lucene.document.FieldType;
@@ -61,13 +62,24 @@
 
   int fieldGen;
   final DocumentsWriterPerThread.DocState docState;
+  final DocValuesFormat docValsFormat;
 
-  public DocFieldProcessor(DocumentsWriterPerThread docWriter, DocFieldConsumer consumer) {
+  public DocFieldProcessor(DocumentsWriterPerThread docWriter, DocFieldConsumer consumer, DocValuesFormat docValsFormat) {
     this.docState = docWriter.docState;
     this.codec = docWriter.codec;
     this.consumer = consumer;
+    if (docValsFormat == null){
+      this.docValsFormat = this.codec.docValuesFormat();
+    }
+    else {
+      this.docValsFormat = docValsFormat;
+    }
     fieldsWriter = new StoredFieldsConsumer(docWriter);
   }
+  
+  public DocFieldProcessor(DocumentsWriterPerThread docWriter, DocFieldConsumer consumer) {
+    this(docWriter, consumer, docWriter.codec.docValuesFormat());
+  }
 
   @Override
   public void flush(SegmentWriteState state) throws IOException {
@@ -370,7 +382,7 @@
 
     if (perDocConsumer == null) {
       PerDocWriteState perDocWriteState = docState.docWriter.newPerDocWriteState("");
-      perDocConsumer = docState.docWriter.codec.docValuesFormat().docsConsumer(perDocWriteState);
+      perDocConsumer = docValsFormat.docsConsumer(perDocWriteState);
       if (perDocConsumer == null) {
         throw new IllegalStateException("codec=" +  docState.docWriter.codec + " does not support docValues: from docValuesFormat().docsConsumer(...) returned null; field=" + fieldInfo.name);
       }
