diff --git a/lucene/tools/src/groovy/check-source-patterns.groovy b/lucene/tools/src/groovy/check-source-patterns.groovy
index 7fa4aa4c4a8..ebffc0d49cb 100644
--- a/lucene/tools/src/groovy/check-source-patterns.groovy
+++ b/lucene/tools/src/groovy/check-source-patterns.groovy
@@ -59,6 +59,9 @@ def reportViolation = { f, name ->
   found++;
 }
 
+def prefixTestFileNameConventionEnforcementTargets = ~$/(solrj/src/test/org/apache/solr/common/cloud|solr/contrib/dataimporthandler)/$;
+def suffixTestFileNameConventionEnforcementTargets = ~$/(solrj/src/test/org/apache/solr/client/solrj/io/stream|solr/test-framework)/$;
+
 def javadocsPattern = ~$/(?sm)^\Q/**\E(.*?)\Q*/\E/$;
 def javaCommentPattern = ~$/(?sm)^\Q/*\E(.*?)\Q*/\E/$;
 def xmlCommentPattern = ~$/(?sm)\Q<!--\E(.*?)\Q-->\E/$;
@@ -177,6 +180,14 @@ ant.fileScanner{
     checkLicenseHeaderPrecedes(f, 'package', packagePattern, javaCommentPattern, text, ratDocument);
     if (f.name.contains("Test")) {
       checkMockitoAssume(f, text);
+      if (f.toString().contains("/test/")) {
+        if (prefixTestFileNameConventionEnforcementTargets.matcher(f.toString()).find() && f.name.endsWith('Test.java')) {
+          reportViolation(f, 'invalid test file name [prefer TestFooBar.java over FooBarTest.java (in this directory)]')
+        }
+        if (suffixTestFileNameConventionEnforcementTargets.matcher(f.toString()).find() && !f.name.endsWith('Test.java')) {
+          reportViolation(f, 'invalid test file name [prefer FooBarTest.java over TestFooBar.java (in this directory)]')
+        }
+      }
     }
   }
   if (f.name.endsWith('.xml') || f.name.endsWith('.xml.template')) {
diff --git a/solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest.java b/solr/solrj/src/test/org/apache/solr/common/cloud/TestSolrZkClient.java
similarity index 99%
rename from solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest.java
rename to solr/solrj/src/test/org/apache/solr/common/cloud/TestSolrZkClient.java
index 126d35b5dcd..eed7573a082 100644
--- a/solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest.java
+++ b/solr/solrj/src/test/org/apache/solr/common/cloud/TestSolrZkClient.java
@@ -35,7 +35,7 @@ import org.junit.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-public class SolrZkClientTest extends SolrTestCaseJ4 {
+public class TestSolrZkClient extends SolrTestCaseJ4 {
   private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());
   
   private static final String ROOT = "/";
diff --git a/solr/test-framework/src/test/org/apache/solr/TestLogLevelAnnotations.java b/solr/test-framework/src/test/org/apache/solr/LogLevelAnnotationsTest.java
similarity index 96%
rename from solr/test-framework/src/test/org/apache/solr/TestLogLevelAnnotations.java
rename to solr/test-framework/src/test/org/apache/solr/LogLevelAnnotationsTest.java
index cfc9d934433..04f992d35e9 100644
--- a/solr/test-framework/src/test/org/apache/solr/TestLogLevelAnnotations.java
+++ b/solr/test-framework/src/test/org/apache/solr/LogLevelAnnotationsTest.java
@@ -25,7 +25,7 @@ import org.junit.Test;
 
 @SuppressForbidden(reason="We need to use log4J2 classes to access the log levels")
 @LogLevel("org.apache.solr.ClassLogLevel=error;org.apache.solr.MethodLogLevel=warn")
-public class TestLogLevelAnnotations extends SolrTestCaseJ4 {
+public class LogLevelAnnotationsTest extends SolrTestCaseJ4 {
 
   @Test
   public void testClassLogLevels() {
