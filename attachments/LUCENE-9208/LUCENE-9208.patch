From da3e18f2caea2a9a4c1666f01a4cb3f7f2152ee3 Mon Sep 17 00:00:00 2001
From: Nirmal Chidambaram <nirmal.c@gmail.com>
Date: Tue, 4 Feb 2020 19:47:37 -0600
Subject: [PATCH] LUCENE-9208 Rewrite boolean query to matchNoDoc query if
 MatchNoDoc query is already present in MUST clause or FILTER clause

---
 .../apache/lucene/search/BooleanQuery.java    |  9 +++++++-
 .../lucene/search/TestBooleanQuery.java       | 22 +++++++++++++++++++
 2 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java b/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java
index 2e2d81b53de..2410753164d 100644
--- a/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java
+++ b/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java
@@ -303,6 +303,14 @@ public class BooleanQuery extends Query implements Iterable<BooleanClause> {
       }
     }
 
+    // Check whether filter or must contains match no docs query
+    final Collection<Query> mustCheck = clauseSets.get(Occur.MUST);
+    final Collection<Query> filterCheck = clauseSets.get(Occur.FILTER);
+    if ((!mustCheck.isEmpty() && mustCheck.contains(new MatchNoDocsQuery())) ||
+        (!filterCheck.isEmpty() && filterCheck.contains(new MatchNoDocsQuery()))) {
+      return new MatchNoDocsQuery("FILTER or MUST clause contains MatchNoDocsQuery");
+    }
+
     // Check whether some clauses are both required and excluded
     final Collection<Query> mustNotClauses = clauseSets.get(Occur.MUST_NOT);
     if (!mustNotClauses.isEmpty()) {
@@ -427,7 +435,6 @@ public class BooleanQuery extends Query implements Iterable<BooleanClause> {
         return builder.build();
       }
     }
-
     // Rewrite queries whose single scoring clause is a MUST clause on a
     // MatchAllDocsQuery to a ConstantScoreQuery
     {
diff --git a/lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery.java b/lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery.java
index e1922c8a67c..d76f9a59518 100644
--- a/lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery.java
+++ b/lucene/core/src/test/org/apache/lucene/search/TestBooleanQuery.java
@@ -149,6 +149,28 @@ public class TestBooleanQuery extends LuceneTestCase {
     QueryUtils.checkEqual(bq1, bq2);
   }
 
+  public void testMatchNoDocsOnFilterOrMustClauses() throws Exception{
+    Directory dir = newDirectory();
+    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);
+    IndexReader reader = iw.getReader();
+    Query query = new BooleanQuery.Builder()
+        .setMinimumNumberShouldMatch(random().nextInt(2))
+        .add(new TermQuery(new Term("foo", "bar")), Occur.FILTER)
+        .add(new MatchNoDocsQuery(),Occur.FILTER)
+        .build()
+        .rewrite(reader);
+    QueryUtils.checkEqual(query, new MatchNoDocsQuery());
+    query = new BooleanQuery.Builder()
+        .setMinimumNumberShouldMatch(random().nextInt(2))
+        .add(new TermQuery(new Term("foo", "bar")), Occur.MUST)
+        .add(new MatchNoDocsQuery(),Occur.MUST)
+        .build()
+        .rewrite(reader);
+    iw.close();
+    reader.close();
+    dir.close();
+    QueryUtils.checkEqual(query, new MatchNoDocsQuery());
+  }
   public void testEqualityOnDuplicateMustNotClauses() {
     BooleanQuery bq1 = new BooleanQuery.Builder()
       .setMinimumNumberShouldMatch(random().nextInt(2))
-- 
2.17.1

