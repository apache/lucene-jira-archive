Index: src/test/org/apache/lucene/index/TestIndexReaderClone.java
===================================================================
--- src/test/org/apache/lucene/index/TestIndexReaderClone.java	(revision 776877)
+++ src/test/org/apache/lucene/index/TestIndexReaderClone.java	(working copy)
@@ -397,6 +397,44 @@
     dir1.close();
   }
 
+  // LUCENE-1648
+  public void testCloneWithDeletes() throws Throwable {
+    final Directory dir1 = new MockRAMDirectory();
+    TestIndexReaderReopen.createIndex(dir1, false);
+    SegmentReader origSegmentReader = (SegmentReader) IndexReader.open(dir1);
+    origSegmentReader.deleteDocument(1);
+
+    SegmentReader clonedSegmentReader = (SegmentReader) origSegmentReader.clone();
+    origSegmentReader.close();
+    clonedSegmentReader.close();
+
+    SegmentReader r = (SegmentReader) IndexReader.open(dir1);
+    assertTrue(r.isDeleted(1));
+    r.close();
+    dir1.close();
+  }
+
+  // LUCENE-1648
+  public void testCloneWithSetNorm() throws Throwable {
+    final Directory dir1 = new MockRAMDirectory();
+    TestIndexReaderReopen.createIndex(dir1, false);
+    SegmentReader orig = (SegmentReader) IndexReader.open(dir1);
+    orig.setNorm(1, "field1", 17.0f);
+    final byte encoded = Similarity.encodeNorm(17.0f);
+    assertEquals(encoded, orig.norms("field1")[1]);
+
+    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to
+    // the original segmentreader
+    SegmentReader clonedSegmentReader = (SegmentReader) orig.clone();
+    orig.close();
+    clonedSegmentReader.close();
+
+    SegmentReader r = (SegmentReader) IndexReader.open(dir1);
+    assertEquals(encoded, r.norms("field1")[1]);
+    r.close();
+    dir1.close();
+  }
+
   private void assertDocDeleted(SegmentReader reader, SegmentReader reader2,
       int doc) {
     assertEquals(reader.isDeleted(doc), reader2.isDeleted(doc));
Index: src/java/org/apache/lucene/index/DirectoryIndexReader.java
===================================================================
--- src/java/org/apache/lucene/index/DirectoryIndexReader.java	(revision 776877)
+++ src/java/org/apache/lucene/index/DirectoryIndexReader.java	(working copy)
@@ -330,7 +330,9 @@
   /** Returns the directory this index resides in.
    */
   public Directory directory() {
-    ensureOpen();
+    // Don't ensureOpen here -- in certain cases, when a
+    // cloned/reopened reader needs to commit, it may call
+    // this method on the closed original reader
     return directory;
   }
 
Index: src/java/org/apache/lucene/index/SegmentReader.java
===================================================================
--- src/java/org/apache/lucene/index/SegmentReader.java	(revision 776877)
+++ src/java/org/apache/lucene/index/SegmentReader.java	(working copy)
@@ -691,6 +691,15 @@
       clone.termVectorsReaderOrig = termVectorsReaderOrig;
       clone.fieldsReaderOrig = fieldsReaderOrig;
       
+      if (!openReadOnly && hasChanges) {
+        // My pending changes transfer to the new reader
+        clone.pendingDeleteCount = pendingDeleteCount;
+        clone.deletedDocsDirty = deletedDocsDirty;
+        clone.normsDirty = normsDirty;
+        clone.hasChanges = hasChanges;
+        hasChanges = false;
+      }
+      
       if (doClone) {
         if (deletedDocs != null) {
           deletedDocsRef.incRef();
