Index: src/test/org/apache/lucene/search/TestBooleanMinShouldMatch.java
===================================================================
--- src/test/org/apache/lucene/search/TestBooleanMinShouldMatch.java	(revision 832972)
+++ src/test/org/apache/lucene/search/TestBooleanMinShouldMatch.java	Thu Nov 26 09:51:00 EST 2009
@@ -331,10 +331,10 @@
         // will not normalize scores.
         TopDocs top1 = s.search(q1,null,100);
         TopDocs top2 = s.search(q2,null,100);
-
+        if (i < 100) {
-        QueryUtils.check(q1,s);
-        QueryUtils.check(q2,s);
+          QueryUtils.check(q1,s);
+          QueryUtils.check(q2,s);
-
+        }
         // The constrained query
         // should be a superset to the unconstrained query.
         if (top2.totalHits > top1.totalHits) {
Index: src/test/org/apache/lucene/search/function/TestCustomScoreQuery.java
===================================================================
--- src/test/org/apache/lucene/search/function/TestCustomScoreQuery.java	(revision 832972)
+++ src/test/org/apache/lucene/search/function/TestCustomScoreQuery.java	Thu Nov 26 09:59:12 EST 2009
@@ -206,7 +206,13 @@
     assertEquals("queries should have same #hits",h1.size(),h3CustomMul.size());
     assertEquals("queries should have same #hits",h1.size(),h4CustomAdd.size());
     assertEquals("queries should have same #hits",h1.size(),h5CustomMulAdd.size());
-    
+
+    QueryUtils.check(q1,s);
+    QueryUtils.check(q2,s);
+    QueryUtils.check(q3,s);
+    QueryUtils.check(q4,s);
+    QueryUtils.check(q5,s);
+
     // verify scores ratios
     for (Iterator it = h1.keySet().iterator(); it.hasNext();) {
       Integer x = (Integer) it.next();
@@ -240,7 +246,6 @@
   }
 
   private void logResult(String msg, IndexSearcher s, Query q, int doc, float score1) throws IOException {
-    QueryUtils.check(q,s);
     log(msg+" "+score1);
     log("Explain by: "+q);
     log(s.explain(q,doc));
