Index: solr/common-build.xml
===================================================================
--- solr/common-build.xml	(revision 1140000)
+++ solr/common-build.xml	(working copy)
@@ -196,10 +196,11 @@
     <pathelement location="${common-solr.dir}/../lucene/build/contrib/highlighter/classes/java" />
     <pathelement location="${common-solr.dir}/../lucene/build/contrib/memory/classes/java" />
     <pathelement location="${common-solr.dir}/../lucene/build/contrib/misc/classes/java" />
-    <pathelement location="${common-solr.dir}/../lucene/build/contrib/queries/classes/java" />
+    <pathelement location="${common-solr.dir}/../lucene/build/contrib/queries-contrib/classes/java" />
     <pathelement location="${common-solr.dir}/../lucene/build/contrib/spatial/classes/java" />
     <pathelement location="${common-solr.dir}/../modules/grouping/build/classes/java" />
     <pathelement location="${common-solr.dir}/../modules/common/build/classes/java" />
+    <pathelement location="${common-solr.dir}/../modules/queries/build/classes/java" />
   </path>
 
   <target name="prep-lucene-jars">
@@ -246,8 +247,8 @@
       <fileset dir="../lucene/build/contrib/misc">
         <include name="lucene-misc-${version}.jar" />
       </fileset>
-      <fileset dir="../lucene/build/contrib/queries">
-        <include name="lucene-queries-${version}.jar" />
+      <fileset dir="../lucene/build/contrib/queries-contrib">
+        <include name="lucene-queries-contrib-${version}.jar" />
       </fileset>
       <fileset dir="../lucene/build/contrib/spatial">
         <include name="lucene-spatial-${version}.jar" />
@@ -258,6 +259,9 @@
       <fileset dir="../modules/common/build">
         <include name="lucene-common-module-${version}.jar" />
       </fileset>
+      <fileset dir="../modules/queries/build">
+        <include name="lucene-queries-${version}.jar" />
+      </fileset>
       </copy>
   </target>  
   
@@ -274,6 +278,7 @@
       <fileset dir="../lucene/contrib/spatial" includes="build.xml"/>
       <fileset dir="../modules/grouping" includes="build.xml"/>
       <fileset dir="../modules/common" includes="build.xml"/>
+      <fileset dir="../modules/queries" includes="build.xml"/>
     </subant>
   </target>
    
Index: solr/src/test/org/apache/solr/core/DummyValueSourceParser.java
===================================================================
--- solr/src/test/org/apache/solr/core/DummyValueSourceParser.java	(revision 1140000)
+++ solr/src/test/org/apache/solr/core/DummyValueSourceParser.java	(working copy)
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.search.FunctionQParser;
 import org.apache.solr.search.ValueSourceParser;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.SimpleFloatFunction;
-import org.apache.solr.search.function.ValueSource;
 
 
 /**
Index: solr/src/test/org/apache/solr/schema/PolyFieldTest.java
===================================================================
--- solr/src/test/org/apache/solr/schema/PolyFieldTest.java	(revision 1140000)
+++ solr/src/test/org/apache/solr/schema/PolyFieldTest.java	(working copy)
@@ -17,13 +17,13 @@
  */
 
 import org.apache.lucene.document.Fieldable;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.BooleanClause;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.Query;
 import org.apache.solr.SolrTestCaseJ4;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.common.SolrException;
-import org.apache.solr.search.function.ValueSource;
 import org.junit.BeforeClass;
 import org.junit.Test;
 
Index: solr/src/test/org/apache/solr/search/function/NvlValueSourceParser.java
===================================================================
--- solr/src/test/org/apache/solr/search/function/NvlValueSourceParser.java	(revision 1140000)
+++ solr/src/test/org/apache/solr/search/function/NvlValueSourceParser.java	(working copy)
@@ -17,6 +17,8 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.search.FunctionQParser;
Index: solr/src/test/org/apache/solr/search/TestIndexSearcher.java
===================================================================
--- solr/src/test/org/apache/solr/search/TestIndexSearcher.java	(revision 1140000)
+++ solr/src/test/org/apache/solr/search/TestIndexSearcher.java	(working copy)
@@ -18,12 +18,12 @@
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.IndexReader.ReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.util.ReaderUtil;
 import org.apache.solr.SolrTestCaseJ4;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.schema.SchemaField;
-import org.apache.solr.search.function.ValueSource;
-import org.apache.solr.search.function.DocValues;
 import org.junit.BeforeClass;
 
 import java.util.Map;
Index: solr/src/java/org/apache/solr/schema/BoolField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/BoolField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/BoolField.java	(working copy)
@@ -20,6 +20,8 @@
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueBool;
 import org.apache.lucene.index.IndexReader;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.FieldCache;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.util.BytesRef;
Index: solr/src/java/org/apache/solr/schema/TrieDateField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/TrieDateField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/TrieDateField.java	(working copy)
@@ -17,7 +17,7 @@
 
 package org.apache.solr.schema;
 
-import org.apache.solr.search.function.ValueSource;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.solr.search.QParser;
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.lucene.document.Fieldable;
Index: solr/src/java/org/apache/solr/schema/BCDIntField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/BCDIntField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/BCDIntField.java	(working copy)
@@ -17,9 +17,9 @@
 
 package org.apache.solr.schema;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.lucene.document.Fieldable;
 import org.apache.solr.util.BCDUtils;
 import org.apache.solr.response.TextResponseWriter;
Index: solr/src/java/org/apache/solr/schema/TrieField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/TrieField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/TrieField.java	(working copy)
@@ -21,6 +21,7 @@
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.NumericField;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.*;
 import org.apache.lucene.search.cache.CachedArrayCreator;
 import org.apache.lucene.search.cache.DoubleValuesCreator;
Index: solr/src/java/org/apache/solr/schema/SortableDoubleField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/SortableDoubleField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/SortableDoubleField.java	(working copy)
@@ -19,13 +19,13 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueDouble;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.CharsRef;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.FieldCacheSource;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.StringIndexDocValues;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
Index: solr/src/java/org/apache/solr/schema/StrField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/StrField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/StrField.java	(working copy)
@@ -17,11 +17,11 @@
 
 package org.apache.solr.schema;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.util.BytesRef;
 import org.apache.solr.response.TextResponseWriter;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.QParser;
 
 import java.util.Map;
Index: solr/src/java/org/apache/solr/schema/DoubleField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/DoubleField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/DoubleField.java	(working copy)
@@ -18,13 +18,13 @@
 package org.apache.solr.schema;
 
 import org.apache.lucene.document.Fieldable;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.cache.CachedArrayCreator;
 import org.apache.lucene.search.cache.DoubleValuesCreator;
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
 import org.apache.solr.search.function.DoubleFieldSource;
-import org.apache.solr.search.function.ValueSource;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/schema/DateField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/DateField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/DateField.java	(working copy)
@@ -19,6 +19,8 @@
 
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.TermRangeQuery;
Index: solr/src/java/org/apache/solr/schema/ExternalFileField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/ExternalFileField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/ExternalFileField.java	(working copy)
@@ -16,9 +16,9 @@
  */
 package org.apache.solr.schema;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.document.Fieldable;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.FileFloatSource;
 import org.apache.solr.search.QParser;
 import org.apache.solr.response.TextResponseWriter;
Index: solr/src/java/org/apache/solr/schema/PointType.java
===================================================================
--- solr/src/java/org/apache/solr/schema/PointType.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/PointType.java	(working copy)
@@ -19,6 +19,7 @@
 
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.Fieldable;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.BooleanClause;
 import org.apache.lucene.search.BooleanQuery;
 import org.apache.lucene.search.Query;
@@ -32,7 +33,6 @@
 import org.apache.solr.search.QParser;
 import org.apache.solr.search.SpatialOptions;
 import org.apache.solr.search.function.VectorValueSource;
-import org.apache.solr.search.function.ValueSource;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/schema/LatLonType.java
===================================================================
--- solr/src/java/org/apache/solr/schema/LatLonType.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/LatLonType.java	(working copy)
@@ -20,6 +20,8 @@
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.*;
 import org.apache.lucene.spatial.DistanceUtils;
 import org.apache.lucene.spatial.tier.InvalidGeoException;
@@ -28,8 +30,6 @@
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
 import org.apache.solr.search.SpatialOptions;
-import org.apache.solr.search.function.DocValues;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.VectorValueSource;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/schema/RandomSortField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/RandomSortField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/RandomSortField.java	(working copy)
@@ -23,13 +23,13 @@
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.*;
 import org.apache.lucene.util.ReaderUtil;
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.IntDocValues;
-import org.apache.solr.search.function.ValueSource;
 
 /**
  * Utility Field used for random sorting.  It should not be passed a value.
Index: solr/src/java/org/apache/solr/schema/SortableLongField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/SortableLongField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/SortableLongField.java	(working copy)
@@ -19,13 +19,13 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueLong;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.CharsRef;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.FieldCacheSource;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.StringIndexDocValues;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
Index: solr/src/java/org/apache/solr/schema/ShortField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/ShortField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/ShortField.java	(working copy)
@@ -17,13 +17,13 @@
  */
 
 import org.apache.lucene.document.Fieldable;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.cache.CachedArrayCreator;
 import org.apache.lucene.search.cache.ShortValuesCreator;
 
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.ShortFieldSource;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/schema/LongField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/LongField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/LongField.java	(working copy)
@@ -18,12 +18,12 @@
 package org.apache.solr.schema;
 
 import org.apache.lucene.document.Fieldable;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.cache.CachedArrayCreator;
 import org.apache.lucene.search.cache.LongValuesCreator;
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.LongFieldSource;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/schema/SortableFloatField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/SortableFloatField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/SortableFloatField.java	(working copy)
@@ -19,13 +19,13 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueFloat;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.CharsRef;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.FieldCacheSource;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.StringIndexDocValues;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
Index: solr/src/java/org/apache/solr/schema/ByteField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/ByteField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/ByteField.java	(working copy)
@@ -17,13 +17,13 @@
  */
 
 import org.apache.lucene.document.Fieldable;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.cache.ByteValuesCreator;
 import org.apache.lucene.search.cache.CachedArrayCreator;
 
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.ByteFieldSource;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/schema/FloatField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/FloatField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/FloatField.java	(working copy)
@@ -17,11 +17,11 @@
 
 package org.apache.solr.schema;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.cache.CachedArrayCreator;
 import org.apache.lucene.search.cache.FloatValuesCreator;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.FloatFieldSource;
 import org.apache.lucene.document.Fieldable;
 import org.apache.solr.response.TextResponseWriter;
Index: solr/src/java/org/apache/solr/schema/GeoHashField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/GeoHashField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/GeoHashField.java	(working copy)
@@ -18,6 +18,7 @@
 package org.apache.solr.schema;
 
 import org.apache.lucene.document.Fieldable;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.spatial.geohash.GeoHashUtils;
@@ -29,7 +30,6 @@
 import org.apache.solr.search.SolrConstantScoreQuery;
 import org.apache.solr.search.SpatialOptions;
 import org.apache.solr.search.function.LiteralValueSource;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.ValueSourceRangeFilter;
 import org.apache.solr.search.function.distance.GeohashHaversineFunction;
 
Index: solr/src/java/org/apache/solr/schema/FieldType.java
===================================================================
--- solr/src/java/org/apache/solr/schema/FieldType.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/FieldType.java	(working copy)
@@ -24,6 +24,7 @@
 import org.apache.lucene.document.Field;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.Term;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.Similarity;
 import org.apache.lucene.search.SortField;
@@ -38,7 +39,6 @@
 import org.apache.solr.response.TextResponseWriter;
 import org.apache.solr.search.QParser;
 import org.apache.solr.search.Sorting;
-import org.apache.solr.search.function.ValueSource;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
Index: solr/src/java/org/apache/solr/schema/SortableIntField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/SortableIntField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/SortableIntField.java	(working copy)
@@ -19,13 +19,13 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueInt;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.CharsRef;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.FieldCacheSource;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.StringIndexDocValues;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
Index: solr/src/java/org/apache/solr/schema/StrFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/schema/StrFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/StrFieldSource.java	(working copy)
@@ -18,7 +18,7 @@
 package org.apache.solr.schema;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
-import org.apache.solr.search.function.DocValues;
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.solr.search.function.FieldCacheSource;
 import org.apache.solr.search.function.StringIndexDocValues;
 
Index: solr/src/java/org/apache/solr/schema/IntField.java
===================================================================
--- solr/src/java/org/apache/solr/schema/IntField.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/schema/IntField.java	(working copy)
@@ -17,11 +17,11 @@
 
 package org.apache.solr.schema;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.SortField;
 import org.apache.lucene.search.cache.CachedArrayCreator;
 import org.apache.lucene.search.cache.IntValuesCreator;
 import org.apache.solr.search.QParser;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.search.function.IntFieldSource;
 import org.apache.lucene.document.Fieldable;
 import org.apache.solr.response.TextResponseWriter;
Index: solr/src/java/org/apache/solr/search/BoostQParserPlugin.java
===================================================================
--- solr/src/java/org/apache/solr/search/BoostQParserPlugin.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/BoostQParserPlugin.java	(working copy)
@@ -16,15 +16,15 @@
  */
 package org.apache.solr.search;
 
+import org.apache.lucene.queries.function.FunctionQuery;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.Query;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.search.function.BoostedQuery;
-import org.apache.solr.search.function.FunctionQuery;
 import org.apache.solr.search.function.QueryValueSource;
-import org.apache.solr.search.function.ValueSource;
 
 /**
  * Create a boosted query from the input value.  The main value is the query to be boosted.
Index: solr/src/java/org/apache/solr/search/function/DoubleConstValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/DoubleConstValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/DoubleConstValueSource.java	(working copy)
@@ -18,6 +18,7 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/DoubleFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/DoubleFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/DoubleFieldSource.java	(working copy)
@@ -21,6 +21,8 @@
 import org.apache.lucene.common.mutable.MutableValueDouble;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSourceScorer;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.search.cache.DoubleValuesCreator;
 import org.apache.lucene.search.cache.CachedArray.DoubleValues;
Index: solr/src/java/org/apache/solr/search/function/IntDocValues.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/IntDocValues.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/IntDocValues.java	(working copy)
@@ -2,6 +2,8 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueInt;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 
 
 public abstract class IntDocValues extends DocValues {
Index: solr/src/java/org/apache/solr/search/function/MultiFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/MultiFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/MultiFunction.java	(working copy)
@@ -17,6 +17,8 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.util.BytesRef;
 
Index: solr/src/java/org/apache/solr/search/function/BoolDocValues.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/BoolDocValues.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/BoolDocValues.java	(working copy)
@@ -2,6 +2,8 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueBool;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 
 
 public abstract class BoolDocValues extends DocValues {
Index: solr/src/java/org/apache/solr/search/function/DocFreqValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/DocFreqValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/DocFreqValueSource.java	(working copy)
@@ -19,6 +19,8 @@
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.Term;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.util.BytesRef;
 import org.apache.solr.search.*;
Index: solr/src/java/org/apache/solr/search/function/DefFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/DefFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/DefFunction.java	(working copy)
@@ -17,6 +17,8 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.util.BytesRef;
 
Index: solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/LinearFloatFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
@@ -27,7 +29,7 @@
  * <code>LinearFloatFunction</code> implements a linear function over
  * another {@link ValueSource}.
  * <br>
- * Normally Used as an argument to a {@link FunctionQuery}
+ * Normally Used as an argument to a {@link org.apache.lucene.queries.function.FunctionQuery}
  *
  *
  */
Index: solr/src/java/org/apache/solr/search/function/MultiValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/MultiValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/MultiValueSource.java	(working copy)
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-import org.apache.solr.search.function.ValueSource;
+import org.apache.lucene.queries.function.ValueSource;
 
 
 /**
Index: solr/src/java/org/apache/solr/search/function/LiteralValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/LiteralValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/LiteralValueSource.java	(working copy)
@@ -17,6 +17,8 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.util.BytesRef;
 
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/SimpleBoolFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/SimpleBoolFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/SimpleBoolFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/function/ProductFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ProductFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ProductFloatFunction.java	(working copy)
@@ -17,6 +17,9 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
+
 /**
  * <code>ProductFloatFunction</code> returns the product of it's components.
  */
Index: solr/src/java/org/apache/solr/search/function/DivFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/DivFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/DivFloatFunction.java	(working copy)
@@ -17,6 +17,9 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
+
 /** Function to divide "a" by "b"
  */
 public class DivFloatFunction extends DualFloatFunction {
Index: solr/src/java/org/apache/solr/search/function/StrDocValues.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/StrDocValues.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/StrDocValues.java	(working copy)
@@ -2,6 +2,8 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueStr;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.util.BytesRef;
 
 public abstract class StrDocValues extends DocValues {
Index: solr/src/java/org/apache/solr/search/function/DoubleDocValues.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/DoubleDocValues.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/DoubleDocValues.java	(working copy)
@@ -2,6 +2,8 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueDouble;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 
 public abstract class DoubleDocValues extends DocValues {
   protected final ValueSource vs;
Index: solr/src/java/org/apache/solr/search/function/VectorValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/VectorValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/VectorValueSource.java	(working copy)
@@ -17,10 +17,10 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.solr.search.function.MultiValueSource;
-import org.apache.solr.search.function.DocValues;
-import org.apache.solr.search.function.ValueSource;
 
 import java.io.IOException;
 import java.util.List;
@@ -29,7 +29,7 @@
 
 /**
  * Converts individual ValueSource instances to leverage the DocValues *Val functions that work with multiple values,
- * i.e. {@link org.apache.solr.search.function.DocValues#doubleVal(int, double[])}
+ * i.e. {@link org.apache.lucene.queries.function.DocValues#doubleVal(int, double[])}
  */
 //Not crazy about the name, but...
 public class VectorValueSource extends MultiValueSource {
Index: solr/src/java/org/apache/solr/search/function/QueryValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/QueryValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/QueryValueSource.java	(working copy)
@@ -21,6 +21,8 @@
 import org.apache.lucene.common.mutable.MutableValueFloat;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.*;
 import org.apache.lucene.search.Weight.ScorerContext;
 import org.apache.lucene.util.ReaderUtil;
Index: solr/src/java/org/apache/solr/search/function/ScaleFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ScaleFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ScaleFloatFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.util.ReaderUtil;
 
Index: solr/src/java/org/apache/solr/search/function/LongFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/LongFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/LongFieldSource.java	(working copy)
@@ -21,6 +21,8 @@
 import org.apache.lucene.common.mutable.MutableValueLong;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSourceScorer;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.search.cache.LongValuesCreator;
 import org.apache.lucene.search.cache.CachedArray.LongValues;
Index: solr/src/java/org/apache/solr/search/function/ShortFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ShortFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ShortFieldSource.java	(working copy)
@@ -16,6 +16,7 @@
  * limitations under the License.
  */
 
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.search.cache.ShortValuesCreator;
 import org.apache.lucene.search.cache.CachedArray.ShortValues;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
Index: solr/src/java/org/apache/solr/search/function/DocValues.java (deleted)
===================================================================
Index: solr/src/java/org/apache/solr/search/function/FileFloatSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/FileFloatSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/FileFloatSource.java	(working copy)
@@ -33,6 +33,8 @@
 import org.apache.lucene.index.TermsEnum;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.IndexReader.ReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.ReaderUtil;
 import org.apache.solr.core.SolrCore;
Index: solr/src/java/org/apache/solr/search/function/NumDocsValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/NumDocsValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/NumDocsValueSource.java	(working copy)
@@ -17,6 +17,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.util.ReaderUtil;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/function/RangeMapFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/RangeMapFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/RangeMapFloatFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
@@ -25,9 +27,9 @@
 
 /**
  * <code>LinearFloatFunction</code> implements a linear function over
- * another {@link org.apache.solr.search.function.ValueSource}.
+ * another {@link org.apache.lucene.queries.function.ValueSource}.
  * <br>
- * Normally Used as an argument to a {@link org.apache.solr.search.function.FunctionQuery}
+ * Normally Used as an argument to a {@link org.apache.lucene.queries.function.FunctionQuery}
  *
  *
  */
Index: solr/src/java/org/apache/solr/search/function/ByteFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ByteFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ByteFieldSource.java	(working copy)
@@ -17,6 +17,7 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.search.cache.ByteValuesCreator;
 import org.apache.lucene.search.cache.CachedArray.ByteValues;
 
Index: solr/src/java/org/apache/solr/search/function/MaxDocValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/MaxDocValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/MaxDocValueSource.java	(working copy)
@@ -17,6 +17,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/function/FloatFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/FloatFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/FloatFieldSource.java	(working copy)
@@ -23,6 +23,7 @@
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueFloat;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.search.cache.FloatValuesCreator;
 import org.apache.lucene.search.cache.CachedArray.FloatValues;
Index: solr/src/java/org/apache/solr/search/function/ValueSource.java (deleted)
===================================================================
Index: solr/src/java/org/apache/solr/search/function/SumFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/SumFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/SumFloatFunction.java	(working copy)
@@ -17,6 +17,9 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
+
 /**
  * <code>SumFloatFunction</code> returns the sum of it's components.
  */
Index: solr/src/java/org/apache/solr/search/function/BoolFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/BoolFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/BoolFunction.java	(working copy)
@@ -17,7 +17,9 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.ValueSource;
 
+
 public abstract class BoolFunction extends ValueSource {
   // TODO: placeholder to return type, among other common future functionality
 }
Index: solr/src/java/org/apache/solr/search/function/PowFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/PowFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/PowFloatFunction.java	(working copy)
@@ -17,6 +17,9 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
+
 /** Function to raise the base "a" to the power "b"
  */
 public class PowFloatFunction extends DualFloatFunction {
Index: solr/src/java/org/apache/solr/search/function/TermFreqValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/TermFreqValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/TermFreqValueSource.java	(working copy)
@@ -19,6 +19,7 @@
 
 import org.apache.lucene.index.*;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.util.BytesRef;
 import org.apache.solr.common.SolrException;
Index: solr/src/java/org/apache/solr/search/function/IfFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/IfFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/IfFunction.java	(working copy)
@@ -19,6 +19,8 @@
 
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.Explanation;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.util.BytesRef;
Index: solr/src/java/org/apache/solr/search/function/ConstValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ConstValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ConstValueSource.java	(working copy)
@@ -18,6 +18,7 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/StringIndexDocValues.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/StringIndexDocValues.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/StringIndexDocValues.java	(working copy)
@@ -19,6 +19,9 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueStr;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
+import org.apache.lucene.queries.function.ValueSourceScorer;
 import org.apache.lucene.search.FieldCache;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
Index: solr/src/java/org/apache/solr/search/function/LongDocValues.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/LongDocValues.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/LongDocValues.java	(working copy)
@@ -2,6 +2,8 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueLong;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 
 
 public abstract class LongDocValues extends DocValues {
Index: solr/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java	(working copy)
@@ -19,6 +19,8 @@
 
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.FieldCache;
 import org.apache.lucene.util.ReaderUtil;
 
Index: solr/src/java/org/apache/solr/search/function/OrdFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/OrdFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/OrdFieldSource.java	(working copy)
@@ -21,6 +21,8 @@
 import org.apache.lucene.common.mutable.MutableValueInt;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.FieldCache;
 import org.apache.lucene.util.ReaderUtil;
 
Index: solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/distance/HaversineConstFunction.java	(working copy)
@@ -17,6 +17,8 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.spatial.DistanceUtils;
Index: solr/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/distance/VectorDistanceFunction.java	(working copy)
@@ -17,13 +17,13 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.spatial.DistanceUtils;
 import org.apache.solr.common.SolrException;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.DoubleDocValues;
 import org.apache.solr.search.function.MultiValueSource;
-import org.apache.solr.search.function.ValueSource;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/distance/GeohashFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/distance/GeohashFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/distance/GeohashFunction.java	(working copy)
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-import org.apache.solr.search.function.ValueSource;
-import org.apache.solr.search.function.DocValues;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.spatial.geohash.GeoHashUtils;
 
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction.java	(working copy)
@@ -16,8 +16,8 @@
  * limitations under the License.
  */
 
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.spatial.DistanceUtils;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.MultiValueSource;
 
 
Index: solr/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/distance/StringDistanceFunction.java	(working copy)
@@ -18,10 +18,10 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.spell.StringDistance;
-import org.apache.solr.search.function.DocValues;
 import org.apache.solr.search.function.FloatDocValues;
-import org.apache.solr.search.function.ValueSource;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/distance/GeohashHaversineFunction.java	(working copy)
@@ -17,10 +17,10 @@
  */
 
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.spatial.DistanceUtils;
 import org.apache.solr.search.function.DoubleDocValues;
-import org.apache.solr.search.function.ValueSource;
-import org.apache.solr.search.function.DocValues;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.spatial.geohash.GeoHashUtils;
Index: solr/src/java/org/apache/solr/search/function/distance/HaversineFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/distance/HaversineFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/distance/HaversineFunction.java	(working copy)
@@ -17,13 +17,13 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.spatial.DistanceUtils;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.search.function.DoubleDocValues;
 import org.apache.solr.search.function.MultiValueSource;
-import org.apache.solr.search.function.DocValues;
-import org.apache.solr.search.function.ValueSource;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/FunctionQuery.java (deleted)
===================================================================
Index: solr/src/java/org/apache/solr/search/function/FloatDocValues.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/FloatDocValues.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/FloatDocValues.java	(working copy)
@@ -2,6 +2,8 @@
 
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueFloat;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 
 public abstract class FloatDocValues extends DocValues {
   protected final ValueSource vs;
Index: solr/src/java/org/apache/solr/search/function/MultiBoolFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/MultiBoolFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/MultiBoolFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/function/IntFieldSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/IntFieldSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/IntFieldSource.java	(working copy)
@@ -21,6 +21,8 @@
 import org.apache.lucene.common.mutable.MutableValueInt;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSourceScorer;
 import org.apache.lucene.util.Bits;
 import org.apache.lucene.search.cache.IntValuesCreator;
 import org.apache.lucene.search.cache.CachedArray.IntValues;
Index: solr/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ReciprocalFloatFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
@@ -25,7 +27,7 @@
 
 /**
  * <code>ReciprocalFloatFunction</code> implements a reciprocal function f(x) = a/(mx+b), based on
- * the float value of a field or function as exported by {@link org.apache.solr.search.function.ValueSource}.
+ * the float value of a field or function as exported by {@link org.apache.lucene.queries.function.ValueSource}.
  * <br>
  *
  * When a and b are equal, and x>=0, this function has a maximum value of 1 that drops as x increases.
@@ -37,7 +39,7 @@
  * a date a year in the past will get a multiplier of about 1/(1+1) or 1/2,
  * and date two years old will yield 1/(2+1) or 1/3.
  *
- * @see FunctionQuery
+ * @see org.apache.lucene.queries.function.FunctionQuery
  *
  *
  */
Index: solr/src/java/org/apache/solr/search/function/IDFValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/IDFValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/IDFValueSource.java	(working copy)
@@ -19,6 +19,7 @@
 
 import org.apache.lucene.index.*;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Similarity;
 import org.apache.lucene.util.BytesRef;
Index: solr/src/java/org/apache/solr/search/function/ConstNumberSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ConstNumberSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ConstNumberSource.java	(working copy)
@@ -17,6 +17,8 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.ValueSource;
+
 /**
  * <code>ConstNumberSource</code> is the base class for all constant numbers
  */
Index: solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/ValueSourceRangeFilter.java	(working copy)
@@ -17,6 +17,7 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.DocIdSet;
 import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.search.IndexSearcher;
Index: solr/src/java/org/apache/solr/search/function/JoinDocFreqValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/JoinDocFreqValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/JoinDocFreqValueSource.java	(working copy)
@@ -22,6 +22,7 @@
 
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.search.FieldCache.DocTerms;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.ReaderUtil;
@@ -49,7 +50,7 @@
   }
 
   @Override
-  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException 
+  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException
   {
     final DocTerms terms = cache.getTerms(readerContext.reader, field, true );
     final IndexReader top = ReaderUtil.getTopLevelContext(readerContext).reader;
Index: solr/src/java/org/apache/solr/search/function/DualFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/DualFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/DualFloatFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/function/BoostedQuery.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/BoostedQuery.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/BoostedQuery.java	(working copy)
@@ -17,6 +17,8 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.*;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
Index: solr/src/java/org/apache/solr/search/function/SimpleFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/SimpleFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/SimpleFloatFunction.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 
 import java.io.IOException;
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/MultiFloatFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/MultiFloatFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/MultiFloatFunction.java	(working copy)
@@ -17,6 +17,8 @@
  */
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.util.Map;
Index: solr/src/java/org/apache/solr/search/function/SingleFunction.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/SingleFunction.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/SingleFunction.java	(working copy)
@@ -17,6 +17,7 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/function/TFValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/TFValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/TFValueSource.java	(working copy)
@@ -19,6 +19,7 @@
 
 import org.apache.lucene.index.*;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
 import org.apache.lucene.search.DocIdSetIterator;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Similarity;
Index: solr/src/java/org/apache/solr/search/function/FieldCacheSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/FieldCacheSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/FieldCacheSource.java	(working copy)
@@ -17,6 +17,7 @@
 
 package org.apache.solr.search.function;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.FieldCache;
 
 /**
Index: solr/src/java/org/apache/solr/search/function/NormValueSource.java
===================================================================
--- solr/src/java/org/apache/solr/search/function/NormValueSource.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/function/NormValueSource.java	(working copy)
@@ -18,6 +18,8 @@
 package org.apache.solr.search.function;
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.IndexSearcher;
 import org.apache.lucene.search.Similarity;
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/ValueSourceParser.java
===================================================================
--- solr/src/java/org/apache/solr/search/ValueSourceParser.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/ValueSourceParser.java	(working copy)
@@ -18,6 +18,8 @@
 
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.index.Term;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.Query;
 import org.apache.lucene.search.IndexSearcher;
Index: solr/src/java/org/apache/solr/search/SolrConstantScoreQuery.java
===================================================================
--- solr/src/java/org/apache/solr/search/SolrConstantScoreQuery.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/SolrConstantScoreQuery.java	(working copy)
@@ -1,9 +1,9 @@
 package org.apache.solr.search;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.search.*;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.common.SolrException;
 
 import java.io.IOException;
Index: solr/src/java/org/apache/solr/search/FunctionRangeQParserPlugin.java
===================================================================
--- solr/src/java/org/apache/solr/search/FunctionRangeQParserPlugin.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/FunctionRangeQParserPlugin.java	(working copy)
@@ -16,6 +16,8 @@
  */
 package org.apache.solr.search;
 
+import org.apache.lucene.queries.function.FunctionQuery;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.Query;
 import org.apache.solr.common.params.SolrParams;
Index: solr/src/java/org/apache/solr/search/FunctionQParser.java
===================================================================
--- solr/src/java/org/apache/solr/search/FunctionQParser.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/FunctionQParser.java	(working copy)
@@ -16,6 +16,8 @@
  */
 package org.apache.solr.search;
 
+import org.apache.lucene.queries.function.FunctionQuery;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.Query;
 import org.apache.solr.common.params.SolrParams;
Index: solr/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java
===================================================================
--- solr/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java	(working copy)
@@ -22,6 +22,8 @@
 
 package org.apache.solr.search;
 
+import org.apache.lucene.queries.function.FunctionQuery;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.queryParser.QueryParser;
 import org.apache.lucene.search.*;
@@ -35,10 +37,8 @@
 import org.apache.solr.schema.FieldType;
 import org.apache.solr.search.QueryUtils;
 import org.apache.solr.search.function.BoostedQuery;
-import org.apache.solr.search.function.FunctionQuery;
 import org.apache.solr.search.function.ProductFloatFunction;
 import org.apache.solr.search.function.QueryValueSource;
-import org.apache.solr.search.function.ValueSource;
 import org.apache.solr.util.SolrPluginUtils;
 import org.apache.solr.analysis.*;
 
Index: solr/src/java/org/apache/solr/search/QueryParsing.java
===================================================================
--- solr/src/java/org/apache/solr/search/QueryParsing.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/QueryParsing.java	(working copy)
@@ -18,6 +18,7 @@
 package org.apache.solr.search;
 
 import org.apache.lucene.index.Term;
+import org.apache.lucene.queries.function.FunctionQuery;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.queryParser.QueryParser.Operator;
 import org.apache.lucene.search.BooleanClause;
@@ -43,7 +44,6 @@
 import org.apache.solr.schema.FieldType;
 import org.apache.solr.schema.IndexSchema;
 import org.apache.solr.schema.SchemaField;
-import org.apache.solr.search.function.FunctionQuery;
 import org.apache.solr.search.function.QueryValueSource;
 import java.io.IOException;
 import java.util.ArrayList;
Index: solr/src/java/org/apache/solr/search/NestedQParserPlugin.java
===================================================================
--- solr/src/java/org/apache/solr/search/NestedQParserPlugin.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/NestedQParserPlugin.java	(working copy)
@@ -16,12 +16,12 @@
  */
 package org.apache.solr.search;
 
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.Query;
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.request.SolrQueryRequest;
-import org.apache.solr.search.function.ValueSource;
 
 /**
  * Create a nested query, with the ability of that query to redefine it's type via
Index: solr/src/java/org/apache/solr/search/ReturnFields.java
===================================================================
--- solr/src/java/org/apache/solr/search/ReturnFields.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/ReturnFields.java	(working copy)
@@ -19,6 +19,8 @@
 import java.util.*;
 
 import org.apache.commons.io.FilenameUtils;
+import org.apache.lucene.queries.function.FunctionQuery;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.Query;
 import org.apache.solr.common.SolrException;
@@ -33,9 +35,7 @@
 import org.apache.solr.response.transform.ScoreAugmenter;
 import org.apache.solr.response.transform.TransformerFactory;
 import org.apache.solr.response.transform.ValueSourceAugmenter;
-import org.apache.solr.search.function.FunctionQuery;
 import org.apache.solr.search.function.QueryValueSource;
-import org.apache.solr.search.function.ValueSource;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
Index: solr/src/java/org/apache/solr/search/Grouping.java
===================================================================
--- solr/src/java/org/apache/solr/search/Grouping.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/search/Grouping.java	(working copy)
@@ -21,6 +21,9 @@
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.document.Fieldable;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.FunctionQuery;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.queryParser.ParseException;
 import org.apache.lucene.search.*;
 import org.apache.lucene.search.grouping.*;
@@ -30,10 +33,7 @@
 import org.apache.solr.common.util.SimpleOrderedMap;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.schema.*;
-import org.apache.solr.search.function.DocValues;
-import org.apache.solr.search.function.FunctionQuery;
 import org.apache.solr.search.function.QueryValueSource;
-import org.apache.solr.search.function.ValueSource;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
Index: solr/src/java/org/apache/solr/response/transform/ValueSourceAugmenter.java
===================================================================
--- solr/src/java/org/apache/solr/response/transform/ValueSourceAugmenter.java	(revision 1140000)
+++ solr/src/java/org/apache/solr/response/transform/ValueSourceAugmenter.java	(working copy)
@@ -20,13 +20,13 @@
 import java.util.Map;
 
 import org.apache.lucene.index.IndexReader;
+import org.apache.lucene.queries.function.DocValues;
+import org.apache.lucene.queries.function.ValueSource;
 import org.apache.lucene.util.ReaderUtil;
 import org.apache.solr.common.SolrDocument;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.search.QParser;
 import org.apache.solr.search.SolrIndexSearcher;
-import org.apache.solr.search.function.DocValues;
-import org.apache.solr.search.function.ValueSource;
 
 /**
  * Add values from a ValueSource (function query etc)
Index: modules/queries/NOTICE.txt
===================================================================
--- modules/queries/NOTICE.txt	(revision 0)
+++ modules/queries/NOTICE.txt	(revision 0)
@@ -0,0 +1,5 @@
+Apache Lucene Queries
+Copyright 2011 The Apache Software Foundation
+
+This product includes software developed by
+The Apache Software Foundation (http://www.apache.org/).
Index: modules/queries/LICENSE.txt
===================================================================
--- modules/queries/LICENSE.txt	(revision 0)
+++ modules/queries/LICENSE.txt	(revision 0)
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
Index: modules/queries/src/java/org/apache/lucene/queries/function/DocValues.java
===================================================================
--- modules/queries/src/java/org/apache/lucene/queries/function/DocValues.java	(revision 0)
+++ modules/queries/src/java/org/apache/lucene/queries/function/DocValues.java	(working copy)
@@ -1,4 +1,6 @@
-/**
+package org.apache.lucene.queries.function;
+
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -15,8 +17,6 @@
  * limitations under the License.
  */
 
-package org.apache.solr.search.function;
-
 import org.apache.lucene.common.mutable.MutableValue;
 import org.apache.lucene.common.mutable.MutableValueFloat;
 import org.apache.lucene.search.*;
Index: modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java
===================================================================
--- modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java	(revision 0)
+++ modules/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java	(working copy)
@@ -1,4 +1,6 @@
-/**
+package org.apache.lucene.queries.function;
+
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -15,8 +17,6 @@
  * limitations under the License.
  */
 
-package org.apache.solr.search.function;
-
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.*;
Index: modules/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java
===================================================================
--- modules/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java	(revision 0)
+++ modules/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java	(revision 0)
@@ -0,0 +1,85 @@
+package org.apache.lucene.queries.function;
+
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.lucene.index.IndexReader;
+import org.apache.lucene.index.MultiFields;
+import org.apache.lucene.search.Scorer;
+import org.apache.lucene.util.Bits;
+
+import java.io.IOException;
+
+public class ValueSourceScorer extends Scorer {
+  protected IndexReader reader;
+  private int doc = -1;
+  protected final int maxDoc;
+  protected final DocValues values;
+  protected boolean checkDeletes;
+  private final Bits delDocs;
+
+  protected ValueSourceScorer(IndexReader reader, DocValues values) {
+    super(null);
+    this.reader = reader;
+    this.maxDoc = reader.maxDoc();
+    this.values = values;
+    setCheckDeletes(true);
+    this.delDocs = MultiFields.getDeletedDocs(reader);
+  }
+
+  public IndexReader getReader() {
+    return reader;
+  }
+
+  public void setCheckDeletes(boolean checkDeletes) {
+    this.checkDeletes = checkDeletes && reader.hasDeletions();
+  }
+
+  public boolean matches(int doc) {
+    return (!checkDeletes || !delDocs.get(doc)) && matchesValue(doc);
+  }
+
+  public boolean matchesValue(int doc) {
+    return true;
+  }
+
+  @Override
+  public int docID() {
+    return doc;
+  }
+
+  @Override
+  public int nextDoc() throws IOException {
+    for (; ;) {
+      doc++;
+      if (doc >= maxDoc) return doc = NO_MORE_DOCS;
+      if (matches(doc)) return doc;
+    }
+  }
+
+  @Override
+  public int advance(int target) throws IOException {
+    // also works fine when target==NO_MORE_DOCS
+    doc = target - 1;
+    return nextDoc();
+  }
+
+  @Override
+  public float score() throws IOException {
+    return values.floatVal(doc);
+  }
+}
Index: modules/queries/src/java/org/apache/lucene/queries/function/ValueSource.java
===================================================================
--- modules/queries/src/java/org/apache/lucene/queries/function/ValueSource.java	(revision 0)
+++ modules/queries/src/java/org/apache/lucene/queries/function/ValueSource.java	(working copy)
@@ -1,4 +1,6 @@
-/**
+package org.apache.lucene.queries.function;
+
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -15,8 +17,6 @@
  * limitations under the License.
  */
 
-package org.apache.solr.search.function;
-
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.IndexReader.AtomicReaderContext;
 import org.apache.lucene.search.FieldComparator;
@@ -33,7 +33,7 @@
 import java.util.Map;
 
 /**
- * Instantiates {@link org.apache.solr.search.function.DocValues} for a particular reader.
+ * Instantiates {@link DocValues} for a particular reader.
  * <br>
  * Often used when creating a {@link FunctionQuery}.
  *
@@ -193,64 +193,4 @@
 }
 
 
-class ValueSourceScorer extends Scorer {
-  protected IndexReader reader;
-  private int doc = -1;
-  protected final int maxDoc;
-  protected final DocValues values;
-  protected boolean checkDeletes;
-  private final Bits delDocs;
 
-  protected ValueSourceScorer(IndexReader reader, DocValues values) {
-    super(null);
-    this.reader = reader;
-    this.maxDoc = reader.maxDoc();
-    this.values = values;
-    setCheckDeletes(true);
-    this.delDocs = MultiFields.getDeletedDocs(reader);
-  }
-
-  public IndexReader getReader() {
-    return reader;
-  }
-
-  public void setCheckDeletes(boolean checkDeletes) {
-    this.checkDeletes = checkDeletes && reader.hasDeletions();
-  }
-
-  public boolean matches(int doc) {
-    return (!checkDeletes || !delDocs.get(doc)) && matchesValue(doc);
-  }
-
-  public boolean matchesValue(int doc) {
-    return true;
-  }
-
-  @Override
-  public int docID() {
-    return doc;
-  }
-
-  @Override
-  public int nextDoc() throws IOException {
-    for (; ;) {
-      doc++;
-      if (doc >= maxDoc) return doc = NO_MORE_DOCS;
-      if (matches(doc)) return doc;
-    }
-  }
-
-  @Override
-  public int advance(int target) throws IOException {
-    // also works fine when target==NO_MORE_DOCS
-    doc = target - 1;
-    return nextDoc();
-  }
-
-  @Override
-  public float score() throws IOException {
-    return values.floatVal(doc);
-  }
-}
-
-
Index: modules/queries/src/java/overview.html
===================================================================
--- modules/queries/src/java/overview.html	(revision 0)
+++ modules/queries/src/java/overview.html	(revision 0)
@@ -0,0 +1,26 @@
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+<html>
+  <head>
+    <title>
+      Queries
+    </title>
+  </head>
+  <body>
+  Queries
+  </body>
+</html>
Index: modules/queries/build.xml
===================================================================
--- modules/queries/build.xml	(revision 0)
+++ modules/queries/build.xml	(revision 0)
@@ -0,0 +1,47 @@
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<project name="queries" default="default">
+  <description>
+    Queries that exist outside of Lucene core
+  </description>
+
+  <property name="build.dir" location="build/"/>
+  <property name="dist.dir" location="dist/"/>
+  <property name="maven.dist.dir" location="../dist/maven"/>
+
+  <import file="../../lucene/contrib/contrib-build.xml"/>
+
+  <module-uptodate name="common-module"
+                   module-src-name="common"
+                   property="common-module.uptodate" classpath.property="common-module.jar"/>
+
+  <path id="classpath">
+    <pathelement path="${common-module.jar}"/>
+    <path refid="base.classpath"/>
+  </path>
+
+  <target name="compile-core" depends="compile-common-module, common.compile-core"/>
+
+  <target name="compile-common-module" unless="common-module.uptodate">
+    <subant target="default">
+      <fileset dir="${common.dir}/../modules/common" includes="build.xml"/>
+    </subant>
+  </target>
+
+  <target name="dist-maven" depends="jar-core,javadocs,contrib-build.dist-maven"/>
+</project>
\ No newline at end of file
Index: modules/build.xml
===================================================================
--- modules/build.xml	(revision 1140000)
+++ modules/build.xml	(working copy)
@@ -25,6 +25,7 @@
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="common" includes="build.xml" />
         <fileset dir="grouping" includes="build.xml" />
+        <fileset dir="queries" includes="build.xml" />
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
@@ -37,6 +38,7 @@
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="common" includes="build.xml" />
         <fileset dir="grouping" includes="build.xml" />
+        <fileset dir="queries" includes="build.xml" />
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
@@ -49,6 +51,7 @@
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="common" includes="build.xml" />
         <fileset dir="grouping" includes="build.xml" />
+        <fileset dir="queries" includes="build.xml" />
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
@@ -61,6 +64,7 @@
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="common" includes="build.xml" />
         <fileset dir="grouping" includes="build.xml" />
+        <fileset dir="queries" includes="build.xml" />
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
@@ -74,6 +78,7 @@
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="common" includes="build.xml" />
         <fileset dir="grouping" includes="build.xml" />
+        <fileset dir="queries" includes="build.xml" />
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
@@ -85,6 +90,7 @@
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="common" includes="build.xml" />
         <fileset dir="grouping" includes="build.xml" />
+        <fileset dir="queries" includes="build.xml" />
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
@@ -98,6 +104,7 @@
         <fileset dir="benchmark" includes="build.xml" />
         <fileset dir="common" includes="build.xml" />
         <fileset dir="grouping" includes="build.xml" />
+        <fileset dir="queries" includes="build.xml" />
         <fileset dir="suggest" includes="build.xml" />
       </subant>
     </sequential>
Index: lucene/contrib/queries/build.xml
===================================================================
--- lucene/contrib/queries/build.xml	(revision 1140000)
+++ lucene/contrib/queries/build.xml	(working copy)
@@ -17,7 +17,7 @@
     limitations under the License.
  -->
 
-<project name="queries" default="default">
+<project name="queries-contrib" default="default">
 
   <description>
     Queries - various query object exotica not in core
Index: lucene/contrib/spatial/build.xml
===================================================================
--- lucene/contrib/spatial/build.xml	(revision 1140000)
+++ lucene/contrib/spatial/build.xml	(working copy)
@@ -25,7 +25,7 @@
 
   <import file="../contrib-build.xml"/>
 
-  <contrib-uptodate name="queries" property="queries.uptodate" classpath.property="queries.jar"/>
+  <contrib-uptodate name="queries-contrib" contrib-src-name="queries" property="queries.uptodate" classpath.property="queries.jar" />
 
   <path id="classpath">
     <pathelement path="${queries.jar}"/>
Index: lucene/contrib/xml-query-parser/build.xml
===================================================================
--- lucene/contrib/xml-query-parser/build.xml	(revision 1140000)
+++ lucene/contrib/xml-query-parser/build.xml	(working copy)
@@ -25,7 +25,7 @@
 
   <import file="../contrib-build.xml"/>
 
-  <contrib-uptodate name="queries" property="queries.uptodate" classpath.property="queries.jar"/>
+  <contrib-uptodate name="queries-contrib" contrib-src-name="queries" property="queries.uptodate" classpath.property="queries.jar"/>
   <property name="lucene.jar" location="${common.dir}/build/lucene-core-${version}.jar"/>
   <property name="servlet.jar" location="${common.dir}/lib/servlet-api-2.4.jar"/>
   <available property="servlet.jar.present" type="file" file="${servlet.jar}"/>
Index: lucene/contrib/highlighter/build.xml
===================================================================
--- lucene/contrib/highlighter/build.xml	(revision 1140000)
+++ lucene/contrib/highlighter/build.xml	(working copy)
@@ -26,7 +26,7 @@
   <import file="../contrib-build.xml"/>
 
   <contrib-uptodate name="memory" property="memory.uptodate" classpath.property="memory.jar"/>
-  <contrib-uptodate name="queries" property="queries.uptodate" classpath.property="queries.jar"/>
+  <contrib-uptodate name="queries-contrib" contrib-src-name="queries" property="queries.uptodate" classpath.property="queries.jar"/>
 
   <path id="classpath">
     <pathelement path="${memory.jar}"/>
Index: dev-tools/idea/solr/solr.iml
===================================================================
--- dev-tools/idea/solr/solr.iml	(revision 1140000)
+++ dev-tools/idea/solr/solr.iml	(working copy)
@@ -26,6 +26,7 @@
     <orderEntry type="module" module-name="grouping" />
     <orderEntry type="module" module-name="highlighter" />
     <orderEntry type="module" module-name="icu" />
+    <orderEntry type="module" module-name="queries-contrib" />
     <orderEntry type="module" module-name="queries" />
     <orderEntry type="module" module-name="misc" />
     <orderEntry type="module" module-name="phonetic" />
Index: dev-tools/idea/.idea/modules.xml
===================================================================
--- dev-tools/idea/.idea/modules.xml	(revision 1140000)
+++ dev-tools/idea/.idea/modules.xml	(working copy)
@@ -9,7 +9,7 @@
       <module filepath="$PROJECT_DIR$/lucene/contrib/instantiated/instantiated.iml" />
       <module filepath="$PROJECT_DIR$/lucene/contrib/memory/memory.iml" />
       <module filepath="$PROJECT_DIR$/lucene/contrib/misc/misc.iml" />
-      <module filepath="$PROJECT_DIR$/lucene/contrib/queries/queries.iml" />
+      <module filepath="$PROJECT_DIR$/lucene/contrib/queries/queries-contrib.iml" />
       <module filepath="$PROJECT_DIR$/lucene/contrib/queryparser/queryparser.iml" />
       <module filepath="$PROJECT_DIR$/lucene/contrib/spatial/spatial.iml" />
       <module filepath="$PROJECT_DIR$/lucene/contrib/wordnet/wordnet.iml" />
@@ -22,6 +22,7 @@
       <module filepath="$PROJECT_DIR$/modules/benchmark/benchmark.iml" />
       <module filepath="$PROJECT_DIR$/modules/common/common.iml" />
       <module filepath="$PROJECT_DIR$/modules/grouping/grouping.iml" />
+      <module filepath="$PROJECT_DIR$/modules/queries/queries.iml" />
       <module filepath="$PROJECT_DIR$/modules/suggest/suggest.iml" />
       <module filepath="$PROJECT_DIR$/solr/solr.iml" />
       <module filepath="$PROJECT_DIR$/solr/contrib/analysis-extras/analysis-extras.iml" />
Index: dev-tools/idea/.idea/workspace.xml
===================================================================
--- dev-tools/idea/.idea/workspace.xml	(revision 1140000)
+++ dev-tools/idea/.idea/workspace.xml	(working copy)
@@ -114,14 +114,14 @@
       <option name="TEST_SEARCH_SCOPE"><value defaultName="singleModule" /></option>
     </configuration>
     <configuration default="false" name="queries contrib" type="JUnit" factoryName="JUnit">
-      <module name="queries" />
+      <module name="queries-contrib" />
       <option name="TEST_OBJECT" value="package" />
       <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$/lucene/build/contrib/queries" />
       <option name="VM_PARAMETERS" value="-ea -DtempDir=temp" />
       <option name="TEST_SEARCH_SCOPE"><value defaultName="singleModule" /></option>
     </configuration>
     <configuration default="false" name="queries module" type="JUnit" factoryName="JUnit">
-      <module name="queries-module" />
+      <module name="queries" />
       <option name="TEST_OBJECT" value="package" />
       <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$/modules/queries/build" />
       <option name="VM_PARAMETERS" value="-ea -DtempDir=temp" />
@@ -190,7 +190,7 @@
       <option name="VM_PARAMETERS" value="-ea -DtempDir=temp" />
       <option name="TEST_SEARCH_SCOPE"><value defaultName="singleModule" /></option>
     </configuration>
-    <list size="26">
+    <list size="27">
       <item index="0" class="java.lang.String" itemvalue="JUnit.analysis-extras contrib" />
       <item index="1" class="java.lang.String" itemvalue="JUnit.benchmark module" />
       <item index="2" class="java.lang.String" itemvalue="JUnit.clustering contrib" />
@@ -208,15 +208,16 @@
       <item index="14" class="java.lang.String" itemvalue="JUnit.misc contrib" />
       <item index="15" class="java.lang.String" itemvalue="JUnit.phonetic analysis module" />
       <item index="16" class="java.lang.String" itemvalue="JUnit.queries contrib" />
-      <item index="17" class="java.lang.String" itemvalue="JUnit.queryparser contrib" />
-      <item index="18" class="java.lang.String" itemvalue="JUnit.smartcn analysis module" />
-      <item index="19" class="java.lang.String" itemvalue="JUnit.solr" />
-      <item index="20" class="java.lang.String" itemvalue="JUnit.spatial contrib" />
-      <item index="21" class="java.lang.String" itemvalue="JUnit.stempel analysis module" />
-      <item index="22" class="java.lang.String" itemvalue="JUnit.suggest module" />
-      <item index="23" class="java.lang.String" itemvalue="JUnit.uima contrib" />
-      <item index="24" class="java.lang.String" itemvalue="JUnit.wordnet contrib" />
-      <item index="25" class="java.lang.String" itemvalue="JUnit.xml-query-parser contrib" />
+      <item index="17" class="java.lang.String" itemvalue="JUnit.queries module" />
+      <item index="18" class="java.lang.String" itemvalue="JUnit.queryparser contrib" />
+      <item index="19" class="java.lang.String" itemvalue="JUnit.smartcn analysis module" />
+      <item index="20" class="java.lang.String" itemvalue="JUnit.solr" />
+      <item index="21" class="java.lang.String" itemvalue="JUnit.spatial contrib" />
+      <item index="22" class="java.lang.String" itemvalue="JUnit.stempel analysis module" />
+      <item index="23" class="java.lang.String" itemvalue="JUnit.suggest module" />
+      <item index="24" class="java.lang.String" itemvalue="JUnit.uima contrib" />
+      <item index="25" class="java.lang.String" itemvalue="JUnit.wordnet contrib" />
+      <item index="26" class="java.lang.String" itemvalue="JUnit.xml-query-parser contrib" />
     </list>
   </component>
 </project>
Index: dev-tools/idea/modules/queries/queries.iml
===================================================================
--- dev-tools/idea/modules/queries/queries.iml	(revision 0)
+++ dev-tools/idea/modules/queries/queries.iml	(revision 0)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/classes/java" />
+    <output-test url="file://$MODULE_DIR$/build/classes/test" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/work" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" scope="TEST" name="JUnit" level="project" />
+    <orderEntry type="module" module-name="lucene" />
+    <orderEntry type="module" module-name="common" />
+  </component>
+</module>
Index: dev-tools/idea/lucene/contrib/queries/queries.iml (deleted)
===================================================================
Index: dev-tools/idea/lucene/contrib/spatial/spatial.iml
===================================================================
--- dev-tools/idea/lucene/contrib/spatial/spatial.iml	(revision 1140000)
+++ dev-tools/idea/lucene/contrib/spatial/spatial.iml	(working copy)
@@ -11,7 +11,7 @@
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" scope="TEST" name="JUnit" level="project" />
-    <orderEntry type="module" module-name="queries" />
+    <orderEntry type="module" module-name="queries-contrib" />
     <orderEntry type="module" module-name="misc" />
     <orderEntry type="module" module-name="lucene" />
   </component>
Index: dev-tools/idea/lucene/contrib/highlighter/highlighter.iml
===================================================================
--- dev-tools/idea/lucene/contrib/highlighter/highlighter.iml	(revision 1140000)
+++ dev-tools/idea/lucene/contrib/highlighter/highlighter.iml	(working copy)
@@ -12,7 +12,7 @@
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" scope="TEST" name="JUnit" level="project" />
     <orderEntry type="module" module-name="memory" />
-    <orderEntry type="module" module-name="queries" />
+    <orderEntry type="module" module-name="queries-contrib" />
     <orderEntry type="module" module-name="misc" />
     <orderEntry type="module" module-name="lucene" />
   </component>
Index: dev-tools/eclipse/dot.classpath
===================================================================
--- dev-tools/eclipse/dot.classpath	(revision 1140000)
+++ dev-tools/eclipse/dot.classpath	(working copy)
@@ -44,6 +44,8 @@
 	<classpathentry kind="src" path="modules/common/src/test"/>
 	<classpathentry kind="src" path="modules/grouping/src/java"/>
 	<classpathentry kind="src" path="modules/grouping/src/test"/>
+  <classpathentry kind="src" path="modules/queries/src/java"/>
+	<classpathentry kind="src" path="modules/queries/src/test"/>
 	<classpathentry kind="src" path="modules/suggest/src/java"/>
 	<classpathentry kind="src" path="modules/suggest/src/test"/>
 	<classpathentry kind="src" path="solr/src/java"/>
Index: dev-tools/maven/solr/src/pom.xml.template
===================================================================
--- dev-tools/maven/solr/src/pom.xml.template	(revision 1140000)
+++ dev-tools/maven/solr/src/pom.xml.template	(working copy)
@@ -78,7 +78,7 @@
     </dependency>
     <dependency>
       <groupId>org.apache.lucene</groupId>
-      <artifactId>lucene-queries</artifactId>
+      <artifactId>lucene-queries-contrib</artifactId>
       <version>${project.version}</version>
     </dependency>
     <dependency>
Index: dev-tools/maven/modules/queries/pom.xml.template
===================================================================
--- dev-tools/maven/modules/queries/pom.xml.template	(revision 0)
+++ dev-tools/maven/modules/queries/pom.xml.template	(revision 0)
@@ -0,0 +1,71 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+  <!--
+    Licensed to the Apache Software Foundation (ASF) under one
+    or more contributor license agreements.  See the NOTICE file
+    distributed with this work for additional information
+    regarding copyright ownership.  The ASF licenses this file
+    to you under the Apache License, Version 2.0 (the
+    "License"); you may not use this file except in compliance
+    with the License.  You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on an
+    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied.  See the License for the
+    specific language governing permissions and limitations
+    under the License.
+  -->
+  <modelVersion>4.0.0</modelVersion>
+  <parent>
+    <groupId>org.apache.lucene</groupId>
+    <artifactId>lucene-parent</artifactId>
+    <version>@version@</version>
+    <relativePath>../../lucene/pom.xml</relativePath>
+  </parent>
+  <groupId>org.apache.lucene</groupId>
+  <artifactId>lucene-queries</artifactId>
+  <packaging>jar</packaging>
+  <name>Lucene Queries</name>
+  <description>Lucene Queries Module</description>
+  <properties>
+    <module-directory>modules/queries</module-directory>
+    <build-directory>build</build-directory>
+  </properties>
+  <dependencies>
+    <dependency>
+      <groupId>${project.groupId}</groupId>
+      <artifactId>lucene-core</artifactId>
+      <version>${project.version}</version>
+    </dependency>
+    <dependency>
+      <groupId>${project.groupId}</groupId>
+      <artifactId>lucene-test-framework</artifactId>
+      <version>${project.version}</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <scope>test</scope>
+    </dependency>
+  </dependencies>
+  <build>
+    <directory>${build-directory}</directory>
+    <outputDirectory>${build-directory}/classes/java</outputDirectory>
+    <testOutputDirectory>${build-directory}/classes/test</testOutputDirectory>
+    <sourceDirectory>src/java</sourceDirectory>
+    <testSourceDirectory>src/test</testSourceDirectory>
+    <testResources>
+      <testResource>
+        <directory>${project.build.testSourceDirectory}</directory>
+        <excludes>
+          <exclude>**/*.java</exclude>
+        </excludes>
+      </testResource>
+    </testResources>
+  </build>
+</project>
Index: dev-tools/maven/lucene/contrib/queries/pom.xml.template
===================================================================
--- dev-tools/maven/lucene/contrib/queries/pom.xml.template	(revision 1140000)
+++ dev-tools/maven/lucene/contrib/queries/pom.xml.template	(working copy)
@@ -27,9 +27,9 @@
     <relativePath>../../pom.xml</relativePath>
   </parent>
   <groupId>org.apache.lucene</groupId>
-  <artifactId>lucene-queries</artifactId>
+  <artifactId>lucene-queries-contrib</artifactId>
   <packaging>jar</packaging>
-  <name>Lucene Queries</name>
+  <name>Lucene Queries Contrib</name>
   <description>
     Queries - various query object exotica not in core
   </description>
Index: dev-tools/maven/lucene/contrib/spatial/pom.xml.template
===================================================================
--- dev-tools/maven/lucene/contrib/spatial/pom.xml.template	(revision 1140000)
+++ dev-tools/maven/lucene/contrib/spatial/pom.xml.template	(working copy)
@@ -49,7 +49,7 @@
     </dependency>
     <dependency>
       <groupId>${project.groupId}</groupId>
-      <artifactId>lucene-queries</artifactId>
+      <artifactId>lucene-queries-contrib</artifactId>
       <version>${project.version}</version>
     </dependency>
     <dependency>
Index: dev-tools/maven/lucene/contrib/xml-query-parser/pom.xml.template
===================================================================
--- dev-tools/maven/lucene/contrib/xml-query-parser/pom.xml.template	(revision 1140000)
+++ dev-tools/maven/lucene/contrib/xml-query-parser/pom.xml.template	(working copy)
@@ -49,7 +49,7 @@
     </dependency>
     <dependency>
       <groupId>${project.groupId}</groupId>
-      <artifactId>lucene-queries</artifactId>
+      <artifactId>lucene-queries-contrib</artifactId>
       <version>${project.version}</version>
     </dependency>
     <dependency>
Index: dev-tools/maven/lucene/contrib/highlighter/pom.xml.template
===================================================================
--- dev-tools/maven/lucene/contrib/highlighter/pom.xml.template	(revision 1140000)
+++ dev-tools/maven/lucene/contrib/highlighter/pom.xml.template	(working copy)
@@ -56,7 +56,7 @@
     </dependency>
     <dependency>
       <groupId>${project.groupId}</groupId>
-      <artifactId>lucene-queries</artifactId>
+      <artifactId>lucene-queries-contrib</artifactId>
       <version>${project.version}</version>
     </dependency>
     <dependency>
