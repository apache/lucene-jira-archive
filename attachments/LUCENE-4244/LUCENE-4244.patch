Index: lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java	(revision 1363988)
+++ lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java	(working copy)
@@ -120,10 +120,10 @@
   // Test groups, system properties and other annotations modifying tests
   // --------------------------------------------------------------------
 
-  public static final String SYSPROP_NIGHTLY = "tests.nightly";
-  public static final String SYSPROP_WEEKLY = "tests.weekly";
-  public static final String SYSPROP_AWAITSFIX = "tests.awaitsfix";
-  public static final String SYSPROP_SLOW = "tests.slow";
+  static final String SYSPROP_NIGHTLY = "tests.nightly";
+  static final String SYSPROP_WEEKLY = "tests.weekly";
+  static final String SYSPROP_AWAITSFIX = "tests.awaitsfix";
+  static final String SYSPROP_SLOW = "tests.slow";
 
   /** @see #ignoreAfterMaxFailures*/
   private static final String SYSPROP_MAXFAILURES = "tests.maxfailures";
@@ -202,7 +202,7 @@
   public static final boolean VERBOSE = systemPropertyAsBoolean("tests.verbose", false);
 
   /** TODO: javadoc? */
-  public static final boolean INFOSTREAM = systemPropertyAsBoolean("tests.infostream", VERBOSE);
+  static final boolean INFOSTREAM = systemPropertyAsBoolean("tests.infostream", VERBOSE);
 
   /**
    * A random multiplier which you should use when writing random tests:
@@ -211,37 +211,37 @@
   public static final int RANDOM_MULTIPLIER = systemPropertyAsInt("tests.multiplier", 1);
 
   /** TODO: javadoc? */
-  public static final String DEFAULT_LINE_DOCS_FILE = "europarl.lines.txt.gz";
+  static final String DEFAULT_LINE_DOCS_FILE = "europarl.lines.txt.gz";
 
   /** TODO: javadoc? */
-  public static final String JENKINS_LARGE_LINE_DOCS_FILE = "enwiki.random.lines.txt";
+  static final String JENKINS_LARGE_LINE_DOCS_FILE = "enwiki.random.lines.txt";
 
   /** Gets the codec to run tests with. */
-  public static final String TEST_CODEC = System.getProperty("tests.codec", "random");
+  static final String TEST_CODEC = System.getProperty("tests.codec", "random");
 
   /** Gets the postingsFormat to run tests with. */
-  public static final String TEST_POSTINGSFORMAT = System.getProperty("tests.postingsformat", "random");
+  static final String TEST_POSTINGSFORMAT = System.getProperty("tests.postingsformat", "random");
 
   /** Gets the directory to run tests with */
-  public static final String TEST_DIRECTORY = System.getProperty("tests.directory", "random");
+  static final String TEST_DIRECTORY = System.getProperty("tests.directory", "random");
 
   /** the line file used by LineFileDocs */
-  public static final String TEST_LINE_DOCS_FILE = System.getProperty("tests.linedocsfile", DEFAULT_LINE_DOCS_FILE);
+  static final String TEST_LINE_DOCS_FILE = System.getProperty("tests.linedocsfile", DEFAULT_LINE_DOCS_FILE);
 
   /** Whether or not {@link Nightly} tests should run. */
   public static final boolean TEST_NIGHTLY = systemPropertyAsBoolean(SYSPROP_NIGHTLY, false);
 
   /** Whether or not {@link Weekly} tests should run. */
-  public static final boolean TEST_WEEKLY = systemPropertyAsBoolean(SYSPROP_WEEKLY, false);
+  static final boolean TEST_WEEKLY = systemPropertyAsBoolean(SYSPROP_WEEKLY, false);
   
   /** Whether or not {@link AwaitsFix} tests should run. */
-  public static final boolean TEST_AWAITSFIX = systemPropertyAsBoolean(SYSPROP_AWAITSFIX, false);
+  static final boolean TEST_AWAITSFIX = systemPropertyAsBoolean(SYSPROP_AWAITSFIX, false);
 
   /** Whether or not {@link Slow} tests should run. */
-  public static final boolean TEST_SLOW = systemPropertyAsBoolean(SYSPROP_SLOW, false);
+  static final boolean TEST_SLOW = systemPropertyAsBoolean(SYSPROP_SLOW, false);
 
   /** Throttling, see {@link MockDirectoryWrapper#setThrottling(Throttling)}. */
-  public static final Throttling TEST_THROTTLING = TEST_NIGHTLY ? Throttling.SOMETIMES : Throttling.NEVER;
+  static final Throttling TEST_THROTTLING = TEST_NIGHTLY ? Throttling.SOMETIMES : Throttling.NEVER;
 
   /** Create indexes in this directory, optimally use a subdir, named after the test */
   public static final File TEMP_DIR;
@@ -305,7 +305,7 @@
   /**
    * Suite failure marker (any error in the test or suite scope).
    */
-  public final static TestRuleMarkFailure suiteFailureMarker = 
+  final static TestRuleMarkFailure suiteFailureMarker = 
       new TestRuleMarkFailure();
 
   /**
