Index: src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter.java
===================================================================
--- src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter.java	(revision 559183)
+++ src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter.java	(working copy)
@@ -39,130 +39,189 @@
 	/**
 	 * To replace accented characters in a String by unaccented equivalents.
 	 */
-	public final static String removeAccents(String input) {
-		final StringBuffer output = new StringBuffer();
-		for (int i = 0; i < input.length(); i++) {
-			switch (input.charAt(i)) {
-				case '\u00C0' : // À
-				case '\u00C1' : // Á
-				case '\u00C2' : // Â
-				case '\u00C3' : // Ã
-				case '\u00C4' : // Ä
-				case '\u00C5' : // Å
-					output.append("A");
-					break;
-				case '\u00C6' : // Æ
-					output.append("AE");
-					break;
-				case '\u00C7' : // Ç
-					output.append("C");
-					break;
-				case '\u00C8' : // È
-				case '\u00C9' : // É
-				case '\u00CA' : // Ê
-				case '\u00CB' : // Ë
-					output.append("E");
-					break;
-				case '\u00CC' : // Ì
-				case '\u00CD' : // Í
-				case '\u00CE' : // Î
-				case '\u00CF' : // Ï
-					output.append("I");
-					break;
-				case '\u00D0' : // Ð
-					output.append("D");
-					break;
-				case '\u00D1' : // Ñ
-					output.append("N");
-					break;
-				case '\u00D2' : // Ò
-				case '\u00D3' : // Ó
-				case '\u00D4' : // Ô
-				case '\u00D5' : // Õ
-				case '\u00D6' : // Ö
-				case '\u00D8' : // Ø
-					output.append("O");
-					break;
-				case '\u0152' : // Œ
-					output.append("OE");
-					break;
-				case '\u00DE' : // Þ
-					output.append("TH");
-					break;
-				case '\u00D9' : // Ù
-				case '\u00DA' : // Ú
-				case '\u00DB' : // Û
-				case '\u00DC' : // Ü
-					output.append("U");
-					break;
-				case '\u00DD' : // Ý
-				case '\u0178' : // Ÿ
-					output.append("Y");
-					break;
-				case '\u00E0' : // à
-				case '\u00E1' : // á
-				case '\u00E2' : // â
-				case '\u00E3' : // ã
-				case '\u00E4' : // ä
-				case '\u00E5' : // å
-					output.append("a");
-					break;
-				case '\u00E6' : // æ
-					output.append("ae");
-					break;
-				case '\u00E7' : // ç
-					output.append("c");
-					break;
-				case '\u00E8' : // è
-				case '\u00E9' : // é
-				case '\u00EA' : // ê
-				case '\u00EB' : // ë
-					output.append("e");
-					break;
-				case '\u00EC' : // ì
-				case '\u00ED' : // í
-				case '\u00EE' : // î
-				case '\u00EF' : // ï
-					output.append("i");
-					break;
-				case '\u00F0' : // ð
-					output.append("d");
-					break;
-				case '\u00F1' : // ñ
-					output.append("n");
-					break;
-				case '\u00F2' : // ò
-				case '\u00F3' : // ó
-				case '\u00F4' : // ô
-				case '\u00F5' : // õ
-				case '\u00F6' : // ö
-				case '\u00F8' : // ø
-					output.append("o");
-					break;
-				case '\u0153' : // œ
-					output.append("oe");
-					break;
-				case '\u00DF' : // ß
-					output.append("ss");
-					break;
-				case '\u00FE' : // þ
-					output.append("th");
-					break;
-				case '\u00F9' : // ù
-				case '\u00FA' : // ú
-				case '\u00FB' : // û
-				case '\u00FC' : // ü
-					output.append("u");
-					break;
-				case '\u00FD' : // ý
-				case '\u00FF' : // ÿ
-					output.append("y");
-					break;
-				default :
-					output.append(input.charAt(i));
-					break;
+	public final static String removeAccents(final String input) {
+		final int inputLength = input.length();
+		class Charlist {
+            char[] list;
+            int index = 0;
+
+            public Charlist(int size) {
+            	 list = new char[size];
 			}
-		}
-		return output.toString();
+            
+            public void add(char c) {
+                if (index > (list.length - 1)) {
+                    char[] newlist = new char[ list.length * 2];
+                    System.arraycopy(list, 0, newlist, 0, list.length);
+                    list = newlist;
+                }
+
+                list[index] = c;
+                index++;
+            }
+            
+            public String toString() {
+                String cleanInput;
+                if(index < list.length) {
+                	cleanInput = new String(list, 0, index);
+                } else {
+                	cleanInput = new String(list);
+                }
+                return cleanInput;
+            }
+        }
+ 
+        boolean remove = false;
+        
+        int accentLoc = 0;
+        for (; accentLoc < inputLength; accentLoc++) {
+           final char c = input.charAt(accentLoc);
+           if ( c >= '\u00C0' && c <= '\u0178' ) {
+                remove = true;
+                break;
+           }
+         }
+        
+        if ( !remove ) {
+        	return input;
+        }
+        
+        Charlist charList = new Charlist(inputLength);
+        if(accentLoc > 0) {
+        	charList.index = accentLoc;
+        	input.getChars(0, accentLoc, charList.list, 0);
+        }
+        
+        for (int i = accentLoc; i < inputLength; i++) {
+            switch (input.charAt(i)) {
+            case '\u00C0': // Ã€
+            case '\u00C1': // Ã�
+            case '\u00C2': // Ã‚
+            case '\u00C3': // Ãƒ
+            case '\u00C4': // Ã„
+            case '\u00C5': // Ã…
+                charList.add('A');
+                break;
+            case '\u00C6': // Ã†
+                charList.add('A');
+                charList.add('E');
+                break;
+            case '\u00C7': // Ã‡
+                charList.add('C');
+                break;
+            case '\u00C8': // Ãˆ
+            case '\u00C9': // Ã‰
+            case '\u00CA': // ÃŠ
+            case '\u00CB': // Ã‹
+                charList.add('E');
+                break;
+            case '\u00CC': // ÃŒ
+            case '\u00CD': // Ã�
+            case '\u00CE': // ÃŽ
+            case '\u00CF': // Ã�
+                charList.add('I');
+                break;
+            case '\u00D0': // Ã�
+                charList.add('D');
+                break;
+            case '\u00D1': // Ã'
+                charList.add('N');
+                break;
+            case '\u00D2': // Ã'
+            case '\u00D3': // Ã"
+            case '\u00D4': // Ã"
+            case '\u00D5': // Ã•
+            case '\u00D6': // Ã–
+            case '\u00D8': // Ã˜
+                charList.add('O');
+                break;
+            case '\u0152': // Å'
+                charList.add('O');
+                charList.add('E');
+                break;
+            case '\u00DE': // Ãž
+                charList.add('T');
+                charList.add('H');
+                break;
+            case '\u00D9': // Ã™
+            case '\u00DA': // Ãš
+            case '\u00DB': // Ã›
+            case '\u00DC': // Ãœ
+                charList.add('U');
+                break;
+            case '\u00DD': // Ã�
+            case '\u0178': // Å¸
+                charList.add('Y');
+                break;
+            case '\u00E0': // Ã
+            case '\u00E1': // Ã¡
+            case '\u00E2': // Ã¢
+            case '\u00E3': // Ã£
+            case '\u00E4': // Ã¤
+            case '\u00E5': // Ã¥
+                charList.add('a');
+                break;
+            case '\u00E6': // Ã¦
+                charList.add('a');
+                charList.add('e');
+                break;
+            case '\u00E7': // Ã§
+                charList.add('c');
+                break;
+            case '\u00E8': // Ã¨
+            case '\u00E9': // Ã©
+            case '\u00EA': // Ãª
+            case '\u00EB': // Ã«
+                charList.add('e');
+                break;
+            case '\u00EC': // Ã¬
+            case '\u00ED': // Ã­
+            case '\u00EE': // Ã®
+            case '\u00EF': // Ã¯
+                charList.add('i');
+                break;
+            case '\u00F0': // Ã°
+                charList.add('d');
+                break;
+            case '\u00F1': // Ã±
+                charList.add('n');
+                break;
+            case '\u00F2': // Ã²
+            case '\u00F3': // Ã³
+            case '\u00F4': // Ã´
+            case '\u00F5': // Ãµ
+            case '\u00F6': // Ã¶
+            case '\u00F8': // Ã¸
+                charList.add('o');
+                break;
+            case '\u0153': // Å"
+                charList.add('o');
+                charList.add('e');
+                break;
+            case '\u00DF': // ÃŸ
+                charList.add('s');
+                charList.add ('s');
+                break;
+            case '\u00FE': // Ã¾
+                charList.add('t');
+                charList.add('h');
+                break;
+            case '\u00F9': // Ã¹
+            case '\u00FA': // Ãº
+            case '\u00FB': // Ã»
+            case '\u00FC': // Ã¼
+                charList.add('u');
+                break;
+            case '\u00FD': // Ã½
+            case '\u00FF': // Ã¿
+                charList.add('y');
+                break;
+            default:
+                charList.add(input.charAt(i));
+                break;
+            }
+        }
+        
+        return charList.toString(); 
 	}
 }
\ No newline at end of file
