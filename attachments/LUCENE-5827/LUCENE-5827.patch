Index: lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.java	(revision 1610931)
+++ lucene/core/src/java/org/apache/lucene/store/NIOFSDirectory.java	(working copy)
@@ -133,6 +133,9 @@
     
     @Override
     public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {
+      if (offset < 0 || length < 0 || offset + length > this.length()) {
+        throw new IllegalArgumentException("slice() " + sliceDescription + " out of bounds: "  + this);
+      }
       return new NIOFSIndexInput(sliceDescription, channel, off + offset, length, getBufferSize());
     }
 
Index: lucene/core/src/java/org/apache/lucene/store/SimpleFSDirectory.java
===================================================================
--- lucene/core/src/java/org/apache/lucene/store/SimpleFSDirectory.java	(revision 1610931)
+++ lucene/core/src/java/org/apache/lucene/store/SimpleFSDirectory.java	(working copy)
@@ -110,6 +110,9 @@
     
     @Override
     public IndexInput slice(String sliceDescription, long offset, long length) throws IOException {
+      if (offset < 0 || length < 0 || offset + length > this.length()) {
+        throw new IllegalArgumentException("slice() " + sliceDescription + " out of bounds: "  + this);
+      }
       return new SimpleFSIndexInput(sliceDescription, file, off + offset, length, getBufferSize());
     }
 
Index: lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java	(revision 1610931)
+++ lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java	(working copy)
@@ -459,6 +459,37 @@
     dir.close();
   }
 
+  public void testSliceOutOfBounds() throws Exception {
+    Directory dir = getDirectory(createTempDir("testSliceOutOfBounds"));
+    IndexOutput o = dir.createOutput("out", newIOContext(random()));
+    final int len = random().nextInt(2040) + 8;
+    byte[] b = new byte[len];
+    o.writeBytes(b, 0, len);
+    o.close();
+    IndexInput i = dir.openInput("out", newIOContext(random()));
+    try {
+      i.slice("slice1", 0, len + 1);
+      fail("Did not get IllegalArgumentException");
+    } catch (IllegalArgumentException iae) {
+      // pass
+    }
+    try {
+      i.slice("slice2", -1, len);
+      fail("Did not get IllegalArgumentException");
+    } catch (IllegalArgumentException iae) {
+      // pass
+    }
+    IndexInput slice = i.slice("slice3", 4, len / 2);
+    try {
+      slice.slice("slice3sub", 1, len / 2);
+      fail("Did not get IllegalArgumentException");
+    } catch (IllegalArgumentException iae) {
+      // pass
+    }
+    i.close();
+    dir.close();    
+  }
+  
   // LUCENE-3382 -- make sure we get exception if the directory really does not exist.
   public void testNoDir() throws Throwable {
     File tempDir = createTempDir("doesnotexist");
