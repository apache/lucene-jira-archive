diff --git a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
index e605e981e8..552e83d42d 100644
--- a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
+++ b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
@@ -149,7 +149,7 @@ public final class CheckIndex implements Closeable {
     public boolean partial;
 
     /** The greatest segment name. */
-    public int maxSegmentName;
+    public long maxSegmentName;
 
     /** Whether the SegmentInfos.counter is greater than any of the segments' names. */
     public boolean validCounter; 
@@ -635,7 +635,7 @@ public final class CheckIndex implements Closeable {
 
     for(int i=0;i<numSegments;i++) {
       final SegmentCommitInfo info = sis.info(i);
-      int segmentName = Integer.parseInt(info.info.name.substring(1), Character.MAX_RADIX);
+      long segmentName = Long.parseLong(info.info.name.substring(1), Character.MAX_RADIX);
       if (segmentName > result.maxSegmentName) {
         result.maxSegmentName = segmentName;
       }
diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java b/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java
index e2b822b6a7..d8fb249722 100644
--- a/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java
+++ b/lucene/core/src/java/org/apache/lucene/index/IndexFileDeleter.java
@@ -255,7 +255,7 @@ final class IndexFileDeleter implements Closeable {
   static void inflateGens(SegmentInfos infos, Collection<String> files, InfoStream infoStream) {
 
     long maxSegmentGen = Long.MIN_VALUE;
-    int maxSegmentName = Integer.MIN_VALUE;
+    long maxSegmentName = Long.MIN_VALUE;
 
     // Confusingly, this is the union of liveDocs, field infos, doc values
     // (and maybe others, in the future) gens.  This is somewhat messy,
@@ -288,7 +288,7 @@ final class IndexFileDeleter implements Closeable {
           continue;
         }
 
-        maxSegmentName = Math.max(maxSegmentName, Integer.parseInt(segmentName.substring(1), Character.MAX_RADIX));
+        maxSegmentName = Math.max(maxSegmentName, Long.parseLong(segmentName.substring(1), Character.MAX_RADIX));
 
         Long curGen = maxPerSegmentGen.get(segmentName);
         if (curGen == null) {
diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
index 05608b48d6..b50fa720e0 100644
--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
@@ -1946,7 +1946,7 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable {
       // problems at least with ConcurrentMergeScheduler.
       changeCount.incrementAndGet();
       segmentInfos.changed();
-      return "_" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);
+      return "_" + Long.toString(segmentInfos.counter++, Character.MAX_RADIX);
     }
   }
 
diff --git a/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java b/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
index 23ad9fb078..a29da1bc4d 100644
--- a/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
+++ b/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
@@ -124,8 +124,7 @@ public final class SegmentInfos implements Cloneable, Iterable<SegmentCommitInfo
   static final int VERSION_CURRENT = VERSION_70;
 
   /** Used to name new segments. */
-  // TODO: should this be a long ...?
-  public int counter;
+  public long counter;
   
   /** Counts how often the index has been changed.  */
   public long version;
@@ -326,7 +325,12 @@ public final class SegmentInfos implements Cloneable, Iterable<SegmentCommitInfo
 
     infos.version = input.readLong();
     //System.out.println("READ sis version=" + infos.version);
-    infos.counter = input.readInt();
+
+    if (indexCreatedVersion > VERSION_70) {
+      infos.counter = input.readLong();
+    } else {
+      infos.counter = input.readInt();
+    }
     int numSegments = input.readInt();
     if (numSegments < 0) {
       throw new CorruptIndexException("invalid segment count: " + numSegments, input);
@@ -469,8 +473,12 @@ public final class SegmentInfos implements Cloneable, Iterable<SegmentCommitInfo
 
     out.writeVInt(indexCreatedVersionMajor);
 
-    out.writeLong(version); 
-    out.writeInt(counter); // write counter
+    out.writeLong(version);
+    if (indexCreatedVersionMajor > VERSION_70) {
+      out.writeLong(counter); // write counter
+    } else {
+      out.writeInt((int) counter);
+    }
     out.writeInt(size());
 
     if (size() > 0) {
diff --git a/lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase.java
index 29f31d6b55..814fb4b7eb 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase.java
@@ -428,7 +428,8 @@ public abstract class BaseSegmentInfoFormatTestCase extends BaseIndexFileFormatT
     for (int i = 0; i < 10; i++) {
       Directory dir = newDirectory();
       Version version = versions[random().nextInt(versions.length)];
-      String name = "_" + Integer.toString(random().nextInt(Integer.MAX_VALUE), Character.MAX_RADIX);
+      long randomSegmentIndex = Math.abs(random().nextLong());
+      String name = "_" + Long.toString(randomSegmentIndex != Long.MIN_VALUE ? randomSegmentIndex : random().nextInt(Integer.MAX_VALUE), Character.MAX_RADIX);
       int docCount = TestUtil.nextInt(random(), 1, IndexWriter.MAX_DOCS);
       boolean isCompoundFile = random().nextBoolean();
       Set<String> files = new HashSet<>();
