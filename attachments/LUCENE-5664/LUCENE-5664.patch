diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser.jj b/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser.jj
index d8f6f7c..e6179bc 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser.jj
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser.jj
@@ -339,13 +339,23 @@ QueryNode Clause(CharSequence field) : {
 (
   LOOKAHEAD(3)
   fieldToken=<TERM> (
-    ( <OP_COLON> | <OP_EQUAL> ) {field=EscapeQuerySyntaxImpl.discardEscapeChar(fieldToken.image);} q=Term(field)
-  | ( operator=<OP_LESSTHAN> | operator=<OP_LESSTHANEQ> | operator=<OP_MORETHAN> | operator=<OP_MORETHANEQ> ) {field=EscapeQuerySyntaxImpl.discardEscapeChar(fieldToken.image);}( term=<TERM> | term=<QUOTED> | term=<NUMBER> )
+    ( <OP_COLON> ) {field=EscapeQuerySyntaxImpl.discardEscapeChar(fieldToken.image);} q=Term(field)
+  | ( operator=<OP_EQUAL> | operator=<OP_LESSTHAN> | operator=<OP_LESSTHANEQ> | operator=<OP_MORETHAN> | operator=<OP_MORETHANEQ> ) {field=EscapeQuerySyntaxImpl.discardEscapeChar(fieldToken.image);}( term=<TERM> | term=<QUOTED> | term=<NUMBER> )
     {
         if (term.kind == QUOTED) {
             term.image = term.image.substring(1, term.image.length()-1);
         }
         switch (operator.kind) {
+            case OP_EQUAL:
+              lowerInclusive = true;
+              upperInclusive = true;
+
+              qLower = new FieldQueryNode(field,
+                                       EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);
+              qUpper = new FieldQueryNode(field,
+                                       EscapeQuerySyntaxImpl.discardEscapeChar(term.image), term.beginColumn, term.endColumn);
+              break;
+
             case OP_LESSTHAN:
               lowerInclusive = true;
               upperInclusive = false;
@@ -392,7 +402,7 @@ QueryNode Clause(CharSequence field) : {
 | [
     LOOKAHEAD(2)
     fieldToken=<TERM>
-    ( <OP_COLON> | <OP_EQUAL> ) {field=EscapeQuerySyntaxImpl.discardEscapeChar(fieldToken.image);}
+    ( <OP_COLON> ) {field=EscapeQuerySyntaxImpl.discardEscapeChar(fieldToken.image);}
   ]
   (
    q=Term(field)
