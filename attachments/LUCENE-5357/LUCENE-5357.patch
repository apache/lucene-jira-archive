Index: lucene/analysis/common/build.xml
===================================================================
--- lucene/analysis/common/build.xml	(revision 1548223)
+++ lucene/analysis/common/build.xml	(working copy)
@@ -45,17 +45,13 @@
     <taskdef classname="jflex.anttask.JFlexTask" name="jflex">
       <classpath refid="jflex.classpath"/>
     </taskdef>
-    <!-- this logic below looks duplicated with run-jflex, but its not, the regexp is different! -->
     <jflex file="src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.jflex"
            outdir="src/java/org/apache/lucene/analysis/charfilter"
-           nobak="on"/>
-    <!-- Remove the inappropriate JFlex-generated constructors -->
+           nobak="on" inputstreamctor="false"/>
+    <!-- Remove the inappropriate JFlex-generated constructor -->
     <replaceregexp file="src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java"
-                   match="/\*\*\s*\*\s*Creates a new scanner.*this\(new java\.io\.InputStreamReader\(in\)\);\s*\}"
-                   replace="" flags="sg"/>
-    <replaceregexp file="src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java"
-                   match="\/\*\s*The following code was generated by JFlex.*"
-                   replace="\/\* The following code was generated by JFlex. \*\/" flags=""/>
+                   match="/\*\*\s*\*\s*Creates a new scanner\s*\*\s*\*\s*@param\s*in\s*the java.io.Reader to read input from\.\s*\*/\s*public HTMLStripCharFilter\(java\.io\.Reader in\)\s*\{\s*this.zzReader = in;\s*\}"
+                   replace="" flags="s"/>
   </target>
 
   <target name="generate-jflex-html-char-entities">
@@ -96,15 +92,7 @@
     <attribute name="dir"/>
     <attribute name="name"/>
     <sequential>
-      <jflex file="@{dir}/@{name}.jflex"
-             outdir="@{dir}"
-             nobak="on" />
-      <replaceregexp file="@{dir}/@{name}.java"
-                     match="/\*\*\s*\*\s*Creates a new scanner\..*this\(new java\.io\.InputStreamReader\(in\)\);\s*\}"
-                     replace="" flags="sg"/>
-      <replaceregexp file="@{dir}/@{name}.java"
-                     match="\/\*\s*The following code was generated by JFlex.*"
-                     replace="\/\* The following code was generated by JFlex. \*\/" flags=""/>
+      <jflex file="@{dir}/@{name}.jflex" outdir="@{dir}" nobak="on" inputstreamctor="false"/>
     </sequential>
   </macrodef>
 
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java	(working copy)
@@ -1,4 +1,4 @@
-/* The following code was generated by JFlex. */
+/* The following code was generated by JFlex 1.5.0-SNAPSHOT */
 
 package org.apache.lucene.analysis.charfilter;
 
@@ -152,77 +152,77 @@
     "\21\1\1\41\32\1\5\0\113\1\3\0\3\1\17\0\15\1\1\0"+
     "\4\1\3\2\13\0\22\1\3\2\13\0\22\1\2\2\14\0\15\1"+
     "\1\0\3\1\1\0\2\2\14\0\64\1\40\2\3\0\1\1\4\0"+
-    "\1\1\1\2\2\0\12\274\41\0\3\2\1\41\1\0\12\274\6\0"+
-    "\130\1\10\0\51\1\1\2\1\1\5\0\106\1\12\0\35\1\3\0"+
-    "\14\2\4\0\14\2\12\0\12\274\36\1\2\0\5\1\13\0\54\1"+
-    "\4\0\21\2\7\1\2\2\6\0\12\274\1\2\45\0\27\1\5\2"+
-    "\4\0\65\1\12\2\1\0\35\2\2\0\1\2\12\274\6\0\12\274"+
-    "\15\0\1\1\130\0\5\2\57\1\21\2\7\1\4\0\12\274\21\0"+
-    "\11\2\14\0\3\2\36\1\15\2\2\1\12\274\54\1\16\2\14\0"+
-    "\44\1\24\2\10\0\12\274\3\0\3\1\12\274\44\1\122\0\3\2"+
-    "\1\0\25\2\4\1\1\2\4\1\3\2\2\1\11\0\300\1\47\2"+
-    "\25\0\4\2\u0116\1\2\0\6\1\2\0\46\1\2\0\6\1\2\0"+
-    "\10\1\1\0\1\1\1\0\1\1\1\0\1\1\1\0\37\1\2\0"+
-    "\65\1\1\0\7\1\1\0\1\1\3\0\3\1\1\0\7\1\3\0"+
-    "\4\1\2\0\6\1\4\0\15\1\5\0\3\1\1\0\7\1\3\0"+
-    "\13\41\35\0\2\41\5\0\1\41\17\0\2\2\23\0\1\2\12\0"+
-    "\1\41\21\0\1\1\15\0\1\1\20\0\15\1\63\0\15\2\4\0"+
-    "\1\2\3\0\14\2\21\0\1\1\4\0\1\1\2\0\12\1\1\0"+
-    "\1\1\2\0\6\1\6\0\1\1\1\0\1\1\1\0\1\1\1\0"+
-    "\20\1\2\0\4\1\5\0\5\1\4\0\1\1\21\0\51\1\u0a77\0"+
-    "\57\1\1\0\57\1\1\0\205\1\6\0\4\1\3\2\2\1\14\0"+
-    "\46\1\1\0\1\1\5\0\1\1\2\0\70\1\7\0\1\1\17\0"+
-    "\1\2\27\1\11\0\7\1\1\0\7\1\1\0\7\1\1\0\7\1"+
-    "\1\0\7\1\1\0\7\1\1\0\7\1\1\0\7\1\1\0\40\2"+
-    "\u0200\0\1\41\4\0\3\1\31\0\11\1\6\2\1\0\5\1\2\0"+
-    "\5\1\4\0\126\1\2\0\2\2\5\1\1\0\132\1\1\0\4\1"+
-    "\5\0\51\1\3\0\136\1\21\0\33\1\65\0\20\1\u0200\0\u19b6\1"+
-    "\112\0\u51cd\1\63\0\u048d\1\103\0\56\1\2\0\u010d\1\3\0\20\1"+
-    "\12\274\2\1\24\0\57\1\1\2\4\0\12\2\1\0\31\1\7\0"+
-    "\1\2\120\1\2\2\45\0\11\1\2\0\147\1\2\0\4\1\1\0"+
-    "\4\1\14\0\13\1\115\0\12\1\1\2\3\1\1\2\4\1\1\2"+
-    "\27\1\5\2\30\0\64\1\14\0\2\2\62\1\21\2\13\0\12\274"+
-    "\6\0\22\2\6\1\3\0\1\1\4\0\12\274\34\1\10\2\2\0"+
-    "\27\1\15\2\14\0\35\1\3\0\4\2\57\1\16\2\16\0\1\1"+
-    "\12\274\46\0\51\1\16\2\11\0\3\1\1\2\10\1\2\2\2\0"+
-    "\12\274\6\0\27\1\3\0\1\1\1\2\4\0\60\1\1\2\1\1"+
-    "\3\2\2\1\2\2\5\1\2\2\1\1\1\2\1\1\30\0\3\1"+
-    "\2\0\13\1\5\2\2\0\3\1\2\2\12\0\6\1\2\0\6\1"+
-    "\2\0\6\1\11\0\7\1\1\0\7\1\221\0\43\1\10\2\1\0"+
-    "\2\2\2\0\12\274\6\0\u2ba4\1\14\0\27\1\4\0\61\1\4\0"+
-    "\1\170\1\223\1\103\1\165\1\136\1\214\2\0\1\160\1\153\2\0"+
-    "\1\120\1\210\14\0\1\105\1\127\20\0\1\122\7\0\1\256\1\112"+
-    "\5\0\1\143\4\0\51\120\1\110\3\120\1\124\1\220\17\0\1\133"+
-    "\u02c1\0\1\252\277\0\2\123\1\212\3\222\2\211\1\222\1\211\2\222"+
-    "\1\221\21\222\11\213\1\157\7\213\7\204\1\156\1\204\1\246\2\207"+
-    "\1\166\1\246\1\207\1\166\10\246\2\167\5\203\2\155\5\203\1\107"+
-    "\10\202\5\154\3\224\12\251\20\224\3\225\32\227\1\226\2\200\2\234"+
-    "\1\235\2\234\2\235\2\234\1\235\3\200\1\177\2\200\12\250\1\247"+
-    "\1\176\1\171\7\176\1\171\13\176\31\200\7\176\12\250\1\176\5\134"+
-    "\3\245\3\142\1\140\4\142\2\140\10\142\1\140\7\141\1\137\2\141"+
-    "\7\142\16\245\1\135\4\245\1\106\4\244\1\106\5\255\1\254\1\255"+
-    "\3\254\7\255\1\254\23\255\5\264\3\255\6\264\2\255\6\253\5\263"+
-    "\3\262\2\142\7\257\36\142\4\257\5\142\5\245\6\244\2\245\1\244"+
-    "\4\141\13\253\12\244\26\253\15\134\1\243\2\134\1\152\3\237\1\134"+
-    "\2\237\5\151\4\237\4\152\1\151\3\152\1\151\5\152\2\147\1\116"+
-    "\2\147\1\116\1\147\2\116\1\147\1\116\12\147\1\116\4\146\1\115"+
-    "\1\236\1\240\1\150\3\164\1\240\2\164\1\260\2\261\2\164\1\150"+
-    "\1\164\1\150\1\164\1\150\1\164\3\150\1\164\2\150\1\164\1\150"+
-    "\2\164\1\150\1\164\1\150\1\164\1\150\1\164\1\150\1\164\1\150"+
-    "\1\162\2\145\1\162\1\145\2\162\4\145\1\162\7\145\1\162\4\145"+
-    "\1\162\4\145\1\164\1\150\1\164\12\216\1\217\21\216\1\217\3\215"+
-    "\1\217\3\216\1\217\1\216\2\144\2\216\1\217\15\241\4\201\4\206"+
-    "\1\242\1\161\10\242\7\206\6\164\4\113\1\121\37\113\1\121\4\113"+
-    "\25\174\1\131\11\174\21\130\5\174\1\104\12\117\5\174\6\205\4\162"+
-    "\1\163\1\130\5\231\12\232\17\231\1\125\3\114\14\230\1\126\11\173"+
-    "\1\172\5\173\4\233\13\175\2\132\11\173\1\172\31\173\1\172\4\126"+
-    "\4\173\2\172\2\265\1\111\5\265\52\111\u1900\0\u016e\1\2\0\152\1"+
-    "\46\0\7\1\14\0\5\1\5\0\1\1\1\2\12\1\1\0\15\1"+
-    "\1\0\5\1\1\0\1\1\1\0\2\1\1\0\2\1\1\0\154\1"+
-    "\41\0\u016b\1\22\0\100\1\2\0\66\1\50\0\14\1\4\0\20\2"+
-    "\20\0\7\2\14\0\2\2\30\0\3\2\40\0\5\1\1\0\207\1"+
-    "\23\0\12\274\7\0\32\1\4\0\1\2\1\0\32\1\13\0\131\1"+
-    "\3\0\6\1\2\0\6\1\2\0\6\1\2\0\3\1\43\0";
+    "\1\1\1\2\2\0\12\274\41\0\3\2\2\0\12\274\6\0\130\1"+
+    "\10\0\51\1\1\2\1\1\5\0\106\1\12\0\35\1\3\0\14\2"+
+    "\4\0\14\2\12\0\12\274\36\1\2\0\5\1\13\0\54\1\4\0"+
+    "\21\2\7\1\2\2\6\0\12\274\1\2\45\0\27\1\5\2\4\0"+
+    "\65\1\12\2\1\0\35\2\2\0\1\2\12\274\6\0\12\274\15\0"+
+    "\1\1\130\0\5\2\57\1\21\2\7\1\4\0\12\274\21\0\11\2"+
+    "\14\0\3\2\36\1\15\2\2\1\12\274\54\1\16\2\14\0\44\1"+
+    "\24\2\10\0\12\274\3\0\3\1\12\274\44\1\122\0\3\2\1\0"+
+    "\25\2\4\1\1\2\4\1\3\2\2\1\11\0\300\1\47\2\25\0"+
+    "\4\2\u0116\1\2\0\6\1\2\0\46\1\2\0\6\1\2\0\10\1"+
+    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\37\1\2\0\65\1"+
+    "\1\0\7\1\1\0\1\1\3\0\3\1\1\0\7\1\3\0\4\1"+
+    "\2\0\6\1\4\0\15\1\5\0\3\1\1\0\7\1\3\0\13\41"+
+    "\35\0\2\41\5\0\1\41\17\0\2\2\23\0\1\2\12\0\1\41"+
+    "\21\0\1\1\15\0\1\1\20\0\15\1\63\0\15\2\4\0\1\2"+
+    "\3\0\14\2\21\0\1\1\4\0\1\1\2\0\12\1\1\0\1\1"+
+    "\2\0\6\1\6\0\1\1\1\0\1\1\1\0\1\1\1\0\20\1"+
+    "\2\0\4\1\5\0\5\1\4\0\1\1\21\0\51\1\u0a77\0\57\1"+
+    "\1\0\57\1\1\0\205\1\6\0\4\1\3\2\2\1\14\0\46\1"+
+    "\1\0\1\1\5\0\1\1\2\0\70\1\7\0\1\1\17\0\1\2"+
+    "\27\1\11\0\7\1\1\0\7\1\1\0\7\1\1\0\7\1\1\0"+
+    "\7\1\1\0\7\1\1\0\7\1\1\0\7\1\1\0\40\2\u0200\0"+
+    "\1\41\4\0\3\1\31\0\11\1\6\2\1\0\5\1\2\0\5\1"+
+    "\4\0\126\1\2\0\2\2\5\1\1\0\132\1\1\0\4\1\5\0"+
+    "\51\1\3\0\136\1\21\0\33\1\65\0\20\1\u0200\0\u19b6\1\112\0"+
+    "\u51cd\1\63\0\u048d\1\103\0\56\1\2\0\u010d\1\3\0\20\1\12\274"+
+    "\2\1\24\0\57\1\1\2\4\0\12\2\1\0\31\1\7\0\1\2"+
+    "\120\1\2\2\45\0\11\1\2\0\147\1\2\0\4\1\1\0\4\1"+
+    "\14\0\13\1\115\0\12\1\1\2\3\1\1\2\4\1\1\2\27\1"+
+    "\5\2\30\0\64\1\14\0\2\2\62\1\21\2\13\0\12\274\6\0"+
+    "\22\2\6\1\3\0\1\1\4\0\12\274\34\1\10\2\2\0\27\1"+
+    "\15\2\14\0\35\1\3\0\4\2\57\1\16\2\16\0\1\1\12\274"+
+    "\46\0\51\1\16\2\11\0\3\1\1\2\10\1\2\2\2\0\12\274"+
+    "\6\0\27\1\3\0\1\1\1\2\4\0\60\1\1\2\1\1\3\2"+
+    "\2\1\2\2\5\1\2\2\1\1\1\2\1\1\30\0\3\1\2\0"+
+    "\13\1\5\2\2\0\3\1\2\2\12\0\6\1\2\0\6\1\2\0"+
+    "\6\1\11\0\7\1\1\0\7\1\221\0\43\1\10\2\1\0\2\2"+
+    "\2\0\12\274\6\0\u2ba4\1\14\0\27\1\4\0\61\1\4\0\1\170"+
+    "\1\223\1\103\1\165\1\136\1\214\2\0\1\160\1\153\2\0\1\120"+
+    "\1\210\14\0\1\105\1\127\20\0\1\122\7\0\1\256\1\112\5\0"+
+    "\1\143\4\0\51\120\1\110\3\120\1\124\1\220\17\0\1\133\u02c1\0"+
+    "\1\252\277\0\2\123\1\212\3\222\2\211\1\222\1\211\2\222\1\221"+
+    "\21\222\11\213\1\157\7\213\7\204\1\156\1\204\1\246\2\207\1\166"+
+    "\1\246\1\207\1\166\10\246\2\167\5\203\2\155\5\203\1\107\10\202"+
+    "\5\154\3\224\12\251\20\224\3\225\32\227\1\226\2\200\2\234\1\235"+
+    "\2\234\2\235\2\234\1\235\3\200\1\177\2\200\12\250\1\247\1\176"+
+    "\1\171\7\176\1\171\13\176\31\200\7\176\12\250\1\176\5\134\3\245"+
+    "\3\142\1\140\4\142\2\140\10\142\1\140\7\141\1\137\2\141\7\142"+
+    "\16\245\1\135\4\245\1\106\4\244\1\106\5\255\1\254\1\255\3\254"+
+    "\7\255\1\254\23\255\5\264\3\255\6\264\2\255\6\253\5\263\3\262"+
+    "\2\142\7\257\36\142\4\257\5\142\5\245\6\244\2\245\1\244\4\141"+
+    "\13\253\12\244\26\253\15\134\1\243\2\134\1\152\3\237\1\134\2\237"+
+    "\5\151\4\237\4\152\1\151\3\152\1\151\5\152\2\147\1\116\2\147"+
+    "\1\116\1\147\2\116\1\147\1\116\12\147\1\116\4\146\1\115\1\236"+
+    "\1\240\1\150\3\164\1\240\2\164\1\260\2\261\2\164\1\150\1\164"+
+    "\1\150\1\164\1\150\1\164\3\150\1\164\2\150\1\164\1\150\2\164"+
+    "\1\150\1\164\1\150\1\164\1\150\1\164\1\150\1\164\1\150\1\162"+
+    "\2\145\1\162\1\145\2\162\4\145\1\162\7\145\1\162\4\145\1\162"+
+    "\4\145\1\164\1\150\1\164\12\216\1\217\21\216\1\217\3\215\1\217"+
+    "\3\216\1\217\1\216\2\144\2\216\1\217\15\241\4\201\4\206\1\242"+
+    "\1\161\10\242\7\206\6\164\4\113\1\121\37\113\1\121\4\113\25\174"+
+    "\1\131\11\174\21\130\5\174\1\104\12\117\5\174\6\205\4\162\1\163"+
+    "\1\130\5\231\12\232\17\231\1\125\3\114\14\230\1\126\11\173\1\172"+
+    "\5\173\4\233\13\175\2\132\11\173\1\172\31\173\1\172\4\126\4\173"+
+    "\2\172\2\265\1\111\5\265\52\111\u1900\0\u016e\1\2\0\152\1\46\0"+
+    "\7\1\14\0\5\1\5\0\1\1\1\2\12\1\1\0\15\1\1\0"+
+    "\5\1\1\0\1\1\1\0\2\1\1\0\2\1\1\0\154\1\41\0"+
+    "\u016b\1\22\0\100\1\2\0\66\1\50\0\14\1\4\0\20\2\20\0"+
+    "\7\2\14\0\2\2\30\0\3\2\40\0\5\1\1\0\207\1\23\0"+
+    "\12\274\7\0\32\1\4\0\1\2\1\0\32\1\13\0\131\1\3\0"+
+    "\6\1\2\0\6\1\2\0\6\1\2\0\3\1\43\0";
 
   /** 
    * Translates characters to character classes
@@ -30895,6 +30895,7 @@
 
   
 
+
   /** 
    * Unpacks the compressed character translation table.
    *
@@ -30905,7 +30906,7 @@
     char [] map = new char[0x10000];
     int i = 0;  /* index in packed string  */
     int j = 0;  /* index in unpacked array */
-    while (i < 2778) {
+    while (i < 2776) {
       int  count = packed.charAt(i++);
       char value = packed.charAt(i++);
       do map[j++] = value; while (--count > 0);
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.jflex
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.jflex	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.jflex	(working copy)
@@ -34,7 +34,7 @@
  */
 %%
 
-%unicode 6.1
+%unicode 6.3
 %apiprivate
 %type int
 %final
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ASCIITLD.jflex-macro
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ASCIITLD.jflex-macro	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ASCIITLD.jflex-macro	(working copy)
@@ -1,22 +1,22 @@
 /*
- * Copyright 2001-2005 The Apache Software Foundation.
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
  *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
+ *     http://www.apache.org/licenses/LICENSE-2.0
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
 // Generated from IANA Root Zone Database <http://www.internic.net/zones/root.zone>
-// file version from Saturday, July 14, 2012 4:34:14 AM UTC
-// generated on Sunday, July 15, 2012 12:59:44 AM UTC
+// file version from Wednesday, December 4, 2013 4:34:10 AM UTC
+// generated on Wednesday, December 4, 2013 9:07:32 PM UTC
 // by org.apache.lucene.analysis.standard.GenerateJflexTLDMacros
 
 ASCIITLD = "." (
@@ -49,6 +49,7 @@
 	| [bB][gG]
 	| [bB][hH]
 	| [bB][iI]
+	| [bB][iI][kK][eE]
 	| [bB][iI][zZ]
 	| [bB][jJ]
 	| [bB][mM]
@@ -62,6 +63,7 @@
 	| [bB][yY]
 	| [bB][zZ]
 	| [cC][aA]
+	| [cC][aA][mM][eE][rR][aA]
 	| [cC][aA][tT]
 	| [cC][cC]
 	| [cC][dD]
@@ -71,10 +73,13 @@
 	| [cC][iI]
 	| [cC][kK]
 	| [cC][lL]
+	| [cC][lL][oO][tT][hH][iI][nN][gG]
 	| [cC][mM]
 	| [cC][nN]
 	| [cC][oO]
 	| [cC][oO][mM]
+	| [cC][oO][nN][sS][tT][rR][uU][cC][tT][iI][oO][nN]
+	| [cC][oO][nN][tT][rR][aA][cC][tT][oO][rR][sS]
 	| [cC][oO][oO][pP]
 	| [cC][rR]
 	| [cC][uU]
@@ -84,6 +89,8 @@
 	| [cC][yY]
 	| [cC][zZ]
 	| [dD][eE]
+	| [dD][iI][aA][mM][oO][nN][dD][sS]
+	| [dD][iI][rR][eE][cC][tT][oO][rR][yY]
 	| [dD][jJ]
 	| [dD][kK]
 	| [dD][mM]
@@ -93,8 +100,11 @@
 	| [eE][dD][uU]
 	| [eE][eE]
 	| [eE][gG]
+	| [eE][nN][tT][eE][rR][pP][rR][iI][sS][eE][sS]
+	| [eE][qQ][uU][iI][pP][mM][eE][nN][tT]
 	| [eE][rR]
 	| [eE][sS]
+	| [eE][sS][tT][aA][tT][eE]
 	| [eE][tT]
 	| [eE][uU]
 	| [fF][iI]
@@ -104,6 +114,7 @@
 	| [fF][oO]
 	| [fF][rR]
 	| [gG][aA]
+	| [gG][aA][lL][lL][eE][rR][yY]
 	| [gG][bB]
 	| [gG][dD]
 	| [gG][eE]
@@ -118,14 +129,17 @@
 	| [gG][pP]
 	| [gG][qQ]
 	| [gG][rR]
+	| [gG][rR][aA][pP][hH][iI][cC][sS]
 	| [gG][sS]
 	| [gG][tT]
 	| [gG][uU]
+	| [gG][uU][rR][uU]
 	| [gG][wW]
 	| [gG][yY]
 	| [hH][kK]
 	| [hH][mM]
 	| [hH][nN]
+	| [hH][oO][lL][dD][iI][nN][gG][sS]
 	| [hH][rR]
 	| [hH][tT]
 	| [hH][uU]
@@ -150,6 +164,7 @@
 	| [kK][gG]
 	| [kK][hH]
 	| [kK][iI]
+	| [kK][iI][tT][cC][hH][eE][nN]
 	| [kK][mM]
 	| [kK][nN]
 	| [kK][pP]
@@ -158,9 +173,11 @@
 	| [kK][yY]
 	| [kK][zZ]
 	| [lL][aA]
+	| [lL][aA][nN][dD]
 	| [lL][bB]
 	| [lL][cC]
 	| [lL][iI]
+	| [lL][iI][gG][hH][tT][iI][nN][gG]
 	| [lL][kK]
 	| [lL][rR]
 	| [lL][sS]
@@ -172,6 +189,7 @@
 	| [mM][cC]
 	| [mM][dD]
 	| [mM][eE]
+	| [mM][eE][nN][uU]
 	| [mM][gG]
 	| [mM][hH]
 	| [mM][iI][lL]
@@ -214,10 +232,13 @@
 	| [pP][fF]
 	| [pP][gG]
 	| [pP][hH]
+	| [pP][hH][oO][tT][oO][gG][rR][aA][pP][hH][yY]
 	| [pP][kK]
 	| [pP][lL]
+	| [pP][lL][uU][mM][bB][iI][nN][gG]
 	| [pP][mM]
 	| [pP][nN]
+	| [pP][oO][sS][tT]
 	| [pP][rR]
 	| [pP][rR][oO]
 	| [pP][sS]
@@ -235,9 +256,11 @@
 	| [sS][cC]
 	| [sS][dD]
 	| [sS][eE]
+	| [sS][eE][xX][yY]
 	| [sS][gG]
 	| [sS][hH]
 	| [sS][iI]
+	| [sS][iI][nN][gG][lL][eE][sS]
 	| [sS][jJ]
 	| [sS][kK]
 	| [sS][lL]
@@ -251,18 +274,22 @@
 	| [sS][xX]
 	| [sS][yY]
 	| [sS][zZ]
+	| [tT][aA][tT][tT][oO][oO]
 	| [tT][cC]
 	| [tT][dD]
+	| [tT][eE][cC][hH][nN][oO][lL][oO][gG][yY]
 	| [tT][eE][lL]
 	| [tT][fF]
 	| [tT][gG]
 	| [tT][hH]
+	| [tT][iI][pP][sS]
 	| [tT][jJ]
 	| [tT][kK]
 	| [tT][lL]
 	| [tT][mM]
 	| [tT][nN]
 	| [tT][oO]
+	| [tT][oO][dD][aA][yY]
 	| [tT][pP]
 	| [tT][rR]
 	| [tT][rR][aA][vV][eE][lL]
@@ -273,61 +300,62 @@
 	| [uU][aA]
 	| [uU][gG]
 	| [uU][kK]
+	| [uU][nN][oO]
 	| [uU][sS]
 	| [uU][yY]
 	| [uU][zZ]
 	| [vV][aA]
 	| [vV][cC]
 	| [vV][eE]
+	| [vV][eE][nN][tT][uU][rR][eE][sS]
 	| [vV][gG]
 	| [vV][iI]
 	| [vV][nN]
+	| [vV][oO][yY][aA][gG][eE]
 	| [vV][uU]
 	| [wW][fF]
 	| [wW][sS]
-	| [xX][nN]--0[zZ][wW][mM]56[dD]
-	| [xX][nN]--11[bB]5[bB][sS]3[aA]9[aA][jJ]6[gG]
 	| [xX][nN]--3[eE]0[bB]707[eE]
 	| [xX][nN]--45[bB][rR][jJ]9[cC]
-	| [xX][nN]--80[aA][kK][hH][bB][yY][kK][nN][jJ]4[fF]
 	| [xX][nN]--80[aA][oO]21[aA]
+	| [xX][nN]--80[aA][sS][eE][hH][dD][bB]
+	| [xX][nN]--80[aA][sS][wW][gG]
 	| [xX][nN]--90[aA]3[aA][cC]
-	| [xX][nN]--9[tT]4[bB]11[yY][iI]5[aA]
 	| [xX][nN]--[cC][lL][cC][hH][cC]0[eE][aA]0[bB]2[gG]2[aA]9[gG][cC][dD]
-	| [xX][nN]--[dD][eE][bB][aA]0[aA][dD]
 	| [xX][nN]--[fF][iI][qQ][sS]8[sS]
 	| [xX][nN]--[fF][iI][qQ][zZ]9[sS]
 	| [xX][nN]--[fF][pP][cC][rR][jJ]9[cC]3[dD]
 	| [xX][nN]--[fF][zZ][cC]2[cC]9[eE]2[cC]
-	| [xX][nN]--[gG]6[wW]251[dD]
 	| [xX][nN]--[gG][eE][cC][rR][jJ]9[cC]
 	| [xX][nN]--[hH]2[bB][rR][jJ]9[cC]
-	| [xX][nN]--[hH][gG][bB][kK]6[aA][jJ]7[fF]53[bB][bB][aA]
-	| [xX][nN]--[hH][lL][cC][jJ]6[aA][yY][aA]9[eE][sS][cC]7[aA]
+	| [xX][nN]--[jJ]1[aA][mM][hH]
 	| [xX][nN]--[jJ]6[wW]193[gG]
-	| [xX][nN]--[jJ][xX][aA][lL][pP][dD][lL][pP]
-	| [xX][nN]--[kK][gG][bB][eE][cC][hH][tT][vV]
 	| [xX][nN]--[kK][pP][rR][wW]13[dD]
 	| [xX][nN]--[kK][pP][rR][yY]57[dD]
+	| [xX][nN]--[lL]1[aA][cC][cC]
 	| [xX][nN]--[lL][gG][bB][bB][aA][tT]1[aA][dD]8[jJ]
 	| [xX][nN]--[mM][gG][bB]9[aA][wW][bB][fF]
+	| [xX][nN]--[mM][gG][bB][aA]3[aA]4[fF]16[aA]
 	| [xX][nN]--[mM][gG][bB][aA][aA][mM]7[aA]8[hH]
 	| [xX][nN]--[mM][gG][bB][aA][yY][hH]7[gG][pP][aA]
 	| [xX][nN]--[mM][gG][bB][bB][hH]1[aA]71[eE]
 	| [xX][nN]--[mM][gG][bB][cC]0[aA]9[aA][zZ][cC][gG]
 	| [xX][nN]--[mM][gG][bB][eE][rR][pP]4[aA]5[dD]4[aA][rR]
+	| [xX][nN]--[mM][gG][bB][xX]4[cC][dD]0[aA][bB]
+	| [xX][nN]--[nN][gG][bB][cC]5[aA][zZ][dD]
 	| [xX][nN]--[oO]3[cC][wW]4[hH]
 	| [xX][nN]--[oO][gG][bB][pP][fF]8[fF][lL]
 	| [xX][nN]--[pP]1[aA][iI]
 	| [xX][nN]--[pP][gG][bB][sS]0[dD][hH]
+	| [xX][nN]--[qQ]9[jJ][yY][bB]4[cC]
 	| [xX][nN]--[sS]9[bB][rR][jJ]9[cC]
+	| [xX][nN]--[uU][nN][uU][pP]4[yY]
 	| [xX][nN]--[wW][gG][bB][hH]1[cC]
 	| [xX][nN]--[wW][gG][bB][lL]6[aA]
 	| [xX][nN]--[xX][kK][cC]2[aA][lL]3[hH][yY][eE]2[aA]
 	| [xX][nN]--[xX][kK][cC]2[dD][lL]3[aA]5[eE][eE]0[hH]
 	| [xX][nN]--[yY][fF][rR][oO]4[iI]67[oO]
 	| [xX][nN]--[yY][gG][bB][iI]2[aA][mM][mM][xX]
-	| [xX][nN]--[zZ][cC][kK][zZ][aA][hH]
 	| [xX][xX][xX]
 	| [yY][eE]
 	| [yY][tT]
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.java	(working copy)
@@ -1,4 +1,4 @@
-/* The following code was generated by JFlex. */
+/* The following code was generated by JFlex 1.5.0-SNAPSHOT */
 
 package org.apache.lucene.analysis.standard;
 
@@ -58,64 +58,63 @@
    * Translates characters to character classes
    */
   private static final String ZZ_CMAP_PACKED = 
-    "\11\0\1\0\1\15\1\0\1\0\1\14\22\0\1\0\5\0\1\5"+
-    "\1\3\4\0\1\11\1\7\1\4\1\11\12\2\6\0\1\6\32\12"+
-    "\4\0\1\10\1\0\32\12\57\0\1\12\12\0\1\12\4\0\1\12"+
-    "\5\0\27\12\1\0\37\12\1\0\u0128\12\2\0\22\12\34\0\136\12"+
-    "\2\0\11\12\2\0\7\12\16\0\2\12\16\0\5\12\11\0\1\12"+
-    "\213\0\1\12\13\0\1\12\1\0\3\12\1\0\1\12\1\0\24\12"+
-    "\1\0\54\12\1\0\10\12\2\0\32\12\14\0\202\12\12\0\71\12"+
-    "\2\0\2\12\2\0\2\12\3\0\46\12\2\0\2\12\67\0\46\12"+
-    "\2\0\1\12\7\0\47\12\110\0\33\12\5\0\3\12\56\0\32\12"+
-    "\5\0\13\12\25\0\12\2\7\0\143\12\1\0\1\12\17\0\2\12"+
-    "\11\0\12\2\3\12\23\0\1\12\1\0\33\12\123\0\46\12\u015f\0"+
-    "\65\12\3\0\1\12\22\0\1\12\7\0\12\12\4\0\12\2\25\0"+
-    "\10\12\2\0\2\12\2\0\26\12\1\0\7\12\1\0\1\12\3\0"+
-    "\4\12\42\0\2\12\1\0\3\12\4\0\12\2\2\12\23\0\6\12"+
-    "\4\0\2\12\2\0\26\12\1\0\7\12\1\0\2\12\1\0\2\12"+
-    "\1\0\2\12\37\0\4\12\1\0\1\12\7\0\12\2\2\0\3\12"+
-    "\20\0\7\12\1\0\1\12\1\0\3\12\1\0\26\12\1\0\7\12"+
-    "\1\0\2\12\1\0\5\12\3\0\1\12\22\0\1\12\17\0\1\12"+
-    "\5\0\12\2\25\0\10\12\2\0\2\12\2\0\26\12\1\0\7\12"+
-    "\1\0\2\12\2\0\4\12\3\0\1\12\36\0\2\12\1\0\3\12"+
-    "\4\0\12\2\25\0\6\12\3\0\3\12\1\0\4\12\3\0\2\12"+
-    "\1\0\1\12\1\0\2\12\3\0\2\12\3\0\3\12\3\0\10\12"+
-    "\1\0\3\12\55\0\11\2\25\0\10\12\1\0\3\12\1\0\27\12"+
-    "\1\0\12\12\1\0\5\12\46\0\2\12\4\0\12\2\25\0\10\12"+
-    "\1\0\3\12\1\0\27\12\1\0\12\12\1\0\5\12\44\0\1\12"+
-    "\1\0\2\12\4\0\12\2\25\0\10\12\1\0\3\12\1\0\27\12"+
-    "\1\0\20\12\46\0\2\12\4\0\12\2\25\0\22\12\3\0\30\12"+
-    "\1\0\11\12\1\0\1\12\2\0\7\12\71\0\1\1\60\12\1\1"+
-    "\2\12\14\1\7\12\11\1\12\2\47\0\2\12\1\0\1\12\2\0"+
-    "\2\12\1\0\1\12\2\0\1\12\6\0\4\12\1\0\7\12\1\0"+
-    "\3\12\1\0\1\12\1\0\1\12\2\0\2\12\1\0\4\12\1\0"+
-    "\2\12\11\0\1\12\2\0\5\12\1\0\1\12\11\0\12\2\2\0"+
-    "\2\12\42\0\1\12\37\0\12\2\26\0\10\12\1\0\42\12\35\0"+
-    "\4\12\164\0\42\12\1\0\5\12\1\0\2\12\25\0\12\2\6\0"+
-    "\6\12\112\0\46\12\12\0\47\12\11\0\132\12\5\0\104\12\5\0"+
-    "\122\12\6\0\7\12\1\0\77\12\1\0\1\12\1\0\4\12\2\0"+
-    "\7\12\1\0\1\12\1\0\4\12\2\0\47\12\1\0\1\12\1\0"+
-    "\4\12\2\0\37\12\1\0\1\12\1\0\4\12\2\0\7\12\1\0"+
-    "\1\12\1\0\4\12\2\0\7\12\1\0\7\12\1\0\27\12\1\0"+
-    "\37\12\1\0\1\12\1\0\4\12\2\0\7\12\1\0\47\12\1\0"+
-    "\23\12\16\0\11\2\56\0\125\12\14\0\u026c\12\2\0\10\12\12\0"+
-    "\32\12\5\0\113\12\225\0\64\12\54\0\12\2\46\0\12\2\6\0"+
-    "\130\12\10\0\51\12\u0557\0\234\12\4\0\132\12\6\0\26\12\2\0"+
-    "\6\12\2\0\46\12\2\0\6\12\2\0\10\12\1\0\1\12\1\0"+
-    "\1\12\1\0\1\12\1\0\37\12\2\0\65\12\1\0\7\12\1\0"+
-    "\1\12\3\0\3\12\1\0\7\12\3\0\4\12\2\0\6\12\4\0"+
-    "\15\12\5\0\3\12\1\0\7\12\202\0\1\12\202\0\1\12\4\0"+
-    "\1\12\2\0\12\12\1\0\1\12\3\0\5\12\6\0\1\12\1\0"+
-    "\1\12\1\0\1\12\1\0\4\12\1\0\3\12\1\0\7\12\u0ecb\0"+
-    "\2\12\52\0\5\12\12\0\1\13\124\13\10\13\2\13\2\13\132\13"+
-    "\1\13\3\13\6\13\50\13\3\13\1\0\136\12\21\0\30\12\70\0"+
-    "\20\13\u0100\0\200\13\200\0\u19b6\13\12\13\100\0\u51a6\13\132\13\u048d\12"+
-    "\u0773\0\u2ba4\12\u215c\0\u012e\13\322\13\7\12\14\0\5\12\5\0\1\12"+
-    "\1\0\12\12\1\0\15\12\1\0\5\12\1\0\1\12\1\0\2\12"+
-    "\1\0\2\12\1\0\154\12\41\0\u016b\12\22\0\100\12\2\0\66\12"+
-    "\50\0\14\12\164\0\3\12\1\0\1\12\1\0\207\12\23\0\12\2"+
-    "\7\0\32\12\6\0\32\12\12\0\1\13\72\13\37\12\3\0\6\12"+
-    "\2\0\6\12\2\0\6\12\2\0\3\12\43\0";
+    "\46\0\1\5\1\3\4\0\1\11\1\7\1\4\1\11\12\2\6\0"+
+    "\1\6\32\12\4\0\1\10\1\0\32\12\57\0\1\12\12\0\1\12"+
+    "\4\0\1\12\5\0\27\12\1\0\37\12\1\0\u0128\12\2\0\22\12"+
+    "\34\0\136\12\2\0\11\12\2\0\7\12\16\0\2\12\16\0\5\12"+
+    "\11\0\1\12\213\0\1\12\13\0\1\12\1\0\3\12\1\0\1\12"+
+    "\1\0\24\12\1\0\54\12\1\0\10\12\2\0\32\12\14\0\202\12"+
+    "\12\0\71\12\2\0\2\12\2\0\2\12\3\0\46\12\2\0\2\12"+
+    "\67\0\46\12\2\0\1\12\7\0\47\12\110\0\33\12\5\0\3\12"+
+    "\56\0\32\12\5\0\13\12\25\0\12\2\7\0\143\12\1\0\1\12"+
+    "\17\0\2\12\11\0\12\2\3\12\23\0\1\12\1\0\33\12\123\0"+
+    "\46\12\u015f\0\65\12\3\0\1\12\22\0\1\12\7\0\12\12\4\0"+
+    "\12\2\25\0\10\12\2\0\2\12\2\0\26\12\1\0\7\12\1\0"+
+    "\1\12\3\0\4\12\42\0\2\12\1\0\3\12\4\0\12\2\2\12"+
+    "\23\0\6\12\4\0\2\12\2\0\26\12\1\0\7\12\1\0\2\12"+
+    "\1\0\2\12\1\0\2\12\37\0\4\12\1\0\1\12\7\0\12\2"+
+    "\2\0\3\12\20\0\7\12\1\0\1\12\1\0\3\12\1\0\26\12"+
+    "\1\0\7\12\1\0\2\12\1\0\5\12\3\0\1\12\22\0\1\12"+
+    "\17\0\1\12\5\0\12\2\25\0\10\12\2\0\2\12\2\0\26\12"+
+    "\1\0\7\12\1\0\2\12\2\0\4\12\3\0\1\12\36\0\2\12"+
+    "\1\0\3\12\4\0\12\2\25\0\6\12\3\0\3\12\1\0\4\12"+
+    "\3\0\2\12\1\0\1\12\1\0\2\12\3\0\2\12\3\0\3\12"+
+    "\3\0\10\12\1\0\3\12\55\0\11\2\25\0\10\12\1\0\3\12"+
+    "\1\0\27\12\1\0\12\12\1\0\5\12\46\0\2\12\4\0\12\2"+
+    "\25\0\10\12\1\0\3\12\1\0\27\12\1\0\12\12\1\0\5\12"+
+    "\44\0\1\12\1\0\2\12\4\0\12\2\25\0\10\12\1\0\3\12"+
+    "\1\0\27\12\1\0\20\12\46\0\2\12\4\0\12\2\25\0\22\12"+
+    "\3\0\30\12\1\0\11\12\1\0\1\12\2\0\7\12\71\0\1\1"+
+    "\60\12\1\1\2\12\14\1\7\12\11\1\12\2\47\0\2\12\1\0"+
+    "\1\12\2\0\2\12\1\0\1\12\2\0\1\12\6\0\4\12\1\0"+
+    "\7\12\1\0\3\12\1\0\1\12\1\0\1\12\2\0\2\12\1\0"+
+    "\4\12\1\0\2\12\11\0\1\12\2\0\5\12\1\0\1\12\11\0"+
+    "\12\2\2\0\2\12\42\0\1\12\37\0\12\2\26\0\10\12\1\0"+
+    "\42\12\35\0\4\12\164\0\42\12\1\0\5\12\1\0\2\12\25\0"+
+    "\12\2\6\0\6\12\112\0\46\12\12\0\47\12\11\0\132\12\5\0"+
+    "\104\12\5\0\122\12\6\0\7\12\1\0\77\12\1\0\1\12\1\0"+
+    "\4\12\2\0\7\12\1\0\1\12\1\0\4\12\2\0\47\12\1\0"+
+    "\1\12\1\0\4\12\2\0\37\12\1\0\1\12\1\0\4\12\2\0"+
+    "\7\12\1\0\1\12\1\0\4\12\2\0\7\12\1\0\7\12\1\0"+
+    "\27\12\1\0\37\12\1\0\1\12\1\0\4\12\2\0\7\12\1\0"+
+    "\47\12\1\0\23\12\16\0\11\2\56\0\125\12\14\0\u026c\12\2\0"+
+    "\10\12\12\0\32\12\5\0\113\12\225\0\64\12\54\0\12\2\46\0"+
+    "\12\2\6\0\130\12\10\0\51\12\u0557\0\234\12\4\0\132\12\6\0"+
+    "\26\12\2\0\6\12\2\0\46\12\2\0\6\12\2\0\10\12\1\0"+
+    "\1\12\1\0\1\12\1\0\1\12\1\0\37\12\2\0\65\12\1\0"+
+    "\7\12\1\0\1\12\3\0\3\12\1\0\7\12\3\0\4\12\2\0"+
+    "\6\12\4\0\15\12\5\0\3\12\1\0\7\12\202\0\1\12\202\0"+
+    "\1\12\4\0\1\12\2\0\12\12\1\0\1\12\3\0\5\12\6\0"+
+    "\1\12\1\0\1\12\1\0\1\12\1\0\4\12\1\0\3\12\1\0"+
+    "\7\12\u0ecb\0\2\12\52\0\5\12\12\0\1\13\124\13\10\13\2\13"+
+    "\2\13\132\13\1\13\3\13\6\13\50\13\3\13\1\0\136\12\21\0"+
+    "\30\12\70\0\20\13\u0100\0\200\13\200\0\u19b6\13\12\13\100\0\u51a6\13"+
+    "\132\13\u048d\12\u0773\0\u2ba4\12\u215c\0\u012e\13\322\13\7\12\14\0\5\12"+
+    "\5\0\1\12\1\0\12\12\1\0\15\12\1\0\5\12\1\0\1\12"+
+    "\1\0\2\12\1\0\2\12\1\0\154\12\41\0\u016b\12\22\0\100\12"+
+    "\2\0\66\12\50\0\14\12\164\0\3\12\1\0\1\12\1\0\207\12"+
+    "\23\0\12\2\7\0\32\12\6\0\32\12\12\0\1\13\72\13\37\12"+
+    "\3\0\6\12\2\0\6\12\2\0\6\12\2\0\3\12\43\0";
 
   /** 
    * Translates characters to character classes
@@ -128,13 +127,12 @@
   private static final int [] ZZ_ACTION = zzUnpackAction();
 
   private static final String ZZ_ACTION_PACKED_0 =
-    "\1\0\1\1\3\2\1\3\1\1\13\0\1\2\3\4"+
-    "\2\0\1\5\1\0\1\5\3\4\6\5\1\6\1\4"+
-    "\2\7\1\10\1\0\1\10\3\0\2\10\1\11\1\12"+
-    "\1\4";
+    "\1\0\1\1\3\2\1\3\13\0\1\2\3\4\2\0"+
+    "\1\5\1\0\1\5\3\4\6\5\1\6\1\4\2\7"+
+    "\1\10\1\0\1\10\3\0\2\10\1\11\1\12\1\4";
 
   private static int [] zzUnpackAction() {
-    int [] result = new int[51];
+    int [] result = new int[50];
     int offset = 0;
     offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
     return result;
@@ -159,16 +157,16 @@
   private static final int [] ZZ_ROWMAP = zzUnpackRowMap();
 
   private static final String ZZ_ROWMAP_PACKED_0 =
-    "\0\0\0\16\0\34\0\52\0\70\0\16\0\106\0\124"+
-    "\0\142\0\160\0\176\0\214\0\232\0\250\0\266\0\304"+
-    "\0\322\0\340\0\356\0\374\0\u010a\0\u0118\0\u0126\0\u0134"+
-    "\0\u0142\0\u0150\0\u015e\0\u016c\0\u017a\0\u0188\0\u0196\0\u01a4"+
-    "\0\u01b2\0\u01c0\0\u01ce\0\u01dc\0\u01ea\0\u01f8\0\322\0\u0206"+
-    "\0\u0214\0\u0222\0\u0230\0\u023e\0\u024c\0\u025a\0\124\0\214"+
-    "\0\u0268\0\u0276\0\u0284";
+    "\0\0\0\14\0\30\0\44\0\60\0\14\0\74\0\110"+
+    "\0\124\0\140\0\154\0\170\0\204\0\220\0\234\0\250"+
+    "\0\264\0\300\0\314\0\330\0\344\0\360\0\374\0\u0108"+
+    "\0\u0114\0\u0120\0\u012c\0\u0138\0\u0144\0\u0150\0\u015c\0\u0168"+
+    "\0\u0174\0\u0180\0\u018c\0\u0198\0\u01a4\0\250\0\u01b0\0\u01bc"+
+    "\0\u01c8\0\u01d4\0\u01e0\0\u01ec\0\u01f8\0\74\0\154\0\u0204"+
+    "\0\u0210\0\u021c";
 
   private static int [] zzUnpackRowMap() {
-    int [] result = new int[51];
+    int [] result = new int[50];
     int offset = 0;
     offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
     return result;
@@ -191,49 +189,49 @@
   private static final int [] ZZ_TRANS = zzUnpackTrans();
 
   private static final String ZZ_TRANS_PACKED_0 =
-    "\1\2\1\3\1\4\7\2\1\5\1\6\1\7\1\2"+
-    "\17\0\2\3\1\0\1\10\1\0\1\11\2\12\1\13"+
-    "\1\3\4\0\1\3\1\4\1\0\1\14\1\0\1\11"+
-    "\2\15\1\16\1\4\4\0\1\3\1\4\1\17\1\20"+
-    "\1\21\1\22\2\12\1\13\1\23\20\0\1\2\1\0"+
-    "\1\24\1\25\7\0\1\26\4\0\2\27\7\0\1\27"+
-    "\4\0\1\30\1\31\7\0\1\32\5\0\1\33\7\0"+
-    "\1\13\4\0\1\34\1\35\7\0\1\36\4\0\1\37"+
-    "\1\40\7\0\1\41\4\0\1\42\1\43\7\0\1\44"+
-    "\15\0\1\45\4\0\1\24\1\25\7\0\1\46\15\0"+
-    "\1\47\4\0\2\27\7\0\1\50\4\0\1\3\1\4"+
-    "\1\17\1\10\1\21\1\22\2\12\1\13\1\23\4\0"+
-    "\2\24\1\0\1\51\1\0\1\11\2\52\1\0\1\24"+
-    "\4\0\1\24\1\25\1\0\1\53\1\0\1\11\2\54"+
-    "\1\55\1\25\4\0\1\24\1\25\1\0\1\51\1\0"+
-    "\1\11\2\52\1\0\1\26\4\0\2\27\1\0\1\56"+
-    "\2\0\1\56\2\0\1\27\4\0\2\30\1\0\1\52"+
-    "\1\0\1\11\2\52\1\0\1\30\4\0\1\30\1\31"+
-    "\1\0\1\54\1\0\1\11\2\54\1\55\1\31\4\0"+
-    "\1\30\1\31\1\0\1\52\1\0\1\11\2\52\1\0"+
-    "\1\32\5\0\1\33\1\0\1\55\2\0\3\55\1\33"+
-    "\4\0\2\34\1\0\1\57\1\0\1\11\2\12\1\13"+
-    "\1\34\4\0\1\34\1\35\1\0\1\60\1\0\1\11"+
-    "\2\15\1\16\1\35\4\0\1\34\1\35\1\0\1\57"+
-    "\1\0\1\11\2\12\1\13\1\36\4\0\2\37\1\0"+
-    "\1\12\1\0\1\11\2\12\1\13\1\37\4\0\1\37"+
-    "\1\40\1\0\1\15\1\0\1\11\2\15\1\16\1\40"+
-    "\4\0\1\37\1\40\1\0\1\12\1\0\1\11\2\12"+
-    "\1\13\1\41\4\0\2\42\1\0\1\13\2\0\3\13"+
-    "\1\42\4\0\1\42\1\43\1\0\1\16\2\0\3\16"+
-    "\1\43\4\0\1\42\1\43\1\0\1\13\2\0\3\13"+
-    "\1\44\6\0\1\17\6\0\1\45\4\0\1\24\1\25"+
-    "\1\0\1\61\1\0\1\11\2\52\1\0\1\26\4\0"+
-    "\2\27\1\0\1\56\2\0\1\56\2\0\1\50\4\0"+
-    "\2\24\7\0\1\24\4\0\2\30\7\0\1\30\4\0"+
-    "\2\34\7\0\1\34\4\0\2\37\7\0\1\37\4\0"+
-    "\2\42\7\0\1\42\4\0\2\62\7\0\1\62\4\0"+
-    "\2\24\7\0\1\63\4\0\2\62\1\0\1\56\2\0"+
-    "\1\56\2\0\1\62\4\0\2\24\1\0\1\61\1\0"+
-    "\1\11\2\52\1\0\1\24\3\0";
+    "\1\2\1\3\1\4\7\2\1\5\1\6\15\0\2\3"+
+    "\1\0\1\7\1\0\1\10\2\11\1\12\1\3\2\0"+
+    "\1\3\1\4\1\0\1\13\1\0\1\10\2\14\1\15"+
+    "\1\4\2\0\1\3\1\4\1\16\1\17\1\20\1\21"+
+    "\2\11\1\12\1\22\2\0\1\23\1\24\7\0\1\25"+
+    "\2\0\2\26\7\0\1\26\2\0\1\27\1\30\7\0"+
+    "\1\31\3\0\1\32\7\0\1\12\2\0\1\33\1\34"+
+    "\7\0\1\35\2\0\1\36\1\37\7\0\1\40\2\0"+
+    "\1\41\1\42\7\0\1\43\13\0\1\44\2\0\1\23"+
+    "\1\24\7\0\1\45\13\0\1\46\2\0\2\26\7\0"+
+    "\1\47\2\0\1\3\1\4\1\16\1\7\1\20\1\21"+
+    "\2\11\1\12\1\22\2\0\2\23\1\0\1\50\1\0"+
+    "\1\10\2\51\1\0\1\23\2\0\1\23\1\24\1\0"+
+    "\1\52\1\0\1\10\2\53\1\54\1\24\2\0\1\23"+
+    "\1\24\1\0\1\50\1\0\1\10\2\51\1\0\1\25"+
+    "\2\0\2\26\1\0\1\55\2\0\1\55\2\0\1\26"+
+    "\2\0\2\27\1\0\1\51\1\0\1\10\2\51\1\0"+
+    "\1\27\2\0\1\27\1\30\1\0\1\53\1\0\1\10"+
+    "\2\53\1\54\1\30\2\0\1\27\1\30\1\0\1\51"+
+    "\1\0\1\10\2\51\1\0\1\31\3\0\1\32\1\0"+
+    "\1\54\2\0\3\54\1\32\2\0\2\33\1\0\1\56"+
+    "\1\0\1\10\2\11\1\12\1\33\2\0\1\33\1\34"+
+    "\1\0\1\57\1\0\1\10\2\14\1\15\1\34\2\0"+
+    "\1\33\1\34\1\0\1\56\1\0\1\10\2\11\1\12"+
+    "\1\35\2\0\2\36\1\0\1\11\1\0\1\10\2\11"+
+    "\1\12\1\36\2\0\1\36\1\37\1\0\1\14\1\0"+
+    "\1\10\2\14\1\15\1\37\2\0\1\36\1\37\1\0"+
+    "\1\11\1\0\1\10\2\11\1\12\1\40\2\0\2\41"+
+    "\1\0\1\12\2\0\3\12\1\41\2\0\1\41\1\42"+
+    "\1\0\1\15\2\0\3\15\1\42\2\0\1\41\1\42"+
+    "\1\0\1\12\2\0\3\12\1\43\4\0\1\16\6\0"+
+    "\1\44\2\0\1\23\1\24\1\0\1\60\1\0\1\10"+
+    "\2\51\1\0\1\25\2\0\2\26\1\0\1\55\2\0"+
+    "\1\55\2\0\1\47\2\0\2\23\7\0\1\23\2\0"+
+    "\2\27\7\0\1\27\2\0\2\33\7\0\1\33\2\0"+
+    "\2\36\7\0\1\36\2\0\2\41\7\0\1\41\2\0"+
+    "\2\61\7\0\1\61\2\0\2\23\7\0\1\62\2\0"+
+    "\2\61\1\0\1\55\2\0\1\55\2\0\1\61\2\0"+
+    "\2\23\1\0\1\60\1\0\1\10\2\51\1\0\1\23"+
+    "\1\0";
 
   private static int [] zzUnpackTrans() {
-    int [] result = new int[658];
+    int [] result = new int[552];
     int offset = 0;
     offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
     return result;
@@ -271,11 +269,11 @@
   private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();
 
   private static final String ZZ_ATTRIBUTE_PACKED_0 =
-    "\1\0\1\11\3\1\1\11\1\1\13\0\4\1\2\0"+
-    "\1\1\1\0\17\1\1\0\1\1\3\0\5\1";
+    "\1\0\1\11\3\1\1\11\13\0\4\1\2\0\1\1"+
+    "\1\0\17\1\1\0\1\1\3\0\5\1";
 
   private static int [] zzUnpackAttribute() {
-    int [] result = new int[51];
+    int [] result = new int[50];
     int offset = 0;
     offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
     return result;
@@ -372,7 +370,6 @@
 
   /**
    * Creates a new scanner
-   * There is also a java.io.InputStream version of this constructor.
    *
    * @param   in  the java.io.Reader to read input from.
    */
@@ -380,7 +377,6 @@
     this.zzReader = in;
   }
 
-  
 
   /** 
    * Unpacks the compressed character translation table.
@@ -392,7 +388,7 @@
     char [] map = new char[0x10000];
     int i = 0;  /* index in packed string  */
     int j = 0;  /* index in unpacked array */
-    while (i < 1154) {
+    while (i < 1138) {
       int  count = packed.charAt(i++);
       char value = packed.charAt(i++);
       do map[j++] = value; while (--count > 0);
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.jflex
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.jflex	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/ClassicTokenizerImpl.jflex	(working copy)
@@ -116,8 +116,6 @@
 // Chinese and Japanese (but NOT Korean, which is included in [:letter:])
 CJ         = [\u3100-\u312f\u3040-\u309F\u30A0-\u30FF\u31F0-\u31FF\u3300-\u337f\u3400-\u4dbf\u4e00-\u9fff\uf900-\ufaff\uff65-\uff9f]
 
-WHITESPACE = \r\n | [ \r\n\t\f]
-
 %%
 
 {ALPHANUM}                                                     { return ALPHANUM; }
@@ -131,4 +129,4 @@
 {ACRONYM_DEP}                                                  { return ACRONYM_DEP; }
 
 /** Ignore the rest */
-. | {WHITESPACE}                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
+[^]                                                            { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/READ_BEFORE_REGENERATING.txt
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/READ_BEFORE_REGENERATING.txt	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/READ_BEFORE_REGENERATING.txt	(working copy)
@@ -18,4 +18,4 @@
 
 WARNING: if you change StandardTokenizerImpl*.jflex or UAX29URLEmailTokenizer
       and need to regenerate the tokenizer, only use the trunk version
-      of JFlex 1.5 (with a minimum SVN revision 607) at the moment!
+      of JFlex 1.5 (with a minimum SVN revision 722) at the moment!
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/SUPPLEMENTARY.jflex-macro
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/SUPPLEMENTARY.jflex-macro	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/SUPPLEMENTARY.jflex-macro	(working copy)
@@ -1,19 +1,19 @@
 /*
- * Copyright 2010 The Apache Software Foundation.
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
  *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
+ *     http://www.apache.org/licenses/LICENSE-2.0
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-
 // Generated using ICU4J 52.1.0.0
 // by org.apache.lucene.analysis.icu.GenerateJFlexSupplementaryMacros
 
@@ -39,6 +39,12 @@
 	| ([\ud834][\uDD73-\uDD7A])
 	| ([\udb40][\uDC01\uDC20-\uDC7F])
 )
+NumericSupp = (
+	  ([\ud805][\uDEC0-\uDEC9])
+	| ([\ud804][\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9])
+	| ([\ud835][\uDFCE-\uDFFF])
+	| ([\ud801][\uDCA0-\uDCA9])
+)
 ExtendSupp = (
 	  ([\ud81b][\uDF51-\uDF7E\uDF8F-\uDF92])
 	| ([\ud805][\uDEAB-\uDEB7])
@@ -48,12 +54,6 @@
 	| ([\udb40][\uDD00-\uDDEF])
 	| ([\ud802][\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F])
 )
-NumericSupp = (
-	  ([\ud805][\uDEC0-\uDEC9])
-	| ([\ud804][\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9])
-	| ([\ud835][\uDFCE-\uDFFF])
-	| ([\ud801][\uDCA0-\uDCA9])
-)
 KatakanaSupp = (
 	  ([\ud82c][\uDC00])
 )
@@ -129,3 +129,15 @@
 	  ([\ud83c][\uDE00])
 	| ([\ud82c][\uDC01])
 )
+SingleQuoteSupp = (
+	  []
+)
+DoubleQuoteSupp = (
+	  []
+)
+HebrewLetterSupp = (
+	  []
+)
+RegionalIndicatorSupp = (
+	  ([\ud83c][\uDDE6-\uDDFF])
+)
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.java	(working copy)
@@ -1,4 +1,4 @@
-/* The following code was generated by JFlex. */
+/* The following code was generated by JFlex 1.5.0-SNAPSHOT */
 
 package org.apache.lucene.analysis.standard;
 
@@ -34,6 +34,8 @@
  *       Asian languages, including Thai, Lao, Myanmar, and Khmer</li>
  *   <li>&lt;IDEOGRAPHIC&gt;: A single CJKV ideographic character</li>
  *   <li>&lt;HIRAGANA&gt;: A single hiragana character</li>
+ *   <li>&lt;KATAKANA&gt;: A sequence of katakana characters</li>
+ *   <li>&lt;HANGUL&gt;: A sequence of Hangul characters</li>
  * </ul>
  */
 
@@ -62,149 +64,149 @@
    * Translates characters to character classes
    */
   private static final String ZZ_CMAP_PACKED = 
-    "\47\0\1\202\4\0\1\201\1\0\1\202\1\0\12\176\1\200\1\201"+
-    "\5\0\32\174\4\0\1\203\1\0\32\174\57\0\1\174\2\0\1\175"+
-    "\7\0\1\174\1\0\1\200\2\0\1\174\5\0\27\174\1\0\37\174"+
-    "\1\0\u01ca\174\4\0\14\174\16\0\5\174\7\0\1\174\1\0\1\174"+
-    "\21\0\160\175\5\174\1\0\2\174\2\0\4\174\1\201\7\0\1\174"+
-    "\1\200\3\174\1\0\1\174\1\0\24\174\1\0\123\174\1\0\213\174"+
-    "\1\0\7\175\236\174\11\0\46\174\2\0\1\174\7\0\47\174\1\0"+
-    "\1\201\7\0\55\175\1\0\1\175\1\0\2\175\1\0\2\175\1\0"+
-    "\1\175\10\0\33\174\5\0\4\174\1\200\13\0\5\175\7\0\2\201"+
-    "\2\0\13\175\5\0\53\174\25\175\12\176\1\0\1\176\1\201\1\0"+
-    "\2\174\1\175\143\174\1\0\1\174\7\175\1\175\1\0\6\175\2\174"+
-    "\2\175\1\0\4\175\2\174\12\176\3\174\2\0\1\174\17\0\1\175"+
-    "\1\174\1\175\36\174\33\175\2\0\131\174\13\175\1\174\16\0\12\176"+
-    "\41\174\11\175\2\174\2\0\1\201\1\0\1\174\5\0\26\174\4\175"+
-    "\1\174\11\175\1\174\3\175\1\174\5\175\22\0\31\174\3\175\104\0"+
-    "\1\174\1\0\13\174\67\0\33\175\1\0\4\175\66\174\3\175\1\174"+
-    "\22\175\1\174\7\175\12\174\2\175\2\0\12\176\1\0\7\174\1\0"+
-    "\7\174\1\0\3\175\1\0\10\174\2\0\2\174\2\0\26\174\1\0"+
-    "\7\174\1\0\1\174\3\0\4\174\2\0\1\175\1\174\7\175\2\0"+
-    "\2\175\2\0\3\175\1\174\10\0\1\175\4\0\2\174\1\0\3\174"+
-    "\2\175\2\0\12\176\2\174\17\0\3\175\1\0\6\174\4\0\2\174"+
-    "\2\0\26\174\1\0\7\174\1\0\2\174\1\0\2\174\1\0\2\174"+
-    "\2\0\1\175\1\0\5\175\4\0\2\175\2\0\3\175\3\0\1\175"+
-    "\7\0\4\174\1\0\1\174\7\0\12\176\2\175\3\174\1\175\13\0"+
-    "\3\175\1\0\11\174\1\0\3\174\1\0\26\174\1\0\7\174\1\0"+
-    "\2\174\1\0\5\174\2\0\1\175\1\174\10\175\1\0\3\175\1\0"+
-    "\3\175\2\0\1\174\17\0\2\174\2\175\2\0\12\176\21\0\3\175"+
-    "\1\0\10\174\2\0\2\174\2\0\26\174\1\0\7\174\1\0\2\174"+
-    "\1\0\5\174\2\0\1\175\1\174\7\175\2\0\2\175\2\0\3\175"+
-    "\10\0\2\175\4\0\2\174\1\0\3\174\2\175\2\0\12\176\1\0"+
-    "\1\174\20\0\1\175\1\174\1\0\6\174\3\0\3\174\1\0\4\174"+
-    "\3\0\2\174\1\0\1\174\1\0\2\174\3\0\2\174\3\0\3\174"+
-    "\3\0\14\174\4\0\5\175\3\0\3\175\1\0\4\175\2\0\1\174"+
-    "\6\0\1\175\16\0\12\176\21\0\3\175\1\0\10\174\1\0\3\174"+
-    "\1\0\27\174\1\0\12\174\1\0\5\174\3\0\1\174\7\175\1\0"+
-    "\3\175\1\0\4\175\7\0\2\175\1\0\2\174\6\0\2\174\2\175"+
-    "\2\0\12\176\22\0\2\175\1\0\10\174\1\0\3\174\1\0\27\174"+
-    "\1\0\12\174\1\0\5\174\2\0\1\175\1\174\7\175\1\0\3\175"+
-    "\1\0\4\175\7\0\2\175\7\0\1\174\1\0\2\174\2\175\2\0"+
-    "\12\176\1\0\2\174\17\0\2\175\1\0\10\174\1\0\3\174\1\0"+
-    "\51\174\2\0\1\174\7\175\1\0\3\175\1\0\4\175\1\174\10\0"+
-    "\1\175\10\0\2\174\2\175\2\0\12\176\12\0\6\174\2\0\2\175"+
-    "\1\0\22\174\3\0\30\174\1\0\11\174\1\0\1\174\2\0\7\174"+
-    "\3\0\1\175\4\0\6\175\1\0\1\175\1\0\10\175\22\0\2\175"+
-    "\15\0\60\204\1\205\2\204\7\205\5\0\7\204\10\205\1\0\12\176"+
-    "\47\0\2\204\1\0\1\204\2\0\2\204\1\0\1\204\2\0\1\204"+
-    "\6\0\4\204\1\0\7\204\1\0\3\204\1\0\1\204\1\0\1\204"+
-    "\2\0\2\204\1\0\4\204\1\205\2\204\6\205\1\0\2\205\1\204"+
-    "\2\0\5\204\1\0\1\204\1\0\6\205\2\0\12\176\2\0\4\204"+
-    "\40\0\1\174\27\0\2\175\6\0\12\176\13\0\1\175\1\0\1\175"+
-    "\1\0\1\175\4\0\2\175\10\174\1\0\44\174\4\0\24\175\1\0"+
-    "\2\175\5\174\13\175\1\0\44\175\11\0\1\175\71\0\53\204\24\205"+
-    "\1\204\12\176\6\0\6\204\4\205\4\204\3\205\1\204\3\205\2\204"+
-    "\7\205\3\204\4\205\15\204\14\205\1\204\1\205\12\176\4\205\2\204"+
-    "\46\174\1\0\1\174\5\0\1\174\2\0\53\174\1\0\4\174\u0100\210"+
-    "\111\174\1\0\4\174\2\0\7\174\1\0\1\174\1\0\4\174\2\0"+
-    "\51\174\1\0\4\174\2\0\41\174\1\0\4\174\2\0\7\174\1\0"+
-    "\1\174\1\0\4\174\2\0\17\174\1\0\71\174\1\0\4\174\2\0"+
-    "\103\174\2\0\3\175\40\0\20\174\20\0\125\174\14\0\u026c\174\2\0"+
-    "\21\174\1\0\32\174\5\0\113\174\3\0\3\174\17\0\15\174\1\0"+
-    "\4\174\3\175\13\0\22\174\3\175\13\0\22\174\2\175\14\0\15\174"+
-    "\1\0\3\174\1\0\2\175\14\0\64\204\40\205\3\0\1\204\4\0"+
-    "\1\204\1\205\2\0\12\176\41\0\3\175\2\0\12\176\6\0\130\174"+
-    "\10\0\51\174\1\175\1\174\5\0\106\174\12\0\35\174\3\0\14\175"+
-    "\4\0\14\175\12\0\12\176\36\204\2\0\5\204\13\0\54\204\4\0"+
-    "\21\205\7\204\2\205\6\0\12\176\1\204\3\0\2\204\40\0\27\174"+
-    "\5\175\4\0\65\204\12\205\1\0\35\205\2\0\1\175\12\176\6\0"+
-    "\12\176\6\0\16\204\122\0\5\175\57\174\21\175\7\174\4\0\12\176"+
-    "\21\0\11\175\14\0\3\175\36\174\15\175\2\174\12\176\54\174\16\175"+
-    "\14\0\44\174\24\175\10\0\12\176\3\0\3\174\12\176\44\174\122\0"+
-    "\3\175\1\0\25\175\4\174\1\175\4\174\3\175\2\174\11\0\300\174"+
-    "\47\175\25\0\4\175\u0116\174\2\0\6\174\2\0\46\174\2\0\6\174"+
-    "\2\0\10\174\1\0\1\174\1\0\1\174\1\0\1\174\1\0\37\174"+
-    "\2\0\65\174\1\0\7\174\1\0\1\174\3\0\3\174\1\0\7\174"+
-    "\3\0\4\174\2\0\6\174\4\0\15\174\5\0\3\174\1\0\7\174"+
-    "\17\0\2\175\2\175\10\0\2\202\12\0\1\202\2\0\1\200\2\0"+
-    "\5\175\20\0\2\203\3\0\1\201\17\0\1\203\13\0\5\175\5\0"+
-    "\6\175\1\0\1\174\15\0\1\174\20\0\15\174\63\0\41\175\21\0"+
-    "\1\174\4\0\1\174\2\0\12\174\1\0\1\174\3\0\5\174\6\0"+
-    "\1\174\1\0\1\174\1\0\1\174\1\0\4\174\1\0\13\174\2\0"+
-    "\4\174\5\0\5\174\4\0\1\174\21\0\51\174\u032d\0\64\174\u0716\0"+
-    "\57\174\1\0\57\174\1\0\205\174\6\0\4\174\3\175\2\174\14\0"+
-    "\46\174\1\0\1\174\5\0\1\174\2\0\70\174\7\0\1\174\17\0"+
-    "\1\175\27\174\11\0\7\174\1\0\7\174\1\0\7\174\1\0\7\174"+
-    "\1\0\7\174\1\0\7\174\1\0\7\174\1\0\7\174\1\0\40\175"+
-    "\57\0\1\174\120\0\32\206\1\0\131\206\14\0\326\206\57\0\1\174"+
-    "\1\0\1\206\31\0\11\206\4\175\2\175\1\0\5\177\2\0\3\206"+
-    "\1\174\1\174\4\0\126\207\2\0\2\175\2\177\3\207\133\177\1\0"+
-    "\4\177\5\0\51\174\3\0\136\210\21\0\33\174\65\0\20\177\37\0"+
-    "\101\0\37\0\121\0\57\177\1\0\130\177\250\0\u19b6\206\112\0\u51cd\206"+
-    "\63\0\u048d\174\103\0\56\174\2\0\u010d\174\3\0\20\174\12\176\2\174"+
-    "\24\0\57\174\4\175\1\0\12\175\1\0\31\174\7\0\1\175\120\174"+
-    "\2\175\45\0\11\174\2\0\147\174\2\0\4\174\1\0\4\174\14\0"+
-    "\13\174\115\0\12\174\1\175\3\174\1\175\4\174\1\175\27\174\5\175"+
-    "\30\0\64\174\14\0\2\175\62\174\21\175\13\0\12\176\6\0\22\175"+
-    "\6\174\3\0\1\174\4\0\12\176\34\174\10\175\2\0\27\174\15\175"+
-    "\14\0\35\210\3\0\4\175\57\174\16\175\16\0\1\174\12\176\46\0"+
-    "\51\174\16\175\11\0\3\174\1\175\10\174\2\175\2\0\12\176\6\0"+
-    "\33\204\1\205\4\0\60\204\1\205\1\204\3\205\2\204\2\205\5\204"+
-    "\2\205\1\204\1\205\1\204\30\0\5\204\13\174\5\175\2\0\3\174"+
-    "\2\175\12\0\6\174\2\0\6\174\2\0\6\174\11\0\7\174\1\0"+
-    "\7\174\221\0\43\174\10\175\1\0\2\175\2\0\12\176\6\0\u2ba4\210"+
-    "\14\0\27\210\4\0\61\210\4\0\1\44\1\40\1\67\1\64\1\33"+
-    "\1\30\2\0\1\24\1\21\2\0\1\17\1\15\14\0\1\3\1\6"+
-    "\20\0\1\156\7\0\1\111\1\10\5\0\1\1\1\172\3\0\1\163"+
+    "\42\0\1\213\4\0\1\212\4\0\1\203\1\0\1\204\1\0\12\200"+
+    "\1\202\1\203\5\0\32\176\4\0\1\205\1\0\32\176\57\0\1\176"+
+    "\2\0\1\177\7\0\1\176\1\0\1\202\2\0\1\176\5\0\27\176"+
+    "\1\0\37\176\1\0\u01ca\176\4\0\14\176\5\0\1\202\10\0\5\176"+
+    "\7\0\1\176\1\0\1\176\21\0\160\177\5\176\1\0\2\176\2\0"+
+    "\4\176\1\203\7\0\1\176\1\202\3\176\1\0\1\176\1\0\24\176"+
+    "\1\0\123\176\1\0\213\176\1\0\7\177\236\176\11\0\46\176\2\0"+
+    "\1\176\7\0\47\176\1\0\1\203\7\0\55\177\1\0\1\177\1\0"+
+    "\2\177\1\0\2\177\1\0\1\177\10\0\33\214\5\0\3\214\1\176"+
+    "\1\202\13\0\5\177\7\0\2\203\2\0\13\177\1\0\1\177\3\0"+
+    "\53\176\25\177\12\200\1\0\1\200\1\203\1\0\2\176\1\177\143\176"+
+    "\1\0\1\176\7\177\1\177\1\0\6\177\2\176\2\177\1\0\4\177"+
+    "\2\176\12\200\3\176\2\0\1\176\17\0\1\177\1\176\1\177\36\176"+
+    "\33\177\2\0\131\176\13\177\1\176\16\0\12\200\41\176\11\177\2\176"+
+    "\2\0\1\203\1\0\1\176\5\0\26\176\4\177\1\176\11\177\1\176"+
+    "\3\177\1\176\5\177\22\0\31\176\3\177\104\0\1\176\1\0\13\176"+
+    "\67\0\33\177\1\0\4\177\66\176\3\177\1\176\22\177\1\176\7\177"+
+    "\12\176\2\177\2\0\12\200\1\0\7\176\1\0\7\176\1\0\3\177"+
+    "\1\0\10\176\2\0\2\176\2\0\26\176\1\0\7\176\1\0\1\176"+
+    "\3\0\4\176\2\0\1\177\1\176\7\177\2\0\2\177\2\0\3\177"+
+    "\1\176\10\0\1\177\4\0\2\176\1\0\3\176\2\177\2\0\12\200"+
+    "\2\176\17\0\3\177\1\0\6\176\4\0\2\176\2\0\26\176\1\0"+
+    "\7\176\1\0\2\176\1\0\2\176\1\0\2\176\2\0\1\177\1\0"+
+    "\5\177\4\0\2\177\2\0\3\177\3\0\1\177\7\0\4\176\1\0"+
+    "\1\176\7\0\12\200\2\177\3\176\1\177\13\0\3\177\1\0\11\176"+
+    "\1\0\3\176\1\0\26\176\1\0\7\176\1\0\2\176\1\0\5\176"+
+    "\2\0\1\177\1\176\10\177\1\0\3\177\1\0\3\177\2\0\1\176"+
+    "\17\0\2\176\2\177\2\0\12\200\21\0\3\177\1\0\10\176\2\0"+
+    "\2\176\2\0\26\176\1\0\7\176\1\0\2\176\1\0\5\176\2\0"+
+    "\1\177\1\176\7\177\2\0\2\177\2\0\3\177\10\0\2\177\4\0"+
+    "\2\176\1\0\3\176\2\177\2\0\12\200\1\0\1\176\20\0\1\177"+
+    "\1\176\1\0\6\176\3\0\3\176\1\0\4\176\3\0\2\176\1\0"+
+    "\1\176\1\0\2\176\3\0\2\176\3\0\3\176\3\0\14\176\4\0"+
+    "\5\177\3\0\3\177\1\0\4\177\2\0\1\176\6\0\1\177\16\0"+
+    "\12\200\21\0\3\177\1\0\10\176\1\0\3\176\1\0\27\176\1\0"+
+    "\12\176\1\0\5\176\3\0\1\176\7\177\1\0\3\177\1\0\4\177"+
+    "\7\0\2\177\1\0\2\176\6\0\2\176\2\177\2\0\12\200\22\0"+
+    "\2\177\1\0\10\176\1\0\3\176\1\0\27\176\1\0\12\176\1\0"+
+    "\5\176\2\0\1\177\1\176\7\177\1\0\3\177\1\0\4\177\7\0"+
+    "\2\177\7\0\1\176\1\0\2\176\2\177\2\0\12\200\1\0\2\176"+
+    "\17\0\2\177\1\0\10\176\1\0\3\176\1\0\51\176\2\0\1\176"+
+    "\7\177\1\0\3\177\1\0\4\177\1\176\10\0\1\177\10\0\2\176"+
+    "\2\177\2\0\12\200\12\0\6\176\2\0\2\177\1\0\22\176\3\0"+
+    "\30\176\1\0\11\176\1\0\1\176\2\0\7\176\3\0\1\177\4\0"+
+    "\6\177\1\0\1\177\1\0\10\177\22\0\2\177\15\0\60\206\1\207"+
+    "\2\206\7\207\5\0\7\206\10\207\1\0\12\200\47\0\2\206\1\0"+
+    "\1\206\2\0\2\206\1\0\1\206\2\0\1\206\6\0\4\206\1\0"+
+    "\7\206\1\0\3\206\1\0\1\206\1\0\1\206\2\0\2\206\1\0"+
+    "\4\206\1\207\2\206\6\207\1\0\2\207\1\206\2\0\5\206\1\0"+
+    "\1\206\1\0\6\207\2\0\12\200\2\0\4\206\40\0\1\176\27\0"+
+    "\2\177\6\0\12\200\13\0\1\177\1\0\1\177\1\0\1\177\4\0"+
+    "\2\177\10\176\1\0\44\176\4\0\24\177\1\0\2\177\5\176\13\177"+
+    "\1\0\44\177\11\0\1\177\71\0\53\206\24\207\1\206\12\200\6\0"+
+    "\6\206\4\207\4\206\3\207\1\206\3\207\2\206\7\207\3\206\4\207"+
+    "\15\206\14\207\1\206\1\207\12\200\4\207\2\206\46\176\1\0\1\176"+
+    "\5\0\1\176\2\0\53\176\1\0\4\176\u0100\215\111\176\1\0\4\176"+
+    "\2\0\7\176\1\0\1\176\1\0\4\176\2\0\51\176\1\0\4\176"+
+    "\2\0\41\176\1\0\4\176\2\0\7\176\1\0\1\176\1\0\4\176"+
+    "\2\0\17\176\1\0\71\176\1\0\4\176\2\0\103\176\2\0\3\177"+
+    "\40\0\20\176\20\0\125\176\14\0\u026c\176\2\0\21\176\1\0\32\176"+
+    "\5\0\113\176\3\0\3\176\17\0\15\176\1\0\4\176\3\177\13\0"+
+    "\22\176\3\177\13\0\22\176\2\177\14\0\15\176\1\0\3\176\1\0"+
+    "\2\177\14\0\64\206\40\207\3\0\1\206\4\0\1\206\1\207\2\0"+
+    "\12\200\41\0\3\177\1\177\1\0\12\200\6\0\130\176\10\0\51\176"+
+    "\1\177\1\176\5\0\106\176\12\0\35\176\3\0\14\177\4\0\14\177"+
+    "\12\0\12\200\36\206\2\0\5\206\13\0\54\206\4\0\21\207\7\206"+
+    "\2\207\6\0\12\200\1\206\3\0\2\206\40\0\27\176\5\177\4\0"+
+    "\65\206\12\207\1\0\35\207\2\0\1\177\12\200\6\0\12\200\6\0"+
+    "\16\206\122\0\5\177\57\176\21\177\7\176\4\0\12\200\21\0\11\177"+
+    "\14\0\3\177\36\176\15\177\2\176\12\200\54\176\16\177\14\0\44\176"+
+    "\24\177\10\0\12\200\3\0\3\176\12\200\44\176\122\0\3\177\1\0"+
+    "\25\177\4\176\1\177\4\176\3\177\2\176\11\0\300\176\47\177\25\0"+
+    "\4\177\u0116\176\2\0\6\176\2\0\46\176\2\0\6\176\2\0\10\176"+
+    "\1\0\1\176\1\0\1\176\1\0\1\176\1\0\37\176\2\0\65\176"+
+    "\1\0\7\176\1\0\1\176\3\0\3\176\1\0\7\176\3\0\4\176"+
+    "\2\0\6\176\4\0\15\176\5\0\3\176\1\0\7\176\17\0\2\177"+
+    "\2\177\10\0\2\204\12\0\1\204\2\0\1\202\2\0\5\177\20\0"+
+    "\2\205\3\0\1\203\17\0\1\205\13\0\5\177\1\0\12\177\1\0"+
+    "\1\176\15\0\1\176\20\0\15\176\63\0\41\177\21\0\1\176\4\0"+
+    "\1\176\2\0\12\176\1\0\1\176\3\0\5\176\6\0\1\176\1\0"+
+    "\1\176\1\0\1\176\1\0\4\176\1\0\13\176\2\0\4\176\5\0"+
+    "\5\176\4\0\1\176\21\0\51\176\u032d\0\64\176\u0716\0\57\176\1\0"+
+    "\57\176\1\0\205\176\6\0\4\176\3\177\2\176\14\0\46\176\1\0"+
+    "\1\176\5\0\1\176\2\0\70\176\7\0\1\176\17\0\1\177\27\176"+
+    "\11\0\7\176\1\0\7\176\1\0\7\176\1\0\7\176\1\0\7\176"+
+    "\1\0\7\176\1\0\7\176\1\0\7\176\1\0\40\177\57\0\1\176"+
+    "\120\0\32\210\1\0\131\210\14\0\326\210\57\0\1\176\1\0\1\210"+
+    "\31\0\11\210\6\177\1\0\5\201\2\0\3\210\1\176\1\176\4\0"+
+    "\126\211\2\0\2\177\2\201\3\211\133\201\1\0\4\201\5\0\51\176"+
+    "\3\0\136\215\21\0\33\176\65\0\20\201\320\0\57\201\1\0\130\201"+
+    "\250\0\u19b6\210\112\0\u51cd\210\63\0\u048d\176\103\0\56\176\2\0\u010d\176"+
+    "\3\0\20\176\12\200\2\176\24\0\57\176\4\177\1\0\12\177\1\0"+
+    "\31\176\7\0\1\177\120\176\2\177\45\0\11\176\2\0\147\176\2\0"+
+    "\4\176\1\0\4\176\14\0\13\176\115\0\12\176\1\177\3\176\1\177"+
+    "\4\176\1\177\27\176\5\177\30\0\64\176\14\0\2\177\62\176\21\177"+
+    "\13\0\12\200\6\0\22\177\6\176\3\0\1\176\4\0\12\200\34\176"+
+    "\10\177\2\0\27\176\15\177\14\0\35\215\3\0\4\177\57\176\16\177"+
+    "\16\0\1\176\12\200\46\0\51\176\16\177\11\0\3\176\1\177\10\176"+
+    "\2\177\2\0\12\200\6\0\33\206\1\207\4\0\60\206\1\207\1\206"+
+    "\3\207\2\206\2\207\5\206\2\207\1\206\1\207\1\206\30\0\5\206"+
+    "\13\176\5\177\2\0\3\176\2\177\12\0\6\176\2\0\6\176\2\0"+
+    "\6\176\11\0\7\176\1\0\7\176\221\0\43\176\10\177\1\0\2\177"+
+    "\2\0\12\200\6\0\u2ba4\215\14\0\27\215\4\0\61\215\4\0\1\44"+
+    "\1\40\1\67\1\64\1\33\1\30\2\0\1\24\1\21\2\0\1\17"+
+    "\1\15\14\0\1\3\1\6\20\0\1\156\7\0\1\111\1\10\5\0"+
+    "\1\1\1\172\3\0\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
     "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
     "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
     "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
-    "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
-    "\1\164\1\163\1\163\1\163\1\170\1\166\17\0\1\160\u02c1\0\1\114"+
-    "\277\0\1\157\1\115\1\16\3\167\2\62\1\167\1\62\2\167\1\36"+
-    "\21\167\2\106\7\117\1\116\7\117\7\102\1\37\1\102\1\130\2\66"+
-    "\1\65\1\130\1\66\1\65\10\130\2\107\5\103\2\75\5\103\1\22"+
-    "\10\53\5\23\3\41\12\147\20\41\3\63\32\43\1\42\2\61\2\154"+
-    "\1\155\2\154\2\155\2\154\1\155\3\61\1\60\2\61\12\110\1\126"+
-    "\1\50\1\45\1\110\6\50\1\45\13\50\31\61\7\50\12\150\1\50"+
-    "\5\13\3\127\3\101\1\100\4\101\2\100\10\101\1\100\7\35\1\34"+
-    "\2\35\7\101\16\127\1\141\4\152\1\4\4\151\1\4\5\140\1\137"+
-    "\1\140\3\137\7\140\1\137\23\140\5\113\3\140\6\113\2\113\6\112"+
-    "\5\112\3\134\2\101\7\133\36\101\4\133\5\101\5\127\6\125\2\127"+
-    "\1\125\4\35\13\136\12\151\26\136\15\13\1\135\2\13\1\173\3\142"+
-    "\1\13\2\142\5\161\4\142\4\162\1\161\3\162\1\161\5\162\2\70"+
-    "\1\73\2\70\1\73\1\70\2\73\1\70\1\73\12\70\1\73\4\5"+
-    "\1\144\1\143\1\145\1\12\3\165\1\145\2\165\1\131\2\132\2\165"+
-    "\1\12\1\165\1\12\1\165\1\12\1\165\3\12\1\165\2\12\1\165"+
-    "\1\12\2\165\1\12\1\165\1\12\1\165\1\12\1\165\1\12\1\165"+
-    "\1\12\1\76\2\72\1\76\1\72\2\76\4\72\1\76\7\72\1\76"+
-    "\4\72\1\76\4\72\1\165\1\12\1\165\12\31\1\57\21\31\1\57"+
-    "\3\32\1\57\3\31\1\57\1\31\2\2\2\31\1\57\15\124\4\47"+
-    "\4\54\1\146\1\56\10\146\7\54\6\165\4\25\1\27\37\25\1\27"+
-    "\4\25\25\105\1\171\11\105\21\26\5\105\1\7\12\55\5\105\6\104"+
-    "\4\76\1\77\1\26\5\123\12\121\17\123\1\74\3\71\14\120\1\11"+
-    "\11\46\1\52\5\46\4\122\13\51\2\14\11\46\1\52\31\46\1\52"+
-    "\4\11\4\46\2\52\2\153\1\20\5\153\52\20\u1900\0\u016e\206\2\0"+
-    "\152\206\46\0\7\174\14\0\5\174\5\0\1\174\1\175\12\174\1\0"+
-    "\15\174\1\0\5\174\1\0\1\174\1\0\2\174\1\0\2\174\1\0"+
-    "\154\174\41\0\u016b\174\22\0\100\174\2\0\66\174\50\0\14\174\4\0"+
-    "\20\175\1\201\2\0\1\200\1\201\13\0\7\175\14\0\2\203\30\0"+
-    "\3\203\1\201\1\0\1\202\1\0\1\201\1\200\32\0\5\174\1\0"+
-    "\207\174\2\0\1\175\7\0\1\202\4\0\1\201\1\0\1\202\1\0"+
-    "\12\176\1\200\1\201\5\0\32\174\4\0\1\203\1\0\32\174\13\0"+
-    "\70\177\2\175\37\210\3\0\6\210\2\0\6\210\2\0\6\210\2\0"+
-    "\3\210\34\0\3\175\4\0";
+    "\1\163\1\163\1\163\1\163\1\164\1\163\1\163\1\163\1\170\1\166"+
+    "\17\0\1\160\u02c1\0\1\114\277\0\1\157\1\115\1\16\3\167\2\62"+
+    "\1\167\1\62\2\167\1\36\21\167\2\106\7\117\1\116\7\117\7\102"+
+    "\1\37\1\102\1\140\2\66\1\65\1\140\1\66\1\65\10\140\2\107"+
+    "\5\103\2\75\5\103\1\22\10\53\5\23\3\41\12\122\20\41\3\63"+
+    "\32\43\1\42\2\61\2\126\1\127\2\126\2\127\2\126\1\127\3\61"+
+    "\1\60\2\61\12\110\1\136\1\50\1\45\1\110\6\50\1\45\13\50"+
+    "\31\61\7\50\12\123\1\50\5\13\3\137\3\101\1\100\4\101\2\100"+
+    "\10\101\1\100\7\35\1\34\2\35\7\101\16\137\1\151\4\124\1\4"+
+    "\4\121\1\4\5\150\1\147\1\150\3\147\7\150\1\147\23\150\5\113"+
+    "\3\150\6\113\2\113\6\112\5\112\3\144\2\101\7\143\36\101\4\143"+
+    "\5\101\5\137\6\135\2\137\1\135\4\35\13\146\12\121\14\146\12\175"+
+    "\15\174\1\145\2\174\1\173\3\152\1\13\2\152\5\161\4\152\4\162"+
+    "\1\161\3\162\1\161\5\162\2\70\1\73\2\70\1\73\1\70\2\73"+
+    "\1\70\1\73\12\70\1\73\4\5\1\154\1\153\1\155\1\12\3\165"+
+    "\1\155\2\165\1\141\2\142\2\165\1\12\1\165\1\12\1\165\1\12"+
+    "\1\165\3\12\1\165\2\12\1\165\1\12\2\165\1\12\1\165\1\12"+
+    "\1\165\1\12\1\165\1\12\1\165\1\12\1\76\2\72\1\76\1\72"+
+    "\2\76\4\72\1\76\7\72\1\76\4\72\1\76\4\72\1\165\1\12"+
+    "\1\165\12\31\1\57\21\31\1\57\3\32\1\57\3\31\1\57\1\31"+
+    "\2\2\2\31\1\57\15\134\4\47\4\54\1\120\1\56\10\120\7\54"+
+    "\6\165\4\25\1\27\37\25\1\27\4\25\25\105\1\171\11\105\21\26"+
+    "\5\105\1\7\12\55\5\105\6\104\4\76\1\77\1\26\5\133\12\131"+
+    "\17\133\1\74\3\71\14\130\1\11\11\46\1\52\5\46\4\132\13\51"+
+    "\2\14\11\46\1\52\31\46\1\52\4\11\4\46\2\52\2\125\1\20"+
+    "\5\125\52\20\u1900\0\u016e\210\2\0\152\210\46\0\7\176\14\0\5\176"+
+    "\5\0\1\214\1\177\12\214\1\0\15\214\1\0\5\214\1\0\1\214"+
+    "\1\0\2\214\1\0\2\214\1\0\12\214\142\176\41\0\u016b\176\22\0"+
+    "\100\176\2\0\66\176\50\0\14\176\4\0\20\177\1\203\2\0\1\202"+
+    "\1\203\13\0\7\177\14\0\2\205\30\0\3\205\1\203\1\0\1\204"+
+    "\1\0\1\203\1\202\32\0\5\176\1\0\207\176\2\0\1\177\7\0"+
+    "\1\204\4\0\1\203\1\0\1\204\1\0\12\200\1\202\1\203\5\0"+
+    "\32\176\4\0\1\205\1\0\32\176\13\0\70\201\2\177\37\215\3\0"+
+    "\6\215\2\0\6\215\2\0\6\215\2\0\3\215\34\0\3\177\4\0";
 
   /** 
    * Translates characters to character classes
@@ -218,11 +220,12 @@
 
   private static final String ZZ_ACTION_PACKED_0 =
     "\1\0\26\1\1\2\1\3\1\4\1\1\1\5\1\6"+
-    "\1\7\1\10\20\0\1\2\1\0\1\2\12\0\1\3"+
-    "\21\0\1\2\115\0";
+    "\1\7\1\2\1\10\21\0\1\2\1\0\1\2\12\0"+
+    "\1\3\10\0\1\4\1\2\11\0\1\2\55\0\1\2"+
+    "\74\0\1\2\1\1\36\0";
 
   private static int [] zzUnpackAction() {
-    int [] result = new int[156];
+    int [] result = new int[221];
     int offset = 0;
     offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
     return result;
@@ -247,29 +250,37 @@
   private static final int [] ZZ_ROWMAP = zzUnpackRowMap();
 
   private static final String ZZ_ROWMAP_PACKED_0 =
-    "\0\0\0\211\0\u0112\0\u019b\0\u0224\0\u02ad\0\u0336\0\u03bf"+
-    "\0\u0448\0\u04d1\0\u055a\0\u05e3\0\u066c\0\u06f5\0\u077e\0\u0807"+
-    "\0\u0890\0\u0919\0\u09a2\0\u0a2b\0\u0ab4\0\u0b3d\0\u0bc6\0\u0c4f"+
-    "\0\u0cd8\0\u0d61\0\u0dea\0\u0e73\0\u0efc\0\u0f85\0\u100e\0\u0112"+
-    "\0\u019b\0\u1097\0\u1120\0\u0336\0\u03bf\0\u0448\0\u04d1\0\u11a9"+
-    "\0\u1232\0\u12bb\0\u1344\0\u077e\0\u13cd\0\u1456\0\u14df\0\u1568"+
-    "\0\u15f1\0\u167a\0\u1703\0\u02ad\0\u178c\0\u1815\0\u066c\0\u189e"+
-    "\0\u1927\0\u19b0\0\u1a39\0\u1ac2\0\u1b4b\0\u1bd4\0\u1c5d\0\u1ce6"+
-    "\0\u1d6f\0\u1df8\0\u1e81\0\u1f0a\0\u1f93\0\u201c\0\u20a5\0\u212e"+
-    "\0\u21b7\0\u2240\0\u22c9\0\u2352\0\u23db\0\u0dea\0\u2464\0\u24ed"+
-    "\0\u2576\0\u25ff\0\u2688\0\u2711\0\u279a\0\u2823\0\u28ac\0\u2935"+
-    "\0\u29be\0\u2a47\0\u2ad0\0\u2b59\0\u2be2\0\u2c6b\0\u2cf4\0\u2d7d"+
-    "\0\u2e06\0\u2e8f\0\u2f18\0\u2fa1\0\u302a\0\u30b3\0\u313c\0\u31c5"+
-    "\0\u324e\0\u32d7\0\u3360\0\u33e9\0\u3472\0\u34fb\0\u3584\0\u360d"+
-    "\0\u3696\0\u371f\0\u37a8\0\u3831\0\u38ba\0\u3943\0\u39cc\0\u3a55"+
-    "\0\u3ade\0\u3b67\0\u3bf0\0\u3c79\0\u3d02\0\u3d8b\0\u3e14\0\u3e9d"+
-    "\0\u3f26\0\u3faf\0\u4038\0\u40c1\0\u414a\0\u41d3\0\u425c\0\u42e5"+
-    "\0\u436e\0\u43f7\0\u4480\0\u4509\0\u4592\0\u461b\0\u46a4\0\u472d"+
-    "\0\u47b6\0\u483f\0\u48c8\0\u4951\0\u49da\0\u4a63\0\u4aec\0\u4b75"+
-    "\0\u4bfe\0\u4c87\0\u4d10\0\u4d99";
+    "\0\0\0\216\0\u011c\0\u01aa\0\u0238\0\u02c6\0\u0354\0\u03e2"+
+    "\0\u0470\0\u04fe\0\u058c\0\u061a\0\u06a8\0\u0736\0\u07c4\0\u0852"+
+    "\0\u08e0\0\u096e\0\u09fc\0\u0a8a\0\u0b18\0\u0ba6\0\u0c34\0\u0cc2"+
+    "\0\u0d50\0\u0dde\0\u0e6c\0\u0efa\0\u0f88\0\u1016\0\u10a4\0\u1132"+
+    "\0\u11c0\0\u011c\0\u01aa\0\u124e\0\u12dc\0\u0354\0\u03e2\0\u0470"+
+    "\0\u04fe\0\u136a\0\u13f8\0\u1486\0\u1514\0\u07c4\0\u15a2\0\u1630"+
+    "\0\u16be\0\u174c\0\u17da\0\u1868\0\u18f6\0\u02c6\0\u1984\0\u1a12"+
+    "\0\u06a8\0\u1aa0\0\u1b2e\0\u1bbc\0\u1c4a\0\u1cd8\0\u1d66\0\u1df4"+
+    "\0\u1e82\0\u1f10\0\u1f9e\0\u202c\0\u20ba\0\u2148\0\u21d6\0\u2264"+
+    "\0\u22f2\0\u2380\0\u240e\0\u249c\0\u252a\0\u25b8\0\u2646\0\u26d4"+
+    "\0\u2762\0\u0e6c\0\u27f0\0\u287e\0\u290c\0\u299a\0\u2a28\0\u2ab6"+
+    "\0\u2b44\0\u2bd2\0\u2c60\0\u2cee\0\u2d7c\0\u2e0a\0\u2e98\0\u2f26"+
+    "\0\u2fb4\0\u3042\0\u30d0\0\u315e\0\u31ec\0\u327a\0\u3308\0\u3396"+
+    "\0\u3424\0\u34b2\0\u3540\0\u35ce\0\u365c\0\u36ea\0\u3778\0\u3806"+
+    "\0\u3894\0\u3922\0\u39b0\0\u3a3e\0\u3acc\0\u3b5a\0\u3be8\0\u3c76"+
+    "\0\u3d04\0\u3d92\0\u3e20\0\u3eae\0\u3f3c\0\u3fca\0\u4058\0\u40e6"+
+    "\0\u4174\0\u4202\0\u4290\0\u431e\0\u43ac\0\u443a\0\u44c8\0\u4556"+
+    "\0\u45e4\0\u4672\0\u4700\0\u478e\0\u481c\0\u48aa\0\u4938\0\u49c6"+
+    "\0\u4a54\0\u4ae2\0\u4b70\0\u4bfe\0\u4c8c\0\u4d1a\0\u4da8\0\u4e36"+
+    "\0\u4ec4\0\u4f52\0\u4fe0\0\u506e\0\u50fc\0\u518a\0\u5218\0\u52a6"+
+    "\0\u5334\0\u53c2\0\u5450\0\u54de\0\u556c\0\u55fa\0\u5688\0\u5716"+
+    "\0\u57a4\0\u5832\0\u58c0\0\u594e\0\u59dc\0\u5a6a\0\u5af8\0\u5b86"+
+    "\0\u5c14\0\u5ca2\0\u5d30\0\u5dbe\0\u5e4c\0\u5eda\0\u5f68\0\u5ff6"+
+    "\0\u6084\0\u6112\0\u61a0\0\u622e\0\u62bc\0\u634a\0\u63d8\0\u6466"+
+    "\0\u64f4\0\u6582\0\u6610\0\u669e\0\u672c\0\u67ba\0\u6848\0\u68d6"+
+    "\0\u6964\0\u69f2\0\u6a80\0\u6b0e\0\u6b9c\0\u6c2a\0\u6cb8\0\u6d46"+
+    "\0\u6dd4\0\u6e62\0\u6ef0\0\u6f7e\0\u700c\0\u709a\0\u7128\0\u71b6"+
+    "\0\u7244\0\u72d2\0\u7360\0\u73ee\0\u747c";
 
   private static int [] zzUnpackRowMap() {
-    int [] result = new int[156];
+    int [] result = new int[221];
     int offset = 0;
     offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
     return result;
@@ -297,419 +308,589 @@
     "\3\2\1\13\2\2\1\14\4\2\1\15\3\2\1\16"+
     "\17\2\1\17\2\2\1\20\66\2\1\21\1\2\1\22"+
     "\2\2\1\23\1\24\1\2\1\25\1\2\1\26\1\2"+
-    "\1\27\1\2\1\30\1\2\1\31\1\32\3\2\1\33"+
-    "\2\34\1\35\1\36\1\37\213\0\1\30\2\0\1\30"+
-    "\4\0\1\30\16\0\1\30\15\0\1\30\20\0\1\30"+
-    "\1\0\1\30\31\0\1\30\4\0\1\30\10\0\2\30"+
-    "\15\0\2\30\10\0\1\30\21\0\2\30\5\0\1\30"+
-    "\2\0\1\30\3\0\2\30\10\0\4\30\1\0\3\30"+
-    "\1\0\1\30\2\0\1\30\2\0\1\30\4\0\4\30"+
-    "\1\0\2\30\1\0\1\30\2\0\1\30\1\0\1\30"+
-    "\2\0\4\30\2\0\3\30\1\0\2\30\1\0\3\30"+
-    "\5\0\4\30\2\0\10\30\1\0\1\30\2\0\4\30"+
-    "\1\0\2\30\1\0\1\30\1\0\2\30\4\0\1\30"+
-    "\3\0\1\30\24\0\1\30\4\0\1\30\11\0\1\30"+
-    "\22\0\1\30\3\0\1\30\27\0\1\30\63\0\1\30"+
-    "\24\0\1\30\3\0\4\30\1\0\1\30\1\0\1\31"+
-    "\2\0\1\30\1\0\2\30\2\0\2\30\2\0\3\30"+
-    "\1\0\1\30\1\0\1\30\2\0\4\30\1\0\3\30"+
-    "\1\0\1\30\1\0\3\30\1\0\2\30\1\0\4\30"+
-    "\1\0\2\30\2\0\10\30\1\0\2\30\1\0\11\30"+
-    "\1\0\10\30\1\0\13\30\1\31\1\0\1\30\1\0"+
-    "\1\30\1\0\2\30\2\0\1\30\1\0\1\30\3\0"+
-    "\1\30\33\0\1\30\17\0\1\30\23\0\1\30\23\0"+
-    "\1\30\6\0\3\30\37\0\1\30\7\0\1\30\23\0"+
-    "\1\30\1\0\2\30\1\0\1\30\1\0\4\30\1\0"+
-    "\1\30\1\0\1\30\1\0\2\30\1\0\3\30\1\0"+
-    "\2\30\1\0\4\30\1\0\3\30\1\0\17\30\1\0"+
-    "\2\30\1\0\21\30\1\0\2\30\1\0\41\30\1\0"+
-    "\1\30\1\0\2\30\2\0\1\30\1\0\1\30\1\0"+
-    "\1\30\1\0\1\30\33\0\1\30\3\0\2\30\12\0"+
-    "\2\30\13\0\1\30\6\0\1\30\2\0\2\30\6\0"+
-    "\1\30\4\0\2\30\2\0\2\30\5\0\3\30\10\0"+
-    "\1\30\26\0\1\30\7\0\1\30\23\0\1\30\1\0"+
-    "\2\30\1\0\1\30\2\0\2\30\2\0\1\30\3\0"+
-    "\2\30\1\0\3\30\1\0\2\30\1\0\4\30\1\0"+
-    "\3\30\1\0\1\30\1\0\2\30\2\0\11\30\1\0"+
-    "\2\30\1\0\1\30\1\0\2\30\1\0\14\30\1\0"+
-    "\2\30\1\0\3\30\1\0\1\30\1\0\30\30\1\0"+
-    "\2\30\1\0\1\30\1\0\2\30\2\0\1\30\1\0"+
-    "\1\30\1\0\1\30\1\0\1\30\17\0\1\30\26\0"+
-    "\2\30\23\0\1\31\1\30\66\0\1\31\46\0\1\31"+
-    "\27\0\4\30\2\0\2\30\14\0\3\30\15\0\3\30"+
-    "\3\0\1\30\7\0\2\30\13\0\1\30\13\0\4\31"+
-    "\1\0\2\30\11\0\1\30\37\0\1\30\3\0\2\30"+
-    "\12\0\2\30\1\0\3\30\7\0\1\30\6\0\2\30"+
-    "\1\0\2\30\6\0\1\30\4\0\2\30\2\0\2\30"+
-    "\5\0\3\30\10\0\1\30\16\0\1\30\4\0\2\31"+
-    "\1\0\1\30\7\0\1\30\23\0\1\30\4\0\1\30"+
-    "\6\0\1\30\3\0\1\30\6\0\1\30\5\0\1\30"+
-    "\2\0\2\30\1\0\17\30\2\0\1\30\13\0\7\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\2\0\1\30"+
-    "\1\0\1\30\1\0\1\30\1\0\1\30\6\0\2\30"+
-    "\5\0\1\30\1\0\1\30\2\0\3\30\1\0\1\30"+
-    "\7\0\1\30\1\0\1\30\35\0\1\30\17\0\2\30"+
+    "\1\27\3\2\1\30\1\2\1\31\1\32\3\2\1\33"+
+    "\2\34\1\35\1\36\2\2\1\37\1\40\220\0\1\30"+
+    "\2\0\1\30\4\0\1\30\16\0\1\30\15\0\1\30"+
+    "\20\0\1\30\1\0\1\30\41\0\1\30\4\0\1\30"+
+    "\10\0\2\30\5\0\2\30\10\0\1\30\26\0\2\30"+
+    "\5\0\1\30\2\0\1\30\3\0\2\30\10\0\4\30"+
+    "\1\0\3\30\1\0\1\30\2\0\1\30\2\0\1\30"+
+    "\4\0\4\30\1\0\2\30\1\0\1\30\2\0\1\30"+
+    "\1\0\1\30\2\0\4\30\2\0\3\30\1\0\2\30"+
+    "\1\0\3\30\1\0\4\30\1\0\2\30\5\0\4\30"+
+    "\2\0\10\30\1\0\1\30\2\0\1\30\1\0\2\30"+
+    "\4\0\1\30\3\0\3\30\27\0\1\30\4\0\1\30"+
+    "\11\0\1\30\22\0\1\30\3\0\1\30\27\0\1\30"+
+    "\63\0\1\30\31\0\1\30\3\0\4\30\1\0\1\30"+
+    "\1\0\1\31\2\0\1\30\1\0\2\30\2\0\2\30"+
+    "\2\0\3\30\1\0\1\30\1\0\1\30\2\0\4\30"+
+    "\1\0\3\30\1\0\1\30\1\0\3\30\1\0\2\30"+
+    "\1\0\4\30\1\0\2\30\2\0\10\30\1\0\2\30"+
+    "\1\0\10\30\1\31\1\0\7\30\1\0\10\30\1\0"+
+    "\6\30\1\0\1\30\1\0\2\30\2\0\1\30\1\0"+
+    "\1\30\3\0\3\30\36\0\1\30\17\0\1\30\23\0"+
+    "\1\30\23\0\1\30\6\0\3\30\37\0\1\30\7\0"+
+    "\1\30\30\0\1\30\1\0\2\30\1\0\1\30\1\0"+
+    "\4\30\1\0\1\30\1\0\1\30\1\0\2\30\1\0"+
+    "\3\30\1\0\2\30\1\0\4\30\1\0\3\30\1\0"+
+    "\17\30\1\0\2\30\1\0\21\30\1\0\2\30\1\0"+
+    "\41\30\1\0\1\30\1\0\2\30\2\0\1\30\1\0"+
+    "\1\30\1\0\1\30\1\0\3\30\36\0\1\30\3\0"+
+    "\2\30\12\0\2\30\13\0\1\30\6\0\1\30\2\0"+
+    "\2\30\6\0\1\30\4\0\2\30\2\0\2\30\5\0"+
+    "\3\30\20\0\1\30\16\0\1\30\7\0\1\30\30\0"+
+    "\1\30\1\0\2\30\1\0\1\30\2\0\2\30\2\0"+
+    "\1\30\3\0\2\30\1\0\3\30\1\0\2\30\1\0"+
+    "\4\30\1\0\3\30\1\0\1\30\1\0\2\30\2\0"+
+    "\11\30\1\0\2\30\1\0\1\30\1\0\2\30\1\0"+
+    "\14\30\1\0\2\30\1\0\10\30\1\0\2\30\1\0"+
+    "\1\30\1\0\23\30\1\0\1\30\1\0\2\30\2\0"+
+    "\1\30\1\0\1\30\1\0\1\30\1\0\3\30\22\0"+
+    "\1\30\26\0\2\30\23\0\1\31\1\30\40\0\1\31"+
+    "\101\0\1\31\27\0\4\30\2\0\2\30\14\0\3\30"+
+    "\15\0\3\30\3\0\1\30\7\0\2\30\1\0\4\31"+
+    "\1\0\2\30\13\0\1\30\23\0\1\30\44\0\1\30"+
+    "\3\0\2\30\12\0\2\30\1\0\3\30\7\0\1\30"+
+    "\6\0\2\30\1\0\2\30\6\0\1\30\4\0\2\30"+
+    "\2\0\2\30\5\0\3\30\2\0\1\30\3\0\2\31"+
+    "\10\0\1\30\16\0\1\30\7\0\1\30\30\0\1\30"+
+    "\4\0\1\30\6\0\1\30\3\0\1\30\6\0\1\30"+
+    "\5\0\1\30\2\0\2\30\1\0\17\30\2\0\1\30"+
+    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\2\30"+
+    "\2\0\1\30\1\0\3\30\2\0\1\30\1\0\1\30"+
+    "\1\0\1\30\1\0\1\30\6\0\2\30\6\0\1\30"+
+    "\7\0\1\30\1\0\1\30\42\0\1\30\17\0\2\30"+
     "\22\0\1\30\2\0\2\30\13\0\1\30\3\0\2\30"+
-    "\5\0\3\30\10\0\1\30\26\0\1\30\7\0\1\30"+
-    "\30\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
-    "\7\0\1\30\31\0\20\30\5\0\3\30\3\0\1\30"+
-    "\3\0\2\30\2\0\2\30\4\0\1\30\10\0\1\30"+
-    "\4\0\1\30\2\0\1\30\4\0\1\30\1\0\1\30"+
-    "\1\0\1\30\132\0\1\36\41\0\1\32\35\0\1\35"+
+    "\5\0\3\30\20\0\1\30\16\0\1\30\7\0\1\30"+
+    "\35\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
+    "\7\0\1\30\31\0\20\30\5\0\3\30\4\0\1\30"+
+    "\6\0\1\30\3\0\2\30\2\0\2\30\4\0\1\30"+
+    "\5\0\1\30\2\0\1\30\4\0\1\30\1\0\1\30"+
+    "\1\0\1\30\137\0\1\36\41\0\1\32\42\0\1\35"+
     "\6\0\1\35\2\0\1\35\3\0\2\35\10\0\4\35"+
     "\1\0\3\35\1\0\1\35\2\0\1\35\2\0\1\35"+
     "\4\0\4\35\1\0\2\35\6\0\1\35\2\0\4\35"+
-    "\2\0\3\35\1\0\2\35\1\0\3\35\5\0\4\35"+
-    "\2\0\10\35\4\0\4\35\1\0\2\35\1\0\1\35"+
-    "\1\0\2\35\4\0\1\35\3\0\1\35\17\0\1\35"+
+    "\2\0\3\35\1\0\2\35\1\0\3\35\1\0\4\35"+
+    "\1\0\2\35\5\0\4\35\2\0\10\35\4\0\1\35"+
+    "\1\0\2\35\4\0\1\35\3\0\3\35\22\0\1\35"+
     "\1\0\2\35\1\0\1\35\1\0\4\35\1\0\1\35"+
     "\1\0\1\35\1\0\2\35\1\0\3\35\1\0\2\35"+
     "\1\0\4\35\1\0\3\35\1\0\17\35\1\0\2\35"+
     "\1\0\21\35\1\0\2\35\1\0\41\35\1\0\1\35"+
     "\1\0\2\35\2\0\1\35\1\0\1\35\1\0\1\35"+
-    "\1\0\1\35\17\0\1\35\1\0\2\35\1\0\1\35"+
+    "\1\0\3\35\22\0\1\35\1\0\2\35\1\0\1\35"+
     "\1\0\4\35\1\0\1\35\1\0\1\35\1\0\2\35"+
     "\2\0\1\35\2\0\2\35\1\0\4\35\1\0\3\35"+
     "\1\0\17\35\1\0\2\35\1\0\21\35\1\0\2\35"+
     "\1\0\41\35\1\0\1\35\1\0\2\35\2\0\1\35"+
-    "\1\0\1\35\1\0\1\35\1\0\1\35\33\0\1\35"+
+    "\1\0\1\35\1\0\1\35\1\0\3\35\36\0\1\35"+
     "\17\0\1\35\23\0\1\35\32\0\1\35\41\0\1\35"+
-    "\7\0\1\35\23\0\1\35\1\0\2\35\3\0\4\35"+
+    "\7\0\1\35\30\0\1\35\1\0\2\35\3\0\4\35"+
     "\1\0\1\35\1\0\1\35\1\0\2\35\1\0\3\35"+
     "\1\0\2\35\1\0\4\35\1\0\3\35\1\0\10\35"+
     "\1\0\6\35\1\0\2\35\1\0\21\35\1\0\2\35"+
     "\1\0\41\35\1\0\1\35\1\0\2\35\2\0\1\35"+
-    "\1\0\1\35\1\0\1\35\1\0\1\35\210\0\1\36"+
-    "\16\0\1\40\1\0\1\41\2\0\1\42\1\0\1\43"+
-    "\4\0\1\44\1\0\1\45\1\0\1\46\2\0\1\47"+
-    "\3\0\1\50\2\0\1\51\4\0\1\52\3\0\1\53"+
-    "\17\0\1\54\2\0\1\55\21\0\1\56\2\0\1\57"+
-    "\57\0\2\30\1\60\1\0\1\61\1\0\1\61\1\62"+
-    "\1\0\1\30\2\0\1\30\1\0\1\40\1\0\1\41"+
-    "\2\0\1\63\1\0\1\64\4\0\1\44\1\0\1\45"+
-    "\1\0\1\46\2\0\1\47\3\0\1\65\2\0\1\66"+
-    "\4\0\1\67\3\0\1\70\17\0\1\54\2\0\1\71"+
-    "\21\0\1\72\2\0\1\73\57\0\1\30\2\31\2\0"+
-    "\2\74\1\75\1\0\1\31\2\0\1\30\6\0\1\76"+
-    "\21\0\1\77\2\0\1\100\10\0\1\101\22\0\1\102"+
-    "\21\0\1\103\2\0\1\104\41\0\1\105\16\0\1\32"+
-    "\1\0\1\32\3\0\1\62\1\0\1\32\4\0\1\40"+
-    "\1\0\1\41\2\0\1\106\1\0\1\64\4\0\1\44"+
-    "\1\0\1\45\1\0\1\46\2\0\1\47\3\0\1\107"+
-    "\2\0\1\110\4\0\1\67\3\0\1\111\17\0\1\54"+
-    "\2\0\1\112\21\0\1\113\2\0\1\114\41\0\1\115"+
-    "\15\0\1\30\1\116\1\31\1\117\3\0\1\116\1\0"+
-    "\1\116\2\0\1\30\204\0\2\34\11\0\1\120\21\0"+
-    "\1\121\2\0\1\122\10\0\1\123\22\0\1\124\21\0"+
-    "\1\125\2\0\1\126\60\0\1\35\7\0\1\35\11\0"+
-    "\1\127\21\0\1\130\2\0\1\131\10\0\1\132\22\0"+
-    "\1\133\21\0\1\134\2\0\1\135\60\0\1\36\7\0"+
-    "\1\36\4\0\1\40\1\0\1\41\2\0\1\136\1\0"+
-    "\1\43\4\0\1\44\1\0\1\45\1\0\1\46\2\0"+
-    "\1\47\3\0\1\137\2\0\1\140\4\0\1\52\3\0"+
-    "\1\141\17\0\1\54\2\0\1\142\21\0\1\143\2\0"+
-    "\1\144\57\0\1\30\1\37\1\60\1\0\1\61\1\0"+
-    "\1\61\1\62\1\0\1\37\2\0\1\37\7\0\1\30"+
+    "\1\0\1\35\1\0\1\35\1\0\3\35\165\0\1\41"+
+    "\25\0\1\36\2\41\21\0\1\42\1\0\1\43\2\0"+
+    "\1\44\1\0\1\45\4\0\1\46\1\0\1\47\1\0"+
+    "\1\50\2\0\1\51\3\0\1\52\2\0\1\53\4\0"+
+    "\1\54\3\0\1\55\17\0\1\56\2\0\1\57\21\0"+
+    "\1\60\2\0\1\61\61\0\2\30\1\62\1\0\1\63"+
+    "\1\0\1\63\1\64\1\0\1\30\2\0\1\63\1\0"+
+    "\1\37\1\30\1\0\1\42\1\0\1\43\2\0\1\65"+
+    "\1\0\1\66\4\0\1\46\1\0\1\47\1\0\1\50"+
+    "\2\0\1\51\3\0\1\67\2\0\1\70\4\0\1\71"+
+    "\3\0\1\72\17\0\1\56\2\0\1\73\21\0\1\74"+
+    "\2\0\1\75\61\0\1\30\2\31\2\0\2\76\1\77"+
+    "\1\0\1\31\2\0\1\76\1\0\1\37\1\30\6\0"+
+    "\1\100\21\0\1\101\2\0\1\102\10\0\1\103\22\0"+
+    "\1\104\21\0\1\105\2\0\1\106\41\0\1\107\20\0"+
+    "\1\32\1\0\1\110\3\0\1\111\1\0\1\32\7\0"+
+    "\1\42\1\0\1\43\2\0\1\112\1\0\1\66\4\0"+
+    "\1\46\1\0\1\47\1\0\1\50\2\0\1\51\3\0"+
+    "\1\113\2\0\1\114\4\0\1\71\3\0\1\115\17\0"+
+    "\1\56\2\0\1\116\21\0\1\117\2\0\1\120\41\0"+
+    "\1\121\17\0\1\30\1\122\1\31\1\123\3\0\1\122"+
+    "\1\0\1\122\4\0\1\37\1\30\206\0\2\34\14\0"+
+    "\1\124\21\0\1\125\2\0\1\126\10\0\1\127\22\0"+
+    "\1\130\21\0\1\131\2\0\1\132\62\0\1\35\7\0"+
+    "\1\35\14\0\1\133\21\0\1\134\2\0\1\135\10\0"+
+    "\1\136\22\0\1\137\21\0\1\140\2\0\1\141\62\0"+
+    "\1\36\7\0\1\36\7\0\1\42\1\0\1\43\2\0"+
+    "\1\142\1\0\1\45\4\0\1\46\1\0\1\47\1\0"+
+    "\1\50\2\0\1\51\3\0\1\143\2\0\1\144\4\0"+
+    "\1\54\3\0\1\145\17\0\1\56\2\0\1\146\21\0"+
+    "\1\147\2\0\1\150\61\0\1\30\1\37\1\62\1\0"+
+    "\1\63\1\0\1\63\1\64\1\0\1\37\2\0\1\30"+
+    "\1\151\1\37\1\30\1\0\1\42\1\0\1\43\2\0"+
+    "\1\152\1\0\1\45\4\0\1\46\1\0\1\47\1\0"+
+    "\1\50\2\0\1\51\3\0\1\153\2\0\1\154\4\0"+
+    "\1\54\3\0\1\155\17\0\1\56\2\0\1\156\21\0"+
+    "\1\157\2\0\1\160\61\0\1\30\1\40\1\62\1\0"+
+    "\1\63\1\0\1\63\1\64\1\0\1\40\2\0\1\63"+
+    "\1\0\1\37\1\40\6\0\1\161\21\0\1\162\2\0"+
+    "\1\163\10\0\1\164\22\0\1\165\21\0\1\166\2\0"+
+    "\1\167\55\0\1\170\4\0\1\41\7\0\1\41\15\0"+
+    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
+    "\1\30\13\0\1\30\2\0\1\30\10\0\1\30\22\0"+
+    "\4\30\35\0\1\30\31\0\1\30\3\0\4\30\1\0"+
+    "\1\30\1\0\1\62\2\0\1\30\1\0\2\30\2\0"+
+    "\2\30\2\0\3\30\1\0\1\30\1\0\1\30\2\0"+
+    "\4\30\1\0\3\30\1\0\1\30\1\0\3\30\1\0"+
+    "\2\30\1\0\4\30\1\0\2\30\2\0\10\30\1\0"+
+    "\2\30\1\0\10\30\1\62\1\0\7\30\1\0\10\30"+
+    "\1\0\6\30\1\0\1\30\1\0\2\30\2\0\1\30"+
+    "\1\0\1\30\3\0\3\30\22\0\1\30\26\0\2\30"+
+    "\23\0\1\62\1\30\40\0\1\62\13\0\1\30\65\0"+
+    "\1\62\11\0\1\30\15\0\4\30\2\0\2\30\14\0"+
+    "\4\30\1\0\2\30\11\0\3\30\3\0\1\30\1\0"+
+    "\1\30\4\0\3\30\1\0\4\62\1\0\2\30\5\0"+
+    "\4\30\2\0\2\30\12\0\1\30\7\0\1\30\44\0"+
+    "\1\30\3\0\2\30\12\0\2\30\1\0\3\30\7\0"+
+    "\1\30\6\0\2\30\1\0\2\30\6\0\1\30\4\0"+
+    "\2\30\2\0\2\30\5\0\3\30\2\0\1\30\3\0"+
+    "\2\62\10\0\1\30\16\0\1\30\7\0\1\30\30\0"+
+    "\1\30\4\0\1\30\6\0\1\30\3\0\1\30\6\0"+
+    "\1\30\5\0\1\30\2\0\2\30\1\0\17\30\2\0"+
+    "\1\30\13\0\7\30\2\0\1\30\1\0\1\30\1\0"+
+    "\2\30\2\0\1\30\1\0\3\30\2\0\1\30\1\0"+
+    "\1\30\1\0\1\30\1\0\1\30\4\0\1\30\1\0"+
+    "\2\30\6\0\1\30\7\0\1\30\1\0\1\30\33\0"+
+    "\1\30\6\0\1\30\3\0\1\30\3\0\1\30\7\0"+
+    "\1\30\31\0\20\30\5\0\3\30\4\0\1\30\6\0"+
+    "\1\30\3\0\2\30\2\0\2\30\4\0\5\30\1\0"+
+    "\1\30\2\0\1\30\4\0\1\30\1\0\1\30\1\0"+
+    "\1\30\134\0\2\30\25\0\4\30\55\0\1\30\15\0"+
+    "\2\30\10\0\2\30\1\0\1\30\1\0\1\30\11\0"+
+    "\1\30\11\0\2\30\6\0\1\30\2\0\4\30\3\0"+
+    "\1\30\2\0\2\30\1\0\3\30\1\0\2\30\1\0"+
+    "\1\30\10\0\1\30\1\0\2\30\2\0\2\30\1\0"+
+    "\4\30\23\0\1\30\21\0\1\42\1\0\1\43\2\0"+
+    "\1\171\1\0\1\45\4\0\1\46\1\0\1\47\1\0"+
+    "\1\50\2\0\1\51\3\0\1\172\2\0\1\173\4\0"+
+    "\1\54\3\0\1\174\17\0\1\56\2\0\1\175\21\0"+
+    "\1\176\2\0\1\177\61\0\1\30\2\62\2\0\2\200"+
+    "\1\201\1\0\1\62\2\0\1\200\1\0\1\37\1\30"+
+    "\1\0\1\42\1\0\1\43\2\0\1\202\1\0\1\203"+
+    "\4\0\1\46\1\0\1\47\1\0\1\50\2\0\1\51"+
+    "\3\0\1\204\2\0\1\205\4\0\1\206\3\0\1\207"+
+    "\17\0\1\56\2\0\1\210\21\0\1\211\2\0\1\212"+
+    "\61\0\1\30\1\63\2\0\1\63\1\0\2\63\1\0"+
+    "\1\63\2\0\1\63\1\0\2\30\1\0\1\42\1\0"+
+    "\1\43\2\0\1\213\1\0\1\45\4\0\1\46\1\0"+
+    "\1\47\1\0\1\50\2\0\1\51\3\0\1\214\2\0"+
+    "\1\215\4\0\1\54\3\0\1\216\17\0\1\56\2\0"+
+    "\1\217\21\0\1\220\2\0\1\221\41\0\1\121\17\0"+
+    "\1\30\1\64\1\62\1\123\1\63\1\0\1\63\1\64"+
+    "\1\0\1\64\2\0\1\63\1\0\1\37\1\30\7\0"+
+    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
+    "\1\30\13\0\1\31\2\0\1\31\10\0\1\30\22\0"+
+    "\4\31\35\0\1\30\26\0\1\30\26\0\2\30\23\0"+
+    "\1\31\1\30\40\0\1\31\13\0\1\31\65\0\1\31"+
+    "\11\0\1\31\15\0\4\30\2\0\2\30\14\0\3\30"+
+    "\1\31\1\0\2\31\11\0\3\30\3\0\1\30\1\0"+
+    "\1\31\4\0\1\31\2\30\1\0\4\31\1\0\2\30"+
+    "\5\0\4\31\2\0\1\30\1\31\12\0\1\31\7\0"+
+    "\1\30\30\0\1\30\4\0\1\30\6\0\1\30\3\0"+
+    "\1\30\6\0\1\30\5\0\1\30\2\0\2\30\1\0"+
+    "\17\30\2\0\1\30\13\0\7\30\2\0\1\30\1\0"+
+    "\1\30\1\0\2\30\2\0\1\30\1\0\3\30\2\0"+
+    "\1\30\1\0\1\30\1\0\1\30\1\0\1\30\4\0"+
+    "\1\31\1\0\2\30\6\0\1\30\7\0\1\30\1\0"+
+    "\1\30\33\0\1\30\6\0\1\30\3\0\1\30\3\0"+
+    "\1\30\7\0\1\30\31\0\20\30\5\0\3\30\4\0"+
+    "\1\30\6\0\1\30\3\0\2\30\2\0\2\30\4\0"+
+    "\1\30\4\31\1\0\1\30\2\0\1\30\4\0\1\30"+
+    "\1\0\1\30\1\0\1\30\134\0\2\31\25\0\4\31"+
+    "\55\0\1\31\15\0\2\31\10\0\2\31\1\0\1\31"+
+    "\1\0\1\31\11\0\1\31\11\0\2\31\6\0\1\31"+
+    "\2\0\4\31\3\0\1\31\2\0\2\31\1\0\3\31"+
+    "\1\0\2\31\1\0\1\31\10\0\1\31\1\0\2\31"+
+    "\2\0\2\31\1\0\4\31\23\0\1\31\26\0\1\222"+
+    "\1\0\1\223\17\0\1\224\2\0\1\225\4\0\1\226"+
+    "\3\0\1\227\22\0\1\230\21\0\1\231\2\0\1\232"+
+    "\62\0\1\76\1\31\2\0\3\200\1\0\1\76\2\0"+
+    "\1\200\4\0\1\42\1\0\1\43\2\0\1\233\1\0"+
+    "\1\66\4\0\1\46\1\0\1\47\1\0\1\50\2\0"+
+    "\1\51\3\0\1\234\2\0\1\235\4\0\1\71\3\0"+
+    "\1\236\17\0\1\56\2\0\1\237\21\0\1\240\2\0"+
+    "\1\241\41\0\1\121\17\0\1\30\1\77\1\31\1\123"+
+    "\1\0\2\200\1\77\1\0\1\77\2\0\1\200\1\0"+
+    "\1\37\1\30\71\0\1\32\2\0\1\32\33\0\4\32"+
+    "\216\0\1\32\77\0\1\32\44\0\1\32\1\0\2\32"+
+    "\21\0\1\32\4\0\1\32\17\0\4\32\3\0\1\32"+
+    "\12\0\1\32\203\0\1\32\222\0\4\32\152\0\2\32"+
+    "\25\0\4\32\55\0\1\32\15\0\2\32\10\0\2\32"+
+    "\1\0\1\32\1\0\1\32\11\0\1\32\11\0\2\32"+
+    "\6\0\1\32\2\0\4\32\3\0\1\32\2\0\2\32"+
+    "\1\0\3\32\1\0\2\32\1\0\1\32\10\0\1\32"+
+    "\1\0\2\32\2\0\2\32\1\0\4\32\23\0\1\32"+
+    "\177\0\1\110\44\0\1\242\21\0\1\243\2\0\1\244"+
+    "\10\0\1\245\22\0\1\246\21\0\1\247\2\0\1\250"+
+    "\41\0\1\107\20\0\1\110\1\0\1\110\5\0\1\110"+
+    "\7\0\1\42\1\0\1\43\2\0\1\251\1\0\1\45"+
+    "\4\0\1\46\1\0\1\47\1\0\1\50\2\0\1\51"+
+    "\3\0\1\252\2\0\1\253\4\0\1\54\3\0\1\254"+
+    "\17\0\1\56\2\0\1\255\21\0\1\256\2\0\1\257"+
+    "\41\0\1\121\17\0\1\30\1\111\1\62\1\123\3\0"+
+    "\1\111\1\0\1\111\4\0\1\37\1\30\7\0\1\30"+
     "\4\0\1\30\11\0\1\30\22\0\1\30\3\0\1\30"+
-    "\13\0\1\30\2\0\1\30\10\0\1\30\12\0\4\30"+
-    "\45\0\1\30\24\0\1\30\3\0\4\30\1\0\1\30"+
-    "\1\0\1\60\2\0\1\30\1\0\2\30\2\0\2\30"+
-    "\2\0\3\30\1\0\1\30\1\0\1\30\2\0\4\30"+
-    "\1\0\3\30\1\0\1\30\1\0\3\30\1\0\2\30"+
-    "\1\0\4\30\1\0\2\30\2\0\10\30\1\0\2\30"+
-    "\1\0\11\30\1\0\10\30\1\0\13\30\1\60\1\0"+
-    "\1\30\1\0\1\30\1\0\2\30\2\0\1\30\1\0"+
-    "\1\30\3\0\1\30\17\0\1\30\26\0\2\30\23\0"+
-    "\1\60\1\30\44\0\1\30\21\0\1\60\46\0\1\60"+
-    "\11\0\1\30\15\0\4\30\2\0\2\30\14\0\4\30"+
-    "\1\0\2\30\11\0\3\30\3\0\1\30\1\0\1\30"+
-    "\4\0\3\30\5\0\4\30\2\0\2\30\12\0\4\60"+
-    "\1\0\2\30\1\0\1\30\7\0\1\30\37\0\1\30"+
-    "\3\0\2\30\12\0\2\30\1\0\3\30\7\0\1\30"+
-    "\6\0\2\30\1\0\2\30\6\0\1\30\4\0\2\30"+
-    "\2\0\2\30\5\0\3\30\10\0\1\30\16\0\1\30"+
-    "\4\0\2\60\1\0\1\30\7\0\1\30\23\0\1\30"+
-    "\4\0\1\30\6\0\1\30\3\0\1\30\6\0\1\30"+
-    "\5\0\1\30\2\0\2\30\1\0\17\30\2\0\1\30"+
-    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\1\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
-    "\4\0\1\30\1\0\2\30\5\0\1\30\1\0\1\30"+
-    "\2\0\3\30\1\0\1\30\7\0\1\30\1\0\1\30"+
-    "\26\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
-    "\7\0\1\30\31\0\20\30\5\0\3\30\3\0\1\30"+
-    "\3\0\2\30\2\0\2\30\4\0\5\30\4\0\1\30"+
-    "\4\0\1\30\2\0\1\30\4\0\1\30\1\0\1\30"+
-    "\1\0\1\30\127\0\2\30\15\0\4\30\60\0\1\30"+
-    "\15\0\2\30\10\0\2\30\1\0\1\30\1\0\1\30"+
-    "\11\0\1\30\11\0\2\30\6\0\1\30\2\0\4\30"+
-    "\3\0\1\30\2\0\2\30\1\0\3\30\5\0\1\30"+
-    "\1\0\2\30\2\0\2\30\1\0\4\30\5\0\1\30"+
-    "\1\0\2\30\37\0\1\40\1\0\1\41\2\0\1\145"+
-    "\1\0\1\43\4\0\1\44\1\0\1\45\1\0\1\46"+
-    "\2\0\1\47\3\0\1\146\2\0\1\147\4\0\1\52"+
-    "\3\0\1\150\17\0\1\54\2\0\1\151\21\0\1\152"+
-    "\2\0\1\153\57\0\1\30\2\60\2\0\2\154\1\62"+
-    "\1\0\1\60\2\0\1\30\1\0\1\40\1\0\1\41"+
-    "\2\0\1\155\1\0\1\156\4\0\1\44\1\0\1\45"+
-    "\1\0\1\46\2\0\1\47\3\0\1\157\2\0\1\160"+
-    "\4\0\1\161\3\0\1\162\17\0\1\54\2\0\1\163"+
-    "\21\0\1\164\2\0\1\165\57\0\1\30\1\61\7\0"+
-    "\1\61\2\0\1\30\1\0\1\40\1\0\1\41\2\0"+
-    "\1\166\1\0\1\43\4\0\1\44\1\0\1\45\1\0"+
-    "\1\46\2\0\1\47\3\0\1\167\2\0\1\170\4\0"+
-    "\1\52\3\0\1\171\17\0\1\54\2\0\1\172\21\0"+
-    "\1\173\2\0\1\174\41\0\1\115\15\0\1\30\1\62"+
-    "\1\60\1\117\3\0\1\62\1\0\1\62\2\0\1\30"+
-    "\7\0\1\30\4\0\1\30\11\0\1\30\22\0\1\30"+
-    "\3\0\1\30\13\0\1\31\2\0\1\31\10\0\1\30"+
-    "\12\0\4\31\45\0\1\30\21\0\1\30\26\0\2\30"+
-    "\23\0\1\31\1\30\44\0\1\31\21\0\1\31\46\0"+
-    "\1\31\11\0\1\31\15\0\4\30\2\0\2\30\14\0"+
-    "\3\30\1\31\1\0\2\31\11\0\3\30\3\0\1\30"+
-    "\1\0\1\31\4\0\1\31\2\30\5\0\4\31\2\0"+
-    "\1\30\1\31\12\0\4\31\1\0\2\30\1\0\1\31"+
-    "\7\0\1\30\23\0\1\30\4\0\1\30\6\0\1\30"+
-    "\3\0\1\30\6\0\1\30\5\0\1\30\2\0\2\30"+
-    "\1\0\17\30\2\0\1\30\13\0\7\30\2\0\1\30"+
-    "\1\0\1\30\1\0\1\30\2\0\1\30\1\0\1\30"+
-    "\1\0\1\30\1\0\1\30\4\0\1\31\1\0\2\30"+
-    "\5\0\1\30\1\0\1\30\2\0\3\30\1\0\1\30"+
-    "\7\0\1\30\1\0\1\30\26\0\1\30\6\0\1\30"+
-    "\3\0\1\30\3\0\1\30\7\0\1\30\31\0\20\30"+
-    "\5\0\3\30\3\0\1\30\3\0\2\30\2\0\2\30"+
-    "\4\0\1\30\4\31\4\0\1\30\4\0\1\30\2\0"+
-    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\127\0"+
-    "\2\31\15\0\4\31\60\0\1\31\15\0\2\31\10\0"+
-    "\2\31\1\0\1\31\1\0\1\31\11\0\1\31\11\0"+
-    "\2\31\6\0\1\31\2\0\4\31\3\0\1\31\2\0"+
-    "\2\31\1\0\3\31\5\0\1\31\1\0\2\31\2\0"+
-    "\2\31\1\0\4\31\5\0\1\31\1\0\2\31\44\0"+
-    "\1\175\1\0\1\176\17\0\1\177\2\0\1\200\4\0"+
-    "\1\201\3\0\1\202\22\0\1\203\21\0\1\204\2\0"+
-    "\1\205\60\0\1\74\1\31\6\0\1\74\4\0\1\40"+
-    "\1\0\1\41\2\0\1\206\1\0\1\64\4\0\1\44"+
-    "\1\0\1\45\1\0\1\46\2\0\1\47\3\0\1\207"+
-    "\2\0\1\210\4\0\1\67\3\0\1\211\17\0\1\54"+
-    "\2\0\1\212\21\0\1\213\2\0\1\214\41\0\1\115"+
-    "\15\0\1\30\1\75\1\31\1\117\3\0\1\75\1\0"+
-    "\1\75\2\0\1\30\71\0\1\32\2\0\1\32\23\0"+
-    "\4\32\211\0\1\32\102\0\1\32\44\0\1\32\1\0"+
-    "\2\32\21\0\1\32\4\0\1\32\7\0\4\32\3\0"+
-    "\1\32\22\0\1\32\166\0\1\32\215\0\4\32\155\0"+
-    "\2\32\15\0\4\32\60\0\1\32\15\0\2\32\10\0"+
-    "\2\32\1\0\1\32\1\0\1\32\11\0\1\32\11\0"+
-    "\2\32\6\0\1\32\2\0\4\32\3\0\1\32\2\0"+
-    "\2\32\1\0\3\32\5\0\1\32\1\0\2\32\2\0"+
-    "\2\32\1\0\4\32\5\0\1\32\1\0\2\32\215\0"+
-    "\1\32\40\0\1\30\4\0\1\30\11\0\1\30\22\0"+
-    "\1\30\3\0\1\30\13\0\1\116\2\0\1\116\10\0"+
-    "\1\30\12\0\4\116\45\0\1\30\21\0\1\30\26\0"+
-    "\2\30\23\0\1\31\1\30\44\0\1\116\21\0\1\31"+
-    "\46\0\1\31\11\0\1\116\15\0\4\30\2\0\2\30"+
-    "\14\0\3\30\1\116\1\0\2\116\11\0\3\30\3\0"+
-    "\1\30\1\0\1\116\4\0\1\116\2\30\5\0\4\116"+
-    "\2\0\1\30\1\116\12\0\4\31\1\0\2\30\1\0"+
-    "\1\116\7\0\1\30\23\0\1\30\4\0\1\30\6\0"+
-    "\1\30\3\0\1\30\6\0\1\30\5\0\1\30\2\0"+
-    "\2\30\1\0\17\30\2\0\1\30\13\0\7\30\2\0"+
-    "\1\30\1\0\1\30\1\0\1\30\2\0\1\30\1\0"+
-    "\1\30\1\0\1\30\1\0\1\30\4\0\1\116\1\0"+
-    "\2\30\5\0\1\30\1\0\1\30\2\0\3\30\1\0"+
-    "\1\30\7\0\1\30\1\0\1\30\26\0\1\30\6\0"+
-    "\1\30\3\0\1\30\3\0\1\30\7\0\1\30\31\0"+
-    "\20\30\5\0\3\30\3\0\1\30\3\0\2\30\2\0"+
-    "\2\30\4\0\1\30\4\116\4\0\1\30\4\0\1\30"+
-    "\2\0\1\30\4\0\1\30\1\0\1\30\1\0\1\30"+
-    "\127\0\2\116\15\0\4\116\60\0\1\116\15\0\2\116"+
-    "\10\0\2\116\1\0\1\116\1\0\1\116\11\0\1\116"+
-    "\11\0\2\116\6\0\1\116\2\0\4\116\3\0\1\116"+
-    "\2\0\2\116\1\0\3\116\5\0\1\116\1\0\2\116"+
-    "\2\0\2\116\1\0\4\116\5\0\1\116\1\0\2\116"+
-    "\215\0\1\117\37\0\1\215\21\0\1\216\2\0\1\217"+
-    "\10\0\1\220\22\0\1\221\21\0\1\222\2\0\1\223"+
-    "\41\0\1\115\16\0\1\117\1\0\1\117\3\0\1\62"+
-    "\1\0\1\117\74\0\1\35\2\0\1\35\23\0\4\35"+
-    "\211\0\1\35\102\0\1\35\44\0\1\35\1\0\2\35"+
-    "\21\0\1\35\4\0\1\35\7\0\4\35\3\0\1\35"+
-    "\22\0\1\35\166\0\1\35\215\0\4\35\155\0\2\35"+
-    "\15\0\4\35\60\0\1\35\15\0\2\35\10\0\2\35"+
-    "\1\0\1\35\1\0\1\35\11\0\1\35\11\0\2\35"+
-    "\6\0\1\35\2\0\4\35\3\0\1\35\2\0\2\35"+
-    "\1\0\3\35\5\0\1\35\1\0\2\35\2\0\2\35"+
-    "\1\0\4\35\5\0\1\35\1\0\2\35\127\0\1\36"+
-    "\2\0\1\36\23\0\4\36\211\0\1\36\102\0\1\36"+
-    "\44\0\1\36\1\0\2\36\21\0\1\36\4\0\1\36"+
-    "\7\0\4\36\3\0\1\36\22\0\1\36\166\0\1\36"+
-    "\215\0\4\36\155\0\2\36\15\0\4\36\60\0\1\36"+
-    "\15\0\2\36\10\0\2\36\1\0\1\36\1\0\1\36"+
-    "\11\0\1\36\11\0\2\36\6\0\1\36\2\0\4\36"+
-    "\3\0\1\36\2\0\2\36\1\0\3\36\5\0\1\36"+
-    "\1\0\2\36\2\0\2\36\1\0\4\36\5\0\1\36"+
-    "\1\0\2\36\45\0\1\30\4\0\1\30\11\0\1\30"+
-    "\22\0\1\30\3\0\1\30\13\0\1\37\2\0\1\37"+
-    "\10\0\1\30\12\0\4\37\45\0\1\30\21\0\1\30"+
-    "\26\0\2\30\23\0\1\60\1\30\44\0\1\37\21\0"+
-    "\1\60\46\0\1\60\11\0\1\37\15\0\4\30\2\0"+
-    "\2\30\14\0\3\30\1\37\1\0\2\37\11\0\3\30"+
-    "\3\0\1\30\1\0\1\37\4\0\1\37\2\30\5\0"+
-    "\4\37\2\0\1\30\1\37\12\0\4\60\1\0\2\30"+
-    "\1\0\1\37\7\0\1\30\23\0\1\30\4\0\1\30"+
+    "\13\0\1\122\2\0\1\122\10\0\1\30\22\0\4\122"+
+    "\35\0\1\30\26\0\1\30\26\0\2\30\23\0\1\31"+
+    "\1\30\40\0\1\31\13\0\1\122\65\0\1\31\11\0"+
+    "\1\122\15\0\4\30\2\0\2\30\14\0\3\30\1\122"+
+    "\1\0\2\122\11\0\3\30\3\0\1\30\1\0\1\122"+
+    "\4\0\1\122\2\30\1\0\4\31\1\0\2\30\5\0"+
+    "\4\122\2\0\1\30\1\122\12\0\1\122\7\0\1\30"+
+    "\30\0\1\30\4\0\1\30\6\0\1\30\3\0\1\30"+
+    "\6\0\1\30\5\0\1\30\2\0\2\30\1\0\17\30"+
+    "\2\0\1\30\13\0\7\30\2\0\1\30\1\0\1\30"+
+    "\1\0\2\30\2\0\1\30\1\0\3\30\2\0\1\30"+
+    "\1\0\1\30\1\0\1\30\1\0\1\30\4\0\1\122"+
+    "\1\0\2\30\6\0\1\30\7\0\1\30\1\0\1\30"+
+    "\33\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
+    "\7\0\1\30\31\0\20\30\5\0\3\30\4\0\1\30"+
+    "\6\0\1\30\3\0\2\30\2\0\2\30\4\0\1\30"+
+    "\4\122\1\0\1\30\2\0\1\30\4\0\1\30\1\0"+
+    "\1\30\1\0\1\30\134\0\2\122\25\0\4\122\55\0"+
+    "\1\122\15\0\2\122\10\0\2\122\1\0\1\122\1\0"+
+    "\1\122\11\0\1\122\11\0\2\122\6\0\1\122\2\0"+
+    "\4\122\3\0\1\122\2\0\2\122\1\0\3\122\1\0"+
+    "\2\122\1\0\1\122\10\0\1\122\1\0\2\122\2\0"+
+    "\2\122\1\0\4\122\23\0\1\122\177\0\1\123\44\0"+
+    "\1\260\21\0\1\261\2\0\1\262\10\0\1\263\22\0"+
+    "\1\264\21\0\1\265\2\0\1\266\62\0\1\123\5\0"+
+    "\1\111\1\0\1\123\77\0\1\35\2\0\1\35\33\0"+
+    "\4\35\216\0\1\35\77\0\1\35\44\0\1\35\1\0"+
+    "\2\35\21\0\1\35\4\0\1\35\17\0\4\35\3\0"+
+    "\1\35\12\0\1\35\203\0\1\35\222\0\4\35\152\0"+
+    "\2\35\25\0\4\35\55\0\1\35\15\0\2\35\10\0"+
+    "\2\35\1\0\1\35\1\0\1\35\11\0\1\35\11\0"+
+    "\2\35\6\0\1\35\2\0\4\35\3\0\1\35\2\0"+
+    "\2\35\1\0\3\35\1\0\2\35\1\0\1\35\10\0"+
+    "\1\35\1\0\2\35\2\0\2\35\1\0\4\35\23\0"+
+    "\1\35\111\0\1\36\2\0\1\36\33\0\4\36\216\0"+
+    "\1\36\77\0\1\36\44\0\1\36\1\0\2\36\21\0"+
+    "\1\36\4\0\1\36\17\0\4\36\3\0\1\36\12\0"+
+    "\1\36\203\0\1\36\222\0\4\36\152\0\2\36\25\0"+
+    "\4\36\55\0\1\36\15\0\2\36\10\0\2\36\1\0"+
+    "\1\36\1\0\1\36\11\0\1\36\11\0\2\36\6\0"+
+    "\1\36\2\0\4\36\3\0\1\36\2\0\2\36\1\0"+
+    "\3\36\1\0\2\36\1\0\1\36\10\0\1\36\1\0"+
+    "\2\36\2\0\2\36\1\0\4\36\23\0\1\36\27\0"+
+    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
+    "\1\30\13\0\1\37\2\0\1\37\10\0\1\30\22\0"+
+    "\4\37\35\0\1\30\26\0\1\30\26\0\2\30\23\0"+
+    "\1\62\1\30\40\0\1\62\13\0\1\37\65\0\1\62"+
+    "\11\0\1\37\15\0\4\30\2\0\2\30\14\0\3\30"+
+    "\1\37\1\0\2\37\11\0\3\30\3\0\1\30\1\0"+
+    "\1\37\4\0\1\37\2\30\1\0\4\62\1\0\2\30"+
+    "\5\0\4\37\2\0\1\30\1\37\12\0\1\37\7\0"+
+    "\1\30\30\0\1\30\4\0\1\30\6\0\1\30\3\0"+
+    "\1\30\6\0\1\30\5\0\1\30\2\0\2\30\1\0"+
+    "\17\30\2\0\1\30\13\0\7\30\2\0\1\30\1\0"+
+    "\1\30\1\0\2\30\2\0\1\30\1\0\3\30\2\0"+
+    "\1\30\1\0\1\30\1\0\1\30\1\0\1\30\4\0"+
+    "\1\37\1\0\2\30\6\0\1\30\7\0\1\30\1\0"+
+    "\1\30\33\0\1\30\6\0\1\30\3\0\1\30\3\0"+
+    "\1\30\7\0\1\30\31\0\20\30\5\0\3\30\4\0"+
+    "\1\30\6\0\1\30\3\0\2\30\2\0\2\30\4\0"+
+    "\1\30\4\37\1\0\1\30\2\0\1\30\4\0\1\30"+
+    "\1\0\1\30\1\0\1\30\134\0\2\37\25\0\4\37"+
+    "\55\0\1\37\15\0\2\37\10\0\2\37\1\0\1\37"+
+    "\1\0\1\37\11\0\1\37\11\0\2\37\6\0\1\37"+
+    "\2\0\4\37\3\0\1\37\2\0\2\37\1\0\3\37"+
+    "\1\0\2\37\1\0\1\37\10\0\1\37\1\0\2\37"+
+    "\2\0\2\37\1\0\4\37\23\0\1\37\26\0\1\267"+
+    "\21\0\1\270\2\0\1\271\10\0\1\272\22\0\1\273"+
+    "\21\0\1\274\2\0\1\275\62\0\1\151\7\0\1\151"+
+    "\4\0\1\276\10\0\1\30\4\0\1\30\11\0\1\30"+
+    "\22\0\1\30\3\0\1\30\13\0\1\40\2\0\1\40"+
+    "\10\0\1\30\22\0\4\40\35\0\1\30\26\0\1\30"+
+    "\26\0\2\30\23\0\1\62\1\30\40\0\1\62\13\0"+
+    "\1\40\65\0\1\62\11\0\1\40\15\0\4\30\2\0"+
+    "\2\30\14\0\3\30\1\40\1\0\2\40\11\0\3\30"+
+    "\3\0\1\30\1\0\1\40\4\0\1\40\2\30\1\0"+
+    "\4\62\1\0\2\30\5\0\4\40\2\0\1\30\1\40"+
+    "\12\0\1\40\7\0\1\30\30\0\1\30\4\0\1\30"+
     "\6\0\1\30\3\0\1\30\6\0\1\30\5\0\1\30"+
     "\2\0\2\30\1\0\17\30\2\0\1\30\13\0\7\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\2\0\1\30"+
-    "\1\0\1\30\1\0\1\30\1\0\1\30\4\0\1\37"+
-    "\1\0\2\30\5\0\1\30\1\0\1\30\2\0\3\30"+
-    "\1\0\1\30\7\0\1\30\1\0\1\30\26\0\1\30"+
-    "\6\0\1\30\3\0\1\30\3\0\1\30\7\0\1\30"+
-    "\31\0\20\30\5\0\3\30\3\0\1\30\3\0\2\30"+
-    "\2\0\2\30\4\0\1\30\4\37\4\0\1\30\4\0"+
-    "\1\30\2\0\1\30\4\0\1\30\1\0\1\30\1\0"+
-    "\1\30\127\0\2\37\15\0\4\37\60\0\1\37\15\0"+
-    "\2\37\10\0\2\37\1\0\1\37\1\0\1\37\11\0"+
-    "\1\37\11\0\2\37\6\0\1\37\2\0\4\37\3\0"+
-    "\1\37\2\0\2\37\1\0\3\37\5\0\1\37\1\0"+
-    "\2\37\2\0\2\37\1\0\4\37\5\0\1\37\1\0"+
-    "\2\37\45\0\1\30\4\0\1\30\11\0\1\30\22\0"+
-    "\1\30\3\0\1\30\13\0\1\60\2\0\1\60\10\0"+
-    "\1\30\12\0\4\60\45\0\1\30\21\0\1\30\26\0"+
-    "\2\30\23\0\1\60\1\30\44\0\1\60\21\0\1\60"+
-    "\46\0\1\60\11\0\1\60\15\0\4\30\2\0\2\30"+
-    "\14\0\3\30\1\60\1\0\2\60\11\0\3\30\3\0"+
-    "\1\30\1\0\1\60\4\0\1\60\2\30\5\0\4\60"+
-    "\2\0\1\30\1\60\12\0\4\60\1\0\2\30\1\0"+
-    "\1\60\7\0\1\30\23\0\1\30\4\0\1\30\6\0"+
-    "\1\30\3\0\1\30\6\0\1\30\5\0\1\30\2\0"+
-    "\2\30\1\0\17\30\2\0\1\30\13\0\7\30\2\0"+
-    "\1\30\1\0\1\30\1\0\1\30\2\0\1\30\1\0"+
-    "\1\30\1\0\1\30\1\0\1\30\4\0\1\60\1\0"+
-    "\2\30\5\0\1\30\1\0\1\30\2\0\3\30\1\0"+
-    "\1\30\7\0\1\30\1\0\1\30\26\0\1\30\6\0"+
-    "\1\30\3\0\1\30\3\0\1\30\7\0\1\30\31\0"+
-    "\20\30\5\0\3\30\3\0\1\30\3\0\2\30\2\0"+
-    "\2\30\4\0\1\30\4\60\4\0\1\30\4\0\1\30"+
-    "\2\0\1\30\4\0\1\30\1\0\1\30\1\0\1\30"+
-    "\127\0\2\60\15\0\4\60\60\0\1\60\15\0\2\60"+
-    "\10\0\2\60\1\0\1\60\1\0\1\60\11\0\1\60"+
-    "\11\0\2\60\6\0\1\60\2\0\4\60\3\0\1\60"+
-    "\2\0\2\60\1\0\3\60\5\0\1\60\1\0\2\60"+
-    "\2\0\2\60\1\0\4\60\5\0\1\60\1\0\2\60"+
-    "\44\0\1\224\1\0\1\225\17\0\1\226\2\0\1\227"+
-    "\4\0\1\230\3\0\1\231\22\0\1\232\21\0\1\233"+
-    "\2\0\1\234\60\0\1\154\1\60\6\0\1\154\12\0"+
-    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
-    "\1\30\13\0\1\61\2\0\1\61\10\0\1\30\12\0"+
-    "\4\61\45\0\1\30\24\0\1\30\3\0\4\30\1\0"+
-    "\1\30\4\0\1\30\1\0\2\30\2\0\2\30\2\0"+
-    "\3\30\1\0\1\30\1\0\1\30\2\0\4\30\1\0"+
-    "\3\30\1\0\1\30\1\0\3\30\1\0\2\30\1\0"+
-    "\4\30\1\0\2\30\2\0\10\30\1\0\2\30\1\0"+
-    "\11\30\1\0\10\30\1\0\13\30\2\0\1\30\1\0"+
-    "\1\30\1\0\2\30\2\0\1\30\1\0\1\30\3\0"+
-    "\1\30\17\0\1\30\26\0\2\30\24\0\1\30\44\0"+
-    "\1\61\102\0\1\61\15\0\4\30\2\0\2\30\14\0"+
-    "\3\30\1\61\1\0\2\61\11\0\3\30\3\0\1\30"+
-    "\1\0\1\61\4\0\1\61\2\30\5\0\4\61\2\0"+
-    "\1\30\1\61\17\0\2\30\1\0\1\61\7\0\1\30"+
-    "\37\0\1\30\3\0\2\30\12\0\2\30\1\0\3\30"+
-    "\7\0\1\30\6\0\2\30\1\0\2\30\6\0\1\30"+
-    "\4\0\2\30\2\0\2\30\5\0\3\30\10\0\1\30"+
-    "\16\0\1\30\7\0\1\30\7\0\1\30\23\0\1\30"+
-    "\4\0\1\30\6\0\1\30\3\0\1\30\6\0\1\30"+
-    "\5\0\1\30\2\0\2\30\1\0\17\30\2\0\1\30"+
-    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\1\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
-    "\4\0\1\61\1\0\2\30\5\0\1\30\1\0\1\30"+
-    "\2\0\3\30\1\0\1\30\7\0\1\30\1\0\1\30"+
-    "\26\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
-    "\7\0\1\30\31\0\20\30\5\0\3\30\3\0\1\30"+
-    "\3\0\2\30\2\0\2\30\4\0\1\30\4\61\4\0"+
-    "\1\30\4\0\1\30\2\0\1\30\4\0\1\30\1\0"+
-    "\1\30\1\0\1\30\127\0\2\61\15\0\4\61\60\0"+
-    "\1\61\15\0\2\61\10\0\2\61\1\0\1\61\1\0"+
-    "\1\61\11\0\1\61\11\0\2\61\6\0\1\61\2\0"+
-    "\4\61\3\0\1\61\2\0\2\61\1\0\3\61\5\0"+
-    "\1\61\1\0\2\61\2\0\2\61\1\0\4\61\5\0"+
-    "\1\61\1\0\2\61\45\0\1\30\4\0\1\30\11\0"+
+    "\2\0\1\30\1\0\1\30\1\0\2\30\2\0\1\30"+
+    "\1\0\3\30\2\0\1\30\1\0\1\30\1\0\1\30"+
+    "\1\0\1\30\4\0\1\40\1\0\2\30\6\0\1\30"+
+    "\7\0\1\30\1\0\1\30\33\0\1\30\6\0\1\30"+
+    "\3\0\1\30\3\0\1\30\7\0\1\30\31\0\20\30"+
+    "\5\0\3\30\4\0\1\30\6\0\1\30\3\0\2\30"+
+    "\2\0\2\30\4\0\1\30\4\40\1\0\1\30\2\0"+
+    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\134\0"+
+    "\2\40\25\0\4\40\55\0\1\40\15\0\2\40\10\0"+
+    "\2\40\1\0\1\40\1\0\1\40\11\0\1\40\11\0"+
+    "\2\40\6\0\1\40\2\0\4\40\3\0\1\40\2\0"+
+    "\2\40\1\0\3\40\1\0\2\40\1\0\1\40\10\0"+
+    "\1\40\1\0\2\40\2\0\2\40\1\0\4\40\23\0"+
+    "\1\40\111\0\1\41\2\0\1\41\33\0\4\41\216\0"+
+    "\1\41\77\0\1\41\44\0\1\41\1\0\2\41\21\0"+
+    "\1\41\4\0\1\41\17\0\4\41\3\0\1\41\12\0"+
+    "\1\41\203\0\1\41\222\0\4\41\152\0\2\41\25\0"+
+    "\4\41\55\0\1\41\15\0\2\41\10\0\2\41\1\0"+
+    "\1\41\1\0\1\41\11\0\1\41\11\0\2\41\6\0"+
+    "\1\41\2\0\4\41\3\0\1\41\2\0\2\41\1\0"+
+    "\3\41\1\0\2\41\1\0\1\41\10\0\1\41\1\0"+
+    "\2\41\2\0\2\41\1\0\4\41\23\0\1\41\165\0"+
+    "\1\277\26\0\2\277\27\0\1\30\4\0\1\30\11\0"+
     "\1\30\22\0\1\30\3\0\1\30\13\0\1\62\2\0"+
-    "\1\62\10\0\1\30\12\0\4\62\45\0\1\30\21\0"+
-    "\1\30\26\0\2\30\23\0\1\60\1\30\44\0\1\62"+
-    "\21\0\1\60\46\0\1\60\11\0\1\62\15\0\4\30"+
+    "\1\62\10\0\1\30\22\0\4\62\35\0\1\30\26\0"+
+    "\1\30\26\0\2\30\23\0\1\62\1\30\40\0\1\62"+
+    "\13\0\1\62\65\0\1\62\11\0\1\62\15\0\4\30"+
     "\2\0\2\30\14\0\3\30\1\62\1\0\2\62\11\0"+
     "\3\30\3\0\1\30\1\0\1\62\4\0\1\62\2\30"+
-    "\5\0\4\62\2\0\1\30\1\62\12\0\4\60\1\0"+
-    "\2\30\1\0\1\62\7\0\1\30\23\0\1\30\4\0"+
+    "\1\0\4\62\1\0\2\30\5\0\4\62\2\0\1\30"+
+    "\1\62\12\0\1\62\7\0\1\30\30\0\1\30\4\0"+
     "\1\30\6\0\1\30\3\0\1\30\6\0\1\30\5\0"+
     "\1\30\2\0\2\30\1\0\17\30\2\0\1\30\13\0"+
-    "\7\30\2\0\1\30\1\0\1\30\1\0\1\30\2\0"+
-    "\1\30\1\0\1\30\1\0\1\30\1\0\1\30\4\0"+
-    "\1\62\1\0\2\30\5\0\1\30\1\0\1\30\2\0"+
-    "\3\30\1\0\1\30\7\0\1\30\1\0\1\30\26\0"+
+    "\7\30\2\0\1\30\1\0\1\30\1\0\2\30\2\0"+
+    "\1\30\1\0\3\30\2\0\1\30\1\0\1\30\1\0"+
+    "\1\30\1\0\1\30\4\0\1\62\1\0\2\30\6\0"+
+    "\1\30\7\0\1\30\1\0\1\30\33\0\1\30\6\0"+
+    "\1\30\3\0\1\30\3\0\1\30\7\0\1\30\31\0"+
+    "\20\30\5\0\3\30\4\0\1\30\6\0\1\30\3\0"+
+    "\2\30\2\0\2\30\4\0\1\30\4\62\1\0\1\30"+
+    "\2\0\1\30\4\0\1\30\1\0\1\30\1\0\1\30"+
+    "\134\0\2\62\25\0\4\62\55\0\1\62\15\0\2\62"+
+    "\10\0\2\62\1\0\1\62\1\0\1\62\11\0\1\62"+
+    "\11\0\2\62\6\0\1\62\2\0\4\62\3\0\1\62"+
+    "\2\0\2\62\1\0\3\62\1\0\2\62\1\0\1\62"+
+    "\10\0\1\62\1\0\2\62\2\0\2\62\1\0\4\62"+
+    "\23\0\1\62\26\0\1\300\1\0\1\301\17\0\1\302"+
+    "\2\0\1\303\4\0\1\304\3\0\1\305\22\0\1\306"+
+    "\21\0\1\307\2\0\1\310\62\0\1\200\1\62\2\0"+
+    "\3\200\1\0\1\200\2\0\1\200\4\0\1\42\1\0"+
+    "\1\43\2\0\1\311\1\0\1\45\4\0\1\46\1\0"+
+    "\1\47\1\0\1\50\2\0\1\51\3\0\1\312\2\0"+
+    "\1\313\4\0\1\54\3\0\1\314\17\0\1\56\2\0"+
+    "\1\315\21\0\1\316\2\0\1\317\41\0\1\121\17\0"+
+    "\1\30\1\201\1\62\1\123\1\0\2\200\1\201\1\0"+
+    "\1\201\2\0\1\200\1\0\1\37\1\30\7\0\1\30"+
+    "\4\0\1\30\11\0\1\30\22\0\1\30\3\0\1\30"+
+    "\13\0\1\63\2\0\1\63\10\0\1\30\22\0\4\63"+
+    "\35\0\1\30\31\0\1\30\3\0\4\30\1\0\1\30"+
+    "\4\0\1\30\1\0\2\30\2\0\2\30\2\0\3\30"+
+    "\1\0\1\30\1\0\1\30\2\0\4\30\1\0\3\30"+
+    "\1\0\1\30\1\0\3\30\1\0\2\30\1\0\4\30"+
+    "\1\0\2\30\2\0\10\30\1\0\2\30\1\0\10\30"+
+    "\2\0\7\30\1\0\10\30\1\0\6\30\1\0\1\30"+
+    "\1\0\2\30\2\0\1\30\1\0\1\30\3\0\3\30"+
+    "\22\0\1\30\26\0\2\30\24\0\1\30\54\0\1\63"+
+    "\77\0\1\63\15\0\4\30\2\0\2\30\14\0\3\30"+
+    "\1\63\1\0\2\63\11\0\3\30\3\0\1\30\1\0"+
+    "\1\63\4\0\1\63\2\30\6\0\2\30\5\0\4\63"+
+    "\2\0\1\30\1\63\12\0\1\63\7\0\1\30\44\0"+
+    "\1\30\3\0\2\30\12\0\2\30\1\0\3\30\7\0"+
+    "\1\30\6\0\2\30\1\0\2\30\6\0\1\30\4\0"+
+    "\2\30\2\0\2\30\5\0\3\30\2\0\1\30\15\0"+
+    "\1\30\16\0\1\30\7\0\1\30\30\0\1\30\4\0"+
+    "\1\30\6\0\1\30\3\0\1\30\6\0\1\30\5\0"+
+    "\1\30\2\0\2\30\1\0\17\30\2\0\1\30\13\0"+
+    "\7\30\2\0\1\30\1\0\1\30\1\0\2\30\2\0"+
+    "\1\30\1\0\3\30\2\0\1\30\1\0\1\30\1\0"+
+    "\1\30\1\0\1\30\4\0\1\63\1\0\2\30\6\0"+
+    "\1\30\7\0\1\30\1\0\1\30\33\0\1\30\6\0"+
+    "\1\30\3\0\1\30\3\0\1\30\7\0\1\30\31\0"+
+    "\20\30\5\0\3\30\4\0\1\30\6\0\1\30\3\0"+
+    "\2\30\2\0\2\30\4\0\1\30\4\63\1\0\1\30"+
+    "\2\0\1\30\4\0\1\30\1\0\1\30\1\0\1\30"+
+    "\134\0\2\63\25\0\4\63\55\0\1\63\15\0\2\63"+
+    "\10\0\2\63\1\0\1\63\1\0\1\63\11\0\1\63"+
+    "\11\0\2\63\6\0\1\63\2\0\4\63\3\0\1\63"+
+    "\2\0\2\63\1\0\3\63\1\0\2\63\1\0\1\63"+
+    "\10\0\1\63\1\0\2\63\2\0\2\63\1\0\4\63"+
+    "\23\0\1\63\27\0\1\30\4\0\1\30\11\0\1\30"+
+    "\22\0\1\30\3\0\1\30\13\0\1\64\2\0\1\64"+
+    "\10\0\1\30\22\0\4\64\35\0\1\30\26\0\1\30"+
+    "\26\0\2\30\23\0\1\62\1\30\40\0\1\62\13\0"+
+    "\1\64\65\0\1\62\11\0\1\64\15\0\4\30\2\0"+
+    "\2\30\14\0\3\30\1\64\1\0\2\64\11\0\3\30"+
+    "\3\0\1\30\1\0\1\64\4\0\1\64\2\30\1\0"+
+    "\4\62\1\0\2\30\5\0\4\64\2\0\1\30\1\64"+
+    "\12\0\1\64\7\0\1\30\30\0\1\30\4\0\1\30"+
+    "\6\0\1\30\3\0\1\30\6\0\1\30\5\0\1\30"+
+    "\2\0\2\30\1\0\17\30\2\0\1\30\13\0\7\30"+
+    "\2\0\1\30\1\0\1\30\1\0\2\30\2\0\1\30"+
+    "\1\0\3\30\2\0\1\30\1\0\1\30\1\0\1\30"+
+    "\1\0\1\30\4\0\1\64\1\0\2\30\6\0\1\30"+
+    "\7\0\1\30\1\0\1\30\33\0\1\30\6\0\1\30"+
+    "\3\0\1\30\3\0\1\30\7\0\1\30\31\0\20\30"+
+    "\5\0\3\30\4\0\1\30\6\0\1\30\3\0\2\30"+
+    "\2\0\2\30\4\0\1\30\4\64\1\0\1\30\2\0"+
+    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\134\0"+
+    "\2\64\25\0\4\64\55\0\1\64\15\0\2\64\10\0"+
+    "\2\64\1\0\1\64\1\0\1\64\11\0\1\64\11\0"+
+    "\2\64\6\0\1\64\2\0\4\64\3\0\1\64\2\0"+
+    "\2\64\1\0\3\64\1\0\2\64\1\0\1\64\10\0"+
+    "\1\64\1\0\2\64\2\0\2\64\1\0\4\64\23\0"+
+    "\1\64\111\0\1\76\2\0\1\76\33\0\4\76\102\0"+
+    "\1\31\104\0\1\31\146\0\1\31\41\0\1\31\13\0"+
+    "\1\76\65\0\1\31\11\0\1\76\44\0\1\76\1\0"+
+    "\2\76\21\0\1\76\4\0\1\76\3\0\4\31\10\0"+
+    "\4\76\3\0\1\76\12\0\1\76\164\0\2\31\233\0"+
+    "\1\76\222\0\4\76\152\0\2\76\25\0\4\76\55\0"+
+    "\1\76\15\0\2\76\10\0\2\76\1\0\1\76\1\0"+
+    "\1\76\11\0\1\76\11\0\2\76\6\0\1\76\2\0"+
+    "\4\76\3\0\1\76\2\0\2\76\1\0\3\76\1\0"+
+    "\2\76\1\0\1\76\10\0\1\76\1\0\2\76\2\0"+
+    "\2\76\1\0\4\76\23\0\1\76\27\0\1\30\4\0"+
+    "\1\30\11\0\1\30\22\0\1\30\3\0\1\30\13\0"+
+    "\1\77\2\0\1\77\10\0\1\30\22\0\4\77\35\0"+
+    "\1\30\26\0\1\30\26\0\2\30\23\0\1\31\1\30"+
+    "\40\0\1\31\13\0\1\77\65\0\1\31\11\0\1\77"+
+    "\15\0\4\30\2\0\2\30\14\0\3\30\1\77\1\0"+
+    "\2\77\11\0\3\30\3\0\1\30\1\0\1\77\4\0"+
+    "\1\77\2\30\1\0\4\31\1\0\2\30\5\0\4\77"+
+    "\2\0\1\30\1\77\12\0\1\77\7\0\1\30\30\0"+
+    "\1\30\4\0\1\30\6\0\1\30\3\0\1\30\6\0"+
+    "\1\30\5\0\1\30\2\0\2\30\1\0\17\30\2\0"+
+    "\1\30\13\0\7\30\2\0\1\30\1\0\1\30\1\0"+
+    "\2\30\2\0\1\30\1\0\3\30\2\0\1\30\1\0"+
+    "\1\30\1\0\1\30\1\0\1\30\4\0\1\77\1\0"+
+    "\2\30\6\0\1\30\7\0\1\30\1\0\1\30\33\0"+
     "\1\30\6\0\1\30\3\0\1\30\3\0\1\30\7\0"+
-    "\1\30\31\0\20\30\5\0\3\30\3\0\1\30\3\0"+
-    "\2\30\2\0\2\30\4\0\1\30\4\62\4\0\1\30"+
-    "\4\0\1\30\2\0\1\30\4\0\1\30\1\0\1\30"+
-    "\1\0\1\30\127\0\2\62\15\0\4\62\60\0\1\62"+
-    "\15\0\2\62\10\0\2\62\1\0\1\62\1\0\1\62"+
-    "\11\0\1\62\11\0\2\62\6\0\1\62\2\0\4\62"+
-    "\3\0\1\62\2\0\2\62\1\0\3\62\5\0\1\62"+
-    "\1\0\2\62\2\0\2\62\1\0\4\62\5\0\1\62"+
-    "\1\0\2\62\127\0\1\74\2\0\1\74\23\0\4\74"+
-    "\105\0\1\31\132\0\1\31\113\0\1\31\45\0\1\74"+
-    "\21\0\1\31\46\0\1\31\11\0\1\74\44\0\1\74"+
-    "\1\0\2\74\21\0\1\74\4\0\1\74\7\0\4\74"+
-    "\3\0\1\74\12\0\4\31\4\0\1\74\205\0\2\31"+
-    "\170\0\1\74\215\0\4\74\155\0\2\74\15\0\4\74"+
-    "\60\0\1\74\15\0\2\74\10\0\2\74\1\0\1\74"+
-    "\1\0\1\74\11\0\1\74\11\0\2\74\6\0\1\74"+
-    "\2\0\4\74\3\0\1\74\2\0\2\74\1\0\3\74"+
-    "\5\0\1\74\1\0\2\74\2\0\2\74\1\0\4\74"+
-    "\5\0\1\74\1\0\2\74\45\0\1\30\4\0\1\30"+
-    "\11\0\1\30\22\0\1\30\3\0\1\30\13\0\1\75"+
-    "\2\0\1\75\10\0\1\30\12\0\4\75\45\0\1\30"+
-    "\21\0\1\30\26\0\2\30\23\0\1\31\1\30\44\0"+
-    "\1\75\21\0\1\31\46\0\1\31\11\0\1\75\15\0"+
-    "\4\30\2\0\2\30\14\0\3\30\1\75\1\0\2\75"+
-    "\11\0\3\30\3\0\1\30\1\0\1\75\4\0\1\75"+
-    "\2\30\5\0\4\75\2\0\1\30\1\75\12\0\4\31"+
-    "\1\0\2\30\1\0\1\75\7\0\1\30\23\0\1\30"+
-    "\4\0\1\30\6\0\1\30\3\0\1\30\6\0\1\30"+
-    "\5\0\1\30\2\0\2\30\1\0\17\30\2\0\1\30"+
-    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\1\30"+
+    "\1\30\31\0\20\30\5\0\3\30\4\0\1\30\6\0"+
+    "\1\30\3\0\2\30\2\0\2\30\4\0\1\30\4\77"+
+    "\1\0\1\30\2\0\1\30\4\0\1\30\1\0\1\30"+
+    "\1\0\1\30\134\0\2\77\25\0\4\77\55\0\1\77"+
+    "\15\0\2\77\10\0\2\77\1\0\1\77\1\0\1\77"+
+    "\11\0\1\77\11\0\2\77\6\0\1\77\2\0\4\77"+
+    "\3\0\1\77\2\0\2\77\1\0\3\77\1\0\2\77"+
+    "\1\0\1\77\10\0\1\77\1\0\2\77\2\0\2\77"+
+    "\1\0\4\77\23\0\1\77\111\0\1\110\2\0\1\110"+
+    "\33\0\4\110\216\0\1\110\77\0\1\110\44\0\1\110"+
+    "\1\0\2\110\21\0\1\110\4\0\1\110\17\0\4\110"+
+    "\3\0\1\110\12\0\1\110\203\0\1\110\222\0\4\110"+
+    "\152\0\2\110\25\0\4\110\55\0\1\110\15\0\2\110"+
+    "\10\0\2\110\1\0\1\110\1\0\1\110\11\0\1\110"+
+    "\11\0\2\110\6\0\1\110\2\0\4\110\3\0\1\110"+
+    "\2\0\2\110\1\0\3\110\1\0\2\110\1\0\1\110"+
+    "\10\0\1\110\1\0\2\110\2\0\2\110\1\0\4\110"+
+    "\23\0\1\110\27\0\1\30\4\0\1\30\11\0\1\30"+
+    "\22\0\1\30\3\0\1\30\13\0\1\111\2\0\1\111"+
+    "\10\0\1\30\22\0\4\111\35\0\1\30\26\0\1\30"+
+    "\26\0\2\30\23\0\1\62\1\30\40\0\1\62\13\0"+
+    "\1\111\65\0\1\62\11\0\1\111\15\0\4\30\2\0"+
+    "\2\30\14\0\3\30\1\111\1\0\2\111\11\0\3\30"+
+    "\3\0\1\30\1\0\1\111\4\0\1\111\2\30\1\0"+
+    "\4\62\1\0\2\30\5\0\4\111\2\0\1\30\1\111"+
+    "\12\0\1\111\7\0\1\30\30\0\1\30\4\0\1\30"+
+    "\6\0\1\30\3\0\1\30\6\0\1\30\5\0\1\30"+
+    "\2\0\2\30\1\0\17\30\2\0\1\30\13\0\7\30"+
+    "\2\0\1\30\1\0\1\30\1\0\2\30\2\0\1\30"+
+    "\1\0\3\30\2\0\1\30\1\0\1\30\1\0\1\30"+
+    "\1\0\1\30\4\0\1\111\1\0\2\30\6\0\1\30"+
+    "\7\0\1\30\1\0\1\30\33\0\1\30\6\0\1\30"+
+    "\3\0\1\30\3\0\1\30\7\0\1\30\31\0\20\30"+
+    "\5\0\3\30\4\0\1\30\6\0\1\30\3\0\2\30"+
+    "\2\0\2\30\4\0\1\30\4\111\1\0\1\30\2\0"+
+    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\134\0"+
+    "\2\111\25\0\4\111\55\0\1\111\15\0\2\111\10\0"+
+    "\2\111\1\0\1\111\1\0\1\111\11\0\1\111\11\0"+
+    "\2\111\6\0\1\111\2\0\4\111\3\0\1\111\2\0"+
+    "\2\111\1\0\3\111\1\0\2\111\1\0\1\111\10\0"+
+    "\1\111\1\0\2\111\2\0\2\111\1\0\4\111\23\0"+
+    "\1\111\111\0\1\123\2\0\1\123\33\0\4\123\216\0"+
+    "\1\123\77\0\1\123\44\0\1\123\1\0\2\123\21\0"+
+    "\1\123\4\0\1\123\17\0\4\123\3\0\1\123\12\0"+
+    "\1\123\203\0\1\123\222\0\4\123\152\0\2\123\25\0"+
+    "\4\123\55\0\1\123\15\0\2\123\10\0\2\123\1\0"+
+    "\1\123\1\0\1\123\11\0\1\123\11\0\2\123\6\0"+
+    "\1\123\2\0\4\123\3\0\1\123\2\0\2\123\1\0"+
+    "\3\123\1\0\2\123\1\0\1\123\10\0\1\123\1\0"+
+    "\2\123\2\0\2\123\1\0\4\123\23\0\1\123\111\0"+
+    "\1\151\2\0\1\151\33\0\4\151\216\0\1\151\77\0"+
+    "\1\151\44\0\1\151\1\0\2\151\21\0\1\151\4\0"+
+    "\1\151\17\0\4\151\3\0\1\151\12\0\1\151\203\0"+
+    "\1\151\222\0\4\151\152\0\2\151\25\0\4\151\55\0"+
+    "\1\151\15\0\2\151\10\0\2\151\1\0\1\151\1\0"+
+    "\1\151\11\0\1\151\11\0\2\151\6\0\1\151\2\0"+
+    "\4\151\3\0\1\151\2\0\2\151\1\0\3\151\1\0"+
+    "\2\151\1\0\1\151\10\0\1\151\1\0\2\151\2\0"+
+    "\2\151\1\0\4\151\23\0\1\151\21\0\1\42\1\0"+
+    "\1\43\2\0\1\320\1\0\1\45\4\0\1\46\1\0"+
+    "\1\47\1\0\1\50\2\0\1\51\3\0\1\321\2\0"+
+    "\1\322\4\0\1\54\3\0\1\323\17\0\1\56\2\0"+
+    "\1\324\21\0\1\325\2\0\1\326\61\0\1\30\1\276"+
+    "\1\62\4\0\1\111\1\0\1\276\4\0\1\37\1\30"+
+    "\6\0\1\327\21\0\1\330\2\0\1\331\10\0\1\332"+
+    "\22\0\1\333\21\0\1\334\2\0\1\335\55\0\1\170"+
+    "\4\0\1\277\7\0\1\277\77\0\1\200\2\0\1\200"+
+    "\33\0\4\200\102\0\1\62\104\0\1\62\146\0\1\62"+
+    "\41\0\1\62\13\0\1\200\65\0\1\62\11\0\1\200"+
+    "\44\0\1\200\1\0\2\200\21\0\1\200\4\0\1\200"+
+    "\3\0\4\62\10\0\4\200\3\0\1\200\12\0\1\200"+
+    "\164\0\2\62\233\0\1\200\222\0\4\200\152\0\2\200"+
+    "\25\0\4\200\55\0\1\200\15\0\2\200\10\0\2\200"+
+    "\1\0\1\200\1\0\1\200\11\0\1\200\11\0\2\200"+
+    "\6\0\1\200\2\0\4\200\3\0\1\200\2\0\2\200"+
+    "\1\0\3\200\1\0\2\200\1\0\1\200\10\0\1\200"+
+    "\1\0\2\200\2\0\2\200\1\0\4\200\23\0\1\200"+
+    "\27\0\1\30\4\0\1\30\11\0\1\30\22\0\1\30"+
+    "\3\0\1\30\13\0\1\201\2\0\1\201\10\0\1\30"+
+    "\22\0\4\201\35\0\1\30\26\0\1\30\26\0\2\30"+
+    "\23\0\1\62\1\30\40\0\1\62\13\0\1\201\65\0"+
+    "\1\62\11\0\1\201\15\0\4\30\2\0\2\30\14\0"+
+    "\3\30\1\201\1\0\2\201\11\0\3\30\3\0\1\30"+
+    "\1\0\1\201\4\0\1\201\2\30\1\0\4\62\1\0"+
+    "\2\30\5\0\4\201\2\0\1\30\1\201\12\0\1\201"+
+    "\7\0\1\30\30\0\1\30\4\0\1\30\6\0\1\30"+
+    "\3\0\1\30\6\0\1\30\5\0\1\30\2\0\2\30"+
+    "\1\0\17\30\2\0\1\30\13\0\7\30\2\0\1\30"+
+    "\1\0\1\30\1\0\2\30\2\0\1\30\1\0\3\30"+
     "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
-    "\4\0\1\75\1\0\2\30\5\0\1\30\1\0\1\30"+
-    "\2\0\3\30\1\0\1\30\7\0\1\30\1\0\1\30"+
-    "\26\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
-    "\7\0\1\30\31\0\20\30\5\0\3\30\3\0\1\30"+
-    "\3\0\2\30\2\0\2\30\4\0\1\30\4\75\4\0"+
-    "\1\30\4\0\1\30\2\0\1\30\4\0\1\30\1\0"+
-    "\1\30\1\0\1\30\127\0\2\75\15\0\4\75\60\0"+
-    "\1\75\15\0\2\75\10\0\2\75\1\0\1\75\1\0"+
-    "\1\75\11\0\1\75\11\0\2\75\6\0\1\75\2\0"+
-    "\4\75\3\0\1\75\2\0\2\75\1\0\3\75\5\0"+
-    "\1\75\1\0\2\75\2\0\2\75\1\0\4\75\5\0"+
-    "\1\75\1\0\2\75\127\0\1\117\2\0\1\117\23\0"+
-    "\4\117\211\0\1\117\102\0\1\117\44\0\1\117\1\0"+
-    "\2\117\21\0\1\117\4\0\1\117\7\0\4\117\3\0"+
-    "\1\117\22\0\1\117\166\0\1\117\215\0\4\117\155\0"+
-    "\2\117\15\0\4\117\60\0\1\117\15\0\2\117\10\0"+
-    "\2\117\1\0\1\117\1\0\1\117\11\0\1\117\11\0"+
-    "\2\117\6\0\1\117\2\0\4\117\3\0\1\117\2\0"+
-    "\2\117\1\0\3\117\5\0\1\117\1\0\2\117\2\0"+
-    "\2\117\1\0\4\117\5\0\1\117\1\0\2\117\127\0"+
-    "\1\154\2\0\1\154\23\0\4\154\105\0\1\60\132\0"+
-    "\1\60\113\0\1\60\45\0\1\154\21\0\1\60\46\0"+
-    "\1\60\11\0\1\154\44\0\1\154\1\0\2\154\21\0"+
-    "\1\154\4\0\1\154\7\0\4\154\3\0\1\154\12\0"+
-    "\4\60\4\0\1\154\205\0\2\60\170\0\1\154\215\0"+
-    "\4\154\155\0\2\154\15\0\4\154\60\0\1\154\15\0"+
-    "\2\154\10\0\2\154\1\0\1\154\1\0\1\154\11\0"+
-    "\1\154\11\0\2\154\6\0\1\154\2\0\4\154\3\0"+
-    "\1\154\2\0\2\154\1\0\3\154\5\0\1\154\1\0"+
-    "\2\154\2\0\2\154\1\0\4\154\5\0\1\154\1\0"+
-    "\2\154\36\0";
+    "\4\0\1\201\1\0\2\30\6\0\1\30\7\0\1\30"+
+    "\1\0\1\30\33\0\1\30\6\0\1\30\3\0\1\30"+
+    "\3\0\1\30\7\0\1\30\31\0\20\30\5\0\3\30"+
+    "\4\0\1\30\6\0\1\30\3\0\2\30\2\0\2\30"+
+    "\4\0\1\30\4\201\1\0\1\30\2\0\1\30\4\0"+
+    "\1\30\1\0\1\30\1\0\1\30\134\0\2\201\25\0"+
+    "\4\201\55\0\1\201\15\0\2\201\10\0\2\201\1\0"+
+    "\1\201\1\0\1\201\11\0\1\201\11\0\2\201\6\0"+
+    "\1\201\2\0\4\201\3\0\1\201\2\0\2\201\1\0"+
+    "\3\201\1\0\2\201\1\0\1\201\10\0\1\201\1\0"+
+    "\2\201\2\0\2\201\1\0\4\201\23\0\1\201\27\0"+
+    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
+    "\1\30\13\0\1\276\2\0\1\276\10\0\1\30\22\0"+
+    "\4\276\35\0\1\30\26\0\1\30\26\0\2\30\23\0"+
+    "\1\62\1\30\40\0\1\62\13\0\1\276\65\0\1\62"+
+    "\11\0\1\276\15\0\4\30\2\0\2\30\14\0\3\30"+
+    "\1\276\1\0\2\276\11\0\3\30\3\0\1\30\1\0"+
+    "\1\276\4\0\1\276\2\30\1\0\4\62\1\0\2\30"+
+    "\5\0\4\276\2\0\1\30\1\276\12\0\1\276\7\0"+
+    "\1\30\30\0\1\30\4\0\1\30\6\0\1\30\3\0"+
+    "\1\30\6\0\1\30\5\0\1\30\2\0\2\30\1\0"+
+    "\17\30\2\0\1\30\13\0\7\30\2\0\1\30\1\0"+
+    "\1\30\1\0\2\30\2\0\1\30\1\0\3\30\2\0"+
+    "\1\30\1\0\1\30\1\0\1\30\1\0\1\30\4\0"+
+    "\1\276\1\0\2\30\6\0\1\30\7\0\1\30\1\0"+
+    "\1\30\33\0\1\30\6\0\1\30\3\0\1\30\3\0"+
+    "\1\30\7\0\1\30\31\0\20\30\5\0\3\30\4\0"+
+    "\1\30\6\0\1\30\3\0\2\30\2\0\2\30\4\0"+
+    "\1\30\4\276\1\0\1\30\2\0\1\30\4\0\1\30"+
+    "\1\0\1\30\1\0\1\30\134\0\2\276\25\0\4\276"+
+    "\55\0\1\276\15\0\2\276\10\0\2\276\1\0\1\276"+
+    "\1\0\1\276\11\0\1\276\11\0\2\276\6\0\1\276"+
+    "\2\0\4\276\3\0\1\276\2\0\2\276\1\0\3\276"+
+    "\1\0\2\276\1\0\1\276\10\0\1\276\1\0\2\276"+
+    "\2\0\2\276\1\0\4\276\23\0\1\276\111\0\1\277"+
+    "\2\0\1\277\33\0\4\277\216\0\1\277\77\0\1\277"+
+    "\44\0\1\277\1\0\2\277\21\0\1\277\4\0\1\277"+
+    "\17\0\4\277\3\0\1\277\12\0\1\277\203\0\1\277"+
+    "\222\0\4\277\152\0\2\277\25\0\4\277\55\0\1\277"+
+    "\15\0\2\277\10\0\2\277\1\0\1\277\1\0\1\277"+
+    "\11\0\1\277\11\0\2\277\6\0\1\277\2\0\4\277"+
+    "\3\0\1\277\2\0\2\277\1\0\3\277\1\0\2\277"+
+    "\1\0\1\277\10\0\1\277\1\0\2\277\2\0\2\277"+
+    "\1\0\4\277\23\0\1\277\20\0";
 
   private static int [] zzUnpackTrans() {
-    int [] result = new int[20002];
+    int [] result = new int[29962];
     int offset = 0;
     offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
     return result;
@@ -747,11 +928,12 @@
   private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();
 
   private static final String ZZ_ATTRIBUTE_PACKED_0 =
-    "\1\0\1\11\35\1\20\0\1\1\1\0\1\1\12\0"+
-    "\1\1\21\0\1\1\115\0";
+    "\1\0\1\11\36\1\21\0\1\1\1\0\1\1\12\0"+
+    "\1\1\10\0\2\1\11\0\1\1\55\0\1\1\74\0"+
+    "\2\1\36\0";
 
   private static int [] zzUnpackAttribute() {
-    int [] result = new int[156];
+    int [] result = new int[221];
     int offset = 0;
     offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
     return result;
@@ -858,7 +1040,6 @@
 
   /**
    * Creates a new scanner
-   * There is also a java.io.InputStream version of this constructor.
    *
    * @param   in  the java.io.Reader to read input from.
    */
@@ -866,7 +1047,6 @@
     this.zzReader = in;
   }
 
-  
 
   /** 
    * Unpacks the compressed character translation table.
@@ -878,7 +1058,7 @@
     char [] map = new char[0x10000];
     int i = 0;  /* index in packed string  */
     int j = 0;  /* index in unpacked array */
-    while (i < 2848) {
+    while (i < 2860) {
       int  count = packed.charAt(i++);
       char value = packed.charAt(i++);
       do map[j++] = value; while (--count > 0);
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerImpl.jflex	(working copy)
@@ -32,11 +32,13 @@
  *       Asian languages, including Thai, Lao, Myanmar, and Khmer</li>
  *   <li>&lt;IDEOGRAPHIC&gt;: A single CJKV ideographic character</li>
  *   <li>&lt;HIRAGANA&gt;: A single hiragana character</li>
+ *   <li>&lt;KATAKANA&gt;: A sequence of katakana characters</li>
+ *   <li>&lt;HANGUL&gt;: A sequence of Hangul characters</li>
  * </ul>
  */
 %%
 
-%unicode 6.1
+%unicode 6.3
 %integer
 %final
 %public
@@ -47,33 +49,40 @@
 %buffer 4096
 
 %include SUPPLEMENTARY.jflex-macro
-ALetter = ([\p{WB:ALetter}] | {ALetterSupp})
-Format =  ([\p{WB:Format}] | {FormatSupp})
-Numeric = ([\p{WB:Numeric}] | {NumericSupp})
-Extend =  ([\p{WB:Extend}] | {ExtendSupp})
-Katakana = ([\p{WB:Katakana}] | {KatakanaSupp})
-MidLetter = ([\p{WB:MidLetter}] | {MidLetterSupp})
-MidNum = ([\p{WB:MidNum}] | {MidNumSupp})
-MidNumLet = ([\p{WB:MidNumLet}] | {MidNumLetSupp})
-ExtendNumLet = ([\p{WB:ExtendNumLet}] | {ExtendNumLetSupp})
-ComplexContext = ([\p{LB:Complex_Context}] | {ComplexContextSupp})
-Han = ([\p{Script:Han}] | {HanSupp})
-Hiragana = ([\p{Script:Hiragana}] | {HiraganaSupp})
+ALetter           = (\p{WB:ALetter}                                     | {ALetterSupp})
+Format            = (\p{WB:Format}                                      | {FormatSupp})
+Numeric           = ([\p{WB:Numeric}[\p{Blk:HalfAndFullForms}&&\p{Nd}]] | {NumericSupp})
+Extend            = (\p{WB:Extend}                                      | {ExtendSupp})
+Katakana          = (\p{WB:Katakana}                                    | {KatakanaSupp})
+MidLetter         = (\p{WB:MidLetter}                                   | {MidLetterSupp})
+MidNum            = (\p{WB:MidNum}                                      | {MidNumSupp})
+MidNumLet         = (\p{WB:MidNumLet}                                   | {MidNumLetSupp})
+ExtendNumLet      = (\p{WB:ExtendNumLet}                                | {ExtendNumLetSupp})
+ComplexContext    = (\p{LB:Complex_Context}                             | {ComplexContextSupp})
+Han               = (\p{Script:Han}                                     | {HanSupp})
+Hiragana          = (\p{Script:Hiragana}                                | {HiraganaSupp})
+SingleQuote       = (\p{WB:Single_Quote}                                | {SingleQuoteSupp})
+DoubleQuote       = (\p{WB:Double_Quote}                                | {DoubleQuoteSupp})
+HebrewLetter      = (\p{WB:Hebrew_Letter}                               | {HebrewLetterSupp})
+RegionalIndicator = (\p{WB:Regional_Indicator}                          | {RegionalIndicatorSupp})
+HebrewOrALetter   = ({HebrewLetter} | {ALetter})
 
-// Script=Hangul & Aletter
-HangulEx       = (!(!\p{Script:Hangul}|!\p{WB:ALetter})) ({Format} | {Extend})*
 // UAX#29 WB4. X (Extend | Format)* --> X
 //
-ALetterEx      = {ALetter}                     ({Format} | {Extend})*
-// TODO: Convert hard-coded full-width numeric range to property intersection (something like [\p{Full-Width}&&\p{Numeric}]) once JFlex supports it
-NumericEx      = ({Numeric} | [\uFF10-\uFF19]) ({Format} | {Extend})*
-KatakanaEx     = {Katakana}                    ({Format} | {Extend})* 
-MidLetterEx    = ({MidLetter} | {MidNumLet})   ({Format} | {Extend})* 
-MidNumericEx   = ({MidNum} | {MidNumLet})      ({Format} | {Extend})*
-ExtendNumLetEx = {ExtendNumLet}                ({Format} | {Extend})*
+HangulEx            = [\p{Script:Hangul}&&[\p{WB:ALetter}\p{WB:Hebrew_Letter}]] ({Format} | {Extend})*
+HebrewOrALetterEx   = {HebrewOrALetter}                                         ({Format} | {Extend})*
+NumericEx           = {Numeric}                                                 ({Format} | {Extend})*
+KatakanaEx          = {Katakana}                                                ({Format} | {Extend})* 
+MidLetterEx         = ({MidLetter} | {MidNumLet} | {SingleQuote})               ({Format} | {Extend})* 
+MidNumericEx        = ({MidNum} | {MidNumLet} | {SingleQuote})                  ({Format} | {Extend})*
+ExtendNumLetEx      = {ExtendNumLet}                                            ({Format} | {Extend})*
+HanEx               = {Han}                                                     ({Format} | {Extend})*
+HiraganaEx          = {Hiragana}                                                ({Format} | {Extend})*
+SingleQuoteEx       = {SingleQuote}                                             ({Format} | {Extend})*                                            
+DoubleQuoteEx       = {DoubleQuote}                                             ({Format} | {Extend})*
+HebrewLetterEx      = {HebrewLetter}                                            ({Format} | {Extend})*
+RegionalIndicatorEx = {RegionalIndicator}                                       ({Format} | {Extend})*
 
-HanEx = {Han} ({Format} | {Extend})*
-HiraganaEx = {Hiragana} ({Format} | {Extend})*
 
 %{
   /** Alphanumeric sequences */
@@ -121,10 +130,10 @@
 <<EOF>> { return StandardTokenizerInterface.YYEOF; }
 
 // UAX#29 WB8.   Numeric × Numeric
-//        WB11.  Numeric (MidNum | MidNumLet) × Numeric
-//        WB12.  Numeric × (MidNum | MidNumLet) Numeric
-//        WB13a. (ALetter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
-//        WB13b. ExtendNumLet × (ALetter | Numeric | Katakana)
+//        WB11.  Numeric (MidNum | MidNumLet | Single_Quote) × Numeric
+//        WB12.  Numeric × (MidNum | MidNumLet | Single_Quote) Numeric
+//        WB13a. (ALetter | Hebrew_Letter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
+//        WB13b. ExtendNumLet × (ALetter | Hebrew_Letter | Numeric | Katakana) 
 //
 {ExtendNumLetEx}* {NumericEx} ({ExtendNumLetEx}+ {NumericEx} 
                               | {MidNumericEx} {NumericEx} 
@@ -139,22 +148,32 @@
 {KatakanaEx}+
   { return KATAKANA_TYPE; }
 
-// UAX#29 WB5.   ALetter × ALetter
-//        WB6.   ALetter × (MidLetter | MidNumLet) ALetter
-//        WB7.   ALetter (MidLetter | MidNumLet) × ALetter
-//        WB9.   ALetter × Numeric
-//        WB10.  Numeric × ALetter
+// UAX#29 WB5.   (ALetter | Hebrew_Letter) × (ALetter | Hebrew_Letter)
+//        WB6.   (ALetter | Hebrew_Letter) × (MidLetter | MidNumLet | Single_Quote) (ALetter | Hebrew_Letter)
+//        WB7.   (ALetter | Hebrew_Letter) (MidLetter | MidNumLet | Single_Quote) × (ALetter | Hebrew_Letter)
+//        WB7a.  Hebrew_Letter × Single_Quote
+//        WB7b.  Hebrew_Letter × Double_Quote Hebrew_Letter
+//        WB7c.  Hebrew_Letter Double_Quote × Hebrew_Letter
+//        WB9.   (ALetter | Hebrew_Letter) × Numeric
+//        WB10.  Numeric × (ALetter | Hebrew_Letter)
 //        WB13.  Katakana × Katakana
-//        WB13a. (ALetter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
-//        WB13b. ExtendNumLet × (ALetter | Numeric | Katakana)
+//        WB13a. (ALetter | Hebrew_Letter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
+//        WB13b. ExtendNumLet × (ALetter | Hebrew_Letter | Numeric | Katakana) 
 //
-{ExtendNumLetEx}*  ( {KatakanaEx} ({ExtendNumLetEx}* {KatakanaEx})* 
-                   | ( {NumericEx}  ({ExtendNumLetEx}+ {NumericEx} | {MidNumericEx} {NumericEx} | {NumericEx})*
-                     | {ALetterEx}  ({ExtendNumLetEx}+ {ALetterEx} | {MidLetterEx}  {ALetterEx} | {ALetterEx})* )+ ) 
-({ExtendNumLetEx}+ ( {KatakanaEx} ({ExtendNumLetEx}* {KatakanaEx})* 
-                   | ( {NumericEx}  ({ExtendNumLetEx}+ {NumericEx} | {MidNumericEx} {NumericEx} | {NumericEx})*
-                     | {ALetterEx}  ({ExtendNumLetEx}+ {ALetterEx} | {MidLetterEx}  {ALetterEx} | {ALetterEx})* )+ ) )*
-{ExtendNumLetEx}*  
+{ExtendNumLetEx}*  ( {KatakanaEx}
+                   | ( {HebrewLetterEx}    ( {SingleQuoteEx}     | {DoubleQuoteEx} {HebrewLetterEx}      )
+                     | {NumericEx}         ( ( {ExtendNumLetEx}* | {MidNumericEx} )* {NumericEx}         )*
+                     | {HebrewOrALetterEx} ( ( {ExtendNumLetEx}* | {MidLetterEx}  )* {HebrewOrALetterEx} )*
+                     )+
+                   )
+({ExtendNumLetEx}+ ( {KatakanaEx}
+                   | ( {HebrewLetterEx}    ( {SingleQuoteEx}     | {DoubleQuoteEx}   {HebrewLetterEx}    )
+                     | {NumericEx}         ( ( {ExtendNumLetEx}* | {MidNumericEx} )* {NumericEx}         )*
+                     | {HebrewOrALetterEx} ( ( {ExtendNumLetEx}* | {MidLetterEx}  )* {HebrewOrALetterEx} )*
+                     )+
+                   )
+)*
+{ExtendNumLetEx}* 
   { return WORD_TYPE; }
 
 
@@ -166,7 +185,7 @@
 //    annex.  That means that satisfactory treatment of languages like Chinese
 //    or Thai requires special handling.
 // 
-// In Unicode 6.1, only one character has the \p{Line_Break = Contingent_Break}
+// In Unicode 6.3, only one character has the \p{Line_Break = Contingent_Break}
 // property: U+FFFC ( ￼ ) OBJECT REPLACEMENT CHARACTER.
 //
 // In the ICU implementation of UAX#29, \p{Line_Break = Complex_Context}
@@ -188,6 +207,8 @@
 // UAX#29 WB3.   CR × LF
 //        WB3a.  (Newline | CR | LF) ÷
 //        WB3b.  ÷ (Newline | CR | LF)
+//        WB13c. Regional_Indicator × Regional_Indicator
 //        WB14.  Any ÷ Any
 //
-[^] { /* Break so we don't hit fall-through warning: */ break; /* Not numeric, word, ideographic, hiragana, or SE Asian -- ignore it. */ }
+{RegionalIndicatorEx} {RegionalIndicatorEx}+ | [^]
+  { /* Break so we don't hit fall-through warning: */ break; /* Not numeric, word, ideographic, hiragana, or SE Asian -- ignore it. */ }
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizerImpl.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizerImpl.java	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizerImpl.java	(working copy)
@@ -1,4 +1,4 @@
-/* The following code was generated by JFlex. */
+/* The following code was generated by JFlex 1.5.0-SNAPSHOT */
 
 package org.apache.lucene.analysis.standard;
 
@@ -37,6 +37,8 @@
  *       Asian languages, including Thai, Lao, Myanmar, and Khmer</li>
  *   <li>&lt;IDEOGRAPHIC&gt;: A single CJKV ideographic character</li>
  *   <li>&lt;HIRAGANA&gt;: A single hiragana character</li>
+ *   <li>&lt;KATAKANA&gt;: A sequence of katakana characters</li>
+ *   <li>&lt;HANGUL&gt;: A sequence of Hangul characters</li>
  * </ul>
  */
 
@@ -65,157 +67,157 @@
    * Translates characters to character classes
    */
   private static final String ZZ_CMAP_PACKED = 
-    "\1\301\10\277\2\301\2\277\1\301\23\277\1\302\1\276\1\271\1\302"+
-    "\1\262\1\260\1\265\2\263\2\302\1\264\1\244\1\211\1\270\1\245"+
-    "\1\250\1\256\1\251\1\254\1\246\1\247\1\253\1\255\1\252\1\257"+
-    "\1\274\1\277\1\275\1\277\1\267\1\266\1\212\1\236\1\213\1\214"+
-    "\1\215\1\220\1\221\1\237\1\222\1\240\1\243\1\223\1\224\1\225"+
-    "\1\217\1\227\1\226\1\216\1\230\1\231\1\232\1\241\1\233\1\234"+
-    "\1\242\1\235\1\272\1\300\1\273\1\303\1\261\1\303\1\212\1\236"+
-    "\1\213\1\214\1\215\1\220\1\221\1\237\1\222\1\240\1\243\1\223"+
-    "\1\224\1\225\1\217\1\227\1\226\1\216\1\230\1\231\1\232\1\241"+
-    "\1\233\1\234\1\242\1\235\3\303\1\260\1\304\52\0\1\174\2\0"+
-    "\1\175\7\0\1\174\1\0\1\200\2\0\1\174\5\0\27\174\1\0"+
-    "\37\174\1\0\u01ca\174\4\0\14\174\16\0\5\174\7\0\1\174\1\0"+
-    "\1\174\21\0\160\175\5\174\1\0\2\174\2\0\4\174\1\201\7\0"+
-    "\1\174\1\200\3\174\1\0\1\174\1\0\24\174\1\0\123\174\1\0"+
-    "\213\174\1\0\7\175\236\174\11\0\46\174\2\0\1\174\7\0\47\174"+
-    "\1\0\1\201\7\0\55\175\1\0\1\175\1\0\2\175\1\0\2\175"+
-    "\1\0\1\175\10\0\33\174\5\0\4\174\1\200\13\0\5\175\7\0"+
-    "\2\201\2\0\13\175\5\0\53\174\25\175\12\176\1\0\1\176\1\201"+
-    "\1\0\2\174\1\175\143\174\1\0\1\174\7\175\1\175\1\0\6\175"+
-    "\2\174\2\175\1\0\4\175\2\174\12\176\3\174\2\0\1\174\17\0"+
-    "\1\175\1\174\1\175\36\174\33\175\2\0\131\174\13\175\1\174\16\0"+
-    "\12\176\41\174\11\175\2\174\2\0\1\201\1\0\1\174\5\0\26\174"+
-    "\4\175\1\174\11\175\1\174\3\175\1\174\5\175\22\0\31\174\3\175"+
-    "\104\0\1\174\1\0\13\174\67\0\33\175\1\0\4\175\66\174\3\175"+
-    "\1\174\22\175\1\174\7\175\12\174\2\175\2\0\12\176\1\0\7\174"+
-    "\1\0\7\174\1\0\3\175\1\0\10\174\2\0\2\174\2\0\26\174"+
-    "\1\0\7\174\1\0\1\174\3\0\4\174\2\0\1\175\1\174\7\175"+
-    "\2\0\2\175\2\0\3\175\1\174\10\0\1\175\4\0\2\174\1\0"+
-    "\3\174\2\175\2\0\12\176\2\174\17\0\3\175\1\0\6\174\4\0"+
-    "\2\174\2\0\26\174\1\0\7\174\1\0\2\174\1\0\2\174\1\0"+
-    "\2\174\2\0\1\175\1\0\5\175\4\0\2\175\2\0\3\175\3\0"+
-    "\1\175\7\0\4\174\1\0\1\174\7\0\12\176\2\175\3\174\1\175"+
-    "\13\0\3\175\1\0\11\174\1\0\3\174\1\0\26\174\1\0\7\174"+
-    "\1\0\2\174\1\0\5\174\2\0\1\175\1\174\10\175\1\0\3\175"+
-    "\1\0\3\175\2\0\1\174\17\0\2\174\2\175\2\0\12\176\21\0"+
-    "\3\175\1\0\10\174\2\0\2\174\2\0\26\174\1\0\7\174\1\0"+
-    "\2\174\1\0\5\174\2\0\1\175\1\174\7\175\2\0\2\175\2\0"+
-    "\3\175\10\0\2\175\4\0\2\174\1\0\3\174\2\175\2\0\12\176"+
-    "\1\0\1\174\20\0\1\175\1\174\1\0\6\174\3\0\3\174\1\0"+
-    "\4\174\3\0\2\174\1\0\1\174\1\0\2\174\3\0\2\174\3\0"+
-    "\3\174\3\0\14\174\4\0\5\175\3\0\3\175\1\0\4\175\2\0"+
-    "\1\174\6\0\1\175\16\0\12\176\21\0\3\175\1\0\10\174\1\0"+
-    "\3\174\1\0\27\174\1\0\12\174\1\0\5\174\3\0\1\174\7\175"+
-    "\1\0\3\175\1\0\4\175\7\0\2\175\1\0\2\174\6\0\2\174"+
-    "\2\175\2\0\12\176\22\0\2\175\1\0\10\174\1\0\3\174\1\0"+
-    "\27\174\1\0\12\174\1\0\5\174\2\0\1\175\1\174\7\175\1\0"+
-    "\3\175\1\0\4\175\7\0\2\175\7\0\1\174\1\0\2\174\2\175"+
-    "\2\0\12\176\1\0\2\174\17\0\2\175\1\0\10\174\1\0\3\174"+
-    "\1\0\51\174\2\0\1\174\7\175\1\0\3\175\1\0\4\175\1\174"+
-    "\10\0\1\175\10\0\2\174\2\175\2\0\12\176\12\0\6\174\2\0"+
-    "\2\175\1\0\22\174\3\0\30\174\1\0\11\174\1\0\1\174\2\0"+
-    "\7\174\3\0\1\175\4\0\6\175\1\0\1\175\1\0\10\175\22\0"+
-    "\2\175\15\0\60\204\1\205\2\204\7\205\5\0\7\204\10\205\1\0"+
-    "\12\176\47\0\2\204\1\0\1\204\2\0\2\204\1\0\1\204\2\0"+
-    "\1\204\6\0\4\204\1\0\7\204\1\0\3\204\1\0\1\204\1\0"+
-    "\1\204\2\0\2\204\1\0\4\204\1\205\2\204\6\205\1\0\2\205"+
-    "\1\204\2\0\5\204\1\0\1\204\1\0\6\205\2\0\12\176\2\0"+
-    "\4\204\40\0\1\174\27\0\2\175\6\0\12\176\13\0\1\175\1\0"+
-    "\1\175\1\0\1\175\4\0\2\175\10\174\1\0\44\174\4\0\24\175"+
-    "\1\0\2\175\5\174\13\175\1\0\44\175\11\0\1\175\71\0\53\204"+
-    "\24\205\1\204\12\176\6\0\6\204\4\205\4\204\3\205\1\204\3\205"+
-    "\2\204\7\205\3\204\4\205\15\204\14\205\1\204\1\205\12\176\4\205"+
-    "\2\204\46\174\1\0\1\174\5\0\1\174\2\0\53\174\1\0\4\174"+
-    "\u0100\210\111\174\1\0\4\174\2\0\7\174\1\0\1\174\1\0\4\174"+
-    "\2\0\51\174\1\0\4\174\2\0\41\174\1\0\4\174\2\0\7\174"+
-    "\1\0\1\174\1\0\4\174\2\0\17\174\1\0\71\174\1\0\4\174"+
-    "\2\0\103\174\2\0\3\175\40\0\20\174\20\0\125\174\14\0\u026c\174"+
-    "\2\0\21\174\1\0\32\174\5\0\113\174\3\0\3\174\17\0\15\174"+
-    "\1\0\4\174\3\175\13\0\22\174\3\175\13\0\22\174\2\175\14\0"+
-    "\15\174\1\0\3\174\1\0\2\175\14\0\64\204\40\205\3\0\1\204"+
-    "\4\0\1\204\1\205\2\0\12\176\41\0\3\175\2\0\12\176\6\0"+
-    "\130\174\10\0\51\174\1\175\1\174\5\0\106\174\12\0\35\174\3\0"+
-    "\14\175\4\0\14\175\12\0\12\176\36\204\2\0\5\204\13\0\54\204"+
-    "\4\0\21\205\7\204\2\205\6\0\12\176\1\204\3\0\2\204\40\0"+
-    "\27\174\5\175\4\0\65\204\12\205\1\0\35\205\2\0\1\175\12\176"+
-    "\6\0\12\176\6\0\16\204\122\0\5\175\57\174\21\175\7\174\4\0"+
-    "\12\176\21\0\11\175\14\0\3\175\36\174\15\175\2\174\12\176\54\174"+
-    "\16\175\14\0\44\174\24\175\10\0\12\176\3\0\3\174\12\176\44\174"+
-    "\122\0\3\175\1\0\25\175\4\174\1\175\4\174\3\175\2\174\11\0"+
-    "\300\174\47\175\25\0\4\175\u0116\174\2\0\6\174\2\0\46\174\2\0"+
-    "\6\174\2\0\10\174\1\0\1\174\1\0\1\174\1\0\1\174\1\0"+
-    "\37\174\2\0\65\174\1\0\7\174\1\0\1\174\3\0\3\174\1\0"+
-    "\7\174\3\0\4\174\2\0\6\174\4\0\15\174\5\0\3\174\1\0"+
-    "\7\174\17\0\2\175\2\175\10\0\2\202\12\0\1\202\2\0\1\200"+
-    "\2\0\5\175\20\0\2\203\3\0\1\201\17\0\1\203\13\0\5\175"+
-    "\5\0\6\175\1\0\1\174\15\0\1\174\20\0\15\174\63\0\41\175"+
-    "\21\0\1\174\4\0\1\174\2\0\12\174\1\0\1\174\3\0\5\174"+
-    "\6\0\1\174\1\0\1\174\1\0\1\174\1\0\4\174\1\0\13\174"+
-    "\2\0\4\174\5\0\5\174\4\0\1\174\21\0\51\174\u032d\0\64\174"+
-    "\u0716\0\57\174\1\0\57\174\1\0\205\174\6\0\4\174\3\175\2\174"+
-    "\14\0\46\174\1\0\1\174\5\0\1\174\2\0\70\174\7\0\1\174"+
-    "\17\0\1\175\27\174\11\0\7\174\1\0\7\174\1\0\7\174\1\0"+
-    "\7\174\1\0\7\174\1\0\7\174\1\0\7\174\1\0\7\174\1\0"+
-    "\40\175\57\0\1\174\120\0\32\206\1\0\131\206\14\0\326\206\57\0"+
-    "\1\174\1\0\1\206\31\0\11\206\4\175\2\175\1\0\5\177\2\0"+
-    "\3\206\1\174\1\174\4\0\126\207\2\0\2\175\2\177\3\207\133\177"+
-    "\1\0\4\177\5\0\51\174\3\0\136\210\21\0\33\174\65\0\20\177"+
-    "\37\0\101\0\37\0\121\0\57\177\1\0\130\177\250\0\u19b6\206\112\0"+
-    "\u51cd\206\63\0\u048d\174\103\0\56\174\2\0\u010d\174\3\0\20\174\12\176"+
-    "\2\174\24\0\57\174\4\175\1\0\12\175\1\0\31\174\7\0\1\175"+
-    "\120\174\2\175\45\0\11\174\2\0\147\174\2\0\4\174\1\0\4\174"+
-    "\14\0\13\174\115\0\12\174\1\175\3\174\1\175\4\174\1\175\27\174"+
-    "\5\175\30\0\64\174\14\0\2\175\62\174\21\175\13\0\12\176\6\0"+
-    "\22\175\6\174\3\0\1\174\4\0\12\176\34\174\10\175\2\0\27\174"+
-    "\15\175\14\0\35\210\3\0\4\175\57\174\16\175\16\0\1\174\12\176"+
-    "\46\0\51\174\16\175\11\0\3\174\1\175\10\174\2\175\2\0\12\176"+
-    "\6\0\33\204\1\205\4\0\60\204\1\205\1\204\3\205\2\204\2\205"+
-    "\5\204\2\205\1\204\1\205\1\204\30\0\5\204\13\174\5\175\2\0"+
-    "\3\174\2\175\12\0\6\174\2\0\6\174\2\0\6\174\11\0\7\174"+
-    "\1\0\7\174\221\0\43\174\10\175\1\0\2\175\2\0\12\176\6\0"+
-    "\u2ba4\210\14\0\27\210\4\0\61\210\4\0\1\44\1\40\1\67\1\64"+
-    "\1\33\1\30\2\0\1\24\1\21\2\0\1\17\1\15\14\0\1\3"+
-    "\1\6\20\0\1\156\7\0\1\111\1\10\5\0\1\1\1\172\3\0"+
+    "\1\304\10\302\2\304\2\302\1\304\23\302\1\305\1\213\1\275\1\305"+
+    "\1\267\1\265\1\212\2\270\2\305\1\271\1\251\1\216\1\274\1\253"+
+    "\1\262\1\261\1\252\1\255\1\256\1\263\1\254\1\260\1\257\1\264"+
+    "\1\300\1\302\1\301\1\302\1\273\1\272\1\217\1\243\1\220\1\221"+
+    "\1\222\1\225\1\226\1\244\1\227\1\246\1\245\1\230\1\231\1\232"+
+    "\1\224\1\234\1\233\1\223\1\235\1\236\1\237\1\247\1\240\1\241"+
+    "\1\250\1\242\1\276\1\303\1\277\1\306\1\266\1\306\1\217\1\243"+
+    "\1\220\1\221\1\222\1\225\1\226\1\244\1\227\1\246\1\245\1\230"+
+    "\1\231\1\232\1\224\1\234\1\233\1\223\1\235\1\236\1\237\1\247"+
+    "\1\240\1\241\1\250\1\242\3\306\1\265\1\307\52\0\1\176\2\0"+
+    "\1\177\7\0\1\176\1\0\1\202\2\0\1\176\5\0\27\176\1\0"+
+    "\37\176\1\0\u01ca\176\4\0\14\176\5\0\1\202\10\0\5\176\7\0"+
+    "\1\176\1\0\1\176\21\0\160\177\5\176\1\0\2\176\2\0\4\176"+
+    "\1\203\7\0\1\176\1\202\3\176\1\0\1\176\1\0\24\176\1\0"+
+    "\123\176\1\0\213\176\1\0\7\177\236\176\11\0\46\176\2\0\1\176"+
+    "\7\0\47\176\1\0\1\203\7\0\55\177\1\0\1\177\1\0\2\177"+
+    "\1\0\2\177\1\0\1\177\10\0\33\214\5\0\3\214\1\176\1\202"+
+    "\13\0\5\177\7\0\2\203\2\0\13\177\1\0\1\177\3\0\53\176"+
+    "\25\177\12\200\1\0\1\200\1\203\1\0\2\176\1\177\143\176\1\0"+
+    "\1\176\7\177\1\177\1\0\6\177\2\176\2\177\1\0\4\177\2\176"+
+    "\12\200\3\176\2\0\1\176\17\0\1\177\1\176\1\177\36\176\33\177"+
+    "\2\0\131\176\13\177\1\176\16\0\12\200\41\176\11\177\2\176\2\0"+
+    "\1\203\1\0\1\176\5\0\26\176\4\177\1\176\11\177\1\176\3\177"+
+    "\1\176\5\177\22\0\31\176\3\177\104\0\1\176\1\0\13\176\67\0"+
+    "\33\177\1\0\4\177\66\176\3\177\1\176\22\177\1\176\7\177\12\176"+
+    "\2\177\2\0\12\200\1\0\7\176\1\0\7\176\1\0\3\177\1\0"+
+    "\10\176\2\0\2\176\2\0\26\176\1\0\7\176\1\0\1\176\3\0"+
+    "\4\176\2\0\1\177\1\176\7\177\2\0\2\177\2\0\3\177\1\176"+
+    "\10\0\1\177\4\0\2\176\1\0\3\176\2\177\2\0\12\200\2\176"+
+    "\17\0\3\177\1\0\6\176\4\0\2\176\2\0\26\176\1\0\7\176"+
+    "\1\0\2\176\1\0\2\176\1\0\2\176\2\0\1\177\1\0\5\177"+
+    "\4\0\2\177\2\0\3\177\3\0\1\177\7\0\4\176\1\0\1\176"+
+    "\7\0\12\200\2\177\3\176\1\177\13\0\3\177\1\0\11\176\1\0"+
+    "\3\176\1\0\26\176\1\0\7\176\1\0\2\176\1\0\5\176\2\0"+
+    "\1\177\1\176\10\177\1\0\3\177\1\0\3\177\2\0\1\176\17\0"+
+    "\2\176\2\177\2\0\12\200\21\0\3\177\1\0\10\176\2\0\2\176"+
+    "\2\0\26\176\1\0\7\176\1\0\2\176\1\0\5\176\2\0\1\177"+
+    "\1\176\7\177\2\0\2\177\2\0\3\177\10\0\2\177\4\0\2\176"+
+    "\1\0\3\176\2\177\2\0\12\200\1\0\1\176\20\0\1\177\1\176"+
+    "\1\0\6\176\3\0\3\176\1\0\4\176\3\0\2\176\1\0\1\176"+
+    "\1\0\2\176\3\0\2\176\3\0\3\176\3\0\14\176\4\0\5\177"+
+    "\3\0\3\177\1\0\4\177\2\0\1\176\6\0\1\177\16\0\12\200"+
+    "\21\0\3\177\1\0\10\176\1\0\3\176\1\0\27\176\1\0\12\176"+
+    "\1\0\5\176\3\0\1\176\7\177\1\0\3\177\1\0\4\177\7\0"+
+    "\2\177\1\0\2\176\6\0\2\176\2\177\2\0\12\200\22\0\2\177"+
+    "\1\0\10\176\1\0\3\176\1\0\27\176\1\0\12\176\1\0\5\176"+
+    "\2\0\1\177\1\176\7\177\1\0\3\177\1\0\4\177\7\0\2\177"+
+    "\7\0\1\176\1\0\2\176\2\177\2\0\12\200\1\0\2\176\17\0"+
+    "\2\177\1\0\10\176\1\0\3\176\1\0\51\176\2\0\1\176\7\177"+
+    "\1\0\3\177\1\0\4\177\1\176\10\0\1\177\10\0\2\176\2\177"+
+    "\2\0\12\200\12\0\6\176\2\0\2\177\1\0\22\176\3\0\30\176"+
+    "\1\0\11\176\1\0\1\176\2\0\7\176\3\0\1\177\4\0\6\177"+
+    "\1\0\1\177\1\0\10\177\22\0\2\177\15\0\60\206\1\207\2\206"+
+    "\7\207\5\0\7\206\10\207\1\0\12\200\47\0\2\206\1\0\1\206"+
+    "\2\0\2\206\1\0\1\206\2\0\1\206\6\0\4\206\1\0\7\206"+
+    "\1\0\3\206\1\0\1\206\1\0\1\206\2\0\2\206\1\0\4\206"+
+    "\1\207\2\206\6\207\1\0\2\207\1\206\2\0\5\206\1\0\1\206"+
+    "\1\0\6\207\2\0\12\200\2\0\4\206\40\0\1\176\27\0\2\177"+
+    "\6\0\12\200\13\0\1\177\1\0\1\177\1\0\1\177\4\0\2\177"+
+    "\10\176\1\0\44\176\4\0\24\177\1\0\2\177\5\176\13\177\1\0"+
+    "\44\177\11\0\1\177\71\0\53\206\24\207\1\206\12\200\6\0\6\206"+
+    "\4\207\4\206\3\207\1\206\3\207\2\206\7\207\3\206\4\207\15\206"+
+    "\14\207\1\206\1\207\12\200\4\207\2\206\46\176\1\0\1\176\5\0"+
+    "\1\176\2\0\53\176\1\0\4\176\u0100\215\111\176\1\0\4\176\2\0"+
+    "\7\176\1\0\1\176\1\0\4\176\2\0\51\176\1\0\4\176\2\0"+
+    "\41\176\1\0\4\176\2\0\7\176\1\0\1\176\1\0\4\176\2\0"+
+    "\17\176\1\0\71\176\1\0\4\176\2\0\103\176\2\0\3\177\40\0"+
+    "\20\176\20\0\125\176\14\0\u026c\176\2\0\21\176\1\0\32\176\5\0"+
+    "\113\176\3\0\3\176\17\0\15\176\1\0\4\176\3\177\13\0\22\176"+
+    "\3\177\13\0\22\176\2\177\14\0\15\176\1\0\3\176\1\0\2\177"+
+    "\14\0\64\206\40\207\3\0\1\206\4\0\1\206\1\207\2\0\12\200"+
+    "\41\0\3\177\1\177\1\0\12\200\6\0\130\176\10\0\51\176\1\177"+
+    "\1\176\5\0\106\176\12\0\35\176\3\0\14\177\4\0\14\177\12\0"+
+    "\12\200\36\206\2\0\5\206\13\0\54\206\4\0\21\207\7\206\2\207"+
+    "\6\0\12\200\1\206\3\0\2\206\40\0\27\176\5\177\4\0\65\206"+
+    "\12\207\1\0\35\207\2\0\1\177\12\200\6\0\12\200\6\0\16\206"+
+    "\122\0\5\177\57\176\21\177\7\176\4\0\12\200\21\0\11\177\14\0"+
+    "\3\177\36\176\15\177\2\176\12\200\54\176\16\177\14\0\44\176\24\177"+
+    "\10\0\12\200\3\0\3\176\12\200\44\176\122\0\3\177\1\0\25\177"+
+    "\4\176\1\177\4\176\3\177\2\176\11\0\300\176\47\177\25\0\4\177"+
+    "\u0116\176\2\0\6\176\2\0\46\176\2\0\6\176\2\0\10\176\1\0"+
+    "\1\176\1\0\1\176\1\0\1\176\1\0\37\176\2\0\65\176\1\0"+
+    "\7\176\1\0\1\176\3\0\3\176\1\0\7\176\3\0\4\176\2\0"+
+    "\6\176\4\0\15\176\5\0\3\176\1\0\7\176\17\0\2\177\2\177"+
+    "\10\0\2\204\12\0\1\204\2\0\1\202\2\0\5\177\20\0\2\205"+
+    "\3\0\1\203\17\0\1\205\13\0\5\177\1\0\12\177\1\0\1\176"+
+    "\15\0\1\176\20\0\15\176\63\0\41\177\21\0\1\176\4\0\1\176"+
+    "\2\0\12\176\1\0\1\176\3\0\5\176\6\0\1\176\1\0\1\176"+
+    "\1\0\1\176\1\0\4\176\1\0\13\176\2\0\4\176\5\0\5\176"+
+    "\4\0\1\176\21\0\51\176\u032d\0\64\176\u0716\0\57\176\1\0\57\176"+
+    "\1\0\205\176\6\0\4\176\3\177\2\176\14\0\46\176\1\0\1\176"+
+    "\5\0\1\176\2\0\70\176\7\0\1\176\17\0\1\177\27\176\11\0"+
+    "\7\176\1\0\7\176\1\0\7\176\1\0\7\176\1\0\7\176\1\0"+
+    "\7\176\1\0\7\176\1\0\7\176\1\0\40\177\57\0\1\176\120\0"+
+    "\32\210\1\0\131\210\14\0\326\210\57\0\1\176\1\0\1\210\31\0"+
+    "\11\210\6\177\1\0\5\201\2\0\3\210\1\176\1\176\4\0\126\211"+
+    "\2\0\2\177\2\201\3\211\133\201\1\0\4\201\5\0\51\176\3\0"+
+    "\136\215\21\0\33\176\65\0\20\201\320\0\57\201\1\0\130\201\250\0"+
+    "\u19b6\210\112\0\u51cd\210\63\0\u048d\176\103\0\56\176\2\0\u010d\176\3\0"+
+    "\20\176\12\200\2\176\24\0\57\176\4\177\1\0\12\177\1\0\31\176"+
+    "\7\0\1\177\120\176\2\177\45\0\11\176\2\0\147\176\2\0\4\176"+
+    "\1\0\4\176\14\0\13\176\115\0\12\176\1\177\3\176\1\177\4\176"+
+    "\1\177\27\176\5\177\30\0\64\176\14\0\2\177\62\176\21\177\13\0"+
+    "\12\200\6\0\22\177\6\176\3\0\1\176\4\0\12\200\34\176\10\177"+
+    "\2\0\27\176\15\177\14\0\35\215\3\0\4\177\57\176\16\177\16\0"+
+    "\1\176\12\200\46\0\51\176\16\177\11\0\3\176\1\177\10\176\2\177"+
+    "\2\0\12\200\6\0\33\206\1\207\4\0\60\206\1\207\1\206\3\207"+
+    "\2\206\2\207\5\206\2\207\1\206\1\207\1\206\30\0\5\206\13\176"+
+    "\5\177\2\0\3\176\2\177\12\0\6\176\2\0\6\176\2\0\6\176"+
+    "\11\0\7\176\1\0\7\176\221\0\43\176\10\177\1\0\2\177\2\0"+
+    "\12\200\6\0\u2ba4\215\14\0\27\215\4\0\61\215\4\0\1\44\1\40"+
+    "\1\67\1\64\1\33\1\30\2\0\1\24\1\21\2\0\1\17\1\15"+
+    "\14\0\1\3\1\6\20\0\1\156\7\0\1\111\1\10\5\0\1\1"+
+    "\1\172\3\0\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
     "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
     "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
     "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
-    "\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163\1\163"+
-    "\1\163\1\164\1\163\1\163\1\163\1\170\1\166\17\0\1\160\u02c1\0"+
-    "\1\114\277\0\1\157\1\115\1\16\3\167\2\62\1\167\1\62\2\167"+
-    "\1\36\21\167\2\106\7\117\1\116\7\117\7\102\1\37\1\102\1\130"+
-    "\2\66\1\65\1\130\1\66\1\65\10\130\2\107\5\103\2\75\5\103"+
-    "\1\22\10\53\5\23\3\41\12\147\20\41\3\63\32\43\1\42\2\61"+
-    "\2\154\1\155\2\154\2\155\2\154\1\155\3\61\1\60\2\61\12\110"+
-    "\1\126\1\50\1\45\1\110\6\50\1\45\13\50\31\61\7\50\12\150"+
-    "\1\50\5\13\3\127\3\101\1\100\4\101\2\100\10\101\1\100\7\35"+
-    "\1\34\2\35\7\101\16\127\1\141\4\152\1\4\4\151\1\4\5\140"+
-    "\1\137\1\140\3\137\7\140\1\137\23\140\5\113\3\140\6\113\2\113"+
-    "\6\112\5\112\3\134\2\101\7\133\36\101\4\133\5\101\5\127\6\125"+
-    "\2\127\1\125\4\35\13\136\12\151\26\136\15\13\1\135\2\13\1\173"+
-    "\3\142\1\13\2\142\5\161\4\142\4\162\1\161\3\162\1\161\5\162"+
-    "\2\70\1\73\2\70\1\73\1\70\2\73\1\70\1\73\12\70\1\73"+
-    "\4\5\1\144\1\143\1\145\1\12\3\165\1\145\2\165\1\131\2\132"+
-    "\2\165\1\12\1\165\1\12\1\165\1\12\1\165\3\12\1\165\2\12"+
-    "\1\165\1\12\2\165\1\12\1\165\1\12\1\165\1\12\1\165\1\12"+
-    "\1\165\1\12\1\76\2\72\1\76\1\72\2\76\4\72\1\76\7\72"+
-    "\1\76\4\72\1\76\4\72\1\165\1\12\1\165\12\31\1\57\21\31"+
-    "\1\57\3\32\1\57\3\31\1\57\1\31\2\2\2\31\1\57\15\124"+
-    "\4\47\4\54\1\146\1\56\10\146\7\54\6\165\4\25\1\27\37\25"+
-    "\1\27\4\25\25\105\1\171\11\105\21\26\5\105\1\7\12\55\5\105"+
-    "\6\104\4\76\1\77\1\26\5\123\12\121\17\123\1\74\3\71\14\120"+
-    "\1\11\11\46\1\52\5\46\4\122\13\51\2\14\11\46\1\52\31\46"+
-    "\1\52\4\11\4\46\2\52\2\153\1\20\5\153\52\20\u1900\0\u016e\206"+
-    "\2\0\152\206\46\0\7\174\14\0\5\174\5\0\1\174\1\175\12\174"+
-    "\1\0\15\174\1\0\5\174\1\0\1\174\1\0\2\174\1\0\2\174"+
-    "\1\0\154\174\41\0\u016b\174\22\0\100\174\2\0\66\174\50\0\14\174"+
-    "\4\0\20\175\1\201\2\0\1\200\1\201\13\0\7\175\14\0\2\203"+
-    "\30\0\3\203\1\201\1\0\1\202\1\0\1\201\1\200\32\0\5\174"+
-    "\1\0\207\174\2\0\1\175\7\0\1\202\4\0\1\201\1\0\1\202"+
-    "\1\0\12\176\1\200\1\201\5\0\32\174\4\0\1\203\1\0\32\174"+
-    "\13\0\70\177\2\175\37\210\3\0\6\210\2\0\6\210\2\0\6\210"+
-    "\2\0\3\210\34\0\3\175\4\0";
+    "\1\163\1\163\1\163\1\164\1\163\1\163\1\163\1\170\1\166\17\0"+
+    "\1\160\u02c1\0\1\114\277\0\1\157\1\115\1\16\3\167\2\62\1\167"+
+    "\1\62\2\167\1\36\21\167\2\106\7\117\1\116\7\117\7\102\1\37"+
+    "\1\102\1\140\2\66\1\65\1\140\1\66\1\65\10\140\2\107\5\103"+
+    "\2\75\5\103\1\22\10\53\5\23\3\41\12\122\20\41\3\63\32\43"+
+    "\1\42\2\61\2\126\1\127\2\126\2\127\2\126\1\127\3\61\1\60"+
+    "\2\61\12\110\1\136\1\50\1\45\1\110\6\50\1\45\13\50\31\61"+
+    "\7\50\12\123\1\50\5\13\3\137\3\101\1\100\4\101\2\100\10\101"+
+    "\1\100\7\35\1\34\2\35\7\101\16\137\1\151\4\124\1\4\4\121"+
+    "\1\4\5\150\1\147\1\150\3\147\7\150\1\147\23\150\5\113\3\150"+
+    "\6\113\2\113\6\112\5\112\3\144\2\101\7\143\36\101\4\143\5\101"+
+    "\5\137\6\135\2\137\1\135\4\35\13\146\12\121\14\146\12\175\15\174"+
+    "\1\145\2\174\1\173\3\152\1\13\2\152\5\161\4\152\4\162\1\161"+
+    "\3\162\1\161\5\162\2\70\1\73\2\70\1\73\1\70\2\73\1\70"+
+    "\1\73\12\70\1\73\4\5\1\154\1\153\1\155\1\12\3\165\1\155"+
+    "\2\165\1\141\2\142\2\165\1\12\1\165\1\12\1\165\1\12\1\165"+
+    "\3\12\1\165\2\12\1\165\1\12\2\165\1\12\1\165\1\12\1\165"+
+    "\1\12\1\165\1\12\1\165\1\12\1\76\2\72\1\76\1\72\2\76"+
+    "\4\72\1\76\7\72\1\76\4\72\1\76\4\72\1\165\1\12\1\165"+
+    "\12\31\1\57\21\31\1\57\3\32\1\57\3\31\1\57\1\31\2\2"+
+    "\2\31\1\57\15\134\4\47\4\54\1\120\1\56\10\120\7\54\6\165"+
+    "\4\25\1\27\37\25\1\27\4\25\25\105\1\171\11\105\21\26\5\105"+
+    "\1\7\12\55\5\105\6\104\4\76\1\77\1\26\5\133\12\131\17\133"+
+    "\1\74\3\71\14\130\1\11\11\46\1\52\5\46\4\132\13\51\2\14"+
+    "\11\46\1\52\31\46\1\52\4\11\4\46\2\52\2\125\1\20\5\125"+
+    "\52\20\u1900\0\u016e\210\2\0\152\210\46\0\7\176\14\0\5\176\5\0"+
+    "\1\214\1\177\12\214\1\0\15\214\1\0\5\214\1\0\1\214\1\0"+
+    "\2\214\1\0\2\214\1\0\12\214\142\176\41\0\u016b\176\22\0\100\176"+
+    "\2\0\66\176\50\0\14\176\4\0\20\177\1\203\2\0\1\202\1\203"+
+    "\13\0\7\177\14\0\2\205\30\0\3\205\1\203\1\0\1\204\1\0"+
+    "\1\203\1\202\32\0\5\176\1\0\207\176\2\0\1\177\7\0\1\204"+
+    "\4\0\1\203\1\0\1\204\1\0\12\200\1\202\1\203\5\0\32\176"+
+    "\4\0\1\205\1\0\32\176\13\0\70\201\2\177\37\215\3\0\6\215"+
+    "\2\0\6\215\2\0\6\215\2\0\3\215\34\0\3\177\4\0";
 
   /** 
    * Translates characters to character classes
@@ -229,27 +231,35 @@
 
   private static final String ZZ_ACTION_PACKED_0 =
     "\1\0\26\1\1\2\1\3\1\4\1\1\1\5\1\6"+
-    "\1\7\1\10\1\1\4\2\3\3\3\1\20\0\1\2"+
-    "\1\0\1\2\12\0\1\3\21\0\1\2\32\0\2\2"+
-    "\1\0\4\2\1\0\1\3\1\0\2\3\1\2\1\3"+
-    "\67\0\32\2\3\0\5\2\32\0\4\3\21\0\1\11"+
-    "\1\0\6\12\3\2\2\12\1\2\4\12\2\2\2\12"+
-    "\2\0\1\2\1\0\2\2\6\12\3\0\2\12\1\0"+
-    "\4\12\2\0\2\12\1\0\2\3\10\0\1\12\32\0"+
-    "\1\12\1\0\3\12\6\2\1\0\1\2\2\0\2\2"+
-    "\1\0\1\12\10\0\3\3\15\0\3\12\6\11\3\0"+
-    "\2\11\1\0\4\11\2\0\2\11\2\12\1\0\2\12"+
-    "\1\0\2\12\1\0\1\12\2\2\3\0\1\2\4\0"+
-    "\2\3\20\0\1\11\10\0\1\12\3\0\1\2\40\0"+
-    "\3\12\23\0\1\12\40\0\1\12\4\0\1\12\6\0"+
-    "\1\2\2\0\1\12\4\0\2\12\43\0\1\12\57\0"+
-    "\2\2\10\0\1\12\53\0\1\12\72\0\1\12\150\0"+
-    "\1\13\1\0\1\12\177\0\1\12\132\0\6\13\3\0"+
-    "\2\13\1\0\4\13\2\0\2\13\1\12\112\0\1\13"+
-    "\10\0\1\12\64\0\1\12\u01eb\0";
+    "\1\7\2\1\1\2\1\10\4\2\3\3\2\1\21\0"+
+    "\1\2\1\0\1\2\12\0\1\3\10\0\1\4\1\2"+
+    "\11\0\1\2\46\0\6\2\2\0\3\3\1\2\1\3"+
+    "\23\0\1\2\77\0\1\2\1\0\32\2\3\0\6\2"+
+    "\33\0\4\3\4\0\1\1\22\0\1\11\10\0\7\12"+
+    "\4\2\1\12\1\2\2\12\1\2\6\12\1\2\4\12"+
+    "\1\2\4\12\2\2\2\12\4\2\1\12\1\2\3\12"+
+    "\1\2\1\0\1\2\1\0\2\2\7\12\4\0\1\12"+
+    "\1\0\2\12\1\0\6\12\1\0\4\12\1\0\4\12"+
+    "\2\0\2\12\4\0\1\12\1\0\3\12\2\0\2\3"+
+    "\10\0\1\12\41\0\1\12\1\0\3\12\32\2\1\0"+
+    "\4\2\2\0\2\2\1\0\1\12\37\0\3\3\15\0"+
+    "\3\12\7\11\4\0\1\11\1\0\2\11\1\0\6\11"+
+    "\1\0\4\11\1\0\4\11\2\0\2\11\4\0\1\11"+
+    "\1\0\3\11\1\0\2\12\1\0\2\12\1\0\2\12"+
+    "\1\0\1\12\23\2\1\0\4\2\2\0\1\2\31\0"+
+    "\2\3\20\0\1\11\37\0\1\12\3\0\15\2\25\0"+
+    "\3\2\31\0\3\12\50\0\1\12\12\2\32\0\2\2"+
+    "\1\0\1\12\4\0\1\12\7\0\1\2\2\0\1\12"+
+    "\20\0\2\12\61\0\1\12\6\2\53\0\2\2\6\0"+
+    "\1\12\70\0\1\12\5\2\66\0\1\2\1\12\62\0"+
+    "\3\2\65\0\1\13\1\0\1\12\64\0\1\2\113\0"+
+    "\1\12\125\0\7\13\4\0\1\13\1\0\2\13\1\0"+
+    "\6\13\1\0\4\13\1\0\4\13\2\0\2\13\4\0"+
+    "\1\13\1\0\3\13\1\0\1\12\104\0\1\13\37\0"+
+    "\1\12\56\0\1\12\u01e5\0";
 
   private static int [] zzUnpackAction() {
-    int [] result = new int[1750];
+    int [] result = new int[2133];
     int offset = 0;
     offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
     return result;
@@ -274,228 +284,276 @@
   private static final int [] ZZ_ROWMAP = zzUnpackRowMap();
 
   private static final String ZZ_ROWMAP_PACKED_0 =
-    "\0\0\0\305\0\u018a\0\u024f\0\u0314\0\u03d9\0\u049e\0\u0563"+
-    "\0\u0628\0\u06ed\0\u07b2\0\u0877\0\u093c\0\u0a01\0\u0ac6\0\u0b8b"+
-    "\0\u0c50\0\u0d15\0\u0dda\0\u0e9f\0\u0f64\0\u1029\0\u10ee\0\u11b3"+
-    "\0\u1278\0\u133d\0\u1402\0\u14c7\0\u158c\0\u1651\0\u1716\0\u17db"+
-    "\0\u18a0\0\u1965\0\u1a2a\0\u1aef\0\u1bb4\0\u1c79\0\u1d3e\0\u1e03"+
-    "\0\u1ec8\0\u1f8d\0\u018a\0\u024f\0\u2052\0\u2117\0\u049e\0\u0563"+
-    "\0\u0628\0\u06ed\0\u21dc\0\u22a1\0\u2366\0\u242b\0\u0ac6\0\u24f0"+
-    "\0\u25b5\0\u267a\0\u273f\0\u2804\0\u28c9\0\u298e\0\u03d9\0\u2a53"+
-    "\0\u2b18\0\u093c\0\u2bdd\0\u2ca2\0\u2d67\0\u2e2c\0\u2ef1\0\u2fb6"+
-    "\0\u307b\0\u3140\0\u3205\0\u32ca\0\u338f\0\u3454\0\u3519\0\u35de"+
-    "\0\u36a3\0\u3768\0\u382d\0\u38f2\0\u39b7\0\u3a7c\0\u3b41\0\u3c06"+
-    "\0\u1402\0\u3ccb\0\u3d90\0\u3e55\0\u3f1a\0\u3fdf\0\u40a4\0\u4169"+
-    "\0\u422e\0\u42f3\0\u43b8\0\u447d\0\u4542\0\u4607\0\u46cc\0\u4791"+
-    "\0\u4856\0\u491b\0\u49e0\0\u4aa5\0\u4b6a\0\u4c2f\0\u4cf4\0\u4db9"+
-    "\0\u17db\0\u4e7e\0\u4f43\0\u5008\0\u50cd\0\u5192\0\u5257\0\u531c"+
-    "\0\u53e1\0\u54a6\0\u556b\0\u5630\0\u56f5\0\u57ba\0\u587f\0\u5944"+
-    "\0\u5a09\0\u5ace\0\u1e03\0\u5b93\0\u5c58\0\u1f8d\0\u5d1d\0\u5de2"+
-    "\0\u5ea7\0\u5f6c\0\u6031\0\u60f6\0\u61bb\0\u6280\0\u6345\0\u640a"+
-    "\0\u64cf\0\u6594\0\u6659\0\u671e\0\u67e3\0\u68a8\0\u696d\0\u6a32"+
-    "\0\u6af7\0\u6bbc\0\u6c81\0\u6d46\0\u6e0b\0\u6ed0\0\u6f95\0\u705a"+
-    "\0\u711f\0\u71e4\0\u72a9\0\u736e\0\u7433\0\u74f8\0\u75bd\0\u7682"+
-    "\0\u7747\0\u780c\0\u78d1\0\u7996\0\u7a5b\0\u7b20\0\u7be5\0\u7caa"+
-    "\0\u7d6f\0\u7e34\0\u7ef9\0\u7fbe\0\u8083\0\u8148\0\u820d\0\u82d2"+
-    "\0\u8397\0\u845c\0\u8521\0\u85e6\0\u86ab\0\u8770\0\u8835\0\u88fa"+
-    "\0\u89bf\0\u8a84\0\u8b49\0\u8c0e\0\u8cd3\0\u8d98\0\u8e5d\0\u8f22"+
-    "\0\u8fe7\0\u90ac\0\u9171\0\u9236\0\u92fb\0\u93c0\0\u9485\0\u954a"+
-    "\0\u960f\0\u96d4\0\u9799\0\u985e\0\u9923\0\u99e8\0\u9aad\0\u9b72"+
-    "\0\u9c37\0\u9cfc\0\u9dc1\0\u9e86\0\u9f4b\0\ua010\0\ua0d5\0\ua19a"+
-    "\0\ua25f\0\ua324\0\ua3e9\0\ua4ae\0\ua573\0\ua638\0\ua6fd\0\ua7c2"+
-    "\0\ua887\0\ua94c\0\uaa11\0\uaad6\0\uab9b\0\uac60\0\uad25\0\uadea"+
-    "\0\uaeaf\0\uaf74\0\ub039\0\ub0fe\0\ub1c3\0\ub288\0\ub34d\0\ub412"+
-    "\0\ub4d7\0\ub59c\0\ub661\0\ub726\0\ub7eb\0\ub8b0\0\ub975\0\uba3a"+
-    "\0\ubaff\0\ubbc4\0\ubc89\0\ubd4e\0\ube13\0\ubed8\0\ubf9d\0\uc062"+
-    "\0\uc127\0\uc1ec\0\305\0\uc2b1\0\uc376\0\uc43b\0\uc500\0\uc5c5"+
-    "\0\uc68a\0\uc74f\0\uc814\0\uc8d9\0\uc99e\0\uca63\0\ucb28\0\ucbed"+
-    "\0\uccb2\0\ucd77\0\uce3c\0\ucf01\0\ucfc6\0\ud08b\0\ud150\0\ud215"+
-    "\0\ud2da\0\ud39f\0\ud464\0\ud529\0\ud5ee\0\ud6b3\0\ud778\0\ud83d"+
-    "\0\ud902\0\ud9c7\0\uda8c\0\udb51\0\udc16\0\udcdb\0\udda0\0\ude65"+
-    "\0\udf2a\0\udfef\0\ue0b4\0\ue179\0\ue23e\0\ue303\0\ue3c8\0\ue48d"+
-    "\0\ue552\0\ue617\0\ue6dc\0\ue7a1\0\ue866\0\ue92b\0\ue9f0\0\ueab5"+
-    "\0\ueb7a\0\uec3f\0\ued04\0\uedc9\0\uee8e\0\uef53\0\uf018\0\uf0dd"+
-    "\0\uf1a2\0\uf267\0\uf32c\0\uf3f1\0\uf4b6\0\uf57b\0\uf640\0\uf705"+
-    "\0\uf7ca\0\uf88f\0\uf954\0\ufa19\0\ufade\0\ufba3\0\ufc68\0\ufd2d"+
-    "\0\ufdf2\0\ufeb7\0\uff7c\1\101\1\u0106\1\u01cb\1\u0290\1\u0355"+
-    "\1\u041a\1\u04df\1\u05a4\1\u0669\1\u072e\1\u07f3\1\u08b8\1\u097d"+
-    "\1\u0a42\1\u0b07\1\u0bcc\1\u0c91\1\u0d56\1\u0e1b\1\u0ee0\1\u0fa5"+
-    "\1\u106a\1\u112f\1\u11f4\1\u12b9\1\u137e\1\u1443\1\u1508\1\u15cd"+
-    "\1\u1692\1\u1757\1\u181c\1\u18e1\1\u19a6\1\u1a6b\1\u1b30\1\u1bf5"+
-    "\1\u1cba\1\u1d7f\1\u1e44\1\u1f09\1\u1fce\1\u2093\1\u2158\1\u221d"+
-    "\1\u22e2\1\u23a7\1\u246c\1\u2531\1\u25f6\1\u26bb\1\u2780\1\u2845"+
-    "\1\u290a\1\u29cf\1\u2a94\1\u2b59\1\u2c1e\1\u2ce3\1\u2da8\1\u2e6d"+
-    "\1\u2f32\1\u2ff7\1\u30bc\1\u3181\1\u3246\1\u330b\1\u33d0\1\u3495"+
-    "\1\u355a\1\u361f\1\u36e4\1\u37a9\1\u386e\1\u3933\1\u39f8\1\u3abd"+
-    "\1\u3b82\1\u3c47\1\u3d0c\1\u3dd1\1\u3e96\1\u3f5b\1\u4020\1\u40e5"+
-    "\1\u41aa\1\u426f\1\u4334\1\u43f9\1\u44be\1\u4583\1\u4648\1\u470d"+
-    "\1\u47d2\1\u4897\1\u495c\1\u4a21\1\u4ae6\1\u4bab\1\u4c70\1\u4d35"+
-    "\1\u4dfa\1\u4ebf\1\u4f84\1\u5049\1\u510e\1\u51d3\1\u5298\1\u535d"+
-    "\0\uc127\1\u5422\1\u54e7\1\u55ac\1\u5671\1\u5736\1\u57fb\1\u58c0"+
-    "\1\u5985\1\u5a4a\1\u5b0f\1\u5bd4\1\u5c99\1\u5d5e\1\u5e23\1\u5ee8"+
-    "\1\u5fad\1\u6072\1\u6137\1\u61fc\1\u62c1\1\u6386\1\u644b\1\u6510"+
-    "\1\u65d5\1\u669a\1\u675f\1\u6824\1\u68e9\1\u69ae\1\u6a73\1\u6b38"+
-    "\1\u6bfd\1\u6cc2\1\u6d87\1\u6e4c\1\u6f11\1\u6fd6\1\u709b\1\u7160"+
-    "\1\u7225\1\u72ea\1\u73af\1\u7474\1\u7539\1\u75fe\1\u76c3\1\u7788"+
-    "\1\u784d\1\u7912\1\u79d7\1\u7a9c\1\u7b61\1\u7c26\1\u7ceb\1\u7db0"+
-    "\1\u7e75\1\u7f3a\1\u7fff\1\u80c4\1\u8189\1\u824e\1\u8313\1\u83d8"+
-    "\1\u849d\1\u8562\1\u8627\1\u86ec\1\u87b1\1\u8876\1\u893b\1\u8a00"+
-    "\1\u8ac5\1\u8b8a\1\u8c4f\1\u8d14\1\u8dd9\1\u8e9e\1\u8f63\1\u9028"+
-    "\1\u90ed\1\u91b2\1\u9277\1\u933c\1\u9401\1\u94c6\1\u958b\1\u9650"+
-    "\1\u9715\1\u97da\1\u989f\1\u9964\1\u9a29\1\u9aee\1\u9bb3\1\u9c78"+
-    "\1\u9d3d\1\u9e02\1\u9ec7\1\u9f8c\1\ua051\1\ua116\1\ua1db\1\ua2a0"+
-    "\1\ua365\1\ua42a\1\ua4ef\1\ua5b4\1\ua679\1\ua73e\1\ua803\1\ua8c8"+
-    "\1\ua98d\1\uaa52\1\uab17\1\uabdc\1\uaca1\1\uad66\1\uae2b\1\uaef0"+
-    "\0\u1ec8\1\uafb5\1\ub07a\1\ub13f\1\ub204\1\ub2c9\1\ub38e\1\ub453"+
-    "\1\ub518\1\ub5dd\1\ub6a2\1\ub767\1\ub82c\1\ub8f1\1\ub9b6\1\uba7b"+
-    "\1\ubb40\1\ubc05\1\ubcca\1\ubd8f\1\ube54\1\ubf19\1\ubfde\1\uc0a3"+
-    "\1\uc168\1\uc22d\1\uc2f2\1\uc3b7\1\uc47c\1\uc541\1\uc606\1\uc6cb"+
-    "\1\uc790\1\uc855\1\uc91a\1\uc9df\1\ucaa4\1\ucb69\1\ucc2e\1\uccf3"+
-    "\1\ucdb8\1\uce7d\1\ucf42\1\ud007\1\ud0cc\1\ud191\1\ud256\1\ud31b"+
-    "\1\ud3e0\1\ud4a5\1\ud56a\1\ud62f\1\ud6f4\1\ud7b9\1\ud87e\1\ud943"+
-    "\1\uda08\1\udacd\1\udb92\1\udc57\1\udd1c\1\udde1\1\udea6\1\udf6b"+
-    "\1\ue030\1\ue0f5\1\ue1ba\1\ue27f\1\ue344\1\ue409\1\ue4ce\1\ue593"+
-    "\1\ue658\1\ue71d\1\ue7e2\1\ue8a7\1\ue96c\1\uea31\1\ueaf6\1\uebbb"+
-    "\1\uec80\1\ued45\1\uee0a\1\ueecf\1\uef94\1\uf059\1\uf11e\1\uf1e3"+
-    "\1\uf2a8\1\uf36d\1\uf432\1\uf4f7\1\uf5bc\1\uf681\1\uf746\1\uf80b"+
-    "\1\uf8d0\1\uf995\1\ufa5a\1\ufb1f\1\ufbe4\1\ufca9\1\ufd6e\1\ufe33"+
-    "\1\ufef8\1\uffbd\2\202\2\u0147\2\u020c\2\u02d1\2\u0396\2\u045b"+
-    "\2\u0520\2\u05e5\2\u06aa\2\u076f\2\u0834\2\u08f9\2\u09be\2\u0a83"+
-    "\2\u0b48\2\u0c0d\2\u0cd2\2\u0d97\2\u0e5c\2\u0f21\2\u0fe6\2\u10ab"+
-    "\2\u1170\2\u1235\2\u12fa\2\u13bf\2\u1484\2\u1549\2\u160e\2\u16d3"+
-    "\2\u1798\2\u185d\2\u1922\2\u19e7\2\u1aac\2\u1b71\2\u1c36\2\u1cfb"+
-    "\2\u1dc0\2\u1e85\2\u1f4a\2\u200f\2\u20d4\2\u2199\2\u225e\2\u2323"+
-    "\2\u23e8\2\u24ad\2\u2572\2\u2637\2\u26fc\2\u27c1\2\u2886\2\u294b"+
-    "\2\u2a10\2\u2ad5\2\u2b9a\2\u2c5f\2\u2d24\2\u2de9\2\u2eae\2\u2f73"+
-    "\2\u3038\2\u30fd\2\u31c2\2\u3287\2\u334c\2\u3411\2\u34d6\2\u359b"+
-    "\2\u3660\2\u3725\2\u37ea\2\u38af\2\u3974\2\u3a39\2\u3afe\2\u3bc3"+
-    "\2\u3c88\2\u3d4d\2\u3e12\2\u3ed7\2\u3f9c\2\u4061\2\u4126\2\u41eb"+
-    "\2\u42b0\2\u4375\2\u443a\2\u44ff\2\u45c4\2\u4689\2\u474e\2\u4813"+
-    "\2\u48d8\2\u499d\2\u4a62\2\u4b27\2\u4bec\2\u4cb1\2\u4d76\2\u4e3b"+
-    "\2\u4f00\2\u4fc5\2\u508a\2\u514f\2\u5214\2\u52d9\2\u539e\2\u5463"+
-    "\2\u5528\2\u55ed\2\u56b2\2\u5777\2\u583c\2\u5901\2\u59c6\2\u5a8b"+
-    "\2\u5b50\2\u5c15\2\u5cda\2\u5d9f\2\u5e64\2\u5f29\2\u5fee\2\u60b3"+
-    "\2\u6178\2\u623d\2\u6302\2\u63c7\2\u648c\2\u6551\2\u6616\2\u66db"+
-    "\2\u67a0\2\u6865\2\u692a\2\u69ef\2\u6ab4\2\u6b79\2\u6c3e\2\u6d03"+
-    "\2\u6dc8\2\u6e8d\2\u6f52\2\u7017\2\u70dc\2\u71a1\2\u7266\2\u732b"+
-    "\2\u73f0\2\u74b5\2\u757a\2\u763f\2\u7704\2\u77c9\2\u788e\2\u7953"+
-    "\2\u7a18\2\u7add\2\u7ba2\2\u7c67\2\u7d2c\2\u7df1\2\u7eb6\2\u7f7b"+
-    "\2\u8040\2\u8105\2\u81ca\2\u828f\2\u8354\2\u8419\2\u84de\2\u85a3"+
-    "\2\u8668\2\u872d\2\u87f2\2\u88b7\2\u897c\2\u8a41\2\u8b06\2\u8bcb"+
-    "\2\u8c90\2\u8d55\2\u8e1a\2\u8edf\2\u8fa4\2\u9069\2\u912e\2\u91f3"+
-    "\2\u92b8\2\u937d\2\u9442\2\u9507\2\u95cc\2\u9691\2\u9756\2\u981b"+
-    "\0\305\2\u98e0\2\u99a5\2\u9a6a\2\u9b2f\2\u9bf4\2\u9cb9\2\u9d7e"+
-    "\2\u9e43\2\u9f08\2\u9fcd\2\ua092\2\ua157\2\ua21c\2\ua2e1\2\ua3a6"+
-    "\2\ua46b\2\ua530\2\ua5f5\2\ua6ba\2\ua77f\2\ua844\2\ua909\2\ua9ce"+
-    "\2\uaa93\2\uab58\2\uac1d\2\uace2\2\uada7\2\uae6c\2\uaf31\2\uaff6"+
-    "\2\ub0bb\2\ub180\2\ub245\2\ub30a\2\ub3cf\2\ub494\2\ub559\2\ub61e"+
-    "\2\ub6e3\2\ub7a8\2\ub86d\2\ub932\2\ub9f7\2\ubabc\2\ubb81\2\ubc46"+
-    "\2\ubd0b\2\ubdd0\2\ube95\2\ubf5a\2\uc01f\2\uc0e4\2\uc1a9\2\uc26e"+
-    "\2\uc333\2\uc3f8\2\uc4bd\2\uc582\2\uc647\2\uc70c\2\uc7d1\2\uc896"+
-    "\2\uc95b\2\uca20\2\ucae5\2\ucbaa\2\ucc6f\2\ucd34\2\ucdf9\2\ucebe"+
-    "\2\ucf83\2\ud048\2\ud10d\2\ud1d2\2\ud297\2\ud35c\2\ud421\2\ud4e6"+
-    "\2\ud5ab\2\ud670\2\ud735\2\ud7fa\2\ud8bf\2\ud984\2\uda49\2\udb0e"+
-    "\2\udbd3\2\udc98\2\udd5d\2\ude22\2\udee7\2\udfac\2\ue071\2\ue136"+
-    "\2\ue1fb\2\ue2c0\2\ue385\2\ue44a\2\ue50f\2\ue5d4\2\ue699\2\ue75e"+
-    "\2\ue823\2\ue8e8\2\ue9ad\2\uea72\2\ueb37\2\uebfc\2\uecc1\2\ued86"+
-    "\2\uee4b\2\uef10\2\uefd5\2\uf09a\2\uf15f\2\uf224\2\uf2e9\2\uf3ae"+
-    "\2\uf473\2\uf538\2\uf5fd\2\uf6c2\2\uf787\2\uf84c\2\uf911\2\uf9d6"+
-    "\2\ufa9b\2\ufb60\2\ufc25\2\ufcea\2\ufdaf\2\ufe74\2\uff39\2\ufffe"+
-    "\3\303\3\u0188\3\u024d\3\u0312\3\u03d7\3\u049c\3\u0561\3\u0626"+
-    "\3\u06eb\3\u07b0\3\u0875\3\u093a\3\u09ff\3\u0ac4\3\u0b89\3\u0c4e"+
-    "\3\u0d13\3\u0dd8\3\u0e9d\3\u0f62\3\u1027\3\u10ec\3\u11b1\3\u1276"+
-    "\3\u133b\3\u1400\3\u14c5\3\u158a\3\u164f\3\u1714\3\u17d9\3\u189e"+
-    "\3\u1963\3\u1a28\3\u1aed\3\u1bb2\3\u1c77\3\u1d3c\3\u1e01\3\u1ec6"+
-    "\3\u1f8b\3\u2050\3\u2115\3\u21da\3\u229f\3\u2364\3\u2429\3\u24ee"+
-    "\3\u25b3\3\u2678\3\u273d\3\u2802\3\u28c7\3\u298c\3\u2a51\3\u2b16"+
-    "\3\u2bdb\3\u2ca0\3\u2d65\3\u2e2a\3\u2eef\3\u2fb4\3\u3079\3\u313e"+
-    "\3\u3203\3\u32c8\3\u338d\3\u3452\3\u3517\3\u35dc\3\u36a1\3\u3766"+
-    "\3\u382b\3\u38f0\3\u39b5\3\u3a7a\3\u3b3f\3\u3c04\3\u3cc9\3\u3d8e"+
-    "\3\u3e53\3\u3f18\3\u3fdd\3\u40a2\3\u4167\3\u422c\3\u42f1\3\u43b6"+
-    "\3\u447b\3\u4540\3\u4605\3\u46ca\3\u478f\3\u4854\3\u4919\3\u49de"+
-    "\3\u4aa3\3\u4b68\3\u4c2d\3\u4cf2\3\u4db7\3\u4e7c\3\u4f41\3\u5006"+
-    "\3\u50cb\3\u5190\3\u5255\3\u531a\3\u53df\3\u54a4\3\u5569\3\u562e"+
-    "\3\u56f3\3\u57b8\3\u587d\3\u5942\3\u5a07\3\u5acc\3\u5b91\3\u5c56"+
-    "\3\u5d1b\3\u5de0\3\u5ea5\3\u5f6a\3\u602f\3\u60f4\3\u61b9\3\u627e"+
-    "\3\u6343\3\u6408\3\u64cd\3\u6592\3\u6657\3\u671c\3\u67e1\3\u68a6"+
-    "\3\u696b\3\u6a30\3\u6af5\3\u6bba\3\u6c7f\3\u6d44\3\u6e09\3\u6ece"+
-    "\3\u6f93\3\u7058\3\u711d\3\u71e2\3\u72a7\3\u736c\3\u7431\3\u74f6"+
-    "\3\u75bb\3\u7680\3\u7745\3\u780a\3\u78cf\3\u7994\3\u7a59\3\u7b1e"+
-    "\3\u7be3\3\u7ca8\3\u7d6d\3\u7e32\3\u7ef7\3\u7fbc\3\u8081\3\u8146"+
-    "\3\u820b\3\u82d0\3\u8395\3\u845a\3\u851f\3\u85e4\3\u86a9\3\u876e"+
-    "\3\u8833\3\u88f8\3\u89bd\3\u8a82\2\u9756\3\u8b47\3\u8c0c\3\u8cd1"+
-    "\3\u8d96\3\u8e5b\3\u8f20\3\u8fe5\3\u90aa\3\u916f\3\u9234\3\u92f9"+
-    "\3\u93be\3\u9483\3\u9548\3\u960d\3\u96d2\3\u9797\3\u985c\3\u9921"+
-    "\3\u99e6\3\u9aab\3\u9b70\3\u9c35\3\u9cfa\3\u9dbf\3\u9e84\3\u9f49"+
-    "\3\ua00e\3\ua0d3\3\ua198\3\ua25d\3\ua322\3\ua3e7\3\ua4ac\3\ua571"+
-    "\3\ua636\3\ua6fb\3\ua7c0\3\ua885\3\ua94a\3\uaa0f\3\uaad4\3\uab99"+
-    "\3\uac5e\3\uad23\3\uade8\3\uaead\3\uaf72\3\ub037\3\ub0fc\3\ub1c1"+
-    "\3\ub286\3\ub34b\3\ub410\3\ub4d5\3\ub59a\3\ub65f\3\ub724\3\ub7e9"+
-    "\3\ub8ae\3\ub973\3\uba38\3\ubafd\3\ubbc2\3\ubc87\3\ubd4c\3\ube11"+
-    "\3\ubed6\3\ubf9b\3\uc060\3\uc125\3\uc1ea\3\uc2af\3\uc374\3\uc439"+
-    "\3\uc4fe\3\uc5c3\3\uc688\3\uc74d\3\uc812\3\uc8d7\3\uc99c\3\uca61"+
-    "\3\ucb26\3\ucbeb\3\uccb0\3\ucd75\3\uce3a\3\uceff\3\ucfc4\3\ud089"+
-    "\3\ud14e\3\ud213\3\ud2d8\3\ud39d\3\ud462\3\ud527\3\ud5ec\3\ud6b1"+
-    "\3\ud776\3\ud83b\3\ud900\3\ud9c5\3\uda8a\3\udb4f\3\udc14\3\udcd9"+
-    "\3\udd9e\3\ude63\3\udf28\3\udfed\3\ue0b2\3\ue177\3\ue23c\3\ue301"+
-    "\3\ue3c6\3\ue48b\3\ue550\3\ue615\3\ue6da\3\ue79f\3\ue864\3\ue929"+
-    "\3\ue9ee\3\ueab3\3\ueb78\3\uec3d\3\ued02\3\uedc7\3\uee8c\3\uef51"+
-    "\3\uf016\3\uf0db\3\uf1a0\3\uf265\3\uf32a\3\uf3ef\3\uf4b4\3\uf579"+
-    "\3\uf63e\3\uf703\3\uf7c8\3\uf88d\3\uf952\3\ufa17\3\ufadc\3\ufba1"+
-    "\3\ufc66\3\ufd2b\3\ufdf0\3\ufeb5\3\uff7a\4\77\4\u0104\4\u01c9"+
-    "\4\u028e\4\u0353\4\u0418\4\u04dd\4\u05a2\4\u0667\4\u072c\4\u07f1"+
-    "\4\u08b6\4\u097b\4\u0a40\4\u0b05\4\u0bca\4\u0c8f\4\u0d54\4\u0e19"+
-    "\4\u0ede\4\u0fa3\4\u1068\4\u112d\4\u11f2\4\u12b7\4\u137c\4\u1441"+
-    "\4\u1506\4\u15cb\4\u1690\4\u1755\4\u181a\4\u18df\4\u19a4\4\u1a69"+
-    "\4\u1b2e\4\u1bf3\4\u1cb8\4\u1d7d\4\u1e42\4\u1f07\4\u1fcc\4\u2091"+
-    "\4\u2156\4\u221b\4\u22e0\4\u23a5\4\u246a\4\u252f\4\u25f4\4\u26b9"+
-    "\4\u277e\4\u2843\4\u2908\4\u29cd\4\u2a92\4\u2b57\4\u2c1c\4\u2ce1"+
-    "\4\u2da6\4\u2e6b\4\u2f30\4\u2ff5\4\u30ba\4\u317f\4\u3244\4\u3309"+
-    "\4\u33ce\4\u3493\4\u3558\4\u361d\4\u36e2\4\u37a7\4\u386c\4\u3931"+
-    "\4\u39f6\4\u3abb\4\u3b80\4\u3c45\4\u3d0a\4\u3dcf\4\u3e94\4\u3f59"+
-    "\4\u401e\4\u40e3\4\u41a8\4\u426d\4\u4332\4\u43f7\4\u44bc\4\u4581"+
-    "\4\u4646\4\u470b\4\u47d0\4\u4895\4\u495a\4\u4a1f\4\u4ae4\4\u4ba9"+
-    "\4\u4c6e\4\u4d33\4\u4df8\4\u4ebd\4\u4f82\4\u5047\4\u510c\4\u51d1"+
-    "\4\u5296\4\u535b\4\u5420\4\u54e5\4\u55aa\4\u566f\4\u5734\4\u57f9"+
-    "\4\u58be\4\u5983\4\u5a48\4\u5b0d\4\u5bd2\4\u5c97\4\u5d5c\4\u5e21"+
-    "\4\u5ee6\4\u5fab\4\u6070\4\u6135\4\u61fa\4\u62bf\4\u6384\4\u6449"+
-    "\4\u650e\4\u65d3\4\u6698\4\u675d\4\u6822\4\u68e7\4\u69ac\4\u6a71"+
-    "\4\u6b36\4\u6bfb\4\u6cc0\4\u6d85\4\u6e4a\4\u6f0f\4\u6fd4\4\u7099"+
-    "\4\u715e\4\u7223\4\u72e8\4\u73ad\4\u7472\4\u7537\4\u75fc\4\u76c1"+
-    "\4\u7786\4\u784b\4\u7910\4\u79d5\4\u7a9a\4\u7b5f\4\u7c24\4\u7ce9"+
-    "\4\u7dae\4\u7e73\4\u7f38\4\u7ffd\4\u80c2\4\u8187\4\u824c\4\u8311"+
-    "\4\u83d6\4\u849b\4\u8560\4\u8625\4\u86ea\4\u87af\4\u8874\4\u8939"+
-    "\4\u89fe\4\u8ac3\4\u8b88\4\u8c4d\4\u8d12\4\u8dd7\4\u8e9c\4\u8f61"+
-    "\4\u9026\4\u90eb\4\u91b0\4\u9275\4\u933a\4\u93ff\4\u94c4\4\u9589"+
-    "\4\u964e\4\u9713\4\u97d8\4\u989d\4\u9962\4\u9a27\4\u9aec\4\u9bb1"+
-    "\4\u9c76\4\u9d3b\4\u9e00\4\u9ec5\4\u9f8a\4\ua04f\4\ua114\4\ua1d9"+
-    "\4\ua29e\4\ua363\4\ua428\4\ua4ed\4\ua5b2\4\ua677\4\ua73c\4\ua801"+
-    "\4\ua8c6\4\ua98b\4\uaa50\4\uab15\4\uabda\4\uac9f\4\uad64\4\uae29"+
-    "\4\uaeee\4\uafb3\4\ub078\4\ub13d\4\ub202\4\ub2c7\4\ub38c\4\ub451"+
-    "\4\ub516\4\ub5db\4\ub6a0\4\ub765\4\ub82a\4\ub8ef\4\ub9b4\4\uba79"+
-    "\4\ubb3e\4\ubc03\4\ubcc8\4\ubd8d\4\ube52\4\ubf17\4\ubfdc\4\uc0a1"+
-    "\4\uc166\4\uc22b\4\uc2f0\4\uc3b5\4\uc47a\4\uc53f\4\uc604\4\uc6c9"+
-    "\4\uc78e\4\uc853\4\uc918\4\uc9dd\4\ucaa2\4\ucb67\4\ucc2c\4\uccf1"+
-    "\4\ucdb6\4\uce7b\4\ucf40\4\ud005\4\ud0ca\4\ud18f\4\ud254\4\ud319"+
-    "\4\ud3de\4\ud4a3\4\ud568\4\ud62d\4\ud6f2\4\ud7b7\4\ud87c\4\ud941"+
-    "\4\uda06\4\udacb\4\udb90\4\udc55\4\udd1a\4\udddf\4\udea4\4\udf69"+
-    "\4\ue02e\4\ue0f3\4\ue1b8\4\ue27d\4\ue342\4\ue407\4\ue4cc\4\ue591"+
-    "\4\ue656\4\ue71b\4\ue7e0\4\ue8a5\4\ue96a\4\uea2f\4\ueaf4\4\uebb9"+
-    "\4\uec7e\4\ued43\4\uee08\4\ueecd\4\uef92\4\uf057\4\uf11c\4\uf1e1"+
-    "\4\uf2a6\4\uf36b\4\uf430\4\uf4f5\4\uf5ba\4\uf67f\4\uf744\4\uf809"+
-    "\4\uf8ce\4\uf993\4\ufa58\4\ufb1d\4\ufbe2\4\ufca7\4\ufd6c\4\ufe31"+
-    "\4\ufef6\4\uffbb\5\200\5\u0145\5\u020a\5\u02cf\5\u0394\5\u0459"+
-    "\5\u051e\5\u05e3\5\u06a8\5\u076d\5\u0832\5\u08f7\5\u09bc\5\u0a81"+
-    "\5\u0b46\5\u0c0b\5\u0cd0\5\u0d95\5\u0e5a\5\u0f1f\5\u0fe4\5\u10a9"+
-    "\5\u116e\5\u1233\5\u12f8\5\u13bd\5\u1482\5\u1547\5\u160c\5\u16d1"+
-    "\5\u1796\5\u185b\5\u1920\5\u19e5\5\u1aaa\5\u1b6f\5\u1c34\5\u1cf9"+
-    "\5\u1dbe\5\u1e83\5\u1f48\5\u200d\5\u20d2\5\u2197\5\u225c\5\u2321"+
-    "\5\u23e6\5\u24ab\5\u2570\5\u2635\5\u26fa\5\u27bf\5\u2884\5\u2949"+
-    "\5\u2a0e\5\u2ad3\5\u2b98\5\u2c5d\5\u2d22\5\u2de7\5\u2eac\5\u2f71"+
-    "\5\u3036\5\u30fb\5\u31c0\5\u3285\5\u334a\5\u340f";
+    "\0\0\0\310\0\u0190\0\u0258\0\u0320\0\u03e8\0\u04b0\0\u0578"+
+    "\0\u0640\0\u0708\0\u07d0\0\u0898\0\u0960\0\u0a28\0\u0af0\0\u0bb8"+
+    "\0\u0c80\0\u0d48\0\u0e10\0\u0ed8\0\u0fa0\0\u1068\0\u1130\0\u11f8"+
+    "\0\u12c0\0\u1388\0\u1450\0\u1518\0\u15e0\0\u16a8\0\u1770\0\u1838"+
+    "\0\u1900\0\u19c8\0\u1a90\0\u1b58\0\u1c20\0\u1ce8\0\u1db0\0\u1e78"+
+    "\0\u1f40\0\u2008\0\u20d0\0\u2198\0\u0190\0\u0258\0\u2260\0\u2328"+
+    "\0\u04b0\0\u0578\0\u0640\0\u0708\0\u23f0\0\u24b8\0\u2580\0\u2648"+
+    "\0\u0af0\0\u2710\0\u27d8\0\u28a0\0\u2968\0\u2a30\0\u2af8\0\u2bc0"+
+    "\0\u03e8\0\u2c88\0\u2d50\0\u0960\0\u2e18\0\u2ee0\0\u2fa8\0\u3070"+
+    "\0\u3138\0\u3200\0\u32c8\0\u3390\0\u3458\0\u3520\0\u35e8\0\u36b0"+
+    "\0\u3778\0\u3840\0\u3908\0\u39d0\0\u3a98\0\u3b60\0\u3c28\0\u3cf0"+
+    "\0\u3db8\0\u3e80\0\u3f48\0\u4010\0\u1450\0\u40d8\0\u41a0\0\u4268"+
+    "\0\u4330\0\u43f8\0\u44c0\0\u4588\0\u4650\0\u4718\0\u47e0\0\u48a8"+
+    "\0\u4970\0\u4a38\0\u4b00\0\u4bc8\0\u1770\0\u4c90\0\u4d58\0\u1838"+
+    "\0\u4e20\0\u4ee8\0\u4fb0\0\u5078\0\u5140\0\u5208\0\u52d0\0\u5398"+
+    "\0\u5460\0\u5528\0\u55f0\0\u56b8\0\u5780\0\u5848\0\u5910\0\u59d8"+
+    "\0\u5aa0\0\u5b68\0\u5c30\0\u5cf8\0\u5dc0\0\u5e88\0\u5f50\0\u6018"+
+    "\0\u60e0\0\u61a8\0\u6270\0\u6338\0\u6400\0\u64c8\0\u6590\0\u6658"+
+    "\0\u6720\0\u2008\0\u67e8\0\u68b0\0\u6978\0\u6a40\0\u6b08\0\u6bd0"+
+    "\0\u6c98\0\u6d60\0\u6e28\0\u6ef0\0\u6fb8\0\u7080\0\u7148\0\u7210"+
+    "\0\u72d8\0\u73a0\0\u7468\0\u7530\0\u75f8\0\u76c0\0\u7788\0\u7850"+
+    "\0\u7918\0\u79e0\0\u7aa8\0\u7b70\0\u7c38\0\u7d00\0\u7dc8\0\u7e90"+
+    "\0\u7f58\0\u8020\0\u80e8\0\u81b0\0\u8278\0\u8340\0\u8408\0\u84d0"+
+    "\0\u8598\0\u8660\0\u8728\0\u87f0\0\u88b8\0\u8980\0\u8a48\0\u8b10"+
+    "\0\u8bd8\0\u8ca0\0\u8d68\0\u8e30\0\u8ef8\0\u8fc0\0\u9088\0\u9150"+
+    "\0\u9218\0\u92e0\0\u93a8\0\u9470\0\u9538\0\u9600\0\u96c8\0\u9790"+
+    "\0\u9858\0\u9920\0\u99e8\0\u9ab0\0\u9b78\0\u9c40\0\u9d08\0\u9dd0"+
+    "\0\u9e98\0\u9f60\0\ua028\0\ua0f0\0\ua1b8\0\ua280\0\ua348\0\ua410"+
+    "\0\ua4d8\0\ua5a0\0\ua668\0\ua730\0\ua7f8\0\ua8c0\0\ua988\0\uaa50"+
+    "\0\uab18\0\uabe0\0\uaca8\0\uad70\0\uae38\0\uaf00\0\uafc8\0\ub090"+
+    "\0\ub158\0\ub220\0\ub2e8\0\ub3b0\0\ub478\0\ub540\0\ub608\0\ub6d0"+
+    "\0\ub798\0\ub860\0\ub928\0\ub9f0\0\ubab8\0\ubb80\0\ubc48\0\ubd10"+
+    "\0\ubdd8\0\ubea0\0\ubf68\0\uc030\0\uc0f8\0\uc1c0\0\uc288\0\uc350"+
+    "\0\uc418\0\uc4e0\0\uc5a8\0\uc670\0\uc738\0\uc800\0\uc8c8\0\uc990"+
+    "\0\uca58\0\ucb20\0\ucbe8\0\uccb0\0\ucd78\0\uce40\0\ucf08\0\ucfd0"+
+    "\0\ud098\0\ud160\0\ud228\0\ud2f0\0\ud3b8\0\ud480\0\ud548\0\ud610"+
+    "\0\ud6d8\0\ud7a0\0\ud868\0\ud930\0\ud9f8\0\udac0\0\udb88\0\udc50"+
+    "\0\udd18\0\udde0\0\udea8\0\udf70\0\ue038\0\ue100\0\ue1c8\0\ue290"+
+    "\0\ue358\0\ue420\0\ue4e8\0\ue5b0\0\ue678\0\ue740\0\ue808\0\ue8d0"+
+    "\0\ue998\0\uea60\0\ueb28\0\uebf0\0\uecb8\0\ued80\0\uee48\0\310"+
+    "\0\uef10\0\uefd8\0\uf0a0\0\uf168\0\uf230\0\uf2f8\0\uf3c0\0\uf488"+
+    "\0\uf550\0\uf618\0\uf6e0\0\uf7a8\0\uf870\0\uf938\0\ufa00\0\ufac8"+
+    "\0\ufb90\0\ufc58\0\ufd20\0\ufde8\0\ufeb0\0\uff78\1\100\1\u0108"+
+    "\1\u01d0\1\u0298\1\u0360\1\u0428\1\u04f0\1\u05b8\1\u0680\1\u0748"+
+    "\1\u0810\1\u08d8\1\u09a0\1\u0a68\1\u0b30\1\u0bf8\1\u0cc0\1\u0d88"+
+    "\1\u0e50\1\u0f18\1\u0fe0\1\u10a8\1\u1170\1\u1238\1\u1300\1\u13c8"+
+    "\1\u1490\1\u1558\1\u1620\1\u16e8\1\u17b0\1\u1878\1\u1940\1\u1a08"+
+    "\1\u1ad0\1\u1b98\1\u1c60\1\u1d28\1\u1df0\1\u1eb8\1\u1f80\1\u2048"+
+    "\1\u2110\1\u21d8\1\u22a0\1\u2368\1\u2430\1\u24f8\1\u25c0\1\u2688"+
+    "\1\u2750\1\u2818\1\u28e0\1\u29a8\1\u2a70\1\u2b38\1\u2c00\1\u2cc8"+
+    "\1\u2d90\1\u2e58\1\u2f20\1\u2fe8\1\u30b0\1\u3178\1\u3240\1\u3308"+
+    "\1\u33d0\1\u3498\1\u3560\1\u3628\1\u36f0\1\u37b8\1\u3880\1\u3948"+
+    "\1\u3a10\1\u3ad8\1\u3ba0\1\u3c68\1\u3d30\1\u3df8\1\u3ec0\1\u3f88"+
+    "\1\u4050\1\u4118\1\u41e0\1\u42a8\1\u4370\1\u4438\1\u4500\1\u45c8"+
+    "\1\u4690\1\u4758\1\u4820\1\u48e8\1\u49b0\1\u4a78\1\u4b40\1\u4c08"+
+    "\1\u4cd0\1\u4d98\1\u4e60\1\u4f28\1\u4ff0\1\u50b8\1\u5180\1\u5248"+
+    "\1\u5310\1\u53d8\1\u54a0\1\u5568\1\u5630\1\u56f8\1\u57c0\1\u5888"+
+    "\1\u5950\1\u5a18\1\u5ae0\1\u5ba8\1\u5c70\1\u5d38\1\u5e00\1\u5ec8"+
+    "\1\u5f90\1\u6058\1\u6120\1\u61e8\1\u62b0\1\u6378\1\u6440\1\u6508"+
+    "\1\u65d0\1\u6698\1\u6760\1\u6828\1\u68f0\1\u69b8\1\u6a80\1\u6b48"+
+    "\1\u6c10\1\u6cd8\1\u6da0\1\u6e68\1\u6f30\1\u6ff8\1\u70c0\1\u7188"+
+    "\1\u7250\1\u7318\1\u73e0\1\u74a8\1\u7570\1\u7638\1\u7700\1\u77c8"+
+    "\1\u7890\1\u7958\1\u7a20\1\u7ae8\1\u7bb0\1\u7c78\1\u7d40\1\u7e08"+
+    "\1\u7ed0\1\u7f98\1\u8060\1\u8128\1\u81f0\1\u82b8\1\u8380\1\u8448"+
+    "\1\u8510\1\u85d8\1\u86a0\1\u8768\1\u8830\1\u88f8\1\u89c0\1\u8a88"+
+    "\1\u8b50\1\u8c18\1\u8ce0\1\u8da8\1\u8e70\1\u8f38\1\u9000\1\u90c8"+
+    "\1\u9190\1\u9258\1\u9320\1\u93e8\1\u94b0\1\u9578\1\u9640\1\u9708"+
+    "\1\u97d0\1\u9898\1\u9960\1\u9a28\1\u9af0\1\u9bb8\1\u9c80\1\u9d48"+
+    "\1\u9e10\1\u9ed8\1\u9fa0\1\ua068\1\ua130\1\ua1f8\1\ua2c0\1\ua388"+
+    "\1\ua450\1\ua518\1\ua5e0\1\ua6a8\1\ua770\1\ua838\1\ua900\1\ua9c8"+
+    "\1\uaa90\1\uab58\1\uac20\1\uace8\1\uadb0\1\uae78\1\uaf40\1\ub008"+
+    "\1\ub0d0\1\ub198\1\ub260\1\ub328\1\ub3f0\1\ub4b8\1\ub580\1\ub648"+
+    "\1\ub710\1\ub7d8\1\ub8a0\1\ub968\1\uba30\1\ubaf8\1\ubbc0\1\ubc88"+
+    "\1\ubd50\1\ube18\1\ubee0\1\ubfa8\1\uc070\1\uc138\1\uc200\1\uc2c8"+
+    "\1\uc390\1\uc458\1\uc520\1\uc5e8\1\uc6b0\1\uc778\1\uc840\1\uc908"+
+    "\1\uc9d0\1\uca98\1\ucb60\1\ucc28\1\uccf0\1\ucdb8\1\uce80\1\ucf48"+
+    "\1\ud010\1\ud0d8\1\ud1a0\1\ud268\1\ud330\1\ud3f8\1\ud4c0\1\ud588"+
+    "\1\ud650\1\ud718\1\ud7e0\1\ud8a8\1\ud970\1\uda38\1\udb00\1\udbc8"+
+    "\1\udc90\1\udd58\1\ude20\1\udee8\1\udfb0\1\ue078\1\ue140\1\ue208"+
+    "\1\ue2d0\1\ue398\1\ue460\1\ue528\1\ue5f0\1\ue6b8\1\ue780\1\ue848"+
+    "\1\ue910\1\ue9d8\1\ueaa0\1\ueb68\1\uec30\1\uecf8\1\uedc0\1\uee88"+
+    "\1\uef50\1\uf018\1\uf0e0\1\uf1a8\1\uf270\1\uf338\1\uf400\1\uf4c8"+
+    "\1\uf590\1\uf658\1\uf720\1\uf7e8\1\uf8b0\1\uf978\1\ufa40\1\ufb08"+
+    "\1\ufbd0\1\ufc98\1\ufd60\1\ufe28\1\ufef0\1\uffb8\2\200\2\u0148"+
+    "\2\u0210\2\u02d8\2\u03a0\2\u0468\2\u0530\2\u05f8\2\u06c0\2\u0788"+
+    "\2\u0850\2\u0918\2\u09e0\2\u0aa8\2\u0b70\2\u0c38\2\u0d00\2\u0dc8"+
+    "\0\ued80\2\u0e90\2\u0f58\2\u1020\2\u10e8\2\u11b0\2\u1278\2\u1340"+
+    "\2\u1408\2\u14d0\2\u1598\2\u1660\2\u1728\2\u17f0\2\u18b8\2\u1980"+
+    "\2\u1a48\2\u1b10\2\u1bd8\2\u1ca0\2\u1d68\2\u1e30\2\u1ef8\2\u1fc0"+
+    "\2\u2088\2\u2150\2\u2218\2\u22e0\2\u23a8\2\u2470\2\u2538\2\u2600"+
+    "\2\u26c8\2\u2790\2\u2858\2\u2920\2\u29e8\2\u2ab0\2\u2b78\2\u2c40"+
+    "\2\u2d08\2\u2dd0\2\u2e98\2\u2f60\2\u3028\2\u30f0\2\u31b8\2\u3280"+
+    "\2\u3348\2\u3410\2\u34d8\2\u35a0\2\u3668\2\u3730\2\u37f8\2\u38c0"+
+    "\2\u3988\2\u3a50\2\u3b18\2\u3be0\2\u3ca8\2\u3d70\2\u3e38\2\u3f00"+
+    "\2\u3fc8\2\u4090\2\u4158\2\u4220\2\u42e8\2\u43b0\2\u4478\2\u4540"+
+    "\2\u4608\2\u46d0\2\u4798\2\u4860\2\u4928\2\u49f0\2\u4ab8\2\u4b80"+
+    "\2\u4c48\2\u4d10\2\u4dd8\2\u4ea0\2\u4f68\2\u5030\2\u50f8\2\u51c0"+
+    "\2\u5288\2\u5350\2\u5418\2\u54e0\2\u55a8\2\u5670\2\u5738\2\u5800"+
+    "\2\u58c8\2\u5990\2\u5a58\2\u5b20\2\u5be8\2\u5cb0\2\u5d78\2\u5e40"+
+    "\2\u5f08\2\u5fd0\2\u6098\2\u6160\2\u6228\2\u62f0\2\u63b8\2\u6480"+
+    "\2\u6548\2\u6610\2\u66d8\2\u67a0\2\u6868\2\u6930\2\u69f8\2\u6ac0"+
+    "\2\u6b88\2\u6c50\2\u6d18\2\u6de0\2\u6ea8\2\u6f70\2\u7038\2\u7100"+
+    "\2\u71c8\2\u7290\2\u7358\2\u7420\2\u74e8\2\u75b0\2\u7678\2\u7740"+
+    "\2\u7808\2\u78d0\2\u7998\2\u7a60\2\u7b28\2\u7bf0\2\u7cb8\2\u7d80"+
+    "\2\u7e48\2\u7f10\2\u7fd8\2\u80a0\2\u8168\2\u8230\2\u82f8\2\u83c0"+
+    "\2\u8488\2\u8550\2\u8618\2\u86e0\2\u87a8\2\u8870\2\u8938\2\u8a00"+
+    "\2\u8ac8\2\u8b90\2\u8c58\2\u8d20\2\u8de8\2\u8eb0\2\u8f78\2\u9040"+
+    "\2\u9108\2\u91d0\2\u9298\2\u9360\2\u9428\2\u94f0\2\u95b8\2\u9680"+
+    "\2\u9748\2\u9810\2\u98d8\2\u99a0\2\u9a68\2\u9b30\2\u9bf8\2\u9cc0"+
+    "\2\u9d88\2\u9e50\2\u9f18\2\u9fe0\2\ua0a8\2\ua170\2\ua238\2\ua300"+
+    "\2\ua3c8\2\ua490\2\ua558\2\ua620\2\ua6e8\2\ua7b0\2\ua878\2\ua940"+
+    "\2\uaa08\0\u20d0\2\uaad0\2\uab98\2\uac60\2\uad28\2\uadf0\2\uaeb8"+
+    "\2\uaf80\2\ub048\2\ub110\2\ub1d8\2\ub2a0\2\ub368\2\ub430\2\ub4f8"+
+    "\2\ub5c0\2\ub688\2\ub750\2\ub818\2\ub8e0\2\ub9a8\2\uba70\2\ubb38"+
+    "\2\ubc00\2\ubcc8\2\ubd90\2\ube58\2\ubf20\2\ubfe8\2\uc0b0\2\uc178"+
+    "\2\uc240\2\uc308\2\uc3d0\2\uc498\2\uc560\2\uc628\2\uc6f0\2\uc7b8"+
+    "\2\uc880\2\uc948\2\uca10\2\ucad8\2\ucba0\2\ucc68\2\ucd30\2\ucdf8"+
+    "\2\ucec0\2\ucf88\2\ud050\2\ud118\2\ud1e0\2\ud2a8\2\ud370\2\ud438"+
+    "\2\ud500\2\ud5c8\2\ud690\2\ud758\2\ud820\2\ud8e8\2\ud9b0\2\uda78"+
+    "\2\udb40\2\udc08\2\udcd0\2\udd98\2\ude60\2\udf28\2\udff0\2\ue0b8"+
+    "\2\ue180\2\ue248\2\ue310\2\ue3d8\2\ue4a0\2\ue568\2\ue630\2\ue6f8"+
+    "\2\ue7c0\2\ue888\2\ue950\2\uea18\2\ueae0\2\ueba8\2\uec70\2\ued38"+
+    "\2\uee00\2\ueec8\2\uef90\2\uf058\2\uf120\2\uf1e8\2\uf2b0\2\uf378"+
+    "\2\uf440\2\uf508\2\uf5d0\2\uf698\2\uf760\2\uf828\2\uf8f0\2\uf9b8"+
+    "\2\ufa80\2\ufb48\2\ufc10\2\ufcd8\2\ufda0\2\ufe68\2\uff30\2\ufff8"+
+    "\3\300\3\u0188\3\u0250\3\u0318\3\u03e0\3\u04a8\3\u0570\3\u0638"+
+    "\3\u0700\3\u07c8\3\u0890\3\u0958\3\u0a20\3\u0ae8\3\u0bb0\3\u0c78"+
+    "\3\u0d40\3\u0e08\3\u0ed0\3\u0f98\3\u1060\3\u1128\3\u11f0\3\u12b8"+
+    "\3\u1380\3\u1448\3\u1510\3\u15d8\3\u16a0\3\u1768\3\u1830\3\u18f8"+
+    "\3\u19c0\3\u1a88\3\u1b50\3\u1c18\3\u1ce0\3\u1da8\3\u1e70\3\u1f38"+
+    "\3\u2000\3\u20c8\3\u2190\3\u2258\3\u2320\3\u23e8\3\u24b0\3\u2578"+
+    "\3\u2640\3\u2708\3\u27d0\3\u2898\3\u2960\3\u2a28\3\u2af0\3\u2bb8"+
+    "\3\u2c80\3\u2d48\3\u2e10\3\u2ed8\3\u2fa0\3\u3068\3\u3130\3\u31f8"+
+    "\3\u32c0\3\u3388\3\u3450\3\u3518\3\u35e0\3\u36a8\3\u3770\3\u3838"+
+    "\3\u3900\3\u39c8\3\u3a90\3\u3b58\3\u3c20\3\u3ce8\3\u3db0\3\u3e78"+
+    "\3\u3f40\3\u4008\3\u40d0\3\u4198\3\u4260\3\u4328\3\u43f0\3\u44b8"+
+    "\3\u4580\3\u4648\3\u4710\3\u47d8\3\u48a0\3\u4968\3\u4a30\3\u4af8"+
+    "\3\u4bc0\3\u4c88\3\u4d50\3\u4e18\3\u4ee0\3\u4fa8\3\u5070\3\u5138"+
+    "\3\u5200\3\u52c8\3\u5390\3\u5458\3\u5520\3\u55e8\3\u56b0\3\u5778"+
+    "\3\u5840\3\u5908\3\u59d0\3\u5a98\3\u5b60\3\u5c28\3\u5cf0\3\u5db8"+
+    "\3\u5e80\3\u5f48\3\u6010\3\u60d8\3\u61a0\3\u6268\3\u6330\3\u63f8"+
+    "\3\u64c0\3\u6588\3\u6650\3\u6718\3\u67e0\3\u68a8\3\u6970\3\u6a38"+
+    "\3\u6b00\3\u6bc8\3\u6c90\3\u6d58\3\u6e20\3\u6ee8\3\u6fb0\3\u7078"+
+    "\3\u7140\3\u7208\3\u72d0\3\u7398\3\u7460\3\u7528\3\u75f0\3\u76b8"+
+    "\3\u7780\3\u7848\3\u7910\3\u79d8\3\u7aa0\3\u7b68\3\u7c30\3\u7cf8"+
+    "\3\u7dc0\3\u7e88\3\u7f50\3\u8018\3\u80e0\3\u81a8\3\u8270\3\u8338"+
+    "\3\u8400\3\u84c8\3\u8590\3\u8658\3\u8720\3\u87e8\3\u88b0\3\u8978"+
+    "\3\u8a40\3\u8b08\3\u8bd0\3\u8c98\3\u8d60\3\u8e28\3\u8ef0\3\u8fb8"+
+    "\3\u9080\3\u9148\3\u9210\3\u92d8\3\u93a0\3\u9468\3\u9530\3\u95f8"+
+    "\3\u96c0\3\u9788\3\u9850\3\u9918\3\u99e0\3\u9aa8\3\u9b70\3\u9c38"+
+    "\3\u9d00\3\u9dc8\3\u9e90\3\u9f58\3\ua020\3\ua0e8\3\ua1b0\3\ua278"+
+    "\3\ua340\3\ua408\3\ua4d0\3\ua598\3\ua660\3\ua728\3\ua7f0\3\ua8b8"+
+    "\3\ua980\3\uaa48\3\uab10\3\uabd8\3\uaca0\3\uad68\3\uae30\3\uaef8"+
+    "\3\uafc0\3\ub088\3\ub150\3\ub218\3\ub2e0\3\ub3a8\3\ub470\3\ub538"+
+    "\3\ub600\3\ub6c8\3\ub790\3\ub858\0\310\3\ub920\3\ub9e8\3\ubab0"+
+    "\3\ubb78\3\ubc40\3\ubd08\3\ubdd0\3\ube98\3\ubf60\3\uc028\3\uc0f0"+
+    "\3\uc1b8\3\uc280\3\uc348\3\uc410\3\uc4d8\3\uc5a0\3\uc668\3\uc730"+
+    "\3\uc7f8\3\uc8c0\3\uc988\3\uca50\3\ucb18\3\ucbe0\3\ucca8\3\ucd70"+
+    "\3\uce38\3\ucf00\3\ucfc8\3\ud090\3\ud158\3\ud220\3\ud2e8\3\ud3b0"+
+    "\3\ud478\3\ud540\3\ud608\3\ud6d0\3\ud798\3\ud860\3\ud928\3\ud9f0"+
+    "\3\udab8\3\udb80\3\udc48\3\udd10\3\uddd8\3\udea0\3\udf68\3\ue030"+
+    "\3\ue0f8\3\ue1c0\3\ue288\3\ue350\3\ue418\3\ue4e0\3\ue5a8\3\ue670"+
+    "\3\ue738\3\ue800\3\ue8c8\3\ue990\3\uea58\3\ueb20\3\uebe8\3\uecb0"+
+    "\3\ued78\3\uee40\3\uef08\3\uefd0\3\uf098\3\uf160\3\uf228\3\uf2f0"+
+    "\3\uf3b8\3\uf480\3\uf548\3\uf610\3\uf6d8\3\uf7a0\3\uf868\3\uf930"+
+    "\3\uf9f8\3\ufac0\3\ufb88\3\ufc50\3\ufd18\3\ufde0\3\ufea8\3\uff70"+
+    "\4\70\4\u0100\4\u01c8\4\u0290\4\u0358\4\u0420\4\u04e8\4\u05b0"+
+    "\4\u0678\4\u0740\4\u0808\4\u08d0\4\u0998\4\u0a60\4\u0b28\4\u0bf0"+
+    "\4\u0cb8\4\u0d80\4\u0e48\4\u0f10\4\u0fd8\4\u10a0\4\u1168\4\u1230"+
+    "\4\u12f8\4\u13c0\4\u1488\4\u1550\4\u1618\4\u16e0\4\u17a8\4\u1870"+
+    "\4\u1938\4\u1a00\4\u1ac8\4\u1b90\4\u1c58\4\u1d20\4\u1de8\4\u1eb0"+
+    "\4\u1f78\4\u2040\4\u2108\4\u21d0\4\u2298\4\u2360\4\u2428\4\u24f0"+
+    "\4\u25b8\4\u2680\4\u2748\4\u2810\4\u28d8\4\u29a0\4\u2a68\4\u2b30"+
+    "\4\u2bf8\4\u2cc0\4\u2d88\4\u2e50\4\u2f18\4\u2fe0\4\u30a8\4\u3170"+
+    "\4\u3238\4\u3300\4\u33c8\4\u3490\4\u3558\4\u3620\4\u36e8\4\u37b0"+
+    "\4\u3878\4\u3940\4\u3a08\4\u3ad0\4\u3b98\4\u3c60\4\u3d28\4\u3df0"+
+    "\4\u3eb8\4\u3f80\4\u4048\4\u4110\4\u41d8\4\u42a0\4\u4368\4\u4430"+
+    "\4\u44f8\4\u45c0\4\u4688\4\u4750\4\u4818\4\u48e0\4\u49a8\4\u4a70"+
+    "\4\u4b38\4\u4c00\4\u4cc8\4\u4d90\4\u4e58\4\u4f20\4\u4fe8\4\u50b0"+
+    "\4\u5178\4\u5240\4\u5308\4\u53d0\4\u5498\4\u5560\4\u5628\4\u56f0"+
+    "\4\u57b8\4\u5880\4\u5948\4\u5a10\4\u5ad8\4\u5ba0\4\u5c68\4\u5d30"+
+    "\4\u5df8\4\u5ec0\4\u5f88\4\u6050\4\u6118\4\u61e0\4\u62a8\4\u6370"+
+    "\4\u6438\4\u6500\4\u65c8\4\u6690\4\u6758\4\u6820\4\u68e8\4\u69b0"+
+    "\4\u6a78\4\u6b40\4\u6c08\4\u6cd0\4\u6d98\4\u6e60\4\u6f28\4\u6ff0"+
+    "\4\u70b8\4\u7180\4\u7248\4\u7310\4\u73d8\4\u74a0\4\u7568\4\u7630"+
+    "\4\u76f8\4\u77c0\4\u7888\4\u7950\4\u7a18\4\u7ae0\4\u7ba8\4\u7c70"+
+    "\4\u7d38\4\u7e00\4\u7ec8\4\u7f90\4\u8058\4\u8120\4\u81e8\4\u82b0"+
+    "\4\u8378\4\u8440\4\u8508\4\u85d0\4\u8698\4\u8760\4\u8828\4\u88f0"+
+    "\4\u89b8\4\u8a80\4\u8b48\4\u8c10\4\u8cd8\4\u8da0\4\u8e68\4\u8f30"+
+    "\4\u8ff8\4\u90c0\4\u9188\4\u9250\4\u9318\4\u93e0\4\u94a8\4\u9570"+
+    "\4\u9638\4\u9700\4\u97c8\4\u9890\4\u9958\4\u9a20\4\u9ae8\4\u9bb0"+
+    "\4\u9c78\4\u9d40\4\u9e08\4\u9ed0\4\u9f98\4\ua060\4\ua128\4\ua1f0"+
+    "\4\ua2b8\4\ua380\4\ua448\4\ua510\4\ua5d8\4\ua6a0\4\ua768\4\ua830"+
+    "\4\ua8f8\4\ua9c0\4\uaa88\4\uab50\4\uac18\4\uace0\4\uada8\4\uae70"+
+    "\4\uaf38\4\ub000\4\ub0c8\4\ub190\4\ub258\4\ub320\4\ub3e8\4\ub4b0"+
+    "\4\ub578\4\ub640\4\ub708\4\ub7d0\4\ub898\4\ub960\4\uba28\4\ubaf0"+
+    "\3\ub790\4\ubbb8\4\ubc80\4\ubd48\4\ube10\4\ubed8\4\ubfa0\4\uc068"+
+    "\4\uc130\4\uc1f8\4\uc2c0\4\uc388\4\uc450\4\uc518\4\uc5e0\4\uc6a8"+
+    "\4\uc770\4\uc838\4\uc900\4\uc9c8\4\uca90\4\ucb58\4\ucc20\4\ucce8"+
+    "\4\ucdb0\4\uce78\4\ucf40\4\ud008\4\ud0d0\4\ud198\4\ud260\4\ud328"+
+    "\4\ud3f0\4\ud4b8\4\ud580\4\ud648\4\ud710\4\ud7d8\4\ud8a0\4\ud968"+
+    "\4\uda30\4\udaf8\4\udbc0\4\udc88\4\udd50\4\ude18\4\udee0\4\udfa8"+
+    "\4\ue070\4\ue138\4\ue200\4\ue2c8\4\ue390\4\ue458\4\ue520\4\ue5e8"+
+    "\4\ue6b0\4\ue778\4\ue840\4\ue908\4\ue9d0\4\uea98\4\ueb60\4\uec28"+
+    "\4\uecf0\4\uedb8\4\uee80\4\uef48\4\uf010\4\uf0d8\4\uf1a0\4\uf268"+
+    "\4\uf330\4\uf3f8\4\uf4c0\4\uf588\4\uf650\4\uf718\4\uf7e0\4\uf8a8"+
+    "\4\uf970\4\ufa38\4\ufb00\4\ufbc8\4\ufc90\4\ufd58\4\ufe20\4\ufee8"+
+    "\4\uffb0\5\170\5\u0140\5\u0208\5\u02d0\5\u0398\5\u0460\5\u0528"+
+    "\5\u05f0\5\u06b8\5\u0780\5\u0848\5\u0910\5\u09d8\5\u0aa0\5\u0b68"+
+    "\5\u0c30\5\u0cf8\5\u0dc0\5\u0e88\5\u0f50\5\u1018\5\u10e0\5\u11a8"+
+    "\5\u1270\5\u1338\5\u1400\5\u14c8\5\u1590\5\u1658\5\u1720\5\u17e8"+
+    "\5\u18b0\5\u1978\5\u1a40\5\u1b08\5\u1bd0\5\u1c98\5\u1d60\5\u1e28"+
+    "\5\u1ef0\5\u1fb8\5\u2080\5\u2148\5\u2210\5\u22d8\5\u23a0\5\u2468"+
+    "\5\u2530\5\u25f8\5\u26c0\5\u2788\5\u2850\5\u2918\5\u29e0\5\u2aa8"+
+    "\5\u2b70\5\u2c38\5\u2d00\5\u2dc8\5\u2e90\5\u2f58\5\u3020\5\u30e8"+
+    "\5\u31b0\5\u3278\5\u3340\5\u3408\5\u34d0\5\u3598\5\u3660\5\u3728"+
+    "\5\u37f0\5\u38b8\5\u3980\5\u3a48\5\u3b10\5\u3bd8\5\u3ca0\5\u3d68"+
+    "\5\u3e30\5\u3ef8\5\u3fc0\5\u4088\5\u4150\5\u4218\5\u42e0\5\u43a8"+
+    "\5\u4470\5\u4538\5\u4600\5\u46c8\5\u4790\5\u4858\5\u4920\5\u49e8"+
+    "\5\u4ab0\5\u4b78\5\u4c40\5\u4d08\5\u4dd0\5\u4e98\5\u4f60\5\u5028"+
+    "\5\u50f0\5\u51b8\5\u5280\5\u5348\5\u5410\5\u54d8\5\u55a0\5\u5668"+
+    "\5\u5730\5\u57f8\5\u58c0\5\u5988\5\u5a50\5\u5b18\5\u5be0\5\u5ca8"+
+    "\5\u5d70\5\u5e38\5\u5f00\5\u5fc8\5\u6090\5\u6158\5\u6220\5\u62e8"+
+    "\5\u63b0\5\u6478\5\u6540\5\u6608\5\u66d0\5\u6798\5\u6860\5\u6928"+
+    "\5\u69f0\5\u6ab8\5\u6b80\5\u6c48\5\u6d10\5\u6dd8\5\u6ea0\5\u6f68"+
+    "\5\u7030\5\u70f8\5\u71c0\5\u7288\5\u7350\5\u7418\5\u74e0\5\u75a8"+
+    "\5\u7670\5\u7738\5\u7800\5\u78c8\5\u7990\5\u7a58\5\u7b20\5\u7be8"+
+    "\5\u7cb0\5\u7d78\5\u7e40\5\u7f08\5\u7fd0\5\u8098\5\u8160\5\u8228"+
+    "\5\u82f0\5\u83b8\5\u8480\5\u8548\5\u8610\5\u86d8\5\u87a0\5\u8868"+
+    "\5\u8930\5\u89f8\5\u8ac0\5\u8b88\5\u8c50\5\u8d18\5\u8de0\5\u8ea8"+
+    "\5\u8f70\5\u9038\5\u9100\5\u91c8\5\u9290\5\u9358\5\u9420\5\u94e8"+
+    "\5\u95b0\5\u9678\5\u9740\5\u9808\5\u98d0\5\u9998\5\u9a60\5\u9b28"+
+    "\5\u9bf0\5\u9cb8\5\u9d80\5\u9e48\5\u9f10\5\u9fd8\5\ua0a0\5\ua168"+
+    "\5\ua230\5\ua2f8\5\ua3c0\5\ua488\5\ua550\5\ua618\5\ua6e0\5\ua7a8"+
+    "\5\ua870\5\ua938\5\uaa00\5\uaac8\5\uab90\5\uac58\5\uad20\5\uade8"+
+    "\5\uaeb0\5\uaf78\5\ub040\5\ub108\5\ub1d0\5\ub298\5\ub360\5\ub428"+
+    "\5\ub4f0\5\ub5b8\5\ub680\5\ub748\5\ub810\5\ub8d8\5\ub9a0\5\uba68"+
+    "\5\ubb30\5\ubbf8\5\ubcc0\5\ubd88\5\ube50\5\ubf18\5\ubfe0\5\uc0a8"+
+    "\5\uc170\5\uc238\5\uc300\5\uc3c8\5\uc490\5\uc558\5\uc620\5\uc6e8"+
+    "\5\uc7b0\5\uc878\5\uc940\5\uca08\5\ucad0\5\ucb98\5\ucc60\5\ucd28"+
+    "\5\ucdf0\5\uceb8\5\ucf80\5\ud048\5\ud110\5\ud1d8\5\ud2a0\5\ud368"+
+    "\5\ud430\5\ud4f8\5\ud5c0\5\ud688\5\ud750\5\ud818\5\ud8e0\5\ud9a8"+
+    "\5\uda70\5\udb38\5\udc00\5\udcc8\5\udd90\5\ude58\5\udf20\5\udfe8"+
+    "\5\ue0b0\5\ue178\5\ue240\5\ue308\5\ue3d0\5\ue498\5\ue560\5\ue628"+
+    "\5\ue6f0\5\ue7b8\5\ue880\5\ue948\5\uea10\5\uead8\5\ueba0\5\uec68"+
+    "\5\ued30\5\uedf8\5\ueec0\5\uef88\5\uf050\5\uf118\5\uf1e0\5\uf2a8"+
+    "\5\uf370\5\uf438\5\uf500\5\uf5c8\5\uf690\5\uf758\5\uf820\5\uf8e8"+
+    "\5\uf9b0\5\ufa78\5\ufb40\5\ufc08\5\ufcd0\5\ufd98\5\ufe60\5\uff28"+
+    "\5\ufff0\6\270\6\u0180\6\u0248\6\u0310\6\u03d8\6\u04a0\6\u0568"+
+    "\6\u0630\6\u06f8\6\u07c0\6\u0888\6\u0950\6\u0a18\6\u0ae0\6\u0ba8"+
+    "\6\u0c70\6\u0d38\6\u0e00\6\u0ec8\6\u0f90\6\u1058\6\u1120\6\u11e8"+
+    "\6\u12b0\6\u1378\6\u1440\6\u1508\6\u15d0\6\u1698\6\u1760\6\u1828"+
+    "\6\u18f0\6\u19b8\6\u1a80\6\u1b48\6\u1c10\6\u1cd8\6\u1da0\6\u1e68"+
+    "\6\u1f30\6\u1ff8\6\u20c0\6\u2188\6\u2250\6\u2318\6\u23e0\6\u24a8"+
+    "\6\u2570\6\u2638\6\u2700\6\u27c8\6\u2890\6\u2958\6\u2a20\6\u2ae8"+
+    "\6\u2bb0\6\u2c78\6\u2d40\6\u2e08\6\u2ed0\6\u2f98\6\u3060\6\u3128"+
+    "\6\u31f0\6\u32b8\6\u3380\6\u3448\6\u3510\6\u35d8\6\u36a0\6\u3768"+
+    "\6\u3830\6\u38f8\6\u39c0\6\u3a88\6\u3b50\6\u3c18\6\u3ce0\6\u3da8"+
+    "\6\u3e70\6\u3f38\6\u4000\6\u40c8\6\u4190\6\u4258\6\u4320\6\u43e8"+
+    "\6\u44b0\6\u4578\6\u4640\6\u4708\6\u47d0\6\u4898\6\u4960\6\u4a28"+
+    "\6\u4af0\6\u4bb8\6\u4c80\6\u4d48\6\u4e10\6\u4ed8\6\u4fa0\6\u5068"+
+    "\6\u5130\6\u51f8\6\u52c0\6\u5388\6\u5450\6\u5518\6\u55e0\6\u56a8"+
+    "\6\u5770\6\u5838\6\u5900\6\u59c8\6\u5a90\6\u5b58\6\u5c20\6\u5ce8"+
+    "\6\u5db0\6\u5e78\6\u5f40\6\u6008\6\u60d0\6\u6198\6\u6260\6\u6328"+
+    "\6\u63f0\6\u64b8\6\u6580\6\u6648\6\u6710\6\u67d8\6\u68a0\6\u6968"+
+    "\6\u6a30\6\u6af8\6\u6bc0\6\u6c88\6\u6d50\6\u6e18\6\u6ee0\6\u6fa8"+
+    "\6\u7070\6\u7138\6\u7200\6\u72c8\6\u7390";
 
   private static int [] zzUnpackRowMap() {
-    int [] result = new int[1750];
+    int [] result = new int[2133];
     int offset = 0;
     offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
     return result;
@@ -523,3364 +581,4911 @@
     "\3\2\1\13\2\2\1\14\4\2\1\15\3\2\1\16"+
     "\17\2\1\17\2\2\1\20\66\2\1\21\1\2\1\22"+
     "\2\2\1\23\1\24\1\2\1\25\1\2\1\26\1\2"+
-    "\1\27\1\2\1\30\1\2\1\31\1\32\3\2\1\33"+
-    "\2\34\1\35\1\36\1\37\1\40\6\41\1\42\3\41"+
-    "\1\43\12\41\1\44\4\41\1\40\1\45\2\46\1\45"+
-    "\5\46\1\47\1\2\1\40\1\50\1\40\1\2\2\40"+
-    "\1\2\3\40\1\51\2\2\1\40\1\52\3\2\2\40"+
-    "\1\2\307\0\1\30\2\0\1\30\4\0\1\30\16\0"+
-    "\1\30\15\0\1\30\20\0\1\30\1\0\1\30\31\0"+
-    "\1\30\4\0\1\30\10\0\2\30\15\0\2\30\10\0"+
-    "\1\30\115\0\2\30\5\0\1\30\2\0\1\30\3\0"+
-    "\2\30\10\0\4\30\1\0\3\30\1\0\1\30\2\0"+
-    "\1\30\2\0\1\30\4\0\4\30\1\0\2\30\1\0"+
-    "\1\30\2\0\1\30\1\0\1\30\2\0\4\30\2\0"+
-    "\3\30\1\0\2\30\1\0\3\30\5\0\4\30\2\0"+
-    "\10\30\1\0\1\30\2\0\4\30\1\0\2\30\1\0"+
-    "\1\30\1\0\2\30\4\0\1\30\3\0\1\30\120\0"+
-    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
-    "\1\30\27\0\1\30\63\0\1\30\120\0\1\30\3\0"+
-    "\4\30\1\0\1\30\1\0\1\31\2\0\1\30\1\0"+
-    "\2\30\2\0\2\30\2\0\3\30\1\0\1\30\1\0"+
-    "\1\30\2\0\4\30\1\0\3\30\1\0\1\30\1\0"+
-    "\3\30\1\0\2\30\1\0\4\30\1\0\2\30\2\0"+
-    "\10\30\1\0\2\30\1\0\11\30\1\0\10\30\1\0"+
-    "\13\30\1\31\1\0\1\30\1\0\1\30\1\0\2\30"+
-    "\2\0\1\30\1\0\1\30\3\0\1\30\127\0\1\30"+
-    "\17\0\1\30\23\0\1\30\23\0\1\30\6\0\3\30"+
-    "\37\0\1\30\7\0\1\30\117\0\1\30\1\0\2\30"+
-    "\1\0\1\30\1\0\4\30\1\0\1\30\1\0\1\30"+
-    "\1\0\2\30\1\0\3\30\1\0\2\30\1\0\4\30"+
-    "\1\0\3\30\1\0\17\30\1\0\2\30\1\0\21\30"+
-    "\1\0\2\30\1\0\41\30\1\0\1\30\1\0\2\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
-    "\127\0\1\30\3\0\2\30\12\0\2\30\13\0\1\30"+
-    "\6\0\1\30\2\0\2\30\6\0\1\30\4\0\2\30"+
-    "\2\0\2\30\5\0\3\30\10\0\1\30\26\0\1\30"+
-    "\7\0\1\30\117\0\1\30\1\0\2\30\1\0\1\30"+
-    "\2\0\2\30\2\0\1\30\3\0\2\30\1\0\3\30"+
-    "\1\0\2\30\1\0\4\30\1\0\3\30\1\0\1\30"+
-    "\1\0\2\30\2\0\11\30\1\0\2\30\1\0\1\30"+
-    "\1\0\2\30\1\0\14\30\1\0\2\30\1\0\3\30"+
-    "\1\0\1\30\1\0\30\30\1\0\2\30\1\0\1\30"+
-    "\1\0\2\30\2\0\1\30\1\0\1\30\1\0\1\30"+
-    "\1\0\1\30\113\0\1\30\26\0\2\30\23\0\1\31"+
-    "\1\30\66\0\1\31\142\0\1\31\27\0\4\30\2\0"+
-    "\2\30\14\0\3\30\15\0\3\30\3\0\1\30\7\0"+
-    "\2\30\13\0\1\30\13\0\4\31\1\0\2\30\11\0"+
-    "\1\30\133\0\1\30\3\0\2\30\12\0\2\30\1\0"+
-    "\3\30\7\0\1\30\6\0\2\30\1\0\2\30\6\0"+
-    "\1\30\4\0\2\30\2\0\2\30\5\0\3\30\10\0"+
-    "\1\30\16\0\1\30\4\0\2\31\1\0\1\30\7\0"+
-    "\1\30\117\0\1\30\4\0\1\30\6\0\1\30\3\0"+
-    "\1\30\6\0\1\30\5\0\1\30\2\0\2\30\1\0"+
-    "\17\30\2\0\1\30\13\0\7\30\2\0\1\30\1\0"+
-    "\1\30\1\0\1\30\2\0\1\30\1\0\1\30\1\0"+
-    "\1\30\1\0\1\30\6\0\2\30\5\0\1\30\1\0"+
-    "\1\30\2\0\3\30\1\0\1\30\7\0\1\30\1\0"+
-    "\1\30\131\0\1\30\17\0\2\30\22\0\1\30\2\0"+
-    "\2\30\13\0\1\30\3\0\2\30\5\0\3\30\10\0"+
-    "\1\30\26\0\1\30\7\0\1\30\124\0\1\30\6\0"+
-    "\1\30\3\0\1\30\3\0\1\30\7\0\1\30\31\0"+
-    "\20\30\5\0\3\30\3\0\1\30\3\0\2\30\2\0"+
-    "\2\30\4\0\1\30\10\0\1\30\4\0\1\30\2\0"+
-    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\226\0"+
-    "\1\36\41\0\1\32\131\0\1\35\6\0\1\35\2\0"+
-    "\1\35\3\0\2\35\10\0\4\35\1\0\3\35\1\0"+
-    "\1\35\2\0\1\35\2\0\1\35\4\0\4\35\1\0"+
-    "\2\35\6\0\1\35\2\0\4\35\2\0\3\35\1\0"+
-    "\2\35\1\0\3\35\5\0\4\35\2\0\10\35\4\0"+
-    "\4\35\1\0\2\35\1\0\1\35\1\0\2\35\4\0"+
-    "\1\35\3\0\1\35\113\0\1\35\1\0\2\35\1\0"+
-    "\1\35\1\0\4\35\1\0\1\35\1\0\1\35\1\0"+
-    "\2\35\1\0\3\35\1\0\2\35\1\0\4\35\1\0"+
-    "\3\35\1\0\17\35\1\0\2\35\1\0\21\35\1\0"+
-    "\2\35\1\0\41\35\1\0\1\35\1\0\2\35\2\0"+
-    "\1\35\1\0\1\35\1\0\1\35\1\0\1\35\113\0"+
-    "\1\35\1\0\2\35\1\0\1\35\1\0\4\35\1\0"+
-    "\1\35\1\0\1\35\1\0\2\35\2\0\1\35\2\0"+
-    "\2\35\1\0\4\35\1\0\3\35\1\0\17\35\1\0"+
-    "\2\35\1\0\21\35\1\0\2\35\1\0\41\35\1\0"+
-    "\1\35\1\0\2\35\2\0\1\35\1\0\1\35\1\0"+
-    "\1\35\1\0\1\35\127\0\1\35\17\0\1\35\23\0"+
-    "\1\35\32\0\1\35\41\0\1\35\7\0\1\35\117\0"+
-    "\1\35\1\0\2\35\3\0\4\35\1\0\1\35\1\0"+
-    "\1\35\1\0\2\35\1\0\3\35\1\0\2\35\1\0"+
-    "\4\35\1\0\3\35\1\0\10\35\1\0\6\35\1\0"+
-    "\2\35\1\0\21\35\1\0\2\35\1\0\41\35\1\0"+
-    "\1\35\1\0\2\35\2\0\1\35\1\0\1\35\1\0"+
-    "\1\35\1\0\1\35\304\0\1\36\112\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\74\32\30\1\0\12\73\1\74\1\0\1\75"+
-    "\3\0\1\74\20\0\1\53\1\0\1\54\2\0\1\76"+
-    "\1\0\1\77\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\100\2\0\1\101\4\0\1\102"+
-    "\3\0\1\103\17\0\1\67\2\0\1\104\21\0\1\105"+
-    "\2\0\1\106\57\0\1\30\2\31\2\0\2\107\1\110"+
-    "\1\0\1\31\2\0\1\30\1\107\32\30\1\0\12\31"+
-    "\2\0\1\110\2\0\2\107\6\0\1\107\16\0\1\111"+
-    "\21\0\1\112\2\0\1\113\10\0\1\114\22\0\1\115"+
-    "\21\0\1\116\2\0\1\117\41\0\1\120\16\0\1\32"+
-    "\1\0\1\32\3\0\1\75\1\0\1\32\53\0\1\75"+
-    "\24\0\1\53\1\0\1\54\2\0\1\121\1\0\1\77"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\122\2\0\1\123\4\0\1\102\3\0\1\124"+
-    "\17\0\1\67\2\0\1\125\21\0\1\126\2\0\1\127"+
-    "\41\0\1\130\15\0\1\30\1\131\1\31\1\132\3\0"+
-    "\1\131\1\0\1\131\2\0\1\30\1\0\32\30\1\0"+
-    "\12\31\2\0\1\131\227\0\2\34\105\0\1\133\21\0"+
-    "\1\134\2\0\1\135\10\0\1\136\22\0\1\137\21\0"+
-    "\1\140\2\0\1\141\60\0\1\35\7\0\1\35\105\0"+
-    "\1\142\21\0\1\143\2\0\1\144\10\0\1\145\22\0"+
-    "\1\146\21\0\1\147\2\0\1\150\60\0\1\36\7\0"+
-    "\1\36\100\0\1\53\1\0\1\54\2\0\1\151\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\152\2\0\1\153\4\0\1\65\3\0"+
-    "\1\154\17\0\1\67\2\0\1\155\21\0\1\156\2\0"+
-    "\1\157\57\0\1\30\1\37\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\37\2\0\1\37\1\74\32\30"+
-    "\1\0\12\73\1\74\1\0\1\75\3\0\1\74\230\0"+
-    "\1\160\45\161\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\55\1\0\1\56\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\63\2\0\1\64"+
-    "\4\0\1\65\3\0\1\66\17\0\1\67\2\0\1\70"+
-    "\21\0\1\71\2\0\1\72\57\0\2\30\1\73\1\0"+
-    "\1\74\1\0\1\74\1\75\1\0\1\30\2\0\1\30"+
-    "\1\163\32\41\1\164\12\165\1\74\1\161\1\166\1\161"+
-    "\1\0\1\161\1\167\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\10\41\1\170"+
-    "\6\41\1\171\12\41\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\1\172"+
-    "\31\41\1\164\12\165\1\74\1\161\1\166\1\161\1\0"+
-    "\1\161\1\167\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\55\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\63\2\0\1\64\4\0\1\65\3\0\1\66"+
-    "\17\0\1\67\2\0\1\70\21\0\1\71\2\0\1\72"+
-    "\57\0\2\30\1\73\1\0\1\74\1\0\1\74\1\75"+
-    "\1\0\1\30\2\0\1\30\1\163\17\41\1\173\12\41"+
-    "\1\164\12\165\1\74\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\3\161\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\76\1\0\1\77\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\100\2\0\1\101\4\0\1\102\3\0\1\103\17\0"+
-    "\1\67\2\0\1\104\21\0\1\105\2\0\1\106\57\0"+
-    "\1\30\2\31\2\0\2\107\1\110\1\0\1\31\2\0"+
-    "\1\30\1\174\32\41\1\164\12\46\1\0\1\161\1\175"+
-    "\1\161\1\0\2\176\1\162\3\161\2\0\1\107\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\76"+
-    "\1\0\1\77\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\100\2\0\1\101\4\0\1\102"+
-    "\3\0\1\103\17\0\1\67\2\0\1\104\21\0\1\105"+
-    "\2\0\1\106\57\0\1\30\2\31\2\0\2\107\1\110"+
-    "\1\0\1\31\2\0\1\30\1\174\32\41\1\164\12\177"+
-    "\1\0\1\161\1\175\1\161\1\0\2\176\1\162\3\161"+
-    "\2\0\1\107\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\76\1\0\1\77\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\100\2\0"+
-    "\1\101\4\0\1\102\3\0\1\103\17\0\1\67\2\0"+
-    "\1\104\21\0\1\105\2\0\1\106\57\0\1\30\2\31"+
-    "\2\0\2\107\1\110\1\0\1\31\2\0\1\30\1\174"+
-    "\32\41\1\164\1\46\1\200\1\177\2\46\2\177\1\46"+
-    "\1\177\1\46\1\0\1\161\1\175\1\161\1\0\2\176"+
-    "\1\162\3\161\2\0\1\107\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\121\1\0\1\77\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\122\2\0\1\123\4\0\1\102\3\0\1\124\17\0"+
-    "\1\67\2\0\1\125\21\0\1\126\2\0\1\127\41\0"+
-    "\1\130\15\0\1\30\1\131\1\31\1\132\3\0\1\131"+
-    "\1\0\1\131\2\0\1\30\1\160\32\201\1\161\12\202"+
-    "\1\0\1\161\1\203\1\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\213\0\4\204\2\0\1\204"+
-    "\15\0\1\204\6\0\12\204\1\205\236\0\65\206\1\207"+
-    "\1\206\1\210\1\0\2\206\10\0\1\30\4\0\1\30"+
-    "\11\0\1\30\22\0\1\30\3\0\1\30\13\0\1\30"+
-    "\2\0\1\30\10\0\1\30\12\0\4\30\45\0\1\30"+
-    "\120\0\1\30\3\0\4\30\1\0\1\30\1\0\1\73"+
+    "\1\27\3\2\1\30\1\2\1\31\1\32\3\2\1\33"+
+    "\2\34\1\35\1\36\1\37\1\40\1\41\1\42\1\37"+
+    "\6\43\1\44\3\43\1\45\12\43\1\46\4\43\1\37"+
+    "\1\47\1\50\5\47\1\51\1\50\1\47\1\2\1\37"+
+    "\1\52\1\37\1\2\1\37\1\2\3\37\1\53\2\2"+
+    "\1\37\3\2\2\37\1\2\312\0\1\30\2\0\1\30"+
+    "\4\0\1\30\16\0\1\30\15\0\1\30\20\0\1\30"+
+    "\1\0\1\30\41\0\1\30\4\0\1\30\10\0\2\30"+
+    "\5\0\2\30\10\0\1\30\120\0\2\30\5\0\1\30"+
+    "\2\0\1\30\3\0\2\30\10\0\4\30\1\0\3\30"+
+    "\1\0\1\30\2\0\1\30\2\0\1\30\4\0\4\30"+
+    "\1\0\2\30\1\0\1\30\2\0\1\30\1\0\1\30"+
+    "\2\0\4\30\2\0\3\30\1\0\2\30\1\0\3\30"+
+    "\1\0\4\30\1\0\2\30\5\0\4\30\2\0\10\30"+
+    "\1\0\1\30\2\0\1\30\1\0\2\30\4\0\1\30"+
+    "\3\0\3\30\121\0\1\30\4\0\1\30\11\0\1\30"+
+    "\22\0\1\30\3\0\1\30\27\0\1\30\63\0\1\30"+
+    "\123\0\1\30\3\0\4\30\1\0\1\30\1\0\1\31"+
     "\2\0\1\30\1\0\2\30\2\0\2\30\2\0\3\30"+
     "\1\0\1\30\1\0\1\30\2\0\4\30\1\0\3\30"+
     "\1\0\1\30\1\0\3\30\1\0\2\30\1\0\4\30"+
-    "\1\0\2\30\2\0\10\30\1\0\2\30\1\0\11\30"+
-    "\1\0\10\30\1\0\13\30\1\73\1\0\1\30\1\0"+
+    "\1\0\2\30\2\0\10\30\1\0\2\30\1\0\10\30"+
+    "\1\31\1\0\7\30\1\0\10\30\1\0\6\30\1\0"+
     "\1\30\1\0\2\30\2\0\1\30\1\0\1\30\3\0"+
-    "\1\30\113\0\1\30\26\0\2\30\23\0\1\73\1\30"+
-    "\44\0\1\30\21\0\1\73\142\0\1\73\11\0\1\30"+
-    "\15\0\4\30\2\0\2\30\14\0\4\30\1\0\2\30"+
-    "\11\0\3\30\3\0\1\30\1\0\1\30\4\0\3\30"+
-    "\5\0\4\30\2\0\2\30\12\0\4\73\1\0\2\30"+
-    "\1\0\1\30\7\0\1\30\133\0\1\30\3\0\2\30"+
+    "\3\30\130\0\1\30\17\0\1\30\23\0\1\30\23\0"+
+    "\1\30\6\0\3\30\37\0\1\30\7\0\1\30\122\0"+
+    "\1\30\1\0\2\30\1\0\1\30\1\0\4\30\1\0"+
+    "\1\30\1\0\1\30\1\0\2\30\1\0\3\30\1\0"+
+    "\2\30\1\0\4\30\1\0\3\30\1\0\17\30\1\0"+
+    "\2\30\1\0\21\30\1\0\2\30\1\0\41\30\1\0"+
+    "\1\30\1\0\2\30\2\0\1\30\1\0\1\30\1\0"+
+    "\1\30\1\0\3\30\130\0\1\30\3\0\2\30\12\0"+
+    "\2\30\13\0\1\30\6\0\1\30\2\0\2\30\6\0"+
+    "\1\30\4\0\2\30\2\0\2\30\5\0\3\30\20\0"+
+    "\1\30\16\0\1\30\7\0\1\30\122\0\1\30\1\0"+
+    "\2\30\1\0\1\30\2\0\2\30\2\0\1\30\3\0"+
+    "\2\30\1\0\3\30\1\0\2\30\1\0\4\30\1\0"+
+    "\3\30\1\0\1\30\1\0\2\30\2\0\11\30\1\0"+
+    "\2\30\1\0\1\30\1\0\2\30\1\0\14\30\1\0"+
+    "\2\30\1\0\10\30\1\0\2\30\1\0\1\30\1\0"+
+    "\23\30\1\0\1\30\1\0\2\30\2\0\1\30\1\0"+
+    "\1\30\1\0\1\30\1\0\3\30\114\0\1\30\26\0"+
+    "\2\30\23\0\1\31\1\30\40\0\1\31\173\0\1\31"+
+    "\27\0\4\30\2\0\2\30\14\0\3\30\15\0\3\30"+
+    "\3\0\1\30\7\0\2\30\1\0\4\31\1\0\2\30"+
+    "\13\0\1\30\23\0\1\30\136\0\1\30\3\0\2\30"+
     "\12\0\2\30\1\0\3\30\7\0\1\30\6\0\2\30"+
     "\1\0\2\30\6\0\1\30\4\0\2\30\2\0\2\30"+
-    "\5\0\3\30\10\0\1\30\16\0\1\30\4\0\2\73"+
-    "\1\0\1\30\7\0\1\30\117\0\1\30\4\0\1\30"+
+    "\5\0\3\30\2\0\1\30\3\0\2\31\10\0\1\30"+
+    "\16\0\1\30\7\0\1\30\122\0\1\30\4\0\1\30"+
     "\6\0\1\30\3\0\1\30\6\0\1\30\5\0\1\30"+
     "\2\0\2\30\1\0\17\30\2\0\1\30\13\0\7\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\2\0\1\30"+
-    "\1\0\1\30\1\0\1\30\1\0\1\30\4\0\1\30"+
-    "\1\0\2\30\5\0\1\30\1\0\1\30\2\0\3\30"+
-    "\1\0\1\30\7\0\1\30\1\0\1\30\122\0\1\30"+
+    "\2\0\1\30\1\0\1\30\1\0\2\30\2\0\1\30"+
+    "\1\0\3\30\2\0\1\30\1\0\1\30\1\0\1\30"+
+    "\1\0\1\30\6\0\2\30\6\0\1\30\7\0\1\30"+
+    "\1\0\1\30\134\0\1\30\17\0\2\30\22\0\1\30"+
+    "\2\0\2\30\13\0\1\30\3\0\2\30\5\0\3\30"+
+    "\20\0\1\30\16\0\1\30\7\0\1\30\127\0\1\30"+
     "\6\0\1\30\3\0\1\30\3\0\1\30\7\0\1\30"+
-    "\31\0\20\30\5\0\3\30\3\0\1\30\3\0\2\30"+
-    "\2\0\2\30\4\0\5\30\4\0\1\30\4\0\1\30"+
+    "\31\0\20\30\5\0\3\30\4\0\1\30\6\0\1\30"+
+    "\3\0\2\30\2\0\2\30\4\0\1\30\5\0\1\30"+
     "\2\0\1\30\4\0\1\30\1\0\1\30\1\0\1\30"+
-    "\223\0\2\30\15\0\4\30\154\0\1\30\15\0\2\30"+
-    "\10\0\2\30\1\0\1\30\1\0\1\30\11\0\1\30"+
-    "\11\0\2\30\6\0\1\30\2\0\4\30\3\0\1\30"+
-    "\2\0\2\30\1\0\3\30\5\0\1\30\1\0\2\30"+
-    "\2\0\2\30\1\0\4\30\5\0\1\30\1\0\2\30"+
-    "\133\0\1\53\1\0\1\54\2\0\1\211\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\212\2\0\1\213\4\0\1\65\3\0\1\214"+
-    "\17\0\1\67\2\0\1\215\21\0\1\216\2\0\1\217"+
-    "\57\0\1\30\2\73\2\0\2\220\1\75\1\0\1\73"+
-    "\2\0\1\30\1\220\32\30\1\0\12\73\2\0\1\75"+
-    "\2\0\2\220\6\0\1\220\11\0\1\53\1\0\1\54"+
-    "\2\0\1\221\1\0\1\222\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\223\2\0\1\224"+
-    "\4\0\1\225\3\0\1\226\17\0\1\67\2\0\1\227"+
-    "\21\0\1\230\2\0\1\231\57\0\1\30\1\74\7\0"+
-    "\1\74\2\0\1\30\1\0\32\30\42\0\1\53\1\0"+
-    "\1\54\2\0\1\232\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\233\2\0"+
-    "\1\234\4\0\1\65\3\0\1\235\17\0\1\67\2\0"+
-    "\1\236\21\0\1\237\2\0\1\240\41\0\1\130\15\0"+
-    "\1\30\1\75\1\73\1\132\3\0\1\75\1\0\1\75"+
-    "\2\0\1\30\1\0\32\30\1\0\12\73\2\0\1\75"+
-    "\32\0\1\30\4\0\1\30\11\0\1\30\22\0\1\30"+
-    "\3\0\1\30\13\0\1\31\2\0\1\31\10\0\1\30"+
-    "\12\0\4\31\45\0\1\30\115\0\1\30\26\0\2\30"+
-    "\23\0\1\31\1\30\44\0\1\31\21\0\1\31\142\0"+
-    "\1\31\11\0\1\31\15\0\4\30\2\0\2\30\14\0"+
-    "\3\30\1\31\1\0\2\31\11\0\3\30\3\0\1\30"+
-    "\1\0\1\31\4\0\1\31\2\30\5\0\4\31\2\0"+
-    "\1\30\1\31\12\0\4\31\1\0\2\30\1\0\1\31"+
-    "\7\0\1\30\117\0\1\30\4\0\1\30\6\0\1\30"+
+    "\231\0\1\36\41\0\1\32\134\0\1\35\6\0\1\35"+
+    "\2\0\1\35\3\0\2\35\10\0\4\35\1\0\3\35"+
+    "\1\0\1\35\2\0\1\35\2\0\1\35\4\0\4\35"+
+    "\1\0\2\35\6\0\1\35\2\0\4\35\2\0\3\35"+
+    "\1\0\2\35\1\0\3\35\1\0\4\35\1\0\2\35"+
+    "\5\0\4\35\2\0\10\35\4\0\1\35\1\0\2\35"+
+    "\4\0\1\35\3\0\3\35\114\0\1\35\1\0\2\35"+
+    "\1\0\1\35\1\0\4\35\1\0\1\35\1\0\1\35"+
+    "\1\0\2\35\1\0\3\35\1\0\2\35\1\0\4\35"+
+    "\1\0\3\35\1\0\17\35\1\0\2\35\1\0\21\35"+
+    "\1\0\2\35\1\0\41\35\1\0\1\35\1\0\2\35"+
+    "\2\0\1\35\1\0\1\35\1\0\1\35\1\0\3\35"+
+    "\114\0\1\35\1\0\2\35\1\0\1\35\1\0\4\35"+
+    "\1\0\1\35\1\0\1\35\1\0\2\35\2\0\1\35"+
+    "\2\0\2\35\1\0\4\35\1\0\3\35\1\0\17\35"+
+    "\1\0\2\35\1\0\21\35\1\0\2\35\1\0\41\35"+
+    "\1\0\1\35\1\0\2\35\2\0\1\35\1\0\1\35"+
+    "\1\0\1\35\1\0\3\35\130\0\1\35\17\0\1\35"+
+    "\23\0\1\35\32\0\1\35\41\0\1\35\7\0\1\35"+
+    "\122\0\1\35\1\0\2\35\3\0\4\35\1\0\1\35"+
+    "\1\0\1\35\1\0\2\35\1\0\3\35\1\0\2\35"+
+    "\1\0\4\35\1\0\3\35\1\0\10\35\1\0\6\35"+
+    "\1\0\2\35\1\0\21\35\1\0\2\35\1\0\41\35"+
+    "\1\0\1\35\1\0\2\35\2\0\1\35\1\0\1\35"+
+    "\1\0\1\35\1\0\3\35\257\0\1\54\25\0\1\36"+
+    "\2\54\113\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\76\1\0\1\41\1\30"+
+    "\1\76\32\30\1\0\12\75\1\76\1\0\1\77\22\0"+
+    "\1\55\1\0\1\56\2\0\1\100\1\0\1\101\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\102\2\0\1\103\4\0\1\104\3\0\1\105\17\0"+
+    "\1\71\2\0\1\106\21\0\1\107\2\0\1\110\61\0"+
+    "\1\30\2\31\2\0\2\111\1\112\1\0\1\31\2\0"+
+    "\1\111\1\0\1\41\1\30\1\111\32\30\1\0\12\31"+
+    "\2\0\1\112\2\0\1\111\6\0\1\111\15\0\1\113"+
+    "\21\0\1\114\2\0\1\115\10\0\1\116\22\0\1\117"+
+    "\21\0\1\120\2\0\1\121\41\0\1\122\20\0\1\32"+
+    "\1\0\1\123\3\0\1\124\1\0\1\32\56\0\1\124"+
+    "\22\0\1\55\1\0\1\56\2\0\1\125\1\0\1\101"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\126\2\0\1\127\4\0\1\104\3\0\1\130"+
+    "\17\0\1\71\2\0\1\131\21\0\1\132\2\0\1\133"+
+    "\41\0\1\134\17\0\1\30\1\135\1\31\1\136\3\0"+
+    "\1\135\1\0\1\135\4\0\1\41\1\30\1\0\32\30"+
+    "\1\0\12\31\2\0\1\135\227\0\2\34\106\0\1\137"+
+    "\21\0\1\140\2\0\1\141\10\0\1\142\22\0\1\143"+
+    "\21\0\1\144\2\0\1\145\62\0\1\35\7\0\1\35"+
+    "\106\0\1\146\21\0\1\147\2\0\1\150\10\0\1\151"+
+    "\22\0\1\152\21\0\1\153\2\0\1\154\62\0\1\36"+
+    "\7\0\1\36\312\0\1\155\3\0\1\156\45\155\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\160\1\161\2\0\65\160\1\162\1\0"+
+    "\2\160\2\0\1\55\1\0\1\56\2\0\1\163\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\164\2\0\1\165\4\0\1\67\3\0"+
+    "\1\166\17\0\1\71\2\0\1\167\21\0\1\170\2\0"+
+    "\1\171\61\0\1\30\1\41\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\41\2\0\1\30\1\172\1\41"+
+    "\1\30\1\76\32\30\1\0\12\75\1\76\1\0\1\77"+
+    "\22\0\1\55\1\0\1\56\2\0\1\173\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\174\2\0\1\175\4\0\1\67\3\0\1\176"+
+    "\17\0\1\71\2\0\1\177\21\0\1\200\2\0\1\201"+
+    "\61\0\1\30\1\42\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\42\2\0\1\76\1\0\1\41\1\42"+
+    "\1\76\32\30\1\0\12\75\1\76\1\0\1\77\22\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\32\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\10\43\1\207"+
+    "\6\43\1\210\12\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\1\211\31\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\17\43\1\212\12\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\100"+
+    "\1\0\1\101\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\102\2\0\1\103\4\0\1\104"+
+    "\3\0\1\105\17\0\1\71\2\0\1\106\21\0\1\107"+
+    "\2\0\1\110\61\0\1\30\2\31\2\0\2\111\1\112"+
+    "\1\0\1\31\2\0\1\213\1\0\1\41\1\30\1\214"+
+    "\32\43\1\204\12\215\1\0\1\155\1\216\1\155\1\0"+
+    "\1\213\1\157\3\155\2\0\1\111\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\100\1\0\1\101"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\102\2\0\1\103\4\0\1\104\3\0\1\105"+
+    "\17\0\1\71\2\0\1\106\21\0\1\107\2\0\1\110"+
+    "\61\0\1\30\2\31\2\0\2\111\1\112\1\0\1\31"+
+    "\2\0\1\213\1\0\1\41\1\30\1\214\32\43\1\204"+
+    "\12\47\1\0\1\155\1\216\1\155\1\0\1\213\1\157"+
+    "\3\155\2\0\1\111\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\100\1\0\1\101\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\102"+
+    "\2\0\1\103\4\0\1\104\3\0\1\105\17\0\1\71"+
+    "\2\0\1\106\21\0\1\107\2\0\1\110\61\0\1\30"+
+    "\2\31\2\0\2\111\1\112\1\0\1\31\2\0\1\213"+
+    "\1\0\1\41\1\30\1\214\32\43\1\204\2\47\1\215"+
+    "\1\47\1\217\2\215\2\47\1\215\1\0\1\155\1\216"+
+    "\1\155\1\0\1\213\1\157\3\155\2\0\1\111\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\125"+
+    "\1\0\1\101\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\126\2\0\1\127\4\0\1\104"+
+    "\3\0\1\130\17\0\1\71\2\0\1\131\21\0\1\132"+
+    "\2\0\1\133\41\0\1\134\17\0\1\30\1\135\1\31"+
+    "\1\136\3\0\1\135\1\0\1\135\2\0\1\155\1\0"+
+    "\1\41\1\30\1\156\32\220\1\155\12\221\1\0\1\155"+
+    "\1\222\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\220\0\4\223\2\0\1\223\15\0\1\223"+
+    "\6\0\12\223\1\224\31\0\1\225\21\0\1\226\2\0"+
+    "\1\227\10\0\1\230\22\0\1\231\21\0\1\232\2\0"+
+    "\1\233\55\0\1\234\4\0\1\54\7\0\1\54\107\0"+
+    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
+    "\1\30\13\0\1\30\2\0\1\30\10\0\1\30\22\0"+
+    "\4\30\35\0\1\30\123\0\1\30\3\0\4\30\1\0"+
+    "\1\30\1\0\1\75\2\0\1\30\1\0\2\30\2\0"+
+    "\2\30\2\0\3\30\1\0\1\30\1\0\1\30\2\0"+
+    "\4\30\1\0\3\30\1\0\1\30\1\0\3\30\1\0"+
+    "\2\30\1\0\4\30\1\0\2\30\2\0\10\30\1\0"+
+    "\2\30\1\0\10\30\1\75\1\0\7\30\1\0\10\30"+
+    "\1\0\6\30\1\0\1\30\1\0\2\30\2\0\1\30"+
+    "\1\0\1\30\3\0\3\30\114\0\1\30\26\0\2\30"+
+    "\23\0\1\75\1\30\40\0\1\75\13\0\1\30\157\0"+
+    "\1\75\11\0\1\30\15\0\4\30\2\0\2\30\14\0"+
+    "\4\30\1\0\2\30\11\0\3\30\3\0\1\30\1\0"+
+    "\1\30\4\0\3\30\1\0\4\75\1\0\2\30\5\0"+
+    "\4\30\2\0\2\30\12\0\1\30\7\0\1\30\136\0"+
+    "\1\30\3\0\2\30\12\0\2\30\1\0\3\30\7\0"+
+    "\1\30\6\0\2\30\1\0\2\30\6\0\1\30\4\0"+
+    "\2\30\2\0\2\30\5\0\3\30\2\0\1\30\3\0"+
+    "\2\75\10\0\1\30\16\0\1\30\7\0\1\30\122\0"+
+    "\1\30\4\0\1\30\6\0\1\30\3\0\1\30\6\0"+
+    "\1\30\5\0\1\30\2\0\2\30\1\0\17\30\2\0"+
+    "\1\30\13\0\7\30\2\0\1\30\1\0\1\30\1\0"+
+    "\2\30\2\0\1\30\1\0\3\30\2\0\1\30\1\0"+
+    "\1\30\1\0\1\30\1\0\1\30\4\0\1\30\1\0"+
+    "\2\30\6\0\1\30\7\0\1\30\1\0\1\30\125\0"+
+    "\1\30\6\0\1\30\3\0\1\30\3\0\1\30\7\0"+
+    "\1\30\31\0\20\30\5\0\3\30\4\0\1\30\6\0"+
+    "\1\30\3\0\2\30\2\0\2\30\4\0\5\30\1\0"+
+    "\1\30\2\0\1\30\4\0\1\30\1\0\1\30\1\0"+
+    "\1\30\226\0\2\30\25\0\4\30\147\0\1\30\15\0"+
+    "\2\30\10\0\2\30\1\0\1\30\1\0\1\30\11\0"+
+    "\1\30\11\0\2\30\6\0\1\30\2\0\4\30\3\0"+
+    "\1\30\2\0\2\30\1\0\3\30\1\0\2\30\1\0"+
+    "\1\30\10\0\1\30\1\0\2\30\2\0\2\30\1\0"+
+    "\4\30\23\0\1\30\113\0\1\55\1\0\1\56\2\0"+
+    "\1\235\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\236\2\0\1\237\4\0"+
+    "\1\67\3\0\1\240\17\0\1\71\2\0\1\241\21\0"+
+    "\1\242\2\0\1\243\61\0\1\30\2\75\2\0\2\244"+
+    "\1\245\1\0\1\75\2\0\1\244\1\0\1\41\1\30"+
+    "\1\244\32\30\1\0\12\75\2\0\1\245\2\0\1\244"+
+    "\6\0\1\244\10\0\1\55\1\0\1\56\2\0\1\246"+
+    "\1\0\1\247\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\250\2\0\1\251\4\0\1\252"+
+    "\3\0\1\253\17\0\1\71\2\0\1\254\21\0\1\255"+
+    "\2\0\1\256\61\0\1\30\1\76\2\0\1\76\1\0"+
+    "\2\76\1\0\1\76\2\0\1\76\1\0\2\30\1\76"+
+    "\32\30\13\0\1\76\1\0\1\76\22\0\1\55\1\0"+
+    "\1\56\2\0\1\257\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\260\2\0"+
+    "\1\261\4\0\1\67\3\0\1\262\17\0\1\71\2\0"+
+    "\1\263\21\0\1\264\2\0\1\265\41\0\1\134\17\0"+
+    "\1\30\1\77\1\75\1\136\1\76\1\0\1\76\1\77"+
+    "\1\0\1\77\2\0\1\76\1\0\1\41\1\30\1\76"+
+    "\32\30\1\0\12\75\1\76\1\0\1\77\30\0\1\30"+
+    "\4\0\1\30\11\0\1\30\22\0\1\30\3\0\1\30"+
+    "\13\0\1\31\2\0\1\31\10\0\1\30\22\0\4\31"+
+    "\35\0\1\30\120\0\1\30\26\0\2\30\23\0\1\31"+
+    "\1\30\40\0\1\31\13\0\1\31\157\0\1\31\11\0"+
+    "\1\31\15\0\4\30\2\0\2\30\14\0\3\30\1\31"+
+    "\1\0\2\31\11\0\3\30\3\0\1\30\1\0\1\31"+
+    "\4\0\1\31\2\30\1\0\4\31\1\0\2\30\5\0"+
+    "\4\31\2\0\1\30\1\31\12\0\1\31\7\0\1\30"+
+    "\122\0\1\30\4\0\1\30\6\0\1\30\3\0\1\30"+
+    "\6\0\1\30\5\0\1\30\2\0\2\30\1\0\17\30"+
+    "\2\0\1\30\13\0\7\30\2\0\1\30\1\0\1\30"+
+    "\1\0\2\30\2\0\1\30\1\0\3\30\2\0\1\30"+
+    "\1\0\1\30\1\0\1\30\1\0\1\30\4\0\1\31"+
+    "\1\0\2\30\6\0\1\30\7\0\1\30\1\0\1\30"+
+    "\125\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
+    "\7\0\1\30\31\0\20\30\5\0\3\30\4\0\1\30"+
+    "\6\0\1\30\3\0\2\30\2\0\2\30\4\0\1\30"+
+    "\4\31\1\0\1\30\2\0\1\30\4\0\1\30\1\0"+
+    "\1\30\1\0\1\30\226\0\2\31\25\0\4\31\147\0"+
+    "\1\31\15\0\2\31\10\0\2\31\1\0\1\31\1\0"+
+    "\1\31\11\0\1\31\11\0\2\31\6\0\1\31\2\0"+
+    "\4\31\3\0\1\31\2\0\2\31\1\0\3\31\1\0"+
+    "\2\31\1\0\1\31\10\0\1\31\1\0\2\31\2\0"+
+    "\2\31\1\0\4\31\23\0\1\31\120\0\1\266\1\0"+
+    "\1\267\17\0\1\270\2\0\1\271\4\0\1\272\3\0"+
+    "\1\273\22\0\1\274\21\0\1\275\2\0\1\276\62\0"+
+    "\1\111\1\31\2\0\3\244\1\0\1\111\2\0\1\244"+
+    "\3\0\1\244\33\0\12\31\2\0\1\244\2\0\1\244"+
+    "\6\0\1\244\10\0\1\55\1\0\1\56\2\0\1\277"+
+    "\1\0\1\101\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\300\2\0\1\301\4\0\1\104"+
+    "\3\0\1\302\17\0\1\71\2\0\1\303\21\0\1\304"+
+    "\2\0\1\305\41\0\1\134\17\0\1\30\1\112\1\31"+
+    "\1\136\1\0\2\244\1\112\1\0\1\112\2\0\1\244"+
+    "\1\0\1\41\1\30\1\244\32\30\1\0\12\31\2\0"+
+    "\1\112\2\0\1\244\6\0\1\244\100\0\1\32\2\0"+
+    "\1\32\33\0\4\32\310\0\1\32\171\0\1\32\44\0"+
+    "\1\32\1\0\2\32\21\0\1\32\4\0\1\32\17\0"+
+    "\4\32\3\0\1\32\12\0\1\32\275\0\1\32\314\0"+
+    "\4\32\244\0\2\32\25\0\4\32\147\0\1\32\15\0"+
+    "\2\32\10\0\2\32\1\0\1\32\1\0\1\32\11\0"+
+    "\1\32\11\0\2\32\6\0\1\32\2\0\4\32\3\0"+
+    "\1\32\2\0\2\32\1\0\3\32\1\0\2\32\1\0"+
+    "\1\32\10\0\1\32\1\0\2\32\2\0\2\32\1\0"+
+    "\4\32\23\0\1\32\271\0\1\123\136\0\1\306\21\0"+
+    "\1\307\2\0\1\310\10\0\1\311\22\0\1\312\21\0"+
+    "\1\313\2\0\1\314\41\0\1\122\20\0\1\123\1\0"+
+    "\1\123\5\0\1\123\101\0\1\55\1\0\1\56\2\0"+
+    "\1\315\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\316\2\0\1\317\4\0"+
+    "\1\67\3\0\1\320\17\0\1\71\2\0\1\321\21\0"+
+    "\1\322\2\0\1\323\41\0\1\134\17\0\1\30\1\124"+
+    "\1\75\1\136\3\0\1\124\1\0\1\124\4\0\1\41"+
+    "\1\30\1\0\32\30\1\0\12\75\2\0\1\124\30\0"+
+    "\1\30\4\0\1\30\11\0\1\30\22\0\1\30\3\0"+
+    "\1\30\13\0\1\135\2\0\1\135\10\0\1\30\22\0"+
+    "\4\135\35\0\1\30\120\0\1\30\26\0\2\30\23\0"+
+    "\1\31\1\30\40\0\1\31\13\0\1\135\157\0\1\31"+
+    "\11\0\1\135\15\0\4\30\2\0\2\30\14\0\3\30"+
+    "\1\135\1\0\2\135\11\0\3\30\3\0\1\30\1\0"+
+    "\1\135\4\0\1\135\2\30\1\0\4\31\1\0\2\30"+
+    "\5\0\4\135\2\0\1\30\1\135\12\0\1\135\7\0"+
+    "\1\30\122\0\1\30\4\0\1\30\6\0\1\30\3\0"+
+    "\1\30\6\0\1\30\5\0\1\30\2\0\2\30\1\0"+
+    "\17\30\2\0\1\30\13\0\7\30\2\0\1\30\1\0"+
+    "\1\30\1\0\2\30\2\0\1\30\1\0\3\30\2\0"+
+    "\1\30\1\0\1\30\1\0\1\30\1\0\1\30\4\0"+
+    "\1\135\1\0\2\30\6\0\1\30\7\0\1\30\1\0"+
+    "\1\30\125\0\1\30\6\0\1\30\3\0\1\30\3\0"+
+    "\1\30\7\0\1\30\31\0\20\30\5\0\3\30\4\0"+
+    "\1\30\6\0\1\30\3\0\2\30\2\0\2\30\4\0"+
+    "\1\30\4\135\1\0\1\30\2\0\1\30\4\0\1\30"+
+    "\1\0\1\30\1\0\1\30\226\0\2\135\25\0\4\135"+
+    "\147\0\1\135\15\0\2\135\10\0\2\135\1\0\1\135"+
+    "\1\0\1\135\11\0\1\135\11\0\2\135\6\0\1\135"+
+    "\2\0\4\135\3\0\1\135\2\0\2\135\1\0\3\135"+
+    "\1\0\2\135\1\0\1\135\10\0\1\135\1\0\2\135"+
+    "\2\0\2\135\1\0\4\135\23\0\1\135\271\0\1\136"+
+    "\136\0\1\324\21\0\1\325\2\0\1\326\10\0\1\327"+
+    "\22\0\1\330\21\0\1\331\2\0\1\332\62\0\1\136"+
+    "\5\0\1\124\1\0\1\136\56\0\1\124\112\0\1\35"+
+    "\2\0\1\35\33\0\4\35\310\0\1\35\171\0\1\35"+
+    "\44\0\1\35\1\0\2\35\21\0\1\35\4\0\1\35"+
+    "\17\0\4\35\3\0\1\35\12\0\1\35\275\0\1\35"+
+    "\314\0\4\35\244\0\2\35\25\0\4\35\147\0\1\35"+
+    "\15\0\2\35\10\0\2\35\1\0\1\35\1\0\1\35"+
+    "\11\0\1\35\11\0\2\35\6\0\1\35\2\0\4\35"+
+    "\3\0\1\35\2\0\2\35\1\0\3\35\1\0\2\35"+
+    "\1\0\1\35\10\0\1\35\1\0\2\35\2\0\2\35"+
+    "\1\0\4\35\23\0\1\35\203\0\1\36\2\0\1\36"+
+    "\33\0\4\36\310\0\1\36\171\0\1\36\44\0\1\36"+
+    "\1\0\2\36\21\0\1\36\4\0\1\36\17\0\4\36"+
+    "\3\0\1\36\12\0\1\36\275\0\1\36\314\0\4\36"+
+    "\244\0\2\36\25\0\4\36\147\0\1\36\15\0\2\36"+
+    "\10\0\2\36\1\0\1\36\1\0\1\36\11\0\1\36"+
+    "\11\0\2\36\6\0\1\36\2\0\4\36\3\0\1\36"+
+    "\2\0\2\36\1\0\3\36\1\0\2\36\1\0\1\36"+
+    "\10\0\1\36\1\0\2\36\2\0\2\36\1\0\4\36"+
+    "\23\0\1\36\324\0\1\155\1\160\2\0\1\156\45\155"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\220\0\32\333\1\0\12\333\12\0\1\334"+
+    "\227\0\1\335\53\0\1\157\227\0\2\160\2\0\72\160"+
+    "\7\0\1\30\4\0\1\30\11\0\1\30\22\0\1\30"+
+    "\3\0\1\30\13\0\1\41\2\0\1\41\10\0\1\30"+
+    "\22\0\4\41\35\0\1\30\120\0\1\30\26\0\2\30"+
+    "\23\0\1\75\1\30\40\0\1\75\13\0\1\41\157\0"+
+    "\1\75\11\0\1\41\15\0\4\30\2\0\2\30\14\0"+
+    "\3\30\1\41\1\0\2\41\11\0\3\30\3\0\1\30"+
+    "\1\0\1\41\4\0\1\41\2\30\1\0\4\75\1\0"+
+    "\2\30\5\0\4\41\2\0\1\30\1\41\12\0\1\41"+
+    "\7\0\1\30\122\0\1\30\4\0\1\30\6\0\1\30"+
     "\3\0\1\30\6\0\1\30\5\0\1\30\2\0\2\30"+
     "\1\0\17\30\2\0\1\30\13\0\7\30\2\0\1\30"+
-    "\1\0\1\30\1\0\1\30\2\0\1\30\1\0\1\30"+
-    "\1\0\1\30\1\0\1\30\4\0\1\31\1\0\2\30"+
-    "\5\0\1\30\1\0\1\30\2\0\3\30\1\0\1\30"+
-    "\7\0\1\30\1\0\1\30\122\0\1\30\6\0\1\30"+
+    "\1\0\1\30\1\0\2\30\2\0\1\30\1\0\3\30"+
+    "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
+    "\4\0\1\41\1\0\2\30\6\0\1\30\7\0\1\30"+
+    "\1\0\1\30\125\0\1\30\6\0\1\30\3\0\1\30"+
+    "\3\0\1\30\7\0\1\30\31\0\20\30\5\0\3\30"+
+    "\4\0\1\30\6\0\1\30\3\0\2\30\2\0\2\30"+
+    "\4\0\1\30\4\41\1\0\1\30\2\0\1\30\4\0"+
+    "\1\30\1\0\1\30\1\0\1\30\226\0\2\41\25\0"+
+    "\4\41\147\0\1\41\15\0\2\41\10\0\2\41\1\0"+
+    "\1\41\1\0\1\41\11\0\1\41\11\0\2\41\6\0"+
+    "\1\41\2\0\4\41\3\0\1\41\2\0\2\41\1\0"+
+    "\3\41\1\0\2\41\1\0\1\41\10\0\1\41\1\0"+
+    "\2\41\2\0\2\41\1\0\4\41\23\0\1\41\120\0"+
+    "\1\336\21\0\1\337\2\0\1\340\10\0\1\341\22\0"+
+    "\1\342\21\0\1\343\2\0\1\344\62\0\1\172\7\0"+
+    "\1\172\4\0\1\345\102\0\1\30\4\0\1\30\11\0"+
+    "\1\30\22\0\1\30\3\0\1\30\13\0\1\42\2\0"+
+    "\1\42\10\0\1\30\22\0\4\42\35\0\1\30\120\0"+
+    "\1\30\26\0\2\30\23\0\1\75\1\30\40\0\1\75"+
+    "\13\0\1\42\157\0\1\75\11\0\1\42\15\0\4\30"+
+    "\2\0\2\30\14\0\3\30\1\42\1\0\2\42\11\0"+
+    "\3\30\3\0\1\30\1\0\1\42\4\0\1\42\2\30"+
+    "\1\0\4\75\1\0\2\30\5\0\4\42\2\0\1\30"+
+    "\1\42\12\0\1\42\7\0\1\30\122\0\1\30\4\0"+
+    "\1\30\6\0\1\30\3\0\1\30\6\0\1\30\5\0"+
+    "\1\30\2\0\2\30\1\0\17\30\2\0\1\30\13\0"+
+    "\7\30\2\0\1\30\1\0\1\30\1\0\2\30\2\0"+
+    "\1\30\1\0\3\30\2\0\1\30\1\0\1\30\1\0"+
+    "\1\30\1\0\1\30\4\0\1\42\1\0\2\30\6\0"+
+    "\1\30\7\0\1\30\1\0\1\30\125\0\1\30\6\0"+
+    "\1\30\3\0\1\30\3\0\1\30\7\0\1\30\31\0"+
+    "\20\30\5\0\3\30\4\0\1\30\6\0\1\30\3\0"+
+    "\2\30\2\0\2\30\4\0\1\30\4\42\1\0\1\30"+
+    "\2\0\1\30\4\0\1\30\1\0\1\30\1\0\1\30"+
+    "\226\0\2\42\25\0\4\42\147\0\1\42\15\0\2\42"+
+    "\10\0\2\42\1\0\1\42\1\0\1\42\11\0\1\42"+
+    "\11\0\2\42\6\0\1\42\2\0\4\42\3\0\1\42"+
+    "\2\0\2\42\1\0\3\42\1\0\2\42\1\0\1\42"+
+    "\10\0\1\42\1\0\2\42\2\0\2\42\1\0\4\42"+
+    "\23\0\1\42\113\0\1\55\1\0\1\56\2\0\1\246"+
+    "\1\0\1\247\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\250\2\0\1\251\4\0\1\252"+
+    "\3\0\1\253\17\0\1\71\2\0\1\254\21\0\1\255"+
+    "\2\0\1\256\61\0\1\30\1\76\2\0\1\76\1\0"+
+    "\2\76\1\0\1\76\2\0\1\202\1\0\2\30\1\346"+
+    "\32\220\13\155\1\76\1\155\1\202\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\246\1\0\1\247\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\250"+
+    "\2\0\1\251\4\0\1\252\3\0\1\253\17\0\1\71"+
+    "\2\0\1\254\21\0\1\255\2\0\1\256\61\0\1\30"+
+    "\1\76\2\0\1\76\1\0\2\76\1\0\1\76\2\0"+
+    "\1\202\1\160\2\30\1\346\1\347\1\350\1\351\1\352"+
+    "\1\353\1\354\1\355\1\356\1\357\1\360\1\361\1\362"+
+    "\1\363\1\364\1\365\1\366\1\367\1\370\1\371\1\372"+
+    "\1\373\1\374\1\375\1\376\1\377\1\u0100\1\155\12\u0101"+
+    "\1\76\1\155\1\202\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\156"+
+    "\32\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\235\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\236\2\0"+
+    "\1\237\4\0\1\67\3\0\1\240\17\0\1\71\2\0"+
+    "\1\241\21\0\1\242\2\0\1\243\61\0\1\30\2\75"+
+    "\2\0\2\244\1\245\1\0\1\75\2\0\1\u0102\1\0"+
+    "\1\41\1\30\1\u0103\32\43\1\204\12\205\1\0\1\155"+
+    "\1\u0104\1\155\1\0\1\u0102\1\157\3\155\2\0\1\244"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\257\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\260\2\0\1\261\4\0"+
+    "\1\67\3\0\1\262\17\0\1\71\2\0\1\263\21\0"+
+    "\1\264\2\0\1\265\41\0\1\134\17\0\1\30\1\77"+
+    "\1\75\1\136\1\76\1\0\1\76\1\77\1\0\1\77"+
+    "\2\0\1\202\1\0\1\41\1\30\1\346\32\220\1\155"+
+    "\12\u0105\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\11\43\1\u0106\20\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\15\43\1\u0107"+
+    "\14\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\10\43"+
+    "\1\u0108\21\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\17\43\1\u0109\12\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\7\0\1\266\1\0\1\267\17\0\1\270\2\0"+
+    "\1\271\4\0\1\272\3\0\1\273\22\0\1\274\21\0"+
+    "\1\275\2\0\1\276\62\0\1\111\1\31\2\0\3\244"+
+    "\1\0\1\111\2\0\1\u0102\3\0\1\u010a\33\155\12\221"+
+    "\1\0\1\155\1\u0102\1\155\1\0\1\u0102\1\157\3\155"+
+    "\2\0\1\244\1\155\3\0\2\155\7\0\1\266\1\0"+
+    "\1\267\17\0\1\270\2\0\1\271\4\0\1\272\3\0"+
+    "\1\273\22\0\1\274\21\0\1\275\2\0\1\276\62\0"+
+    "\1\111\1\31\2\0\3\244\1\0\1\111\2\0\1\u0102"+
+    "\1\160\2\0\1\u010a\1\u010b\1\u010c\1\u010d\1\u010e\1\u010f"+
+    "\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116\1\u0117"+
+    "\1\u0118\1\u0119\1\u011a\1\u011b\1\u011c\1\u011d\1\u011e\1\u011f"+
+    "\1\u0120\1\u0121\1\u0122\1\u0123\1\u0124\1\155\1\u0125\1\u0126"+
+    "\5\u0125\1\u0127\1\u0126\1\u0125\1\0\1\155\1\u0102\1\155"+
+    "\1\0\1\u0102\1\157\3\155\2\0\1\244\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\100\1\0"+
+    "\1\101\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\102\2\0\1\103\4\0\1\104\3\0"+
+    "\1\105\17\0\1\71\2\0\1\106\21\0\1\107\2\0"+
+    "\1\110\61\0\1\30\2\31\2\0\2\111\1\112\1\0"+
+    "\1\31\2\0\1\213\1\0\1\41\1\30\1\214\32\43"+
+    "\1\204\12\u0128\1\0\1\155\1\216\1\155\1\0\1\213"+
+    "\1\157\3\155\2\0\1\111\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\277\1\0\1\101\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\300\2\0\1\301\4\0\1\104\3\0\1\302\17\0"+
+    "\1\71\2\0\1\303\21\0\1\304\2\0\1\305\41\0"+
+    "\1\134\17\0\1\30\1\112\1\31\1\136\1\0\2\244"+
+    "\1\112\1\0\1\112\2\0\1\u0102\1\0\1\41\1\30"+
+    "\1\u010a\32\220\1\155\12\221\1\0\1\155\1\216\1\155"+
+    "\1\0\1\u0102\1\157\3\155\2\0\1\244\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\100\1\0"+
+    "\1\101\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\102\2\0\1\103\4\0\1\104\3\0"+
+    "\1\105\17\0\1\71\2\0\1\106\21\0\1\107\2\0"+
+    "\1\110\61\0\1\30\2\31\2\0\2\111\1\112\1\0"+
+    "\1\31\2\0\1\213\1\0\1\41\1\30\1\214\32\43"+
+    "\1\204\2\215\1\u0128\2\215\2\u0128\2\215\1\u0128\1\0"+
+    "\1\155\1\216\1\155\1\0\1\213\1\157\3\155\2\0"+
+    "\1\111\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\346\32\220\1\155\12\u0105\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\100\1\0\1\101\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\102\2\0\1\103\4\0"+
+    "\1\104\3\0\1\105\17\0\1\71\2\0\1\106\21\0"+
+    "\1\107\2\0\1\110\61\0\1\30\2\31\2\0\2\111"+
+    "\1\112\1\0\1\31\2\0\1\213\1\0\1\41\1\30"+
+    "\1\u0129\32\220\1\155\12\221\1\0\1\155\1\216\1\155"+
+    "\1\0\1\213\1\157\3\155\2\0\1\111\1\155\3\0"+
+    "\2\155\220\0\4\u012a\2\0\1\u012a\15\0\1\u012a\6\0"+
+    "\12\u012a\1\u012b\307\0\1\u012c\114\0\1\54\2\0\1\54"+
+    "\33\0\4\54\310\0\1\54\171\0\1\54\44\0\1\54"+
+    "\1\0\2\54\21\0\1\54\4\0\1\54\17\0\4\54"+
+    "\3\0\1\54\12\0\1\54\275\0\1\54\314\0\4\54"+
+    "\244\0\2\54\25\0\4\54\147\0\1\54\15\0\2\54"+
+    "\10\0\2\54\1\0\1\54\1\0\1\54\11\0\1\54"+
+    "\11\0\2\54\6\0\1\54\2\0\4\54\3\0\1\54"+
+    "\2\0\2\54\1\0\3\54\1\0\2\54\1\0\1\54"+
+    "\10\0\1\54\1\0\2\54\2\0\2\54\1\0\4\54"+
+    "\23\0\1\54\257\0\1\u012d\26\0\2\u012d\121\0\1\30"+
+    "\4\0\1\30\11\0\1\30\22\0\1\30\3\0\1\30"+
+    "\13\0\1\75\2\0\1\75\10\0\1\30\22\0\4\75"+
+    "\35\0\1\30\120\0\1\30\26\0\2\30\23\0\1\75"+
+    "\1\30\40\0\1\75\13\0\1\75\157\0\1\75\11\0"+
+    "\1\75\15\0\4\30\2\0\2\30\14\0\3\30\1\75"+
+    "\1\0\2\75\11\0\3\30\3\0\1\30\1\0\1\75"+
+    "\4\0\1\75\2\30\1\0\4\75\1\0\2\30\5\0"+
+    "\4\75\2\0\1\30\1\75\12\0\1\75\7\0\1\30"+
+    "\122\0\1\30\4\0\1\30\6\0\1\30\3\0\1\30"+
+    "\6\0\1\30\5\0\1\30\2\0\2\30\1\0\17\30"+
+    "\2\0\1\30\13\0\7\30\2\0\1\30\1\0\1\30"+
+    "\1\0\2\30\2\0\1\30\1\0\3\30\2\0\1\30"+
+    "\1\0\1\30\1\0\1\30\1\0\1\30\4\0\1\75"+
+    "\1\0\2\30\6\0\1\30\7\0\1\30\1\0\1\30"+
+    "\125\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
+    "\7\0\1\30\31\0\20\30\5\0\3\30\4\0\1\30"+
+    "\6\0\1\30\3\0\2\30\2\0\2\30\4\0\1\30"+
+    "\4\75\1\0\1\30\2\0\1\30\4\0\1\30\1\0"+
+    "\1\30\1\0\1\30\226\0\2\75\25\0\4\75\147\0"+
+    "\1\75\15\0\2\75\10\0\2\75\1\0\1\75\1\0"+
+    "\1\75\11\0\1\75\11\0\2\75\6\0\1\75\2\0"+
+    "\4\75\3\0\1\75\2\0\2\75\1\0\3\75\1\0"+
+    "\2\75\1\0\1\75\10\0\1\75\1\0\2\75\2\0"+
+    "\2\75\1\0\4\75\23\0\1\75\120\0\1\u012e\1\0"+
+    "\1\u012f\17\0\1\u0130\2\0\1\u0131\4\0\1\u0132\3\0"+
+    "\1\u0133\22\0\1\u0134\21\0\1\u0135\2\0\1\u0136\62\0"+
+    "\1\244\1\75\2\0\3\244\1\0\1\244\2\0\1\244"+
+    "\3\0\1\244\33\0\12\75\2\0\1\244\2\0\1\244"+
+    "\6\0\1\244\10\0\1\55\1\0\1\56\2\0\1\u0137"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\u0138\2\0\1\u0139\4\0\1\67"+
+    "\3\0\1\u013a\17\0\1\71\2\0\1\u013b\21\0\1\u013c"+
+    "\2\0\1\u013d\41\0\1\134\17\0\1\30\1\245\1\75"+
+    "\1\136\1\0\2\244\1\245\1\0\1\245\2\0\1\244"+
+    "\1\0\1\41\1\30\1\244\32\30\1\0\12\75\2\0"+
+    "\1\245\2\0\1\244\6\0\1\244\16\0\1\30\4\0"+
+    "\1\30\11\0\1\30\22\0\1\30\3\0\1\30\13\0"+
+    "\1\76\2\0\1\76\10\0\1\30\22\0\4\76\35\0"+
+    "\1\30\123\0\1\30\3\0\4\30\1\0\1\30\4\0"+
+    "\1\30\1\0\2\30\2\0\2\30\2\0\3\30\1\0"+
+    "\1\30\1\0\1\30\2\0\4\30\1\0\3\30\1\0"+
+    "\1\30\1\0\3\30\1\0\2\30\1\0\4\30\1\0"+
+    "\2\30\2\0\10\30\1\0\2\30\1\0\10\30\2\0"+
+    "\7\30\1\0\10\30\1\0\6\30\1\0\1\30\1\0"+
+    "\2\30\2\0\1\30\1\0\1\30\3\0\3\30\114\0"+
+    "\1\30\26\0\2\30\24\0\1\30\54\0\1\76\171\0"+
+    "\1\76\15\0\4\30\2\0\2\30\14\0\3\30\1\76"+
+    "\1\0\2\76\11\0\3\30\3\0\1\30\1\0\1\76"+
+    "\4\0\1\76\2\30\6\0\2\30\5\0\4\76\2\0"+
+    "\1\30\1\76\12\0\1\76\7\0\1\30\136\0\1\30"+
+    "\3\0\2\30\12\0\2\30\1\0\3\30\7\0\1\30"+
+    "\6\0\2\30\1\0\2\30\6\0\1\30\4\0\2\30"+
+    "\2\0\2\30\5\0\3\30\2\0\1\30\15\0\1\30"+
+    "\16\0\1\30\7\0\1\30\122\0\1\30\4\0\1\30"+
+    "\6\0\1\30\3\0\1\30\6\0\1\30\5\0\1\30"+
+    "\2\0\2\30\1\0\17\30\2\0\1\30\13\0\7\30"+
+    "\2\0\1\30\1\0\1\30\1\0\2\30\2\0\1\30"+
+    "\1\0\3\30\2\0\1\30\1\0\1\30\1\0\1\30"+
+    "\1\0\1\30\4\0\1\76\1\0\2\30\6\0\1\30"+
+    "\7\0\1\30\1\0\1\30\125\0\1\30\6\0\1\30"+
     "\3\0\1\30\3\0\1\30\7\0\1\30\31\0\20\30"+
-    "\5\0\3\30\3\0\1\30\3\0\2\30\2\0\2\30"+
-    "\4\0\1\30\4\31\4\0\1\30\4\0\1\30\2\0"+
-    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\223\0"+
-    "\2\31\15\0\4\31\154\0\1\31\15\0\2\31\10\0"+
-    "\2\31\1\0\1\31\1\0\1\31\11\0\1\31\11\0"+
-    "\2\31\6\0\1\31\2\0\4\31\3\0\1\31\2\0"+
-    "\2\31\1\0\3\31\5\0\1\31\1\0\2\31\2\0"+
-    "\2\31\1\0\4\31\5\0\1\31\1\0\2\31\140\0"+
-    "\1\241\1\0\1\242\17\0\1\243\2\0\1\244\4\0"+
-    "\1\245\3\0\1\246\22\0\1\247\21\0\1\250\2\0"+
-    "\1\251\60\0\1\107\1\31\6\0\1\107\37\0\12\31"+
-    "\27\0\1\53\1\0\1\54\2\0\1\252\1\0\1\77"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\253\2\0\1\254\4\0\1\102\3\0\1\255"+
-    "\17\0\1\67\2\0\1\256\21\0\1\257\2\0\1\260"+
-    "\41\0\1\130\15\0\1\30\1\110\1\31\1\132\3\0"+
-    "\1\110\1\0\1\110\2\0\1\30\1\0\32\30\1\0"+
-    "\12\31\2\0\1\110\114\0\1\32\2\0\1\32\23\0"+
-    "\4\32\305\0\1\32\176\0\1\32\44\0\1\32\1\0"+
-    "\2\32\21\0\1\32\4\0\1\32\7\0\4\32\3\0"+
-    "\1\32\22\0\1\32\262\0\1\32\311\0\4\32\251\0"+
-    "\2\32\15\0\4\32\154\0\1\32\15\0\2\32\10\0"+
-    "\2\32\1\0\1\32\1\0\1\32\11\0\1\32\11\0"+
-    "\2\32\6\0\1\32\2\0\4\32\3\0\1\32\2\0"+
-    "\2\32\1\0\3\32\5\0\1\32\1\0\2\32\2\0"+
-    "\2\32\1\0\4\32\5\0\1\32\1\0\2\32\311\0"+
-    "\1\32\134\0\1\30\4\0\1\30\11\0\1\30\22\0"+
-    "\1\30\3\0\1\30\13\0\1\131\2\0\1\131\10\0"+
-    "\1\30\12\0\4\131\45\0\1\30\115\0\1\30\26\0"+
-    "\2\30\23\0\1\31\1\30\44\0\1\131\21\0\1\31"+
-    "\142\0\1\31\11\0\1\131\15\0\4\30\2\0\2\30"+
-    "\14\0\3\30\1\131\1\0\2\131\11\0\3\30\3\0"+
-    "\1\30\1\0\1\131\4\0\1\131\2\30\5\0\4\131"+
-    "\2\0\1\30\1\131\12\0\4\31\1\0\2\30\1\0"+
-    "\1\131\7\0\1\30\117\0\1\30\4\0\1\30\6\0"+
+    "\5\0\3\30\4\0\1\30\6\0\1\30\3\0\2\30"+
+    "\2\0\2\30\4\0\1\30\4\76\1\0\1\30\2\0"+
+    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\226\0"+
+    "\2\76\25\0\4\76\147\0\1\76\15\0\2\76\10\0"+
+    "\2\76\1\0\1\76\1\0\1\76\11\0\1\76\11\0"+
+    "\2\76\6\0\1\76\2\0\4\76\3\0\1\76\2\0"+
+    "\2\76\1\0\3\76\1\0\2\76\1\0\1\76\10\0"+
+    "\1\76\1\0\2\76\2\0\2\76\1\0\4\76\23\0"+
+    "\1\76\121\0\1\30\4\0\1\30\11\0\1\30\22\0"+
+    "\1\30\3\0\1\30\13\0\1\77\2\0\1\77\10\0"+
+    "\1\30\22\0\4\77\35\0\1\30\120\0\1\30\26\0"+
+    "\2\30\23\0\1\75\1\30\40\0\1\75\13\0\1\77"+
+    "\157\0\1\75\11\0\1\77\15\0\4\30\2\0\2\30"+
+    "\14\0\3\30\1\77\1\0\2\77\11\0\3\30\3\0"+
+    "\1\30\1\0\1\77\4\0\1\77\2\30\1\0\4\75"+
+    "\1\0\2\30\5\0\4\77\2\0\1\30\1\77\12\0"+
+    "\1\77\7\0\1\30\122\0\1\30\4\0\1\30\6\0"+
     "\1\30\3\0\1\30\6\0\1\30\5\0\1\30\2\0"+
     "\2\30\1\0\17\30\2\0\1\30\13\0\7\30\2\0"+
-    "\1\30\1\0\1\30\1\0\1\30\2\0\1\30\1\0"+
-    "\1\30\1\0\1\30\1\0\1\30\4\0\1\131\1\0"+
-    "\2\30\5\0\1\30\1\0\1\30\2\0\3\30\1\0"+
-    "\1\30\7\0\1\30\1\0\1\30\122\0\1\30\6\0"+
-    "\1\30\3\0\1\30\3\0\1\30\7\0\1\30\31\0"+
-    "\20\30\5\0\3\30\3\0\1\30\3\0\2\30\2\0"+
-    "\2\30\4\0\1\30\4\131\4\0\1\30\4\0\1\30"+
-    "\2\0\1\30\4\0\1\30\1\0\1\30\1\0\1\30"+
-    "\223\0\2\131\15\0\4\131\154\0\1\131\15\0\2\131"+
-    "\10\0\2\131\1\0\1\131\1\0\1\131\11\0\1\131"+
-    "\11\0\2\131\6\0\1\131\2\0\4\131\3\0\1\131"+
-    "\2\0\2\131\1\0\3\131\5\0\1\131\1\0\2\131"+
-    "\2\0\2\131\1\0\4\131\5\0\1\131\1\0\2\131"+
-    "\311\0\1\132\133\0\1\261\21\0\1\262\2\0\1\263"+
-    "\10\0\1\264\22\0\1\265\21\0\1\266\2\0\1\267"+
-    "\41\0\1\130\16\0\1\132\1\0\1\132\3\0\1\75"+
-    "\1\0\1\132\53\0\1\75\114\0\1\35\2\0\1\35"+
-    "\23\0\4\35\305\0\1\35\176\0\1\35\44\0\1\35"+
-    "\1\0\2\35\21\0\1\35\4\0\1\35\7\0\4\35"+
-    "\3\0\1\35\22\0\1\35\262\0\1\35\311\0\4\35"+
-    "\251\0\2\35\15\0\4\35\154\0\1\35\15\0\2\35"+
-    "\10\0\2\35\1\0\1\35\1\0\1\35\11\0\1\35"+
-    "\11\0\2\35\6\0\1\35\2\0\4\35\3\0\1\35"+
-    "\2\0\2\35\1\0\3\35\5\0\1\35\1\0\2\35"+
-    "\2\0\2\35\1\0\4\35\5\0\1\35\1\0\2\35"+
-    "\223\0\1\36\2\0\1\36\23\0\4\36\305\0\1\36"+
-    "\176\0\1\36\44\0\1\36\1\0\2\36\21\0\1\36"+
-    "\4\0\1\36\7\0\4\36\3\0\1\36\22\0\1\36"+
-    "\262\0\1\36\311\0\4\36\251\0\2\36\15\0\4\36"+
-    "\154\0\1\36\15\0\2\36\10\0\2\36\1\0\1\36"+
-    "\1\0\1\36\11\0\1\36\11\0\2\36\6\0\1\36"+
-    "\2\0\4\36\3\0\1\36\2\0\2\36\1\0\3\36"+
-    "\5\0\1\36\1\0\2\36\2\0\2\36\1\0\4\36"+
-    "\5\0\1\36\1\0\2\36\141\0\1\30\4\0\1\30"+
-    "\11\0\1\30\22\0\1\30\3\0\1\30\13\0\1\37"+
-    "\2\0\1\37\10\0\1\30\12\0\4\37\45\0\1\30"+
-    "\115\0\1\30\26\0\2\30\23\0\1\73\1\30\44\0"+
-    "\1\37\21\0\1\73\142\0\1\73\11\0\1\37\15\0"+
-    "\4\30\2\0\2\30\14\0\3\30\1\37\1\0\2\37"+
-    "\11\0\3\30\3\0\1\30\1\0\1\37\4\0\1\37"+
-    "\2\30\5\0\4\37\2\0\1\30\1\37\12\0\4\73"+
-    "\1\0\2\30\1\0\1\37\7\0\1\30\117\0\1\30"+
+    "\1\30\1\0\1\30\1\0\2\30\2\0\1\30\1\0"+
+    "\3\30\2\0\1\30\1\0\1\30\1\0\1\30\1\0"+
+    "\1\30\4\0\1\77\1\0\2\30\6\0\1\30\7\0"+
+    "\1\30\1\0\1\30\125\0\1\30\6\0\1\30\3\0"+
+    "\1\30\3\0\1\30\7\0\1\30\31\0\20\30\5\0"+
+    "\3\30\4\0\1\30\6\0\1\30\3\0\2\30\2\0"+
+    "\2\30\4\0\1\30\4\77\1\0\1\30\2\0\1\30"+
+    "\4\0\1\30\1\0\1\30\1\0\1\30\226\0\2\77"+
+    "\25\0\4\77\147\0\1\77\15\0\2\77\10\0\2\77"+
+    "\1\0\1\77\1\0\1\77\11\0\1\77\11\0\2\77"+
+    "\6\0\1\77\2\0\4\77\3\0\1\77\2\0\2\77"+
+    "\1\0\3\77\1\0\2\77\1\0\1\77\10\0\1\77"+
+    "\1\0\2\77\2\0\2\77\1\0\4\77\23\0\1\77"+
+    "\203\0\1\111\2\0\1\111\33\0\4\111\174\0\1\31"+
+    "\104\0\1\31\240\0\1\31\41\0\1\31\13\0\1\111"+
+    "\157\0\1\31\11\0\1\111\44\0\1\111\1\0\2\111"+
+    "\21\0\1\111\4\0\1\111\3\0\4\31\10\0\4\111"+
+    "\3\0\1\111\12\0\1\111\256\0\2\31\325\0\1\111"+
+    "\314\0\4\111\244\0\2\111\25\0\4\111\147\0\1\111"+
+    "\15\0\2\111\10\0\2\111\1\0\1\111\1\0\1\111"+
+    "\11\0\1\111\11\0\2\111\6\0\1\111\2\0\4\111"+
+    "\3\0\1\111\2\0\2\111\1\0\3\111\1\0\2\111"+
+    "\1\0\1\111\10\0\1\111\1\0\2\111\2\0\2\111"+
+    "\1\0\4\111\23\0\1\111\121\0\1\30\4\0\1\30"+
+    "\11\0\1\30\22\0\1\30\3\0\1\30\13\0\1\112"+
+    "\2\0\1\112\10\0\1\30\22\0\4\112\35\0\1\30"+
+    "\120\0\1\30\26\0\2\30\23\0\1\31\1\30\40\0"+
+    "\1\31\13\0\1\112\157\0\1\31\11\0\1\112\15\0"+
+    "\4\30\2\0\2\30\14\0\3\30\1\112\1\0\2\112"+
+    "\11\0\3\30\3\0\1\30\1\0\1\112\4\0\1\112"+
+    "\2\30\1\0\4\31\1\0\2\30\5\0\4\112\2\0"+
+    "\1\30\1\112\12\0\1\112\7\0\1\30\122\0\1\30"+
     "\4\0\1\30\6\0\1\30\3\0\1\30\6\0\1\30"+
     "\5\0\1\30\2\0\2\30\1\0\17\30\2\0\1\30"+
-    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\1\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
-    "\4\0\1\37\1\0\2\30\5\0\1\30\1\0\1\30"+
-    "\2\0\3\30\1\0\1\30\7\0\1\30\1\0\1\30"+
-    "\122\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
-    "\7\0\1\30\31\0\20\30\5\0\3\30\3\0\1\30"+
-    "\3\0\2\30\2\0\2\30\4\0\1\30\4\37\4\0"+
-    "\1\30\4\0\1\30\2\0\1\30\4\0\1\30\1\0"+
-    "\1\30\1\0\1\30\223\0\2\37\15\0\4\37\154\0"+
-    "\1\37\15\0\2\37\10\0\2\37\1\0\1\37\1\0"+
-    "\1\37\11\0\1\37\11\0\2\37\6\0\1\37\2\0"+
-    "\4\37\3\0\1\37\2\0\2\37\1\0\3\37\5\0"+
-    "\1\37\1\0\2\37\2\0\2\37\1\0\4\37\5\0"+
-    "\1\37\1\0\2\37\343\0\1\160\45\161\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\1\206\3\0"+
-    "\2\161\213\0\32\270\1\0\12\270\13\0\1\271\13\0"+
-    "\1\53\1\0\1\54\2\0\1\221\1\0\1\222\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\223\2\0\1\224\4\0\1\225\3\0\1\226\17\0"+
-    "\1\67\2\0\1\227\21\0\1\230\2\0\1\231\57\0"+
-    "\1\30\1\74\7\0\1\74\2\0\1\30\1\160\1\272"+
-    "\1\273\1\274\1\275\1\276\1\277\1\300\1\301\1\302"+
-    "\1\303\1\304\1\305\1\306\1\307\1\310\1\311\1\312"+
-    "\1\313\1\314\1\315\1\316\1\317\1\320\1\321\1\322"+
-    "\1\323\1\161\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\1\206\3\0\2\161\212\0\1\160"+
-    "\32\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\211\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\212\2\0"+
-    "\1\213\4\0\1\65\3\0\1\214\17\0\1\67\2\0"+
-    "\1\215\21\0\1\216\2\0\1\217\57\0\1\30\2\73"+
-    "\2\0\2\220\1\75\1\0\1\73\2\0\1\30\1\325"+
-    "\32\41\1\164\12\165\1\0\1\161\1\166\1\161\1\0"+
-    "\2\326\1\162\3\161\2\0\1\220\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\232\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\233\2\0\1\234\4\0\1\65\3\0\1\235"+
-    "\17\0\1\67\2\0\1\236\21\0\1\237\2\0\1\240"+
-    "\41\0\1\130\15\0\1\30\1\75\1\73\1\132\3\0"+
-    "\1\75\1\0\1\75\2\0\1\30\1\160\32\201\1\161"+
-    "\12\327\1\0\1\161\1\166\1\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\221\1\0\1\222\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\223\2\0"+
-    "\1\224\4\0\1\225\3\0\1\226\17\0\1\67\2\0"+
-    "\1\227\21\0\1\230\2\0\1\231\57\0\1\30\1\74"+
-    "\7\0\1\74\2\0\1\30\1\160\32\201\13\161\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\11\41\1\330"+
-    "\20\41\1\164\12\165\1\74\1\161\1\166\1\161\1\0"+
-    "\1\161\1\167\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\55\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\63\2\0\1\64\4\0\1\65\3\0\1\66"+
-    "\17\0\1\67\2\0\1\70\21\0\1\71\2\0\1\72"+
-    "\57\0\2\30\1\73\1\0\1\74\1\0\1\74\1\75"+
-    "\1\0\1\30\2\0\1\30\1\163\15\41\1\331\14\41"+
-    "\1\164\12\165\1\74\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\3\161\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\10\41\1\332\21\41\1\164"+
-    "\12\165\1\74\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\17\41\1\333\12\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\7\0\1\241\1\0"+
-    "\1\242\17\0\1\243\2\0\1\244\4\0\1\245\3\0"+
-    "\1\246\22\0\1\247\21\0\1\250\2\0\1\251\60\0"+
-    "\1\107\1\31\6\0\1\107\3\0\1\160\1\334\1\335"+
-    "\1\336\1\337\1\340\1\341\1\342\1\343\1\344\1\345"+
-    "\1\346\1\347\1\350\1\351\1\352\1\353\1\354\1\355"+
-    "\1\356\1\357\1\360\1\361\1\362\1\363\1\364\1\365"+
-    "\1\161\1\366\2\367\1\366\5\367\1\370\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\1\206\3\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\252\1\0"+
-    "\1\77\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\253\2\0\1\254\4\0\1\102\3\0"+
-    "\1\255\17\0\1\67\2\0\1\256\21\0\1\257\2\0"+
-    "\1\260\41\0\1\130\15\0\1\30\1\110\1\31\1\132"+
-    "\3\0\1\110\1\0\1\110\2\0\1\30\1\160\32\201"+
-    "\1\161\12\202\1\0\1\161\1\175\1\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\7\0\1\241"+
-    "\1\0\1\242\17\0\1\243\2\0\1\244\4\0\1\245"+
-    "\3\0\1\246\22\0\1\247\21\0\1\250\2\0\1\251"+
-    "\60\0\1\107\1\31\6\0\1\107\3\0\1\160\33\161"+
-    "\12\202\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\76\1\0\1\77\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\100\2\0\1\101\4\0"+
-    "\1\102\3\0\1\103\17\0\1\67\2\0\1\104\21\0"+
-    "\1\105\2\0\1\106\57\0\1\30\2\31\2\0\2\107"+
-    "\1\110\1\0\1\31\2\0\1\30\1\174\32\41\1\164"+
-    "\12\371\1\0\1\161\1\175\1\161\1\0\2\176\1\162"+
-    "\3\161\2\0\1\107\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\76\1\0\1\77\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\100"+
-    "\2\0\1\101\4\0\1\102\3\0\1\103\17\0\1\67"+
-    "\2\0\1\104\21\0\1\105\2\0\1\106\57\0\1\30"+
-    "\2\31\2\0\2\107\1\110\1\0\1\31\2\0\1\30"+
-    "\1\174\32\41\1\164\2\177\1\371\2\177\2\371\1\177"+
-    "\1\371\1\177\1\0\1\161\1\175\1\161\1\0\2\176"+
-    "\1\162\3\161\2\0\1\107\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\372\32\201\1\161\12\327\1\74"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\76\1\0\1\77\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\100\2\0\1\101"+
-    "\4\0\1\102\3\0\1\103\17\0\1\67\2\0\1\104"+
-    "\21\0\1\105\2\0\1\106\57\0\1\30\2\31\2\0"+
-    "\2\107\1\110\1\0\1\31\2\0\1\30\1\373\32\201"+
-    "\1\161\12\202\1\0\1\161\1\175\1\161\1\0\2\176"+
-    "\1\162\3\161\2\0\1\107\1\161\4\0\2\161\213\0"+
-    "\4\374\2\0\1\374\15\0\1\374\6\0\12\374\1\375"+
-    "\304\0\1\376\236\0\1\377\54\0\1\162\227\0\74\206"+
-    "\7\0\1\30\4\0\1\30\11\0\1\30\22\0\1\30"+
-    "\3\0\1\30\13\0\1\73\2\0\1\73\10\0\1\30"+
-    "\12\0\4\73\45\0\1\30\115\0\1\30\26\0\2\30"+
-    "\23\0\1\73\1\30\44\0\1\73\21\0\1\73\142\0"+
-    "\1\73\11\0\1\73\15\0\4\30\2\0\2\30\14\0"+
-    "\3\30\1\73\1\0\2\73\11\0\3\30\3\0\1\30"+
-    "\1\0\1\73\4\0\1\73\2\30\5\0\4\73\2\0"+
-    "\1\30\1\73\12\0\4\73\1\0\2\30\1\0\1\73"+
-    "\7\0\1\30\117\0\1\30\4\0\1\30\6\0\1\30"+
+    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\2\30"+
+    "\2\0\1\30\1\0\3\30\2\0\1\30\1\0\1\30"+
+    "\1\0\1\30\1\0\1\30\4\0\1\112\1\0\2\30"+
+    "\6\0\1\30\7\0\1\30\1\0\1\30\125\0\1\30"+
+    "\6\0\1\30\3\0\1\30\3\0\1\30\7\0\1\30"+
+    "\31\0\20\30\5\0\3\30\4\0\1\30\6\0\1\30"+
+    "\3\0\2\30\2\0\2\30\4\0\1\30\4\112\1\0"+
+    "\1\30\2\0\1\30\4\0\1\30\1\0\1\30\1\0"+
+    "\1\30\226\0\2\112\25\0\4\112\147\0\1\112\15\0"+
+    "\2\112\10\0\2\112\1\0\1\112\1\0\1\112\11\0"+
+    "\1\112\11\0\2\112\6\0\1\112\2\0\4\112\3\0"+
+    "\1\112\2\0\2\112\1\0\3\112\1\0\2\112\1\0"+
+    "\1\112\10\0\1\112\1\0\2\112\2\0\2\112\1\0"+
+    "\4\112\23\0\1\112\203\0\1\123\2\0\1\123\33\0"+
+    "\4\123\310\0\1\123\171\0\1\123\44\0\1\123\1\0"+
+    "\2\123\21\0\1\123\4\0\1\123\17\0\4\123\3\0"+
+    "\1\123\12\0\1\123\275\0\1\123\314\0\4\123\244\0"+
+    "\2\123\25\0\4\123\147\0\1\123\15\0\2\123\10\0"+
+    "\2\123\1\0\1\123\1\0\1\123\11\0\1\123\11\0"+
+    "\2\123\6\0\1\123\2\0\4\123\3\0\1\123\2\0"+
+    "\2\123\1\0\3\123\1\0\2\123\1\0\1\123\10\0"+
+    "\1\123\1\0\2\123\2\0\2\123\1\0\4\123\23\0"+
+    "\1\123\121\0\1\30\4\0\1\30\11\0\1\30\22\0"+
+    "\1\30\3\0\1\30\13\0\1\124\2\0\1\124\10\0"+
+    "\1\30\22\0\4\124\35\0\1\30\120\0\1\30\26\0"+
+    "\2\30\23\0\1\75\1\30\40\0\1\75\13\0\1\124"+
+    "\157\0\1\75\11\0\1\124\15\0\4\30\2\0\2\30"+
+    "\14\0\3\30\1\124\1\0\2\124\11\0\3\30\3\0"+
+    "\1\30\1\0\1\124\4\0\1\124\2\30\1\0\4\75"+
+    "\1\0\2\30\5\0\4\124\2\0\1\30\1\124\12\0"+
+    "\1\124\7\0\1\30\122\0\1\30\4\0\1\30\6\0"+
+    "\1\30\3\0\1\30\6\0\1\30\5\0\1\30\2\0"+
+    "\2\30\1\0\17\30\2\0\1\30\13\0\7\30\2\0"+
+    "\1\30\1\0\1\30\1\0\2\30\2\0\1\30\1\0"+
+    "\3\30\2\0\1\30\1\0\1\30\1\0\1\30\1\0"+
+    "\1\30\4\0\1\124\1\0\2\30\6\0\1\30\7\0"+
+    "\1\30\1\0\1\30\125\0\1\30\6\0\1\30\3\0"+
+    "\1\30\3\0\1\30\7\0\1\30\31\0\20\30\5\0"+
+    "\3\30\4\0\1\30\6\0\1\30\3\0\2\30\2\0"+
+    "\2\30\4\0\1\30\4\124\1\0\1\30\2\0\1\30"+
+    "\4\0\1\30\1\0\1\30\1\0\1\30\226\0\2\124"+
+    "\25\0\4\124\147\0\1\124\15\0\2\124\10\0\2\124"+
+    "\1\0\1\124\1\0\1\124\11\0\1\124\11\0\2\124"+
+    "\6\0\1\124\2\0\4\124\3\0\1\124\2\0\2\124"+
+    "\1\0\3\124\1\0\2\124\1\0\1\124\10\0\1\124"+
+    "\1\0\2\124\2\0\2\124\1\0\4\124\23\0\1\124"+
+    "\203\0\1\136\2\0\1\136\33\0\4\136\310\0\1\136"+
+    "\171\0\1\136\44\0\1\136\1\0\2\136\21\0\1\136"+
+    "\4\0\1\136\17\0\4\136\3\0\1\136\12\0\1\136"+
+    "\275\0\1\136\314\0\4\136\244\0\2\136\25\0\4\136"+
+    "\147\0\1\136\15\0\2\136\10\0\2\136\1\0\1\136"+
+    "\1\0\1\136\11\0\1\136\11\0\2\136\6\0\1\136"+
+    "\2\0\4\136\3\0\1\136\2\0\2\136\1\0\3\136"+
+    "\1\0\2\136\1\0\1\136\10\0\1\136\1\0\2\136"+
+    "\2\0\2\136\1\0\4\136\23\0\1\136\330\0\1\u013e"+
+    "\32\333\1\u013f\12\333\236\0\2\334\2\0\60\334\1\0"+
+    "\1\u0140\3\334\1\u0141\1\0\3\334\212\0\1\155\1\160"+
+    "\2\0\46\155\1\0\3\155\1\0\1\155\1\0\3\155"+
+    "\3\0\1\155\3\0\2\155\72\0\1\172\2\0\1\172"+
+    "\33\0\4\172\310\0\1\172\171\0\1\172\44\0\1\172"+
+    "\1\0\2\172\21\0\1\172\4\0\1\172\17\0\4\172"+
+    "\3\0\1\172\12\0\1\172\275\0\1\172\314\0\4\172"+
+    "\244\0\2\172\25\0\4\172\147\0\1\172\15\0\2\172"+
+    "\10\0\2\172\1\0\1\172\1\0\1\172\11\0\1\172"+
+    "\11\0\2\172\6\0\1\172\2\0\4\172\3\0\1\172"+
+    "\2\0\2\172\1\0\3\172\1\0\2\172\1\0\1\172"+
+    "\10\0\1\172\1\0\2\172\2\0\2\172\1\0\4\172"+
+    "\23\0\1\172\113\0\1\55\1\0\1\56\2\0\1\u0142"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\u0143\2\0\1\u0144\4\0\1\67"+
+    "\3\0\1\u0145\17\0\1\71\2\0\1\u0146\21\0\1\u0147"+
+    "\2\0\1\u0148\61\0\1\30\1\345\1\75\4\0\1\124"+
+    "\1\0\1\345\4\0\1\41\1\30\1\0\32\30\1\0"+
+    "\12\75\2\0\1\124\22\0\1\55\1\0\1\56\2\0"+
+    "\1\246\1\0\1\247\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\250\2\0\1\251\4\0"+
+    "\1\252\3\0\1\253\17\0\1\71\2\0\1\254\21\0"+
+    "\1\255\2\0\1\256\61\0\1\30\1\76\2\0\1\76"+
+    "\1\0\2\76\1\0\1\76\2\0\1\202\1\160\2\30"+
+    "\1\346\32\220\13\155\1\76\1\155\1\202\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\1\43"+
+    "\2\u0149\1\u014a\1\u014b\10\u0149\1\43\1\u014c\5\u0149\6\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\1\u014d\2\u0149"+
+    "\1\43\1\u0149\1\u014e\3\u0149\1\u014f\2\u0149\4\43\4\u0149"+
+    "\1\43\2\u0149\1\43\2\u0149\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\3\43\1\u0149\1\43\1\u0149\2\43\1\u0150"+
+    "\1\43\1\u0149\10\43\1\u0149\2\43\2\u0149\2\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\1\43\1\u0149\1\u0151"+
+    "\2\u0149\2\43\1\u0149\3\43\1\u0152\1\u0153\1\43\1\u0154"+
+    "\2\u0149\11\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\3\43\1\u0149\1\43\1\u0149\10\43\1\u0149\1\43\2\u0149"+
+    "\10\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\4\43"+
+    "\1\u0155\5\43\1\u0149\17\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\4\43\2\u0149\2\43\1\u0149\1\43\1\u0149"+
+    "\13\43\2\u0149\2\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\1\u0156\1\43\2\u0149\1\u0157\1\u0158\12\u0149\1\u0159"+
+    "\1\u0149\2\43\2\u0149\3\43\1\u0149\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\2\43\4\u0149\3\43\2\u0149\1\u015a"+
+    "\1\u0149\1\43\2\u0149\12\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\1\u015b\1\u0149\2\43\1\u0149\3\43\1\u015c"+
+    "\5\43\3\u0149\3\43\1\u0149\1\43\1\u0149\1\43\2\u0149"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\3\u0149\1\u015d"+
+    "\1\u0149\1\u015e\1\43\1\u0149\1\u015f\7\u0149\1\u0160\3\u0149"+
+    "\1\43\2\u0149\1\43\2\u0149\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\1\u0161\1\u0149\1\43\1\u0162\6\u0149\3\43"+
+    "\1\u0149\2\43\1\u0149\2\43\1\u0149\6\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\1\u0149\31\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\1\u0149\2\43\1\u0149\1\u0163"+
+    "\1\u0164\2\u0149\1\43\1\u0165\2\u0149\2\43\2\u0149\1\43"+
+    "\1\u0149\3\43\1\u0166\1\u0149\2\43\1\u0149\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\3\u0149\1\u0167\2\u0149\1\43"+
+    "\1\u0149\1\u0168\3\u0149\3\43\2\u0149\1\43\10\u0149\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\1\u0169\2\u0149\1\u016a"+
+    "\1\u016b\1\u016c\2\u0149\1\u016d\3\u0149\1\43\1\u0149\1\43"+
+    "\1\u0149\1\43\1\u0149\1\43\1\u0149\1\43\4\u0149\1\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\1\u0149\6\43"+
+    "\1\u0149\3\43\1\u016e\2\43\1\u0149\4\43\1\u0149\2\43"+
+    "\1\u0149\2\43\1\u0149\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\6\43\1\u0149\7\43\1\u0149\13\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\13\43\1\u016f\6\43\1\u0170"+
+    "\7\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\1\u0149"+
+    "\11\43\1\u0149\6\43\1\u0149\10\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\1\u0149\1\43\6\u0149\1\u0171\1\43"+
+    "\2\u0149\2\43\2\u0149\1\43\1\u0149\1\43\3\u0149\1\43"+
+    "\3\u0149\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\4\43"+
+    "\1\u0149\1\u0172\4\43\2\u0149\3\43\2\u0149\5\43\1\u0149"+
+    "\3\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\3\43"+
+    "\2\u0149\2\43\1\u0149\1\u0173\1\43\2\u0149\1\43\1\u0149"+
+    "\3\43\1\u0149\1\43\1\u0149\1\43\1\u0149\3\43\1\u0149"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\3\43\1\u0149"+
+    "\1\43\1\u0174\4\43\1\u0149\2\43\1\u0149\14\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\2\u0149\1\43\1\u0175"+
+    "\1\43\1\u0176\1\43\2\u0149\2\43\1\u0149\4\43\1\u0149"+
+    "\11\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\3\43"+
+    "\1\u0149\13\43\1\u0149\12\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\7\0\1\u012e\1\0\1\u012f\17\0"+
+    "\1\u0130\2\0\1\u0131\4\0\1\u0132\3\0\1\u0133\22\0"+
+    "\1\u0134\21\0\1\u0135\2\0\1\u0136\62\0\1\244\1\75"+
+    "\2\0\3\244\1\0\1\244\2\0\1\u0102\3\0\1\u010a"+
+    "\33\155\12\u0105\1\0\1\155\1\u0102\1\155\1\0\1\u0102"+
+    "\1\157\3\155\2\0\1\244\1\155\3\0\2\155\7\0"+
+    "\1\u012e\1\0\1\u012f\17\0\1\u0130\2\0\1\u0131\4\0"+
+    "\1\u0132\3\0\1\u0133\22\0\1\u0134\21\0\1\u0135\2\0"+
+    "\1\u0136\62\0\1\244\1\75\2\0\3\244\1\0\1\244"+
+    "\2\0\1\u0102\1\160\2\0\1\u010a\1\u010b\1\u010c\1\u010d"+
+    "\1\u010e\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115"+
+    "\1\u0116\1\u0117\1\u0118\1\u0119\1\u011a\1\u011b\1\u011c\1\u011d"+
+    "\1\u011e\1\u011f\1\u0120\1\u0121\1\u0122\1\u0123\1\u0124\1\155"+
+    "\12\205\1\0\1\155\1\u0102\1\155\1\0\1\u0102\1\157"+
+    "\3\155\2\0\1\244\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\u0137\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\u0138"+
+    "\2\0\1\u0139\4\0\1\67\3\0\1\u013a\17\0\1\71"+
+    "\2\0\1\u013b\21\0\1\u013c\2\0\1\u013d\41\0\1\134"+
+    "\17\0\1\30\1\245\1\75\1\136\1\0\2\244\1\245"+
+    "\1\0\1\245\2\0\1\u0102\1\0\1\41\1\30\1\u010a"+
+    "\32\220\1\155\12\u0105\1\0\1\155\1\u0104\1\155\1\0"+
+    "\1\u0102\1\157\3\155\2\0\1\244\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\235\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\236\2\0\1\237\4\0\1\67\3\0\1\240"+
+    "\17\0\1\71\2\0\1\241\21\0\1\242\2\0\1\243"+
+    "\61\0\1\30\2\75\2\0\2\244\1\245\1\0\1\75"+
+    "\2\0\1\u0102\1\0\1\41\1\30\1\u010a\32\220\1\155"+
+    "\12\u0105\1\0\1\155\1\u0104\1\155\1\0\1\u0102\1\157"+
+    "\3\155\2\0\1\244\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\3\43\1\u0178"+
+    "\26\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\32\43"+
+    "\1\204\12\205\1\u0179\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\11\43\1\u017a"+
+    "\20\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\15\43"+
+    "\1\u017b\14\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\7\0\1\u012e\1\0\1\u012f\17\0\1\u0130\2\0\1\u0131"+
+    "\4\0\1\u0132\3\0\1\u0133\22\0\1\u0134\21\0\1\u0135"+
+    "\2\0\1\u0136\62\0\1\244\1\75\2\0\3\244\1\0"+
+    "\1\244\2\0\1\u0102\1\160\2\0\1\u010a\33\155\12\u0105"+
+    "\1\0\1\155\1\u0102\1\155\1\0\1\u0102\1\157\3\155"+
+    "\2\0\1\244\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u0101\2\u017c\1\u017d\1\u017e\10\u017c\1\u0101\1\u017f"+
+    "\5\u017c\6\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u0180\2\u017c\1\u0101\1\u017c\1\u0181\3\u017c"+
+    "\1\u0182\2\u017c\4\u0101\4\u017c\1\u0101\2\u017c\1\u0101\2\u017c"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\3\u0101\1\u017c\1\u0101\1\u017c\2\u0101\1\u0183\1\u0101\1\u017c"+
+    "\10\u0101\1\u017c\2\u0101\2\u017c\2\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u017c\1\u0184"+
+    "\2\u017c\2\u0101\1\u017c\3\u0101\1\u0185\1\u0186\1\u0101\1\u0187"+
+    "\2\u017c\11\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\3\u0101\1\u017c\1\u0101\1\u017c\10\u0101\1\u017c"+
+    "\1\u0101\2\u017c\10\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\4\u0101\1\u0188\5\u0101\1\u017c\17\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\4\u0101\2\u017c\2\u0101\1\u017c\1\u0101\1\u017c\13\u0101\2\u017c"+
+    "\2\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u0189\1\u0101\2\u017c\1\u018a\1\u018b\12\u017c\1\u018c"+
+    "\1\u017c\2\u0101\2\u017c\3\u0101\1\u017c\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\2\u0101\4\u017c\3\u0101"+
+    "\2\u017c\1\u018d\1\u017c\1\u0101\2\u017c\12\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u018e\1\u017c"+
+    "\2\u0101\1\u017c\3\u0101\1\u018f\5\u0101\3\u017c\3\u0101\1\u017c"+
+    "\1\u0101\1\u017c\1\u0101\2\u017c\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\3\u017c\1\u0190\1\u017c\1\u0191"+
+    "\1\u0101\1\u017c\1\u0192\7\u017c\1\u0193\3\u017c\1\u0101\2\u017c"+
+    "\1\u0101\2\u017c\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u0194\1\u017c\1\u0101\1\u0195\6\u017c\3\u0101"+
+    "\1\u017c\2\u0101\1\u017c\2\u0101\1\u017c\6\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u017c\31\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\1\u017c\2\u0101\1\u017c\1\u0196\1\u0197\2\u017c\1\u0101\1\u0198"+
+    "\2\u017c\2\u0101\2\u017c\1\u0101\1\u017c\3\u0101\1\u0199\1\u017c"+
+    "\2\u0101\1\u017c\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\3\u017c\1\u019a\2\u017c\1\u0101\1\u017c\1\u019b"+
+    "\3\u017c\3\u0101\2\u017c\1\u0101\10\u017c\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u019c\2\u017c\1\u019d"+
+    "\1\u019e\1\u019f\2\u017c\1\u01a0\3\u017c\1\u0101\1\u017c\1\u0101"+
+    "\1\u017c\1\u0101\1\u017c\1\u0101\1\u017c\1\u0101\4\u017c\1\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\1\u017c\6\u0101\1\u017c\3\u0101\1\u01a1\2\u0101\1\u017c\4\u0101"+
+    "\1\u017c\2\u0101\1\u017c\2\u0101\1\u017c\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\6\u0101\1\u017c\7\u0101"+
+    "\1\u017c\13\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\13\u0101\1\u01a2\6\u0101\1\u01a3\7\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u017c"+
+    "\11\u0101\1\u017c\6\u0101\1\u017c\10\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u017c\1\u0101\6\u017c"+
+    "\1\u01a4\1\u0101\2\u017c\2\u0101\2\u017c\1\u0101\1\u017c\1\u0101"+
+    "\3\u017c\1\u0101\3\u017c\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\4\u0101\1\u017c\1\u01a5\4\u0101\2\u017c"+
+    "\3\u0101\2\u017c\5\u0101\1\u017c\3\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\3\u0101\2\u017c\2\u0101"+
+    "\1\u017c\1\u01a6\1\u0101\2\u017c\1\u0101\1\u017c\3\u0101\1\u017c"+
+    "\1\u0101\1\u017c\1\u0101\1\u017c\3\u0101\1\u017c\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\3\u0101\1\u017c"+
+    "\1\u0101\1\u01a7\4\u0101\1\u017c\2\u0101\1\u017c\14\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\2\u017c"+
+    "\1\u0101\1\u01a8\1\u0101\1\u01a9\1\u0101\2\u017c\2\u0101\1\u017c"+
+    "\4\u0101\1\u017c\11\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\3\u0101\1\u017c\13\u0101\1\u017c\12\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\100\1\0\1\101\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\102\2\0\1\103"+
+    "\4\0\1\104\3\0\1\105\17\0\1\71\2\0\1\106"+
+    "\21\0\1\107\2\0\1\110\61\0\1\30\2\31\2\0"+
+    "\2\111\1\112\1\0\1\31\2\0\1\213\1\0\1\41"+
+    "\1\30\1\u01aa\32\43\1\204\12\u01ab\1\0\1\155\1\216"+
+    "\1\155\1\0\1\213\1\157\3\155\2\0\1\111\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\100"+
+    "\1\0\1\101\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\102\2\0\1\103\4\0\1\104"+
+    "\3\0\1\105\17\0\1\71\2\0\1\106\21\0\1\107"+
+    "\2\0\1\110\61\0\1\30\2\31\2\0\2\111\1\112"+
+    "\1\0\1\31\2\0\1\213\1\0\1\41\1\30\1\u01aa"+
+    "\32\43\1\204\12\u0125\1\0\1\155\1\216\1\155\1\0"+
+    "\1\213\1\157\3\155\2\0\1\111\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\100\1\0\1\101"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\102\2\0\1\103\4\0\1\104\3\0\1\105"+
+    "\17\0\1\71\2\0\1\106\21\0\1\107\2\0\1\110"+
+    "\61\0\1\30\2\31\2\0\2\111\1\112\1\0\1\31"+
+    "\2\0\1\213\1\0\1\41\1\30\1\u01aa\32\43\1\204"+
+    "\2\u0125\1\u01ab\1\u0125\1\u01ac\2\u01ab\2\u0125\1\u01ab\1\0"+
+    "\1\155\1\216\1\155\1\0\1\213\1\157\3\155\2\0"+
+    "\1\111\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\100\1\0\1\101\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\102\2\0\1\103"+
+    "\4\0\1\104\3\0\1\105\17\0\1\71\2\0\1\106"+
+    "\21\0\1\107\2\0\1\110\61\0\1\30\2\31\2\0"+
+    "\2\111\1\112\1\0\1\31\2\0\1\213\1\0\1\41"+
+    "\1\30\1\u01ad\32\43\1\204\12\u0128\1\0\1\155\1\216"+
+    "\1\155\1\0\1\213\1\157\3\155\2\0\1\111\1\155"+
+    "\3\0\2\155\7\0\1\266\1\0\1\267\17\0\1\270"+
+    "\2\0\1\271\4\0\1\272\3\0\1\273\22\0\1\274"+
+    "\21\0\1\275\2\0\1\276\62\0\1\111\1\31\2\0"+
+    "\3\244\1\0\1\111\2\0\1\u0102\1\160\2\0\1\u010a"+
+    "\33\155\12\221\1\0\1\155\1\u0102\1\155\1\0\1\u0102"+
+    "\1\157\3\155\2\0\1\244\1\155\3\0\2\155\220\0"+
+    "\4\u01ae\2\0\1\u01ae\15\0\1\u01ae\6\0\12\u01ae\1\u012b"+
+    "\242\0\4\u01af\2\0\1\u01af\15\0\1\u01af\6\0\12\u01af"+
+    "\1\u01b0\242\0\4\u01b1\2\0\1\u01b1\15\0\1\u01b1\6\0"+
+    "\1\u01b2\1\u01b3\5\u01b2\1\u01b4\1\u01b3\1\u01b2\13\0\1\u01b5"+
+    "\16\0\1\u01b6\21\0\1\u01b7\2\0\1\u01b8\10\0\1\u01b9"+
+    "\22\0\1\u01ba\21\0\1\u01bb\2\0\1\u01bc\55\0\1\234"+
+    "\4\0\1\u012d\7\0\1\u012d\171\0\1\244\2\0\1\244"+
+    "\33\0\4\244\174\0\1\75\104\0\1\75\240\0\1\75"+
+    "\41\0\1\75\13\0\1\244\157\0\1\75\11\0\1\244"+
+    "\44\0\1\244\1\0\2\244\21\0\1\244\4\0\1\244"+
+    "\3\0\4\75\10\0\4\244\3\0\1\244\12\0\1\244"+
+    "\256\0\2\75\325\0\1\244\314\0\4\244\244\0\2\244"+
+    "\25\0\4\244\147\0\1\244\15\0\2\244\10\0\2\244"+
+    "\1\0\1\244\1\0\1\244\11\0\1\244\11\0\2\244"+
+    "\6\0\1\244\2\0\4\244\3\0\1\244\2\0\2\244"+
+    "\1\0\3\244\1\0\2\244\1\0\1\244\10\0\1\244"+
+    "\1\0\2\244\2\0\2\244\1\0\4\244\23\0\1\244"+
+    "\121\0\1\30\4\0\1\30\11\0\1\30\22\0\1\30"+
+    "\3\0\1\30\13\0\1\245\2\0\1\245\10\0\1\30"+
+    "\22\0\4\245\35\0\1\30\120\0\1\30\26\0\2\30"+
+    "\23\0\1\75\1\30\40\0\1\75\13\0\1\245\157\0"+
+    "\1\75\11\0\1\245\15\0\4\30\2\0\2\30\14\0"+
+    "\3\30\1\245\1\0\2\245\11\0\3\30\3\0\1\30"+
+    "\1\0\1\245\4\0\1\245\2\30\1\0\4\75\1\0"+
+    "\2\30\5\0\4\245\2\0\1\30\1\245\12\0\1\245"+
+    "\7\0\1\30\122\0\1\30\4\0\1\30\6\0\1\30"+
     "\3\0\1\30\6\0\1\30\5\0\1\30\2\0\2\30"+
     "\1\0\17\30\2\0\1\30\13\0\7\30\2\0\1\30"+
-    "\1\0\1\30\1\0\1\30\2\0\1\30\1\0\1\30"+
-    "\1\0\1\30\1\0\1\30\4\0\1\73\1\0\2\30"+
-    "\5\0\1\30\1\0\1\30\2\0\3\30\1\0\1\30"+
-    "\7\0\1\30\1\0\1\30\122\0\1\30\6\0\1\30"+
-    "\3\0\1\30\3\0\1\30\7\0\1\30\31\0\20\30"+
-    "\5\0\3\30\3\0\1\30\3\0\2\30\2\0\2\30"+
-    "\4\0\1\30\4\73\4\0\1\30\4\0\1\30\2\0"+
-    "\1\30\4\0\1\30\1\0\1\30\1\0\1\30\223\0"+
-    "\2\73\15\0\4\73\154\0\1\73\15\0\2\73\10\0"+
-    "\2\73\1\0\1\73\1\0\1\73\11\0\1\73\11\0"+
-    "\2\73\6\0\1\73\2\0\4\73\3\0\1\73\2\0"+
-    "\2\73\1\0\3\73\5\0\1\73\1\0\2\73\2\0"+
-    "\2\73\1\0\4\73\5\0\1\73\1\0\2\73\140\0"+
-    "\1\u0100\1\0\1\u0101\17\0\1\u0102\2\0\1\u0103\4\0"+
-    "\1\u0104\3\0\1\u0105\22\0\1\u0106\21\0\1\u0107\2\0"+
-    "\1\u0108\60\0\1\220\1\73\6\0\1\220\37\0\12\73"+
-    "\35\0\1\30\4\0\1\30\11\0\1\30\22\0\1\30"+
-    "\3\0\1\30\13\0\1\74\2\0\1\74\10\0\1\30"+
-    "\12\0\4\74\45\0\1\30\120\0\1\30\3\0\4\30"+
-    "\1\0\1\30\4\0\1\30\1\0\2\30\2\0\2\30"+
-    "\2\0\3\30\1\0\1\30\1\0\1\30\2\0\4\30"+
-    "\1\0\3\30\1\0\1\30\1\0\3\30\1\0\2\30"+
-    "\1\0\4\30\1\0\2\30\2\0\10\30\1\0\2\30"+
-    "\1\0\11\30\1\0\10\30\1\0\13\30\2\0\1\30"+
-    "\1\0\1\30\1\0\2\30\2\0\1\30\1\0\1\30"+
-    "\3\0\1\30\113\0\1\30\26\0\2\30\24\0\1\30"+
-    "\44\0\1\74\176\0\1\74\15\0\4\30\2\0\2\30"+
-    "\14\0\3\30\1\74\1\0\2\74\11\0\3\30\3\0"+
-    "\1\30\1\0\1\74\4\0\1\74\2\30\5\0\4\74"+
-    "\2\0\1\30\1\74\17\0\2\30\1\0\1\74\7\0"+
-    "\1\30\133\0\1\30\3\0\2\30\12\0\2\30\1\0"+
-    "\3\30\7\0\1\30\6\0\2\30\1\0\2\30\6\0"+
-    "\1\30\4\0\2\30\2\0\2\30\5\0\3\30\10\0"+
-    "\1\30\16\0\1\30\7\0\1\30\7\0\1\30\117\0"+
-    "\1\30\4\0\1\30\6\0\1\30\3\0\1\30\6\0"+
-    "\1\30\5\0\1\30\2\0\2\30\1\0\17\30\2\0"+
-    "\1\30\13\0\7\30\2\0\1\30\1\0\1\30\1\0"+
-    "\1\30\2\0\1\30\1\0\1\30\1\0\1\30\1\0"+
-    "\1\30\4\0\1\74\1\0\2\30\5\0\1\30\1\0"+
-    "\1\30\2\0\3\30\1\0\1\30\7\0\1\30\1\0"+
-    "\1\30\122\0\1\30\6\0\1\30\3\0\1\30\3\0"+
-    "\1\30\7\0\1\30\31\0\20\30\5\0\3\30\3\0"+
-    "\1\30\3\0\2\30\2\0\2\30\4\0\1\30\4\74"+
-    "\4\0\1\30\4\0\1\30\2\0\1\30\4\0\1\30"+
-    "\1\0\1\30\1\0\1\30\223\0\2\74\15\0\4\74"+
-    "\154\0\1\74\15\0\2\74\10\0\2\74\1\0\1\74"+
-    "\1\0\1\74\11\0\1\74\11\0\2\74\6\0\1\74"+
-    "\2\0\4\74\3\0\1\74\2\0\2\74\1\0\3\74"+
-    "\5\0\1\74\1\0\2\74\2\0\2\74\1\0\4\74"+
-    "\5\0\1\74\1\0\2\74\141\0\1\30\4\0\1\30"+
-    "\11\0\1\30\22\0\1\30\3\0\1\30\13\0\1\75"+
-    "\2\0\1\75\10\0\1\30\12\0\4\75\45\0\1\30"+
-    "\115\0\1\30\26\0\2\30\23\0\1\73\1\30\44\0"+
-    "\1\75\21\0\1\73\142\0\1\73\11\0\1\75\15\0"+
-    "\4\30\2\0\2\30\14\0\3\30\1\75\1\0\2\75"+
-    "\11\0\3\30\3\0\1\30\1\0\1\75\4\0\1\75"+
-    "\2\30\5\0\4\75\2\0\1\30\1\75\12\0\4\73"+
-    "\1\0\2\30\1\0\1\75\7\0\1\30\117\0\1\30"+
+    "\1\0\1\30\1\0\2\30\2\0\1\30\1\0\3\30"+
+    "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
+    "\4\0\1\245\1\0\2\30\6\0\1\30\7\0\1\30"+
+    "\1\0\1\30\125\0\1\30\6\0\1\30\3\0\1\30"+
+    "\3\0\1\30\7\0\1\30\31\0\20\30\5\0\3\30"+
+    "\4\0\1\30\6\0\1\30\3\0\2\30\2\0\2\30"+
+    "\4\0\1\30\4\245\1\0\1\30\2\0\1\30\4\0"+
+    "\1\30\1\0\1\30\1\0\1\30\226\0\2\245\25\0"+
+    "\4\245\147\0\1\245\15\0\2\245\10\0\2\245\1\0"+
+    "\1\245\1\0\1\245\11\0\1\245\11\0\2\245\6\0"+
+    "\1\245\2\0\4\245\3\0\1\245\2\0\2\245\1\0"+
+    "\3\245\1\0\2\245\1\0\1\245\10\0\1\245\1\0"+
+    "\2\245\2\0\2\245\1\0\4\245\23\0\1\245\331\0"+
+    "\1\u01bd\1\u01be\1\u01bf\1\u01c0\1\u01c1\1\u01c2\1\u01c3\1\u01c4"+
+    "\1\u01c5\1\u01c6\1\u01c7\1\u01c8\1\u01c9\1\u01ca\1\u01cb\1\u01cc"+
+    "\1\u01cd\1\u01ce\1\u01cf\1\u01d0\1\u01d1\1\u01d2\1\u01d3\1\u01d4"+
+    "\1\u01d5\1\u01d6\1\0\12\333\243\0\32\333\1\u013f\12\333"+
+    "\236\0\2\334\2\0\72\334\7\0\1\30\4\0\1\30"+
+    "\11\0\1\30\22\0\1\30\3\0\1\30\13\0\1\345"+
+    "\2\0\1\345\10\0\1\30\22\0\4\345\35\0\1\30"+
+    "\120\0\1\30\26\0\2\30\23\0\1\75\1\30\40\0"+
+    "\1\75\13\0\1\345\157\0\1\75\11\0\1\345\15\0"+
+    "\4\30\2\0\2\30\14\0\3\30\1\345\1\0\2\345"+
+    "\11\0\3\30\3\0\1\30\1\0\1\345\4\0\1\345"+
+    "\2\30\1\0\4\75\1\0\2\30\5\0\4\345\2\0"+
+    "\1\30\1\345\12\0\1\345\7\0\1\30\122\0\1\30"+
     "\4\0\1\30\6\0\1\30\3\0\1\30\6\0\1\30"+
     "\5\0\1\30\2\0\2\30\1\0\17\30\2\0\1\30"+
-    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\1\30"+
-    "\2\0\1\30\1\0\1\30\1\0\1\30\1\0\1\30"+
-    "\4\0\1\75\1\0\2\30\5\0\1\30\1\0\1\30"+
-    "\2\0\3\30\1\0\1\30\7\0\1\30\1\0\1\30"+
-    "\122\0\1\30\6\0\1\30\3\0\1\30\3\0\1\30"+
-    "\7\0\1\30\31\0\20\30\5\0\3\30\3\0\1\30"+
-    "\3\0\2\30\2\0\2\30\4\0\1\30\4\75\4\0"+
-    "\1\30\4\0\1\30\2\0\1\30\4\0\1\30\1\0"+
-    "\1\30\1\0\1\30\223\0\2\75\15\0\4\75\154\0"+
-    "\1\75\15\0\2\75\10\0\2\75\1\0\1\75\1\0"+
-    "\1\75\11\0\1\75\11\0\2\75\6\0\1\75\2\0"+
-    "\4\75\3\0\1\75\2\0\2\75\1\0\3\75\5\0"+
-    "\1\75\1\0\2\75\2\0\2\75\1\0\4\75\5\0"+
-    "\1\75\1\0\2\75\223\0\1\107\2\0\1\107\23\0"+
-    "\4\107\201\0\1\31\132\0\1\31\207\0\1\31\45\0"+
-    "\1\107\21\0\1\31\142\0\1\31\11\0\1\107\44\0"+
-    "\1\107\1\0\2\107\21\0\1\107\4\0\1\107\7\0"+
-    "\4\107\3\0\1\107\12\0\4\31\4\0\1\107\301\0"+
-    "\2\31\264\0\1\107\311\0\4\107\251\0\2\107\15\0"+
-    "\4\107\154\0\1\107\15\0\2\107\10\0\2\107\1\0"+
-    "\1\107\1\0\1\107\11\0\1\107\11\0\2\107\6\0"+
-    "\1\107\2\0\4\107\3\0\1\107\2\0\2\107\1\0"+
-    "\3\107\5\0\1\107\1\0\2\107\2\0\2\107\1\0"+
-    "\4\107\5\0\1\107\1\0\2\107\141\0\1\30\4\0"+
-    "\1\30\11\0\1\30\22\0\1\30\3\0\1\30\13\0"+
-    "\1\110\2\0\1\110\10\0\1\30\12\0\4\110\45\0"+
-    "\1\30\115\0\1\30\26\0\2\30\23\0\1\31\1\30"+
-    "\44\0\1\110\21\0\1\31\142\0\1\31\11\0\1\110"+
-    "\15\0\4\30\2\0\2\30\14\0\3\30\1\110\1\0"+
-    "\2\110\11\0\3\30\3\0\1\30\1\0\1\110\4\0"+
-    "\1\110\2\30\5\0\4\110\2\0\1\30\1\110\12\0"+
-    "\4\31\1\0\2\30\1\0\1\110\7\0\1\30\117\0"+
-    "\1\30\4\0\1\30\6\0\1\30\3\0\1\30\6\0"+
-    "\1\30\5\0\1\30\2\0\2\30\1\0\17\30\2\0"+
-    "\1\30\13\0\7\30\2\0\1\30\1\0\1\30\1\0"+
-    "\1\30\2\0\1\30\1\0\1\30\1\0\1\30\1\0"+
-    "\1\30\4\0\1\110\1\0\2\30\5\0\1\30\1\0"+
-    "\1\30\2\0\3\30\1\0\1\30\7\0\1\30\1\0"+
-    "\1\30\122\0\1\30\6\0\1\30\3\0\1\30\3\0"+
-    "\1\30\7\0\1\30\31\0\20\30\5\0\3\30\3\0"+
-    "\1\30\3\0\2\30\2\0\2\30\4\0\1\30\4\110"+
-    "\4\0\1\30\4\0\1\30\2\0\1\30\4\0\1\30"+
-    "\1\0\1\30\1\0\1\30\223\0\2\110\15\0\4\110"+
-    "\154\0\1\110\15\0\2\110\10\0\2\110\1\0\1\110"+
-    "\1\0\1\110\11\0\1\110\11\0\2\110\6\0\1\110"+
-    "\2\0\4\110\3\0\1\110\2\0\2\110\1\0\3\110"+
-    "\5\0\1\110\1\0\2\110\2\0\2\110\1\0\4\110"+
-    "\5\0\1\110\1\0\2\110\223\0\1\132\2\0\1\132"+
-    "\23\0\4\132\305\0\1\132\176\0\1\132\44\0\1\132"+
-    "\1\0\2\132\21\0\1\132\4\0\1\132\7\0\4\132"+
-    "\3\0\1\132\22\0\1\132\262\0\1\132\311\0\4\132"+
-    "\251\0\2\132\15\0\4\132\154\0\1\132\15\0\2\132"+
-    "\10\0\2\132\1\0\1\132\1\0\1\132\11\0\1\132"+
-    "\11\0\2\132\6\0\1\132\2\0\4\132\3\0\1\132"+
-    "\2\0\2\132\1\0\3\132\5\0\1\132\1\0\2\132"+
-    "\2\0\2\132\1\0\4\132\5\0\1\132\1\0\2\132"+
-    "\343\0\1\u0109\32\270\1\u010a\12\270\237\0\61\271\1\0"+
-    "\1\u010b\4\271\1\u010c\1\0\3\271\1\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\1\41\2\u010d\1\u010e\1\u010f\10\u010d\1\41"+
-    "\1\u0110\5\u010d\6\41\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\1\u0111"+
-    "\2\u010d\1\41\1\u010d\1\u0112\6\u010d\4\41\4\u010d\1\41"+
-    "\1\u010d\1\41\3\u010d\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\3\41"+
-    "\1\u010d\1\41\1\u010d\4\41\1\u010d\10\41\1\u010d\2\41"+
-    "\1\u010d\2\41\1\u010d\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\1\41"+
-    "\1\u010d\1\u0113\2\u010d\2\41\1\u010d\6\41\3\u010d\11\41"+
-    "\1\164\12\165\1\74\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\3\161\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\3\41\1\u010d\1\41\1\u010d"+
-    "\10\41\1\u010d\1\41\2\u010d\10\41\1\164\12\165\1\74"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\55\1\0\1\56\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\63\2\0\1\64"+
-    "\4\0\1\65\3\0\1\66\17\0\1\67\2\0\1\70"+
-    "\21\0\1\71\2\0\1\72\57\0\2\30\1\73\1\0"+
-    "\1\74\1\0\1\74\1\75\1\0\1\30\2\0\1\30"+
-    "\1\163\4\41\1\u0114\5\41\1\u010d\17\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\4\41\2\u010d\2\41\1\u010d\1\41\1\u010d"+
-    "\13\41\1\u010d\2\41\1\u010d\1\164\12\165\1\74\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\163"+
-    "\1\u010d\1\41\3\u010d\1\u0115\14\u010d\2\41\2\u010d\2\41"+
-    "\1\u010d\1\41\1\164\12\165\1\74\1\161\1\166\1\161"+
-    "\1\0\1\161\1\167\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\2\41\4\u010d"+
-    "\3\41\2\u010d\1\u0116\1\u010d\1\41\2\u010d\12\41\1\164"+
-    "\12\165\1\74\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\2\u010d\2\41\1\u010d\3\41\1\u010d"+
-    "\5\41\3\u010d\3\41\1\u010d\2\41\3\u010d\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\5\u010d\1\u0117\1\41\1\u010d\1\u0118\7\u010d"+
-    "\1\u0119\3\u010d\1\41\1\u010d\1\41\3\u010d\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\1\u011a\1\u010d\1\41\1\u0111\6\u010d\3\41"+
-    "\1\u010d\2\41\1\u010d\2\41\1\u010d\6\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\1\u010d\31\41\1\164\12\165\1\74\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\163"+
-    "\1\u010d\2\41\1\u010d\1\u011b\1\41\2\u010d\1\41\3\u010d"+
-    "\2\41\2\u010d\1\41\1\u010d\3\41\1\u010d\2\41\2\u010d"+
-    "\1\164\12\165\1\74\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\3\161\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\6\u010d\1\41\5\u010d\3\41"+
-    "\2\u010d\1\41\10\u010d\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\1\41"+
-    "\2\u010d\1\u0118\1\u011c\3\u010d\1\41\3\u010d\1\41\1\u010d"+
-    "\1\41\1\u010d\1\41\1\u010d\1\41\1\u010d\1\41\3\u010d"+
-    "\1\41\1\u010d\1\164\12\165\1\74\1\161\1\166\1\161"+
-    "\1\0\1\161\1\167\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\1\u010d\6\41"+
-    "\1\u010d\6\41\1\u010d\4\41\1\u010d\4\41\2\u010d\1\164"+
-    "\12\165\1\74\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\6\41\1\u010d\7\41\1\u010d\13\41"+
-    "\1\164\12\165\1\74\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\3\161\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\13\41\1\u011d\6\41\1\u011e"+
-    "\7\41\1\164\12\165\1\74\1\161\1\166\1\161\1\0"+
-    "\1\161\1\167\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\55\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\63\2\0\1\64\4\0\1\65\3\0\1\66"+
-    "\17\0\1\67\2\0\1\70\21\0\1\71\2\0\1\72"+
-    "\57\0\2\30\1\73\1\0\1\74\1\0\1\74\1\75"+
-    "\1\0\1\30\2\0\1\30\1\163\1\u010d\11\41\1\u010d"+
-    "\6\41\1\u010d\10\41\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\1\u010d"+
-    "\1\41\6\u010d\1\u011f\1\41\2\u010d\2\41\2\u010d\1\41"+
-    "\1\u010d\1\41\6\u010d\1\41\1\164\12\165\1\74\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\163"+
-    "\4\41\1\u010d\5\41\2\u010d\3\41\2\u010d\10\41\1\u010d"+
-    "\1\164\12\165\1\74\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\3\161\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\3\41\1\u010d\1\41\1\u0120"+
-    "\4\41\1\u010d\2\41\1\u010d\14\41\1\164\12\165\1\74"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\55\1\0\1\56\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\63\2\0\1\64"+
-    "\4\0\1\65\3\0\1\66\17\0\1\67\2\0\1\70"+
-    "\21\0\1\71\2\0\1\72\57\0\2\30\1\73\1\0"+
-    "\1\74\1\0\1\74\1\75\1\0\1\30\2\0\1\30"+
-    "\1\163\2\u010d\1\41\1\u010d\3\41\2\u010d\2\41\1\u010d"+
-    "\4\41\1\u010d\11\41\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\3\41"+
-    "\1\u010d\13\41\1\u010d\12\41\1\164\12\165\1\74\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\163"+
-    "\3\41\2\u010d\2\41\2\u010d\1\41\2\u010d\1\41\1\u010d"+
-    "\3\41\1\u010d\1\41\1\u010d\1\41\1\u010d\2\41\1\u010d"+
-    "\1\41\1\164\12\165\1\74\1\161\1\166\1\161\1\0"+
-    "\1\161\1\167\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\7\0"+
-    "\1\u0100\1\0\1\u0101\17\0\1\u0102\2\0\1\u0103\4\0"+
-    "\1\u0104\3\0\1\u0105\22\0\1\u0106\21\0\1\u0107\2\0"+
-    "\1\u0108\60\0\1\220\1\73\6\0\1\220\3\0\1\160"+
-    "\1\334\1\335\1\336\1\337\1\340\1\341\1\342\1\343"+
-    "\1\344\1\345\1\346\1\347\1\350\1\351\1\352\1\353"+
-    "\1\354\1\355\1\356\1\357\1\360\1\361\1\362\1\363"+
-    "\1\364\1\365\1\161\12\165\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\1\206\3\0\2\161\7\0"+
-    "\1\u0100\1\0\1\u0101\17\0\1\u0102\2\0\1\u0103\4\0"+
-    "\1\u0104\3\0\1\u0105\22\0\1\u0106\21\0\1\u0107\2\0"+
-    "\1\u0108\60\0\1\220\1\73\6\0\1\220\3\0\1\160"+
-    "\33\161\12\327\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\211\1\0\1\56\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\212\2\0\1\213"+
-    "\4\0\1\65\3\0\1\214\17\0\1\67\2\0\1\215"+
-    "\21\0\1\216\2\0\1\217\57\0\1\30\2\73\2\0"+
-    "\2\220\1\75\1\0\1\73\2\0\1\30\1\u0122\32\201"+
-    "\1\161\12\327\1\0\1\161\1\166\1\161\1\0\2\326"+
-    "\1\162\3\161\2\0\1\220\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\3\41\1\u0123\26\41\1\164"+
-    "\12\165\1\74\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\32\41\1\164\12\165\1\u0124\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\163"+
-    "\11\41\1\u0125\20\41\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\15\41"+
-    "\1\u0126\14\41\1\164\12\165\1\74\1\161\1\166\1\161"+
-    "\1\0\1\161\1\167\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\324\2\u0127\1\u0128\1\u0129\10\u0127"+
-    "\1\324\1\u012a\5\u0127\6\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\1\u012b\2\u0127\1\324\1\u0127\1\u012c\6\u0127"+
-    "\4\324\4\u0127\1\324\1\u0127\1\324\3\u0127\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\3\324\1\u0127\1\324\1\u0127"+
-    "\4\324\1\u0127\10\324\1\u0127\2\324\1\u0127\2\324\1\u0127"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\324\1\u0127"+
-    "\1\u012d\2\u0127\2\324\1\u0127\6\324\3\u0127\11\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\3\324\1\u0127\1\324"+
-    "\1\u0127\10\324\1\u0127\1\324\2\u0127\10\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\4\324\1\u012e\5\324\1\u0127"+
-    "\17\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\4\324"+
-    "\2\u0127\2\324\1\u0127\1\324\1\u0127\13\324\1\u0127\2\324"+
-    "\1\u0127\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u0127"+
-    "\1\324\3\u0127\1\u012f\14\u0127\2\324\2\u0127\2\324\1\u0127"+
-    "\1\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\2\324"+
-    "\4\u0127\3\324\2\u0127\1\u0130\1\u0127\1\324\2\u0127\12\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\2\u0127\2\324"+
-    "\1\u0127\3\324\1\u0127\5\324\3\u0127\3\324\1\u0127\2\324"+
-    "\3\u0127\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\5\u0127"+
-    "\1\u0131\1\324\1\u0127\1\u0132\7\u0127\1\u0133\3\u0127\1\324"+
-    "\1\u0127\1\324\3\u0127\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\1\u0134\1\u0127\1\324\1\u012b\6\u0127\3\324\1\u0127"+
-    "\2\324\1\u0127\2\324\1\u0127\6\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\u0127\31\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\u0127\2\324\1\u0127\1\u0135\1\324"+
-    "\2\u0127\1\324\3\u0127\2\324\2\u0127\1\324\1\u0127\3\324"+
-    "\1\u0127\2\324\2\u0127\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\6\u0127\1\324\5\u0127\3\324\2\u0127\1\324\10\u0127"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\324\2\u0127"+
-    "\1\u0132\1\u0136\3\u0127\1\324\3\u0127\1\324\1\u0127\1\324"+
-    "\1\u0127\1\324\1\u0127\1\324\1\u0127\1\324\3\u0127\1\324"+
-    "\1\u0127\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u0127"+
-    "\6\324\1\u0127\6\324\1\u0127\4\324\1\u0127\4\324\2\u0127"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\6\324\1\u0127"+
-    "\7\324\1\u0127\13\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\13\324\1\u0137\6\324\1\u0138\7\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\1\u0127\11\324\1\u0127\6\324"+
-    "\1\u0127\10\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\1\u0127\1\324\6\u0127\1\u0139\1\324\2\u0127\2\324\2\u0127"+
-    "\1\324\1\u0127\1\324\6\u0127\1\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\4\324\1\u0127\5\324\2\u0127\3\324"+
-    "\2\u0127\10\324\1\u0127\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\3\324\1\u0127\1\324\1\u013a\4\324\1\u0127\2\324"+
-    "\1\u0127\14\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\2\u0127\1\324\1\u0127\3\324\2\u0127\2\324\1\u0127\4\324"+
-    "\1\u0127\11\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\3\324\1\u0127\13\324\1\u0127\12\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\3\324\2\u0127\2\324\2\u0127\1\324"+
-    "\2\u0127\1\324\1\u0127\3\324\1\u0127\1\324\1\u0127\1\324"+
-    "\1\u0127\2\324\1\u0127\1\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\76\1\0\1\77"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\100\2\0\1\101\4\0\1\102\3\0\1\103"+
-    "\17\0\1\67\2\0\1\104\21\0\1\105\2\0\1\106"+
-    "\57\0\1\30\2\31\2\0\2\107\1\110\1\0\1\31"+
-    "\2\0\1\30\1\u013b\32\41\1\164\12\367\1\0\1\161"+
-    "\1\175\1\161\1\0\2\176\1\162\3\161\2\0\1\107"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\76\1\0\1\77\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\100\2\0\1\101\4\0"+
-    "\1\102\3\0\1\103\17\0\1\67\2\0\1\104\21\0"+
-    "\1\105\2\0\1\106\57\0\1\30\2\31\2\0\2\107"+
-    "\1\110\1\0\1\31\2\0\1\30\1\u013b\32\41\1\164"+
-    "\12\u013c\1\0\1\161\1\175\1\161\1\0\2\176\1\162"+
-    "\3\161\2\0\1\107\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\76\1\0\1\77\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\100"+
-    "\2\0\1\101\4\0\1\102\3\0\1\103\17\0\1\67"+
-    "\2\0\1\104\21\0\1\105\2\0\1\106\57\0\1\30"+
-    "\2\31\2\0\2\107\1\110\1\0\1\31\2\0\1\30"+
-    "\1\u013b\32\41\1\164\1\367\1\u013d\1\u013c\2\367\2\u013c"+
-    "\1\367\1\u013c\1\367\1\0\1\161\1\175\1\161\1\0"+
-    "\2\176\1\162\3\161\2\0\1\107\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\76\1\0\1\77"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\100\2\0\1\101\4\0\1\102\3\0\1\103"+
-    "\17\0\1\67\2\0\1\104\21\0\1\105\2\0\1\106"+
-    "\57\0\1\30\2\31\2\0\2\107\1\110\1\0\1\31"+
-    "\2\0\1\30\1\u013e\32\41\1\164\12\371\1\0\1\161"+
-    "\1\175\1\161\1\0\2\176\1\162\3\161\2\0\1\107"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\221\1\0\1\222\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\223\2\0\1\224\4\0"+
-    "\1\225\3\0\1\226\17\0\1\67\2\0\1\227\21\0"+
-    "\1\230\2\0\1\231\57\0\1\30\1\74\7\0\1\74"+
-    "\2\0\1\30\1\160\32\201\13\161\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\1\206\3\0\2\161"+
-    "\7\0\1\241\1\0\1\242\17\0\1\243\2\0\1\244"+
-    "\4\0\1\245\3\0\1\246\22\0\1\247\21\0\1\250"+
-    "\2\0\1\251\60\0\1\107\1\31\6\0\1\107\3\0"+
-    "\1\160\33\161\12\202\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\1\206\3\0\2\161\213\0\4\u013f"+
-    "\2\0\1\u013f\15\0\1\u013f\6\0\12\u013f\1\375\237\0"+
-    "\4\u0140\2\0\1\u0140\15\0\1\u0140\6\0\12\u0140\1\u0141"+
-    "\237\0\4\u0142\2\0\1\u0142\15\0\1\u0142\6\0\1\u0143"+
-    "\2\u0144\1\u0143\5\u0144\1\u0145\14\0\1\u0146\222\0\46\161"+
-    "\1\0\3\161\1\0\2\161\1\0\3\161\3\0\1\161"+
-    "\1\206\3\0\2\161\72\0\1\220\2\0\1\220\23\0"+
-    "\4\220\201\0\1\73\132\0\1\73\207\0\1\73\45\0"+
-    "\1\220\21\0\1\73\142\0\1\73\11\0\1\220\44\0"+
-    "\1\220\1\0\2\220\21\0\1\220\4\0\1\220\7\0"+
-    "\4\220\3\0\1\220\12\0\4\73\4\0\1\220\301\0"+
-    "\2\73\264\0\1\220\311\0\4\220\251\0\2\220\15\0"+
-    "\4\220\154\0\1\220\15\0\2\220\10\0\2\220\1\0"+
-    "\1\220\1\0\1\220\11\0\1\220\11\0\2\220\6\0"+
-    "\1\220\2\0\4\220\3\0\1\220\2\0\2\220\1\0"+
-    "\3\220\5\0\1\220\1\0\2\220\2\0\2\220\1\0"+
-    "\4\220\5\0\1\220\1\0\2\220\344\0\1\u0147\1\u0148"+
-    "\1\u0149\1\u014a\1\u014b\1\u014c\1\u014d\1\u014e\1\u014f\1\u0150"+
-    "\1\u0151\1\u0152\1\u0153\1\u0154\1\u0155\1\u0156\1\u0157\1\u0158"+
-    "\1\u0159\1\u015a\1\u015b\1\u015c\1\u015d\1\u015e\1\u015f\1\u0160"+
-    "\1\0\12\270\240\0\32\270\1\u010a\12\270\237\0\74\271"+
-    "\1\0\1\53\1\0\1\54\2\0\1\55\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\63\2\0\1\64\4\0\1\65\3\0\1\66"+
-    "\17\0\1\67\2\0\1\70\21\0\1\71\2\0\1\72"+
-    "\57\0\2\30\1\73\1\0\1\74\1\0\1\74\1\75"+
-    "\1\0\1\30\2\0\1\30\1\u0161\32\41\1\164\12\165"+
-    "\1\u0162\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\u0161\4\41\1\u0166\25\41\1\164"+
-    "\12\165\1\u0162\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\55\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\63\2\0\1\64\4\0\1\65\3\0\1\66"+
-    "\17\0\1\67\2\0\1\70\21\0\1\71\2\0\1\72"+
-    "\57\0\2\30\1\73\1\0\1\74\1\0\1\74\1\75"+
-    "\1\0\1\30\2\0\1\30\1\u0161\15\41\1\306\14\41"+
-    "\1\164\12\165\1\u0162\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\u0161\10\41\1\306"+
-    "\21\41\1\164\12\165\1\u0162\1\161\1\166\1\161\1\0"+
-    "\1\161\1\167\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\u0161\17\41"+
-    "\1\u010d\12\41\1\164\12\165\1\u0162\1\161\1\166\1\161"+
-    "\1\0\1\161\1\167\1\162\1\u0163\1\u0164\1\u0165\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\u0161"+
-    "\5\41\1\u0167\4\41\1\u010d\17\41\1\164\12\165\1\u0162"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\1\u0163"+
-    "\1\u0164\1\u0165\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\20\41\1\u010d\11\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\7\41\1\u010d\22\41\1\164\12\165\1\74"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\55\1\0\1\56\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\63\2\0\1\64"+
-    "\4\0\1\65\3\0\1\66\17\0\1\67\2\0\1\70"+
-    "\21\0\1\71\2\0\1\72\57\0\2\30\1\73\1\0"+
-    "\1\74\1\0\1\74\1\75\1\0\1\30\2\0\1\30"+
-    "\1\163\27\41\1\u010d\2\41\1\164\12\165\1\74\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\u0161"+
-    "\6\41\1\u0166\10\41\1\u010d\12\41\1\164\12\165\1\u0162"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\1\u0163"+
-    "\1\u0164\1\u0165\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\u0161\24\41\1\u0168\5\41\1\164\12\165"+
-    "\1\u0162\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\11\41\1\u010d\20\41\1\164"+
-    "\12\165\1\74\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\u0161\16\41\1\u0169\13\41\1\164\12\165"+
-    "\1\u0162\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\u0161\12\41\1\u016a\17\41\1\164"+
-    "\12\165\1\u0162\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\55\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\63\2\0\1\64\4\0\1\65\3\0\1\66"+
-    "\17\0\1\67\2\0\1\70\21\0\1\71\2\0\1\72"+
-    "\57\0\2\30\1\73\1\0\1\74\1\0\1\74\1\75"+
-    "\1\0\1\30\2\0\1\30\1\u0161\5\41\1\u010d\24\41"+
-    "\1\164\12\165\1\u0162\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\u0161\1\u016b\31\41"+
-    "\1\164\12\165\1\u0162\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\32\41\1\u016c"+
-    "\12\165\1\74\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\22\41\1\u010d\7\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\u0161\23\41\1\u010d\6\41\1\164\12\165\1\u0162"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\1\u0163"+
-    "\1\u0164\1\u0165\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\u0161\24\41\1\u016d\5\41\1\164\12\165"+
-    "\1\u0162\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161\212\0"+
-    "\1\160\1\334\1\335\1\336\1\337\1\340\1\341\1\342"+
-    "\1\343\1\344\1\345\1\346\1\347\1\350\1\351\1\352"+
-    "\1\353\1\354\1\355\1\356\1\357\1\360\1\361\1\362"+
-    "\1\363\1\364\1\365\1\161\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\1\206\3\0\2\161"+
-    "\7\0\1\u0100\1\0\1\u0101\17\0\1\u0102\2\0\1\u0103"+
-    "\4\0\1\u0104\3\0\1\u0105\22\0\1\u0106\21\0\1\u0107"+
-    "\2\0\1\u0108\60\0\1\220\1\73\6\0\1\220\3\0"+
-    "\1\160\33\161\12\327\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\1\206\3\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\32\41\1\164\12\165\1\u016e\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\221\1\0\1\222\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\223\2\0\1\224\4\0"+
-    "\1\225\3\0\1\226\17\0\1\67\2\0\1\227\21\0"+
-    "\1\230\2\0\1\231\57\0\1\30\1\74\7\0\1\74"+
-    "\2\0\1\30\1\0\32\30\24\0\1\u016f\15\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\17\41\1\u0170\12\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\16\41\1\u0171\13\41\1\164\12\165\1\u0172"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0173\32\324\1\164"+
-    "\12\324\1\u0174\3\161\1\0\2\161\1\162\1\u0163\1\u0164"+
-    "\1\u0165\3\0\1\161\4\0\2\161\212\0\1\u0173\4\324"+
-    "\1\u0175\25\324\1\164\12\324\1\u0174\3\161\1\0\2\161"+
-    "\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0173\15\324\1\350\14\324\1\164\12\324\1\u0174"+
-    "\3\161\1\0\2\161\1\162\1\u0163\1\u0164\1\u0165\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0173\10\324\1\350\21\324"+
-    "\1\164\12\324\1\u0174\3\161\1\0\2\161\1\162\1\u0163"+
-    "\1\u0164\1\u0165\3\0\1\161\4\0\2\161\212\0\1\u0173"+
-    "\17\324\1\u0127\12\324\1\164\12\324\1\u0174\3\161\1\0"+
-    "\2\161\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0173\5\324\1\u0176\4\324\1\u0127\17\324"+
-    "\1\164\12\324\1\u0174\3\161\1\0\2\161\1\162\1\u0163"+
-    "\1\u0164\1\u0165\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\20\324\1\u0127\11\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\7\324\1\u0127\22\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\27\324\1\u0127\2\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0173\6\324\1\u0175\10\324\1\u0127\12\324"+
-    "\1\164\12\324\1\u0174\3\161\1\0\2\161\1\162\1\u0163"+
-    "\1\u0164\1\u0165\3\0\1\161\4\0\2\161\212\0\1\u0173"+
-    "\24\324\1\u0177\5\324\1\164\12\324\1\u0174\3\161\1\0"+
-    "\2\161\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\11\324\1\u0127\20\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0173\16\324\1\u0178\13\324\1\164"+
-    "\12\324\1\u0174\3\161\1\0\2\161\1\162\1\u0163\1\u0164"+
-    "\1\u0165\3\0\1\161\4\0\2\161\212\0\1\u0173\12\324"+
-    "\1\u0179\17\324\1\164\12\324\1\u0174\3\161\1\0\2\161"+
-    "\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0173\5\324\1\u0127\24\324\1\164\12\324\1\u0174"+
-    "\3\161\1\0\2\161\1\162\1\u0163\1\u0164\1\u0165\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0173\1\u017a\31\324\1\164"+
-    "\12\324\1\u0174\3\161\1\0\2\161\1\162\1\u0163\1\u0164"+
-    "\1\u0165\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\u016c\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\22\324\1\u0127"+
-    "\7\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0173\23\324"+
-    "\1\u0127\6\324\1\164\12\324\1\u0174\3\161\1\0\2\161"+
-    "\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0173\24\324\1\u017b\5\324\1\164\12\324\1\u0174"+
-    "\3\161\1\0\2\161\1\162\1\u0163\1\u0164\1\u0165\3\0"+
-    "\1\161\4\0\2\161\7\0\1\241\1\0\1\242\17\0"+
-    "\1\243\2\0\1\244\4\0\1\245\3\0\1\246\22\0"+
-    "\1\247\21\0\1\250\2\0\1\251\60\0\1\107\1\31"+
-    "\6\0\1\107\3\0\1\160\1\334\1\335\1\336\1\337"+
-    "\1\340\1\341\1\342\1\343\1\344\1\345\1\346\1\347"+
-    "\1\350\1\351\1\352\1\353\1\354\1\355\1\356\1\357"+
-    "\1\360\1\361\1\362\1\363\1\364\1\365\1\161\1\u017c"+
-    "\2\u017d\1\u017c\5\u017d\1\u017e\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\1\206\3\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\76\1\0\1\77\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\100\2\0\1\101\4\0\1\102\3\0\1\103\17\0"+
-    "\1\67\2\0\1\104\21\0\1\105\2\0\1\106\57\0"+
-    "\1\30\2\31\2\0\2\107\1\110\1\0\1\31\2\0"+
-    "\1\30\1\u013b\32\41\1\164\12\371\1\0\1\161\1\175"+
-    "\1\161\1\0\2\176\1\162\3\161\2\0\1\107\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\76"+
-    "\1\0\1\77\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\100\2\0\1\101\4\0\1\102"+
-    "\3\0\1\103\17\0\1\67\2\0\1\104\21\0\1\105"+
-    "\2\0\1\106\57\0\1\30\2\31\2\0\2\107\1\110"+
-    "\1\0\1\31\2\0\1\30\1\u013b\32\41\1\164\2\u013c"+
-    "\1\371\2\u013c\2\371\1\u013c\1\371\1\u013c\1\0\1\161"+
-    "\1\175\1\161\1\0\2\176\1\162\3\161\2\0\1\107"+
-    "\1\161\4\0\2\161\7\0\1\241\1\0\1\242\17\0"+
-    "\1\243\2\0\1\244\4\0\1\245\3\0\1\246\22\0"+
-    "\1\247\21\0\1\250\2\0\1\251\60\0\1\107\1\31"+
-    "\6\0\1\107\3\0\1\160\1\334\1\335\1\336\1\337"+
-    "\1\340\1\341\1\342\1\343\1\344\1\345\1\346\1\347"+
-    "\1\350\1\351\1\352\1\353\1\354\1\355\1\356\1\357"+
-    "\1\360\1\361\1\362\1\363\1\364\1\365\1\161\12\371"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\1\206\3\0\2\161\213\0\4\u017f\2\0\1\u017f\15\0"+
-    "\1\u017f\6\0\12\u017f\1\375\237\0\4\u0180\2\0\1\u0180"+
-    "\15\0\1\u0180\6\0\12\u0180\1\u0181\237\0\4\u0182\2\0"+
-    "\1\u0182\15\0\1\u0182\6\0\1\u0183\2\u0184\1\u0183\5\u0184"+
-    "\1\u0185\14\0\1\u0146\223\0\4\u0186\2\0\1\u0186\15\0"+
-    "\1\u0186\6\0\12\u0186\1\u0187\13\0\1\u0146\222\0\1\u0188"+
-    "\4\u0186\2\0\1\u0186\15\0\1\u0186\6\0\12\u0189\1\u0187"+
-    "\13\0\1\u0146\222\0\1\u0188\4\u0186\2\0\1\u0186\15\0"+
-    "\1\u0186\6\0\12\u018a\1\u0187\13\0\1\u0146\222\0\1\u0188"+
-    "\4\u0186\2\0\1\u0186\15\0\1\u0186\6\0\1\u0189\1\u018b"+
-    "\1\u018a\2\u0189\2\u018a\1\u0189\1\u018a\1\u0189\1\u0187\13\0"+
-    "\1\u0146\270\0\1\u0174\7\0\1\u018c\1\u018d\1\u018e\224\0"+
-    "\1\u0109\1\270\2\u018f\1\u0190\1\u0191\10\u018f\1\270\1\u0192"+
-    "\5\u018f\6\270\1\u010a\12\270\237\0\1\u0109\1\u0193\2\u018f"+
-    "\1\270\1\u018f\1\u0194\6\u018f\4\270\4\u018f\1\270\1\u018f"+
-    "\1\270\3\u018f\1\u010a\12\270\237\0\1\u0109\3\270\1\u018f"+
-    "\1\270\1\u018f\4\270\1\u018f\10\270\1\u018f\2\270\1\u018f"+
-    "\2\270\1\u018f\1\u010a\12\270\237\0\1\u0109\1\270\1\u018f"+
-    "\1\u0195\2\u018f\2\270\1\u018f\6\270\3\u018f\11\270\1\u010a"+
-    "\12\270\237\0\1\u0109\3\270\1\u018f\1\270\1\u018f\10\270"+
-    "\1\u018f\1\270\2\u018f\10\270\1\u010a\12\270\237\0\1\u0109"+
-    "\4\270\1\u0196\5\270\1\u018f\17\270\1\u010a\12\270\237\0"+
-    "\1\u0109\4\270\2\u018f\2\270\1\u018f\1\270\1\u018f\13\270"+
-    "\1\u018f\2\270\1\u018f\1\u010a\12\270\237\0\1\u0109\1\u018f"+
-    "\1\270\3\u018f\1\u0197\14\u018f\2\270\2\u018f\2\270\1\u018f"+
-    "\1\270\1\u010a\12\270\237\0\1\u0109\2\270\4\u018f\3\270"+
-    "\2\u018f\1\u0198\1\u018f\1\270\2\u018f\12\270\1\u010a\12\270"+
-    "\237\0\1\u0109\2\u018f\2\270\1\u018f\3\270\1\u018f\5\270"+
-    "\3\u018f\3\270\1\u018f\2\270\3\u018f\1\u010a\12\270\237\0"+
-    "\1\u0109\5\u018f\1\u0199\1\270\1\u018f\1\u019a\7\u018f\1\u019b"+
-    "\3\u018f\1\270\1\u018f\1\270\3\u018f\1\u010a\12\270\237\0"+
-    "\1\u0109\1\u019c\1\u018f\1\270\1\u0193\6\u018f\3\270\1\u018f"+
-    "\2\270\1\u018f\2\270\1\u018f\6\270\1\u010a\12\270\237\0"+
-    "\1\u0109\1\u018f\31\270\1\u010a\12\270\237\0\1\u0109\1\u018f"+
-    "\2\270\1\u018f\1\u019d\1\270\2\u018f\1\270\3\u018f\2\270"+
-    "\2\u018f\1\270\1\u018f\3\270\1\u018f\2\270\2\u018f\1\u010a"+
-    "\12\270\237\0\1\u0109\6\u018f\1\270\5\u018f\3\270\2\u018f"+
-    "\1\270\10\u018f\1\u010a\12\270\237\0\1\u0109\1\270\2\u018f"+
-    "\1\u019a\1\u019e\3\u018f\1\270\3\u018f\1\270\1\u018f\1\270"+
-    "\1\u018f\1\270\1\u018f\1\270\1\u018f\1\270\3\u018f\1\270"+
-    "\1\u018f\1\u010a\12\270\237\0\1\u0109\1\u018f\6\270\1\u018f"+
-    "\6\270\1\u018f\4\270\1\u018f\4\270\2\u018f\1\u010a\12\270"+
-    "\237\0\1\u0109\6\270\1\u018f\7\270\1\u018f\13\270\1\u010a"+
-    "\12\270\237\0\1\u0109\13\270\1\u019f\6\270\1\u01a0\7\270"+
-    "\1\u010a\12\270\237\0\1\u0109\1\u018f\11\270\1\u018f\6\270"+
-    "\1\u018f\10\270\1\u010a\12\270\237\0\1\u0109\1\u018f\1\270"+
-    "\6\u018f\1\u01a1\1\270\2\u018f\2\270\2\u018f\1\270\1\u018f"+
-    "\1\270\6\u018f\1\270\1\u010a\12\270\237\0\1\u0109\4\270"+
-    "\1\u018f\5\270\2\u018f\3\270\2\u018f\10\270\1\u018f\1\u010a"+
-    "\12\270\237\0\1\u0109\3\270\1\u018f\1\270\1\u01a2\4\270"+
-    "\1\u018f\2\270\1\u018f\14\270\1\u010a\12\270\237\0\1\u0109"+
-    "\2\u018f\1\270\1\u018f\3\270\2\u018f\2\270\1\u018f\4\270"+
-    "\1\u018f\11\270\1\u010a\12\270\237\0\1\u0109\3\270\1\u018f"+
-    "\13\270\1\u018f\12\270\1\u010a\12\270\237\0\1\u0109\3\270"+
-    "\2\u018f\2\270\2\u018f\1\270\2\u018f\1\270\1\u018f\3\270"+
-    "\1\u018f\1\270\1\u018f\1\270\1\u018f\2\270\1\u018f\1\270"+
-    "\1\u010a\12\270\27\0\1\53\1\0\1\54\2\0\1\221"+
-    "\1\0\1\222\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\223\2\0\1\224\4\0\1\225"+
-    "\3\0\1\226\17\0\1\67\2\0\1\227\21\0\1\230"+
-    "\2\0\1\231\57\0\1\30\1\74\7\0\1\74\2\0"+
-    "\1\30\1\160\1\272\1\273\1\274\1\275\1\276\1\277"+
-    "\1\300\1\301\1\302\1\303\1\304\1\305\1\306\1\307"+
-    "\1\310\1\311\1\312\1\313\1\314\1\315\1\316\1\317"+
-    "\1\320\1\321\1\322\1\323\1\161\12\324\1\u0174\3\161"+
-    "\1\0\2\161\1\162\1\u0163\1\u0164\1\u0165\3\0\1\161"+
-    "\1\206\3\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\221\1\0\1\222\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\223\2\0\1\224\4\0"+
-    "\1\225\3\0\1\226\17\0\1\67\2\0\1\227\21\0"+
-    "\1\230\2\0\1\231\57\0\1\30\1\74\7\0\1\74"+
-    "\2\0\1\30\1\0\32\30\1\0\12\u01a3\237\0\1\u01a4"+
-    "\45\u0163\1\u018c\2\u0163\1\u01a5\1\u018c\2\u0163\1\u01a6\2\u0163"+
-    "\1\u0165\2\0\1\u018c\1\u0163\4\0\1\u0163\1\161\212\0"+
-    "\1\u01a7\45\u0164\1\u018d\2\u0164\1\u01a8\1\0\2\161\1\u01a9"+
-    "\1\u0163\1\u0164\1\u0165\2\0\1\u018d\1\u0164\4\0\2\161"+
-    "\212\0\1\u01aa\45\u0165\1\u018e\2\u0165\1\u01ab\1\u018e\2\u0165"+
-    "\1\u01ac\2\u0165\1\161\2\0\1\u018e\1\u0165\4\0\1\u0165"+
-    "\1\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\5\41\1\u010d"+
-    "\24\41\1\164\12\165\1\74\1\161\1\166\1\161\1\0"+
-    "\1\161\1\167\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\2\0\1\53\1\0\1\54\2\0\1\55\1\0\1\56"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\63\2\0\1\64\4\0\1\65\3\0\1\66"+
-    "\17\0\1\67\2\0\1\70\21\0\1\71\2\0\1\72"+
-    "\57\0\2\30\1\73\1\0\1\74\1\0\1\74\1\75"+
-    "\1\0\1\30\2\0\1\30\1\163\15\41\1\u010d\14\41"+
-    "\1\164\12\165\1\74\1\161\1\166\1\161\1\0\1\161"+
-    "\1\167\1\162\3\161\3\0\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\163\10\41\1\u010d\21\41\1\164"+
-    "\12\165\1\74\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\3\41\1\u01ad\26\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\3\41\1\u010d\26\41\1\164\12\165\1\74"+
-    "\1\161\1\166\1\161\1\0\1\161\1\167\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\55\1\0\1\56\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\63\2\0\1\64"+
-    "\4\0\1\65\3\0\1\66\17\0\1\67\2\0\1\70"+
-    "\21\0\1\71\2\0\1\72\57\0\2\30\1\73\1\0"+
-    "\1\74\1\0\1\74\1\75\1\0\1\30\2\0\1\30"+
-    "\1\163\27\41\1\u01ae\2\41\1\164\12\165\1\74\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\160\32\324\1\u01af\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\55"+
-    "\1\0\1\56\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\63\2\0\1\64\4\0\1\65"+
-    "\3\0\1\66\17\0\1\67\2\0\1\70\21\0\1\71"+
-    "\2\0\1\72\57\0\2\30\1\73\1\0\1\74\1\0"+
-    "\1\74\1\75\1\0\1\30\2\0\1\30\1\163\16\41"+
-    "\1\u010d\13\41\1\164\12\165\1\74\1\161\1\166\1\161"+
-    "\1\0\1\161\1\167\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\221\1\0"+
-    "\1\222\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\223\2\0\1\224\4\0\1\225\3\0"+
-    "\1\226\17\0\1\67\2\0\1\227\21\0\1\230\2\0"+
-    "\1\231\57\0\1\30\1\74\7\0\1\74\2\0\1\30"+
-    "\1\0\32\30\24\0\1\u01b0\304\0\1\u01b1\15\0\1\53"+
-    "\1\0\1\54\2\0\1\55\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\63"+
-    "\2\0\1\64\4\0\1\65\3\0\1\66\17\0\1\67"+
-    "\2\0\1\70\21\0\1\71\2\0\1\72\57\0\2\30"+
-    "\1\73\1\0\1\74\1\0\1\74\1\75\1\0\1\30"+
-    "\2\0\1\30\1\163\5\41\1\u01b2\24\41\1\164\12\165"+
-    "\1\74\1\161\1\166\1\161\1\0\1\161\1\167\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\55\1\0\1\56\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\63\2\0"+
-    "\1\64\4\0\1\65\3\0\1\66\17\0\1\67\2\0"+
-    "\1\70\21\0\1\71\2\0\1\72\57\0\2\30\1\73"+
-    "\1\0\1\74\1\0\1\74\1\75\1\0\1\30\2\0"+
-    "\1\30\1\163\32\41\1\164\12\165\1\u0172\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\221"+
-    "\1\0\1\222\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\223\2\0\1\224\4\0\1\225"+
-    "\3\0\1\226\17\0\1\67\2\0\1\227\21\0\1\230"+
-    "\2\0\1\231\57\0\1\30\1\74\7\0\1\74\2\0"+
-    "\1\30\1\0\32\30\24\0\1\u01b3\225\0\1\160\1\334"+
-    "\1\335\1\336\1\337\1\340\1\341\1\342\1\343\1\344"+
-    "\1\345\1\346\1\347\1\350\1\351\1\352\1\353\1\354"+
-    "\1\355\1\356\1\357\1\360\1\361\1\362\1\363\1\364"+
-    "\1\365\1\161\12\324\1\u0174\3\161\1\0\2\161\1\162"+
-    "\1\u0163\1\u0164\1\u0165\3\0\1\161\1\206\3\0\2\161"+
-    "\246\0\12\u01a3\237\0\1\u0121\5\324\1\u0127\24\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\15\324\1\u0127\14\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\10\324\1\u0127"+
-    "\21\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\3\324"+
-    "\1\u01b4\26\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\3\324\1\u0127\26\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\27\324\1\u01b5\2\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\16\324\1\u0127\13\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\76\1\0"+
-    "\1\77\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\100\2\0\1\101\4\0\1\102\3\0"+
-    "\1\103\17\0\1\67\2\0\1\104\21\0\1\105\2\0"+
-    "\1\106\57\0\1\30\2\31\2\0\2\107\1\110\1\0"+
-    "\1\31\2\0\1\30\1\u01b6\32\41\1\164\12\u017d\1\0"+
-    "\1\161\1\175\1\161\1\0\2\176\1\162\3\161\2\0"+
-    "\1\107\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\76\1\0\1\77\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\100\2\0\1\101"+
-    "\4\0\1\102\3\0\1\103\17\0\1\67\2\0\1\104"+
-    "\21\0\1\105\2\0\1\106\57\0\1\30\2\31\2\0"+
-    "\2\107\1\110\1\0\1\31\2\0\1\30\1\u01b6\32\41"+
-    "\1\164\12\u01b7\1\0\1\161\1\175\1\161\1\0\2\176"+
-    "\1\162\3\161\2\0\1\107\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\76\1\0\1\77\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\100\2\0\1\101\4\0\1\102\3\0\1\103\17\0"+
-    "\1\67\2\0\1\104\21\0\1\105\2\0\1\106\57\0"+
-    "\1\30\2\31\2\0\2\107\1\110\1\0\1\31\2\0"+
-    "\1\30\1\u01b6\32\41\1\164\1\u017d\1\u01b8\1\u01b7\2\u017d"+
-    "\2\u01b7\1\u017d\1\u01b7\1\u017d\1\0\1\161\1\175\1\161"+
-    "\1\0\2\176\1\162\3\161\2\0\1\107\1\161\4\0"+
-    "\2\161\260\0\1\375\237\0\4\u01b9\2\0\1\u01b9\15\0"+
-    "\1\u01b9\6\0\12\u01b9\1\u0181\237\0\4\u01ba\2\0\1\u01ba"+
-    "\15\0\1\u01ba\6\0\12\u01ba\1\u01bb\237\0\4\u01bc\2\0"+
-    "\1\u01bc\15\0\1\u01bc\6\0\12\u01bc\1\u01bd\13\0\1\u0146"+
-    "\222\0\1\u0188\4\u01bc\2\0\1\u01bc\15\0\1\u01bc\6\0"+
-    "\12\u01be\1\u01bd\13\0\1\u0146\222\0\1\u0188\4\u01bc\2\0"+
-    "\1\u01bc\15\0\1\u01bc\6\0\12\u01bf\1\u01bd\13\0\1\u0146"+
-    "\222\0\1\u0188\4\u01bc\2\0\1\u01bc\15\0\1\u01bc\6\0"+
-    "\1\u01be\1\u01c0\1\u01bf\2\u01be\2\u01bf\1\u01be\1\u01bf\1\u01be"+
-    "\1\u01bd\13\0\1\u0146\223\0\4\u01c1\2\0\1\u01c1\15\0"+
-    "\1\u01c1\6\0\12\u01c1\1\u0187\13\0\1\u0146\223\0\4\u0182"+
-    "\2\0\1\u0182\15\0\1\u0182\6\0\1\u0183\2\u0184\1\u0183"+
-    "\5\u0184\1\u0185\273\0\1\u01c2\2\u01c3\1\u01c2\5\u01c3\1\u01c4"+
-    "\237\0\1\u0188\4\u01c1\2\0\1\u01c1\15\0\1\u01c1\6\0"+
-    "\12\u01c5\1\u0187\13\0\1\u0146\222\0\1\u0188\4\u01c1\2\0"+
-    "\1\u01c1\15\0\1\u01c1\6\0\12\u01c1\1\u0187\13\0\1\u0146"+
-    "\222\0\1\u0188\4\u01c1\2\0\1\u01c1\15\0\1\u01c1\6\0"+
-    "\2\u01c5\1\u01c1\2\u01c5\2\u01c1\1\u01c5\1\u01c1\1\u01c5\1\u0187"+
-    "\13\0\1\u0146\222\0\51\u018c\1\u01c6\6\u018c\1\u018e\2\0"+
-    "\2\u018c\4\0\1\u018c\213\0\51\u018d\1\u01c7\3\0\1\u018d"+
-    "\1\u018c\1\u018d\1\u018e\2\0\2\u018d\220\0\51\u018e\1\u01c8"+
-    "\6\u018e\3\0\2\u018e\4\0\1\u018e\213\0\1\u01c9\32\270"+
-    "\1\u010a\12\270\237\0\1\u01c9\4\270\1\u01ca\25\270\1\u010a"+
-    "\12\270\237\0\1\u01c9\15\270\1\u0153\14\270\1\u010a\12\270"+
-    "\237\0\1\u01c9\10\270\1\u0153\21\270\1\u010a\12\270\237\0"+
-    "\1\u01c9\17\270\1\u018f\12\270\1\u010a\12\270\237\0\1\u01c9"+
-    "\5\270\1\u01cb\4\270\1\u018f\17\270\1\u010a\12\270\237\0"+
-    "\1\u0109\20\270\1\u018f\11\270\1\u010a\12\270\237\0\1\u0109"+
-    "\7\270\1\u018f\22\270\1\u010a\12\270\237\0\1\u0109\27\270"+
-    "\1\u018f\2\270\1\u010a\12\270\237\0\1\u01c9\6\270\1\u01ca"+
-    "\10\270\1\u018f\12\270\1\u010a\12\270\237\0\1\u01c9\24\270"+
-    "\1\u01cc\5\270\1\u010a\12\270\237\0\1\u0109\11\270\1\u018f"+
-    "\20\270\1\u010a\12\270\237\0\1\u01c9\16\270\1\u01cd\13\270"+
-    "\1\u010a\12\270\237\0\1\u01c9\12\270\1\u01ce\17\270\1\u010a"+
-    "\12\270\237\0\1\u01c9\5\270\1\u018f\24\270\1\u010a\12\270"+
-    "\237\0\1\u01c9\1\u01cf\31\270\1\u010a\12\270\237\0\1\u0109"+
-    "\32\270\1\u01d0\12\270\237\0\1\u0109\22\270\1\u018f\7\270"+
-    "\1\u010a\12\270\237\0\1\u01c9\23\270\1\u018f\6\270\1\u010a"+
-    "\12\270\237\0\1\u01c9\24\270\1\u01d1\5\270\1\u010a\12\270"+
-    "\273\0\12\u01d2\10\0\1\u018c\1\u018d\1\u018e\224\0\1\u01a4"+
-    "\45\u0163\1\u018c\2\u0163\1\u01a5\1\u018c\2\u0163\1\u01a6\2\u0163"+
-    "\1\u0165\2\0\1\u018c\1\u0163\1\206\3\0\1\u0163\1\161"+
-    "\212\0\1\160\4\u01d3\2\161\1\u01d3\15\161\1\u01d3\6\161"+
-    "\12\u01d3\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\51\u018c\1\u01c6\6\u018c\1\u018e"+
-    "\1\271\1\0\2\u018c\4\0\1\u018c\213\0\1\u01a7\45\u0164"+
-    "\1\u018d\2\u0164\1\u01a8\1\0\2\161\1\u01a9\1\u0163\1\u0164"+
-    "\1\u0165\2\0\1\u018d\1\u0164\1\206\3\0\2\161\212\0"+
-    "\1\160\4\u01d4\2\161\1\u01d4\15\161\1\u01d4\6\161\12\u01d4"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\51\u018d\1\u01c7\3\0\1\u018d\1\u018c"+
-    "\1\u018d\1\u018e\1\271\1\0\2\u018d\220\0\1\u01aa\45\u0165"+
-    "\1\u018e\2\u0165\1\u01ab\1\u018e\2\u0165\1\u01ac\2\u0165\1\161"+
-    "\2\0\1\u018e\1\u0165\1\206\3\0\1\u0165\1\161\212\0"+
-    "\1\160\4\u01d5\2\161\1\u01d5\15\161\1\u01d5\6\161\12\u01d5"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\51\u018e\1\u01c8\6\u018e\1\0\1\271"+
-    "\1\0\2\u018e\4\0\1\u018e\3\0\1\53\1\0\1\54"+
-    "\2\0\1\55\1\0\1\56\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\63\2\0\1\64"+
-    "\4\0\1\65\3\0\1\66\17\0\1\67\2\0\1\70"+
-    "\21\0\1\71\2\0\1\72\57\0\2\30\1\73\1\0"+
-    "\1\74\1\0\1\74\1\75\1\0\1\30\2\0\1\30"+
-    "\1\163\20\41\1\u01d6\11\41\1\164\12\165\1\74\1\161"+
-    "\1\166\1\161\1\0\1\161\1\167\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\2\0\1\53\1\0\1\54\2\0"+
-    "\1\55\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\63\2\0\1\64\4\0"+
-    "\1\65\3\0\1\66\17\0\1\67\2\0\1\70\21\0"+
-    "\1\71\2\0\1\72\57\0\2\30\1\73\1\0\1\74"+
-    "\1\0\1\74\1\75\1\0\1\30\2\0\1\30\1\163"+
-    "\3\41\1\u0118\26\41\1\164\12\165\1\74\1\161\1\166"+
-    "\1\161\1\0\1\161\1\167\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\160\1\324\1\u01d7\1\u01d8\2\324"+
-    "\1\u01d9\1\u01da\1\u01db\1\324\1\u01dc\1\u01dd\2\324\1\u01de"+
-    "\1\u01df\2\324\1\u01e0\1\u01e1\1\u01e2\1\324\1\u01e3\1\u01e4"+
-    "\1\324\1\u01e5\1\u01e6\1\164\1\u01e7\2\324\1\u01e8\1\u01e9"+
-    "\1\u01ea\1\324\1\u01eb\1\u01ec\1\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\271\0"+
-    "\1\u01ed\225\0\1\u01ee\32\u01ef\1\u01ee\12\u01ef\1\u01f0\2\u01ee"+
-    "\1\u01f1\3\u01ee\1\u01f2\3\0\1\u01f3\1\0\2\u01ee\4\0"+
-    "\1\u01ee\3\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\32\41\1\164"+
-    "\12\165\1\u01f4\1\161\1\166\1\161\1\0\1\161\1\167"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\271\0\1\u01f5"+
-    "\225\0\1\u0121\20\324\1\u01f6\11\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\3\324\1\u0132\26\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\7\0\1\241\1\0\1\242\17\0\1\243"+
-    "\2\0\1\244\4\0\1\245\3\0\1\246\22\0\1\247"+
-    "\21\0\1\250\2\0\1\251\60\0\1\107\1\31\6\0"+
-    "\1\107\3\0\1\160\1\334\1\335\1\336\1\337\1\340"+
-    "\1\341\1\342\1\343\1\344\1\345\1\346\1\347\1\350"+
-    "\1\351\1\352\1\353\1\354\1\355\1\356\1\357\1\360"+
-    "\1\361\1\362\1\363\1\364\1\365\1\161\1\u01f7\2\u01f8"+
-    "\1\u01f7\5\u01f8\1\u01f9\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\1\206\3\0\2\161\2\0\1\53"+
-    "\1\0\1\54\2\0\1\76\1\0\1\77\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\100"+
-    "\2\0\1\101\4\0\1\102\3\0\1\103\17\0\1\67"+
-    "\2\0\1\104\21\0\1\105\2\0\1\106\57\0\1\30"+
-    "\2\31\2\0\2\107\1\110\1\0\1\31\2\0\1\30"+
-    "\1\u01b6\32\41\1\164\12\371\1\0\1\161\1\175\1\161"+
-    "\1\0\2\176\1\162\3\161\2\0\1\107\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\76\1\0"+
-    "\1\77\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\100\2\0\1\101\4\0\1\102\3\0"+
-    "\1\103\17\0\1\67\2\0\1\104\21\0\1\105\2\0"+
-    "\1\106\57\0\1\30\2\31\2\0\2\107\1\110\1\0"+
-    "\1\31\2\0\1\30\1\u01b6\32\41\1\164\2\u01b7\1\371"+
-    "\2\u01b7\2\371\1\u01b7\1\371\1\u01b7\1\0\1\161\1\175"+
-    "\1\161\1\0\2\176\1\162\3\161\2\0\1\107\1\161"+
-    "\4\0\2\161\213\0\4\u01fa\2\0\1\u01fa\15\0\1\u01fa"+
-    "\6\0\12\u01fa\1\u0181\237\0\4\u01fb\2\0\1\u01fb\15\0"+
-    "\1\u01fb\6\0\12\u01fb\1\u01fc\237\0\4\u01fd\2\0\1\u01fd"+
-    "\15\0\1\u01fd\6\0\1\u01fe\2\u01ff\1\u01fe\5\u01ff\1\u0200"+
-    "\14\0\1\u0146\223\0\4\u0201\2\0\1\u0201\15\0\1\u0201"+
-    "\6\0\12\u0201\1\u01bd\13\0\1\u0146\223\0\4\u01fd\2\0"+
-    "\1\u01fd\15\0\1\u01fd\6\0\1\u01fe\2\u01ff\1\u01fe\5\u01ff"+
-    "\1\u0200\237\0\1\u0188\4\u0201\2\0\1\u0201\15\0\1\u0201"+
-    "\6\0\12\u0202\1\u01bd\13\0\1\u0146\222\0\1\u0188\4\u0201"+
-    "\2\0\1\u0201\15\0\1\u0201\6\0\12\u0201\1\u01bd\13\0"+
-    "\1\u0146\222\0\1\u0188\4\u0201\2\0\1\u0201\15\0\1\u0201"+
-    "\6\0\2\u0202\1\u0201\2\u0202\2\u0201\1\u0202\1\u0201\1\u0202"+
-    "\1\u01bd\13\0\1\u0146\223\0\4\u0203\2\0\1\u0203\15\0"+
-    "\1\u0203\6\0\12\u0203\1\u0187\13\0\1\u0146\222\0\1\u0204"+
-    "\33\0\12\u01c3\237\0\1\u0204\33\0\12\u0205\237\0\1\u0204"+
-    "\33\0\1\u01c3\1\u0206\1\u0205\2\u01c3\2\u0205\1\u01c3\1\u0205"+
-    "\1\u01c3\237\0\1\u0188\4\u0203\2\0\1\u0203\15\0\1\u0203"+
-    "\6\0\12\u0203\1\u0187\13\0\1\u0146\223\0\4\u0207\2\0"+
-    "\1\u0207\15\0\1\u0207\6\0\12\u0207\240\0\4\u0208\2\0"+
-    "\1\u0208\15\0\1\u0208\6\0\12\u0208\240\0\4\u0209\2\0"+
-    "\1\u0209\15\0\1\u0209\6\0\12\u0209\237\0\1\u0109\5\270"+
-    "\1\u018f\24\270\1\u010a\12\270\237\0\1\u0109\15\270\1\u018f"+
-    "\14\270\1\u010a\12\270\237\0\1\u0109\10\270\1\u018f\21\270"+
-    "\1\u010a\12\270\237\0\1\u0109\3\270\1\u020a\26\270\1\u010a"+
-    "\12\270\237\0\1\u0109\3\270\1\u018f\26\270\1\u010a\12\270"+
-    "\237\0\1\u0109\27\270\1\u020b\2\270\1\u010a\12\270\240\0"+
-    "\32\270\1\u020c\12\270\237\0\1\u0109\16\270\1\u018f\13\270"+
-    "\1\u010a\12\270\273\0\12\u020d\10\0\1\u018c\1\u018d\1\u018e"+
-    "\224\0\1\160\4\u0163\2\161\1\u0163\15\161\1\u0163\6\161"+
-    "\12\u0163\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\160\4\u0164\2\161\1\u0164"+
-    "\15\161\1\u0164\6\161\12\u0164\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\160"+
-    "\4\u0165\2\161\1\u0165\15\161\1\u0165\6\161\12\u0165\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\2\0\1\53\1\0\1\54\2\0\1\55\1\0"+
-    "\1\56\4\0\1\57\1\0\1\60\1\0\1\61\2\0"+
-    "\1\62\3\0\1\63\2\0\1\64\4\0\1\65\3\0"+
-    "\1\66\17\0\1\67\2\0\1\70\21\0\1\71\2\0"+
-    "\1\72\57\0\2\30\1\73\1\0\1\74\1\0\1\74"+
-    "\1\75\1\0\1\30\2\0\1\30\1\163\12\41\1\u010d"+
-    "\17\41\1\164\12\165\1\74\1\161\1\166\1\161\1\0"+
-    "\1\161\1\167\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\11\324\1\u020e\20\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\3\324\1\u020f\26\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\7\324\1\u0210\22\324\1\164"+
-    "\4\324\1\u0211\5\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\10\324"+
-    "\1\u0212\4\324\1\u0213\5\324\1\u0214\6\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\3\324\1\u0215\26\324\1\164"+
-    "\2\324\1\u0216\7\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\7\324"+
-    "\1\u0217\22\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\7\324\1\u0218\22\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\7\324\1\u0219\22\324\1\164\3\324\1\u021a\6\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\5\324\1\u021b"+
-    "\4\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\7\324\1\u021c\22\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\31\324\1\u021d"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\324\1\u021e"+
-    "\30\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\7\324"+
-    "\1\u021f\1\324\1\u0220\20\324\1\164\11\324\1\u021b\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\22\324\1\u0221\7\324\1\164\2\324"+
-    "\1\u0222\7\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\6\324\1\u0223"+
-    "\1\u0224\22\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\7\324\1\u0225\5\324\1\u0226\14\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\23\324\1\u0227\6\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\3\324\1\u0228"+
-    "\6\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\3\324\1\u0229\26\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\17\324\1\u022a"+
-    "\12\324\1\164\1\u022b\11\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\1\324\1\u021b\10\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\1\u022c\11\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\213\0"+
-    "\32\u022d\1\0\12\u022d\11\0\1\u022e\1\0\1\u022f\223\0"+
-    "\46\u01ee\1\u01f0\2\u01ee\1\u01f1\3\u01ee\1\u01f2\5\0\2\u01ee"+
-    "\4\0\1\u01ee\213\0\1\u0230\32\u01ef\1\u0231\12\u01ef\1\u0232"+
-    "\2\u01ee\1\u01f1\3\u01ee\1\u01f2\1\0\1\u0233\3\0\2\u01ee"+
-    "\4\0\1\u01ee\213\0\46\u01f0\1\0\2\u01f0\1\u0234\3\u01f0"+
-    "\1\u01f2\5\0\2\u01f0\4\0\1\u01f0\214\0\4\u0235\2\0"+
-    "\1\u0235\15\0\1\u0235\6\0\12\u0235\240\0\32\u0236\1\0"+
-    "\12\u0236\13\0\1\u01f3\224\0\4\u0237\2\0\1\u0237\15\0"+
-    "\1\u0237\6\0\12\u0237\1\u0238\26\0\1\53\1\0\1\54"+
-    "\2\0\1\221\1\0\1\222\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\223\2\0\1\224"+
-    "\4\0\1\225\3\0\1\226\17\0\1\67\2\0\1\227"+
-    "\21\0\1\230\2\0\1\231\57\0\1\30\1\74\7\0"+
-    "\1\74\2\0\1\30\1\u0239\32\u023a\13\u0239\1\0\3\u0239"+
-    "\1\0\2\u0239\1\0\3\u0239\3\0\1\u0239\1\u023b\3\0"+
-    "\2\u0239\212\0\1\u023c\32\u023d\1\u023c\12\u023d\1\u023e\2\u023c"+
-    "\1\u023f\3\u023c\1\u0240\3\0\1\u0241\1\0\2\u023c\4\0"+
-    "\1\u023c\213\0\1\u0121\12\324\1\u0127\17\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\2\0\1\53\1\0\1\54\2\0\1\76"+
-    "\1\0\1\77\4\0\1\57\1\0\1\60\1\0\1\61"+
-    "\2\0\1\62\3\0\1\100\2\0\1\101\4\0\1\102"+
-    "\3\0\1\103\17\0\1\67\2\0\1\104\21\0\1\105"+
-    "\2\0\1\106\57\0\1\30\2\31\2\0\2\107\1\110"+
-    "\1\0\1\31\2\0\1\30\1\u013e\32\41\1\164\12\u01f8"+
-    "\1\u0174\1\161\1\175\1\161\1\0\2\176\1\162\1\u0163"+
-    "\1\u0164\1\u0165\2\0\1\107\1\161\4\0\2\161\2\0"+
-    "\1\53\1\0\1\54\2\0\1\76\1\0\1\77\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\100\2\0\1\101\4\0\1\102\3\0\1\103\17\0"+
-    "\1\67\2\0\1\104\21\0\1\105\2\0\1\106\57\0"+
-    "\1\30\2\31\2\0\2\107\1\110\1\0\1\31\2\0"+
-    "\1\30\1\u013e\32\41\1\164\12\u0242\1\u0174\1\161\1\175"+
-    "\1\161\1\0\2\176\1\162\1\u0163\1\u0164\1\u0165\2\0"+
-    "\1\107\1\161\4\0\2\161\2\0\1\53\1\0\1\54"+
-    "\2\0\1\76\1\0\1\77\4\0\1\57\1\0\1\60"+
-    "\1\0\1\61\2\0\1\62\3\0\1\100\2\0\1\101"+
-    "\4\0\1\102\3\0\1\103\17\0\1\67\2\0\1\104"+
-    "\21\0\1\105\2\0\1\106\57\0\1\30\2\31\2\0"+
-    "\2\107\1\110\1\0\1\31\2\0\1\30\1\u013e\32\41"+
-    "\1\164\1\u01f8\1\u0243\1\u0242\2\u01f8\2\u0242\1\u01f8\1\u0242"+
-    "\1\u01f8\1\u0174\1\161\1\175\1\161\1\0\2\176\1\162"+
-    "\1\u0163\1\u0164\1\u0165\2\0\1\107\1\161\4\0\2\161"+
-    "\260\0\1\u0181\237\0\4\u0244\2\0\1\u0244\15\0\1\u0244"+
-    "\6\0\12\u0244\1\u01fc\237\0\4\u0245\2\0\1\u0245\15\0"+
-    "\1\u0245\6\0\12\u0245\1\u0246\237\0\4\u0247\2\0\1\u0247"+
-    "\15\0\1\u0247\6\0\12\u0247\1\u0248\13\0\1\u0146\222\0"+
-    "\1\u0188\4\u0247\2\0\1\u0247\15\0\1\u0247\6\0\12\u0249"+
-    "\1\u0248\13\0\1\u0146\222\0\1\u0188\4\u0247\2\0\1\u0247"+
-    "\15\0\1\u0247\6\0\12\u024a\1\u0248\13\0\1\u0146\222\0"+
-    "\1\u0188\4\u0247\2\0\1\u0247\15\0\1\u0247\6\0\1\u0249"+
-    "\1\u024b\1\u024a\2\u0249\2\u024a\1\u0249\1\u024a\1\u0249\1\u0248"+
-    "\13\0\1\u0146\223\0\4\u024c\2\0\1\u024c\15\0\1\u024c"+
-    "\6\0\12\u024c\1\u01bd\13\0\1\u0146\222\0\1\u0188\4\u024c"+
-    "\2\0\1\u024c\15\0\1\u024c\6\0\12\u024c\1\u01bd\13\0"+
-    "\1\u0146\270\0\1\u0187\13\0\1\u0146\256\0\1\u024d\2\u024e"+
-    "\1\u024d\5\u024e\1\u024f\237\0\1\u0204\304\0\1\u0204\33\0"+
-    "\2\u0205\1\0\2\u0205\2\0\1\u0205\1\0\1\u0205\240\0"+
-    "\4\u018c\2\0\1\u018c\15\0\1\u018c\6\0\12\u018c\240\0"+
-    "\4\u018d\2\0\1\u018d\15\0\1\u018d\6\0\12\u018d\240\0"+
-    "\4\u018e\2\0\1\u018e\15\0\1\u018e\6\0\12\u018e\237\0"+
-    "\1\u0109\20\270\1\u0250\11\270\1\u010a\12\270\237\0\1\u0109"+
-    "\3\270\1\u019a\26\270\1\u010a\12\270\240\0\1\270\1\u0251"+
-    "\1\u0252\2\270\1\u0253\1\u0254\1\u0255\1\270\1\u0256\1\u0257"+
-    "\2\270\1\u0258\1\u0259\2\270\1\u025a\1\u025b\1\u025c\1\270"+
-    "\1\u025d\1\u025e\1\270\1\u025f\1\u0260\1\u010a\1\u0261\2\270"+
-    "\1\u0262\1\u0263\1\u0264\1\270\1\u0265\1\u0266\1\270\273\0"+
-    "\12\u0267\10\0\1\u018c\1\u018d\1\u018e\224\0\1\u0121\1\324"+
-    "\1\u0268\30\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\24\324\1\u0269\5\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\24\324\1\u026a\5\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\1\324\1\u026b\30\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\14\324\1\u026c\15\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\1\324\1\u026d\30\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\1\324\1\u026e\30\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\324\1\u026f"+
-    "\30\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\21\324"+
-    "\1\u0270\10\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\24\324\1\u0271\5\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\24\324\1\u0272\5\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\24\324\1\u0273\5\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\u0177\31\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\24\324\1\u026f\5\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\24\324\1\u0274\5\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\1\324\1\u0275\30\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\31\324\1\u0276"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\24\324\1\u0277"+
-    "\5\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\1\324"+
-    "\1\u0278\30\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\1\u0279\31\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\21\324\1\u027a\10\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\4\324\1\u027b\25\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\24\324\1\u027c\5\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\24\324\1\u027d\5\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\4\324\1\u027e\25\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\21\324\1\u027f\10\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\24\324\1\u0280"+
-    "\5\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\1\u0281\11\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\7\324\1\u0282\2\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\1\u0283\31\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\1\u0284\31\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0285"+
-    "\32\u022d\1\u0286\12\u022d\11\0\1\u022e\225\0\51\u022e\1\u0287"+
-    "\3\0\3\u022e\1\u018e\3\0\1\u022e\221\0\4\u0288\2\0"+
-    "\1\u0288\15\0\1\u0288\6\0\12\u0288\1\u0289\236\0\1\u01ee"+
-    "\32\u01ef\1\u01ee\12\u01ef\1\u01f0\2\u01ee\1\u01f1\3\u01ee\1\u01f2"+
-    "\5\0\2\u01ee\4\0\1\u01ee\213\0\1\u01ee\32\u01ef\1\u0231"+
-    "\12\u01ef\1\u01f0\2\u01ee\1\u01f1\3\u01ee\1\u01f2\5\0\2\u01ee"+
-    "\4\0\1\u01ee\213\0\34\u01f0\12\u028a\1\0\2\u01f0\1\u0234"+
-    "\3\u01f0\1\u01f2\5\0\2\u01f0\4\0\1\u01f0\213\0\51\u0233"+
-    "\1\u028b\3\0\3\u0233\1\u018e\2\0\1\u028c\1\u0233\221\0"+
-    "\4\u028d\2\0\1\u028d\15\0\1\u028d\6\0\12\u028d\240\0"+
-    "\4\u01ee\2\0\1\u01ee\15\0\1\u01ee\6\0\12\u01ee\237\0"+
-    "\1\u028e\32\u0236\1\u028f\12\u0236\1\u0290\10\0\1\u0233\226\0"+
-    "\4\u0291\2\0\1\u0291\15\0\1\u0291\6\0\12\u0291\1\u0292"+
-    "\304\0\1\u0293\236\0\1\u0294\45\u0239\1\0\3\u0239\1\0"+
-    "\2\u0239\1\u0295\3\u0239\3\0\1\u0239\4\0\2\u0239\2\0"+
-    "\1\53\1\0\1\54\2\0\1\55\1\0\1\56\4\0"+
-    "\1\57\1\0\1\60\1\0\1\61\2\0\1\62\3\0"+
-    "\1\63\2\0\1\64\4\0\1\65\3\0\1\66\17\0"+
-    "\1\67\2\0\1\70\21\0\1\71\2\0\1\72\57\0"+
-    "\2\30\1\73\1\0\1\74\1\0\1\74\1\75\1\0"+
-    "\1\30\2\0\1\30\1\u0296\32\u023a\1\u0239\12\u0297\1\74"+
-    "\1\u0239\1\u0298\1\u0239\1\0\1\u0239\1\u0299\1\u0295\3\u0239"+
-    "\3\0\1\u0239\4\0\2\u0239\212\0\65\u023b\1\u029a\1\u023b"+
-    "\1\u029b\1\0\2\u023b\212\0\46\u023c\1\u023e\2\u023c\1\u023f"+
-    "\3\u023c\1\u0240\5\0\2\u023c\4\0\1\u023c\213\0\1\u029c"+
-    "\32\u023d\1\u029d\12\u023d\1\u029e\2\u023c\1\u023f\3\u023c\1\u0240"+
-    "\1\u018c\1\u018d\1\u018e\2\0\2\u023c\4\0\1\u023c\213\0"+
-    "\46\u023e\1\0\2\u023e\1\u029f\3\u023e\1\u0240\5\0\2\u023e"+
-    "\4\0\1\u023e\214\0\4\u02a0\2\0\1\u02a0\15\0\1\u02a0"+
-    "\6\0\12\u02a0\240\0\32\u02a1\1\0\12\u02a1\13\0\1\u0241"+
-    "\13\0\1\53\1\0\1\54\2\0\1\76\1\0\1\77"+
-    "\4\0\1\57\1\0\1\60\1\0\1\61\2\0\1\62"+
-    "\3\0\1\100\2\0\1\101\4\0\1\102\3\0\1\103"+
-    "\17\0\1\67\2\0\1\104\21\0\1\105\2\0\1\106"+
-    "\57\0\1\30\2\31\2\0\2\107\1\110\1\0\1\31"+
-    "\2\0\1\30\1\u013e\32\41\1\164\12\371\1\u0174\1\161"+
-    "\1\175\1\161\1\0\2\176\1\162\1\u0163\1\u0164\1\u0165"+
-    "\2\0\1\107\1\161\4\0\2\161\2\0\1\53\1\0"+
-    "\1\54\2\0\1\76\1\0\1\77\4\0\1\57\1\0"+
-    "\1\60\1\0\1\61\2\0\1\62\3\0\1\100\2\0"+
-    "\1\101\4\0\1\102\3\0\1\103\17\0\1\67\2\0"+
-    "\1\104\21\0\1\105\2\0\1\106\57\0\1\30\2\31"+
-    "\2\0\2\107\1\110\1\0\1\31\2\0\1\30\1\u013e"+
-    "\32\41\1\164\2\u0242\1\371\2\u0242\2\371\1\u0242\1\371"+
-    "\1\u0242\1\u0174\1\161\1\175\1\161\1\0\2\176\1\162"+
-    "\1\u0163\1\u0164\1\u0165\2\0\1\107\1\161\4\0\2\161"+
-    "\213\0\4\u02a2\2\0\1\u02a2\15\0\1\u02a2\6\0\12\u02a2"+
-    "\1\u01fc\237\0\4\u02a3\2\0\1\u02a3\15\0\1\u02a3\6\0"+
-    "\12\u02a3\1\u02a4\237\0\4\u02a5\2\0\1\u02a5\15\0\1\u02a5"+
-    "\6\0\1\u02a6\2\u02a7\1\u02a6\5\u02a7\1\u02a8\14\0\1\u0146"+
-    "\223\0\4\u02a9\2\0\1\u02a9\15\0\1\u02a9\6\0\12\u02a9"+
-    "\1\u0248\13\0\1\u0146\223\0\4\u02a5\2\0\1\u02a5\15\0"+
-    "\1\u02a5\6\0\1\u02a6\2\u02a7\1\u02a6\5\u02a7\1\u02a8\237\0"+
-    "\1\u0188\4\u02a9\2\0\1\u02a9\15\0\1\u02a9\6\0\12\u02aa"+
-    "\1\u0248\13\0\1\u0146\222\0\1\u0188\4\u02a9\2\0\1\u02a9"+
-    "\15\0\1\u02a9\6\0\12\u02a9\1\u0248\13\0\1\u0146\222\0"+
-    "\1\u0188\4\u02a9\2\0\1\u02a9\15\0\1\u02a9\6\0\2\u02aa"+
-    "\1\u02a9\2\u02aa\2\u02a9\1\u02aa\1\u02a9\1\u02aa\1\u0248\13\0"+
-    "\1\u0146\270\0\1\u01bd\13\0\1\u0146\222\0\1\u02ab\33\0"+
-    "\12\u024e\237\0\1\u02ab\33\0\12\u02ac\237\0\1\u02ab\33\0"+
-    "\1\u024e\1\u02ad\1\u02ac\2\u024e\2\u02ac\1\u024e\1\u02ac\1\u024e"+
-    "\237\0\1\u0109\12\270\1\u018f\17\270\1\u010a\12\270\237\0"+
-    "\1\u0109\11\270\1\u02ae\20\270\1\u010a\12\270\237\0\1\u0109"+
-    "\3\270\1\u02af\26\270\1\u010a\12\270\237\0\1\u0109\7\270"+
-    "\1\u02b0\22\270\1\u010a\4\270\1\u02b1\5\270\237\0\1\u0109"+
-    "\10\270\1\u02b2\4\270\1\u02b3\5\270\1\u02b4\6\270\1\u010a"+
-    "\12\270\237\0\1\u0109\3\270\1\u02b5\26\270\1\u010a\2\270"+
-    "\1\u02b6\7\270\237\0\1\u0109\7\270\1\u02b7\22\270\1\u010a"+
-    "\12\270\237\0\1\u0109\7\270\1\u02b8\22\270\1\u010a\12\270"+
-    "\237\0\1\u0109\7\270\1\u02b9\22\270\1\u010a\3\270\1\u02ba"+
-    "\6\270\237\0\1\u0109\32\270\1\u010a\5\270\1\u02bb\4\270"+
-    "\237\0\1\u0109\7\270\1\u02bc\22\270\1\u010a\12\270\237\0"+
-    "\1\u0109\31\270\1\u02bd\1\u010a\12\270\237\0\1\u0109\1\270"+
-    "\1\u02be\30\270\1\u010a\12\270\237\0\1\u0109\7\270\1\u02bf"+
-    "\1\270\1\u02c0\20\270\1\u010a\11\270\1\u02bb\237\0\1\u0109"+
-    "\22\270\1\u02c1\7\270\1\u010a\2\270\1\u02c2\7\270\237\0"+
-    "\1\u0109\6\270\1\u02c3\1\u02c4\22\270\1\u010a\12\270\237\0"+
-    "\1\u0109\7\270\1\u02c5\5\270\1\u02c6\14\270\1\u010a\12\270"+
-    "\237\0\1\u0109\23\270\1\u02c7\6\270\1\u010a\12\270\237\0"+
-    "\1\u0109\32\270\1\u010a\3\270\1\u02c8\6\270\237\0\1\u0109"+
-    "\3\270\1\u02c9\26\270\1\u010a\12\270\237\0\1\u0109\17\270"+
-    "\1\u02ca\12\270\1\u010a\1\u02cb\11\270\237\0\1\u0109\32\270"+
-    "\1\u010a\1\270\1\u02bb\10\270\237\0\1\u0109\32\270\1\u010a"+
-    "\1\u02cc\11\270\273\0\12\u02cd\10\0\1\u018c\1\u018d\1\u018e"+
-    "\224\0\1\u0121\25\324\1\u02ce\4\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\u02cf\31\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\15\324\1\u02d0\14\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\21\324\1\u02d1\10\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\16\324\1\u02d2\4\324"+
-    "\1\u02d3\6\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\4\324\1\u02d4\25\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\11\324\1\u02d5\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\4\324\1\u02d6\25\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\11\324\1\u02d7\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\24\324\1\u02d8\5\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\u02d9\1\u02da\1\324\1\u02db\20\324"+
-    "\1\u02dc\5\324\1\164\5\324\1\u02dd\4\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\16\324\1\u02de\13\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\11\324\1\u02df\13\324\1\u02e0\4\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\11\324\1\u02e1\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\23\324\1\u02e2"+
-    "\6\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\31\324"+
-    "\1\u02e3\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\26\324"+
-    "\1\u02e4\3\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\11\324\1\u02e5\20\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\3\324\1\u02e6\6\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\5\324\1\u02e7\24\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\10\324\1\u02e8\21\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\3\324\1\u02e9\26\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\21\324\1\u02ea\6\324"+
-    "\1\u02eb\1\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\12\324\1\u02ec\17\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\1\324\1\u02ed\10\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\24\324\1\u02ee\5\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\24\324\1\u02ef\5\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\4\324\1\u02f0"+
-    "\5\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\5\324\1\u02f1\23\324"+
-    "\1\u02f2\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\213\0\32\u022d\1\0"+
-    "\12\u022d\240\0\32\u022d\1\u0286\12\u022d\240\0\4\u02f3\2\0"+
-    "\1\u02f3\15\0\1\u02f3\6\0\12\u02f3\240\0\4\u02f4\2\0"+
-    "\1\u02f4\15\0\1\u02f4\6\0\12\u02f4\1\u02f5\304\0\1\u02f6"+
-    "\236\0\34\u01f0\12\u02f7\1\0\2\u01f0\1\u0234\3\u01f0\1\u01f2"+
-    "\1\0\1\u0233\3\0\2\u01f0\4\0\1\u01f0\214\0\4\u02f8"+
-    "\2\0\1\u02f8\15\0\1\u02f8\6\0\12\u02f8\257\0\1\u02f9"+
-    "\265\0\4\u01f0\2\0\1\u01f0\15\0\1\u01f0\6\0\12\u01f0"+
-    "\240\0\32\u0236\1\0\12\u0236\240\0\32\u0236\1\u028f\12\u0236"+
-    "\273\0\12\u02fa\240\0\4\u02fb\2\0\1\u02fb\15\0\1\u02fb"+
-    "\6\0\12\u02fb\1\u0292\237\0\4\u02fc\2\0\1\u02fc\15\0"+
-    "\1\u02fc\6\0\12\u02fc\1\u02fd\237\0\4\u02fe\2\0\1\u02fe"+
-    "\15\0\1\u02fe\6\0\1\u02ff\2\u0300\1\u02ff\5\u0300\1\u0301"+
-    "\14\0\1\u0302\222\0\1\u0294\45\u0239\1\0\3\u0239\1\0"+
-    "\2\u0239\1\u0295\3\u0239\3\0\1\u0239\1\u023b\3\0\2\u0239"+
-    "\213\0\32\u0303\1\0\12\u0303\13\0\1\u0304\13\0\1\53"+
-    "\1\0\1\54\2\0\1\221\1\0\1\222\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\223"+
-    "\2\0\1\224\4\0\1\225\3\0\1\226\17\0\1\67"+
-    "\2\0\1\227\21\0\1\230\2\0\1\231\57\0\1\30"+
-    "\1\74\7\0\1\74\2\0\1\30\1\u0294\32\u023a\13\u0239"+
-    "\1\0\3\u0239\1\0\2\u0239\1\u0295\3\u0239\3\0\1\u0239"+
-    "\1\u023b\3\0\2\u0239\2\0\1\53\1\0\1\54\2\0"+
-    "\1\211\1\0\1\56\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\212\2\0\1\213\4\0"+
-    "\1\65\3\0\1\214\17\0\1\67\2\0\1\215\21\0"+
-    "\1\216\2\0\1\217\57\0\1\30\2\73\2\0\2\220"+
-    "\1\75\1\0\1\73\2\0\1\30\1\u0305\32\u023a\1\u0239"+
-    "\12\u0297\1\0\1\u0239\1\u0298\1\u0239\1\0\2\u0306\1\u0295"+
-    "\3\u0239\2\0\1\220\1\u0239\4\0\2\u0239\2\0\1\53"+
-    "\1\0\1\54\2\0\1\232\1\0\1\56\4\0\1\57"+
-    "\1\0\1\60\1\0\1\61\2\0\1\62\3\0\1\233"+
-    "\2\0\1\234\4\0\1\65\3\0\1\235\17\0\1\67"+
-    "\2\0\1\236\21\0\1\237\2\0\1\240\41\0\1\130"+
-    "\15\0\1\30\1\75\1\73\1\132\3\0\1\75\1\0"+
-    "\1\75\2\0\1\30\1\u0294\32\u023a\1\u0239\12\u0297\1\0"+
-    "\1\u0239\1\u0298\1\u0239\1\0\2\u0239\1\u0295\3\u0239\3\0"+
-    "\1\u0239\4\0\2\u0239\2\0\1\53\1\0\1\54\2\0"+
-    "\1\221\1\0\1\222\4\0\1\57\1\0\1\60\1\0"+
-    "\1\61\2\0\1\62\3\0\1\223\2\0\1\224\4\0"+
-    "\1\225\3\0\1\226\17\0\1\67\2\0\1\227\21\0"+
-    "\1\230\2\0\1\231\57\0\1\30\1\74\7\0\1\74"+
-    "\2\0\1\30\1\u0294\32\u023a\13\u0239\1\0\3\u0239\1\0"+
-    "\2\u0239\1\u0295\3\u0239\3\0\1\u0239\4\0\2\u0239\212\0"+
-    "\1\u0307\54\0\1\u0295\227\0\74\u023b\211\0\1\u023c\32\u023d"+
-    "\1\u023c\12\u023d\1\u023e\2\u023c\1\u023f\3\u023c\1\u0240\5\0"+
-    "\2\u023c\4\0\1\u023c\213\0\1\u023c\32\u023d\1\u029d\12\u023d"+
-    "\1\u023e\2\u023c\1\u023f\3\u023c\1\u0240\5\0\2\u023c\4\0"+
-    "\1\u023c\213\0\34\u023e\12\u0308\1\0\2\u023e\1\u029f\3\u023e"+
-    "\1\u0240\5\0\2\u023e\4\0\1\u023e\214\0\4\u0309\2\0"+
-    "\1\u0309\15\0\1\u0309\6\0\12\u0309\240\0\4\u023c\2\0"+
-    "\1\u023c\15\0\1\u023c\6\0\12\u023c\237\0\1\u030a\32\u02a1"+
-    "\1\u030b\12\u02a1\1\u0174\7\0\1\u018c\1\u018d\1\u018e\272\0"+
-    "\1\u01fc\237\0\4\u030c\2\0\1\u030c\15\0\1\u030c\6\0"+
-    "\12\u030c\1\u02a4\237\0\4\u030d\2\0\1\u030d\15\0\1\u030d"+
-    "\6\0\12\u030d\1\u030e\237\0\4\u030f\2\0\1\u030f\15\0"+
-    "\1\u030f\6\0\12\u030f\1\u0310\13\0\1\u0146\222\0\1\u0188"+
-    "\4\u030f\2\0\1\u030f\15\0\1\u030f\6\0\12\u0311\1\u0310"+
-    "\13\0\1\u0146\222\0\1\u0188\4\u030f\2\0\1\u030f\15\0"+
-    "\1\u030f\6\0\12\u0312\1\u0310\13\0\1\u0146\222\0\1\u0188"+
-    "\4\u030f\2\0\1\u030f\15\0\1\u030f\6\0\1\u0311\1\u0313"+
-    "\1\u0312\2\u0311\2\u0312\1\u0311\1\u0312\1\u0311\1\u0310\13\0"+
-    "\1\u0146\223\0\4\u0314\2\0\1\u0314\15\0\1\u0314\6\0"+
-    "\12\u0314\1\u0248\13\0\1\u0146\222\0\1\u0188\4\u0314\2\0"+
-    "\1\u0314\15\0\1\u0314\6\0\12\u0314\1\u0248\13\0\1\u0146"+
-    "\256\0\1\u0315\2\u0316\1\u0315\5\u0316\1\u0317\237\0\1\u02ab"+
-    "\304\0\1\u02ab\33\0\2\u02ac\1\0\2\u02ac\2\0\1\u02ac"+
-    "\1\0\1\u02ac\237\0\1\u0109\1\270\1\u0318\30\270\1\u010a"+
-    "\12\270\237\0\1\u0109\24\270\1\u0319\5\270\1\u010a\12\270"+
-    "\237\0\1\u0109\24\270\1\u031a\5\270\1\u010a\12\270\237\0"+
-    "\1\u0109\1\270\1\u031b\30\270\1\u010a\12\270\237\0\1\u0109"+
-    "\14\270\1\u031c\15\270\1\u010a\12\270\237\0\1\u0109\1\270"+
-    "\1\u031d\30\270\1\u010a\12\270\237\0\1\u0109\1\270\1\u031e"+
-    "\30\270\1\u010a\12\270\237\0\1\u0109\1\270\1\u031f\30\270"+
-    "\1\u010a\12\270\237\0\1\u0109\21\270\1\u0320\10\270\1\u010a"+
-    "\12\270\237\0\1\u0109\24\270\1\u0321\5\270\1\u010a\12\270"+
-    "\237\0\1\u0109\24\270\1\u0322\5\270\1\u010a\12\270\237\0"+
-    "\1\u0109\24\270\1\u0323\5\270\1\u010a\12\270\237\0\1\u0109"+
-    "\1\u01cc\31\270\1\u010a\12\270\237\0\1\u0109\24\270\1\u031f"+
-    "\5\270\1\u010a\12\270\237\0\1\u0109\24\270\1\u0324\5\270"+
-    "\1\u010a\12\270\237\0\1\u0109\1\270\1\u0325\30\270\1\u010a"+
-    "\12\270\237\0\1\u0109\31\270\1\u0326\1\u010a\12\270\237\0"+
-    "\1\u0109\24\270\1\u0327\5\270\1\u010a\12\270\237\0\1\u0109"+
-    "\1\270\1\u0328\30\270\1\u010a\12\270\237\0\1\u0109\1\u0329"+
-    "\31\270\1\u010a\12\270\237\0\1\u0109\21\270\1\u032a\10\270"+
-    "\1\u010a\12\270\237\0\1\u0109\4\270\1\u032b\25\270\1\u010a"+
-    "\12\270\237\0\1\u0109\24\270\1\u032c\5\270\1\u010a\12\270"+
-    "\237\0\1\u0109\24\270\1\u032d\5\270\1\u010a\12\270\237\0"+
-    "\1\u0109\4\270\1\u032e\25\270\1\u010a\12\270\237\0\1\u0109"+
-    "\21\270\1\u032f\10\270\1\u010a\12\270\237\0\1\u0109\24\270"+
-    "\1\u0330\5\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a"+
-    "\1\u0331\11\270\237\0\1\u0109\32\270\1\u010a\7\270\1\u0332"+
-    "\2\270\237\0\1\u0109\1\u0333\31\270\1\u010a\12\270\237\0"+
-    "\1\u0109\1\u0334\31\270\1\u010a\12\270\315\0\1\u018c\1\u018d"+
-    "\1\u018e\224\0\1\u0121\1\324\1\u0335\30\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\1\u0336\11\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\6\324\1\u0337\23\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164\7\324"+
-    "\1\u0338\2\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\10\324\1\u017b\1\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\5\324\1\u017b\4\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\26\324\1\u0339\3\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\1\324\1\u033a\30\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\26\324\1\u033b\3\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\32\324\1\164\1\324\1\u033c\10\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\1\u033d\31\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\1\u033e\27\324\1\u033f\1\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\1\u0340\11\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\4\324\1\u0341"+
-    "\25\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\25\324"+
-    "\1\u0342\4\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\1\u0343\31\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\1\u0344\11\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\2\324\1\350\7\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\3\324\1\u0345\6\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\1\u0346\1\324\1\u0347\27\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\1\u0338\31\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\2\324\1\u0348"+
-    "\7\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164\2\324"+
-    "\1\u0349\7\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\15\324\1\u034a"+
-    "\14\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\5\324\1\u034b\4\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\7\324\1\u034c\2\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\11\324\1\u034d\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\1\324\1\u034e\30\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\3\324\1\u034f\6\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\32\324\1\164\1\324\1\u0350\10\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\1\324\1\u0351"+
-    "\10\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\24\324\1\u0352\5\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\6\324\1\u0353\3\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\3\324\1\u0354\6\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\1\u0345\31\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\11\324\1\u0355\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\25\324\1\u0356\4\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\213\0"+
-    "\4\u022e\2\0\1\u022e\15\0\1\u022e\6\0\12\u022e\240\0"+
-    "\4\u0357\2\0\1\u0357\15\0\1\u0357\6\0\12\u0357\1\u02f5"+
-    "\237\0\4\u0358\2\0\1\u0358\15\0\1\u0358\6\0\12\u0358"+
-    "\1\u0359\237\0\4\u035a\2\0\1\u035a\15\0\1\u035a\6\0"+
-    "\1\u035b\2\u035c\1\u035b\5\u035c\1\u035d\14\0\1\u035e\222\0"+
-    "\34\u01f0\12\u035f\1\0\2\u01f0\1\u0234\3\u01f0\1\u01f2\1\0"+
-    "\1\u0233\3\0\2\u01f0\4\0\1\u01f0\214\0\4\u0233\2\0"+
-    "\1\u0233\15\0\1\u0233\6\0\12\u0233\270\0\1\u0360\307\0"+
-    "\12\u0361\11\0\1\u0233\226\0\4\u0362\2\0\1\u0362\15\0"+
-    "\1\u0362\6\0\12\u0362\1\u0292\237\0\4\u0363\2\0\1\u0363"+
-    "\15\0\1\u0363\6\0\12\u0363\1\u0364\237\0\4\u0365\2\0"+
-    "\1\u0365\15\0\1\u0365\6\0\1\u0366\2\u0367\1\u0366\5\u0367"+
-    "\1\u0368\14\0\1\u0302\223\0\4\u0369\2\0\1\u0369\15\0"+
-    "\1\u0369\6\0\12\u0369\1\u036a\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u0369\2\0\1\u0369\15\0\1\u0369\6\0\12\u036c\1\u036a"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u0369\2\0\1\u0369\15\0"+
-    "\1\u0369\6\0\12\u036d\1\u036a\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u0369\2\0\1\u0369\15\0\1\u0369\6\0\1\u036c\1\u036e"+
-    "\1\u036d\2\u036c\2\u036d\1\u036c\1\u036d\1\u036c\1\u036a\13\0"+
-    "\1\u0302\270\0\1\u0290\10\0\1\u0233\225\0\1\u036f\32\u0303"+
-    "\1\u0370\12\u0303\237\0\61\u0304\1\0\1\u0371\4\u0304\1\u0372"+
-    "\1\0\3\u0304\6\0\1\u0100\1\0\1\u0101\17\0\1\u0102"+
-    "\2\0\1\u0103\4\0\1\u0104\3\0\1\u0105\22\0\1\u0106"+
-    "\21\0\1\u0107\2\0\1\u0108\60\0\1\220\1\73\6\0"+
-    "\1\220\3\0\1\u0294\33\u0239\12\u0297\1\0\3\u0239\1\0"+
-    "\2\u0239\1\u0295\3\u0239\3\0\1\u0239\1\u023b\3\0\2\u0239"+
-    "\7\0\1\u0100\1\0\1\u0101\17\0\1\u0102\2\0\1\u0103"+
-    "\4\0\1\u0104\3\0\1\u0105\22\0\1\u0106\21\0\1\u0107"+
-    "\2\0\1\u0108\60\0\1\220\1\73\6\0\1\220\3\0"+
-    "\1\u0294\33\u0239\12\u0297\1\0\3\u0239\1\0\2\u0239\1\u0295"+
-    "\3\u0239\3\0\1\u0239\4\0\2\u0239\212\0\46\u0239\1\0"+
-    "\3\u0239\1\0\2\u0239\1\0\3\u0239\3\0\1\u0239\1\u023b"+
-    "\3\0\2\u0239\212\0\34\u023e\12\u0373\1\0\2\u023e\1\u029f"+
-    "\3\u023e\1\u0240\1\u018c\1\u018d\1\u018e\2\0\2\u023e\4\0"+
-    "\1\u023e\214\0\4\u023e\2\0\1\u023e\15\0\1\u023e\6\0"+
-    "\12\u023e\240\0\32\u02a1\1\0\12\u02a1\240\0\32\u02a1\1\u030b"+
-    "\12\u02a1\240\0\4\u0374\2\0\1\u0374\15\0\1\u0374\6\0"+
-    "\12\u0374\1\u02a4\237\0\4\u0375\2\0\1\u0375\15\0\1\u0375"+
-    "\6\0\12\u0375\1\u0376\237\0\4\u0377\2\0\1\u0377\15\0"+
-    "\1\u0377\6\0\1\u0378\2\u0379\1\u0378\5\u0379\1\u037a\14\0"+
-    "\1\u0146\223\0\4\u037b\2\0\1\u037b\15\0\1\u037b\6\0"+
-    "\12\u037b\1\u0310\13\0\1\u0146\223\0\4\u0377\2\0\1\u0377"+
-    "\15\0\1\u0377\6\0\1\u0378\2\u0379\1\u0378\5\u0379\1\u037a"+
-    "\237\0\1\u0188\4\u037b\2\0\1\u037b\15\0\1\u037b\6\0"+
-    "\12\u037c\1\u0310\13\0\1\u0146\222\0\1\u0188\4\u037b\2\0"+
-    "\1\u037b\15\0\1\u037b\6\0\12\u037b\1\u0310\13\0\1\u0146"+
-    "\222\0\1\u0188\4\u037b\2\0\1\u037b\15\0\1\u037b\6\0"+
-    "\2\u037c\1\u037b\2\u037c\2\u037b\1\u037c\1\u037b\1\u037c\1\u0310"+
-    "\13\0\1\u0146\270\0\1\u0248\13\0\1\u0146\256\0\12\u0316"+
-    "\14\0\1\u0146\256\0\12\u037d\14\0\1\u0146\256\0\1\u0316"+
-    "\1\u037e\1\u037d\2\u0316\2\u037d\1\u0316\1\u037d\1\u0316\14\0"+
-    "\1\u0146\222\0\1\u0109\25\270\1\u037f\4\270\1\u010a\12\270"+
-    "\237\0\1\u0109\1\u0380\31\270\1\u010a\12\270\237\0\1\u0109"+
-    "\15\270\1\u0381\14\270\1\u010a\12\270\237\0\1\u0109\21\270"+
-    "\1\u0382\10\270\1\u010a\12\270\237\0\1\u0109\16\270\1\u0383"+
-    "\4\270\1\u0384\6\270\1\u010a\12\270\237\0\1\u0109\4\270"+
-    "\1\u0385\25\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a"+
-    "\11\270\1\u0386\237\0\1\u0109\4\270\1\u0387\25\270\1\u010a"+
-    "\12\270\237\0\1\u0109\32\270\1\u010a\11\270\1\u0388\237\0"+
-    "\1\u0109\24\270\1\u0389\5\270\1\u010a\12\270\237\0\1\u0109"+
-    "\1\u038a\1\u038b\1\270\1\u038c\20\270\1\u038d\5\270\1\u010a"+
-    "\5\270\1\u038e\4\270\237\0\1\u0109\16\270\1\u038f\13\270"+
-    "\1\u010a\12\270\237\0\1\u0109\11\270\1\u0390\13\270\1\u0391"+
-    "\4\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\11\270"+
-    "\1\u0392\237\0\1\u0109\23\270\1\u0393\6\270\1\u010a\12\270"+
-    "\237\0\1\u0109\31\270\1\u0394\1\u010a\12\270\237\0\1\u0109"+
-    "\26\270\1\u0395\3\270\1\u010a\12\270\237\0\1\u0109\11\270"+
-    "\1\u0396\20\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a"+
-    "\3\270\1\u0397\6\270\237\0\1\u0109\5\270\1\u0398\24\270"+
-    "\1\u010a\12\270\237\0\1\u0109\10\270\1\u0399\21\270\1\u010a"+
-    "\12\270\237\0\1\u0109\3\270\1\u039a\26\270\1\u010a\12\270"+
-    "\237\0\1\u0109\21\270\1\u039b\6\270\1\u039c\1\270\1\u010a"+
-    "\12\270\237\0\1\u0109\12\270\1\u039d\17\270\1\u010a\12\270"+
-    "\237\0\1\u0109\32\270\1\u010a\1\270\1\u039e\10\270\237\0"+
-    "\1\u0109\24\270\1\u039f\5\270\1\u010a\12\270\237\0\1\u0109"+
-    "\24\270\1\u03a0\5\270\1\u010a\12\270\237\0\1\u0109\32\270"+
-    "\1\u010a\4\270\1\u03a1\5\270\237\0\1\u0109\5\270\1\u03a2"+
-    "\23\270\1\u03a3\1\u010a\12\270\237\0\1\u0121\32\324\1\164"+
-    "\1\u03a4\11\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u03a5\31\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\10\324\1\u03a6\1\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\25\324"+
-    "\1\u0127\4\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\5\324\1\u03a7\4\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\5\324\1\u03a8\4\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\5\324\1\u0345\4\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\32\324\1\164\3\324\1\u03a5\6\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\17\324\1\u03a9\12\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\12\324\1\u03aa\17\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\25\324\1\u03ab"+
-    "\4\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u03ac"+
-    "\31\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\15\324"+
-    "\1\u03ad\14\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\3\324\1\u03ae\6\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\21\324\1\u03af\10\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\2\324\1\u0338\27\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\324\1\u0127\30\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\11\324\1\u03b0\20\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\11\324\1\u03b1\20\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u03b2\31\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u03b3\31\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\2\324\1\u03b4"+
-    "\27\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\4\324\1\u012e\5\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\10\324\1\u03b5\21\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\1\u03b6\31\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\25\324\1\u03b7\4\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\4\324\1\u03a5\5\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\32\324\1\164\6\324\1\u03a5\3\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\2\324\1\u03a5"+
-    "\7\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\16\324\1\u03b8\13\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\1\u03b9\11\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\3\324\1\u03ba\6\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\3\324\1\350\6\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\24\324\1\u03bb\5\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\213\0"+
-    "\4\u03bc\2\0\1\u03bc\15\0\1\u03bc\6\0\12\u03bc\1\u02f5"+
-    "\237\0\4\u03bd\2\0\1\u03bd\15\0\1\u03bd\6\0\12\u03bd"+
-    "\1\u03be\237\0\4\u03bf\2\0\1\u03bf\15\0\1\u03bf\6\0"+
-    "\1\u03c0\2\u03c1\1\u03c0\5\u03c1\1\u03c2\14\0\1\u035e\223\0"+
-    "\4\u03c3\2\0\1\u03c3\15\0\1\u03c3\6\0\12\u03c3\1\u03c4"+
-    "\13\0\1\u035e\222\0\1\u03c5\4\u03c3\2\0\1\u03c3\15\0"+
-    "\1\u03c3\6\0\12\u03c6\1\u03c4\13\0\1\u035e\222\0\1\u03c5"+
-    "\4\u03c3\2\0\1\u03c3\15\0\1\u03c3\6\0\12\u03c7\1\u03c4"+
-    "\13\0\1\u035e\222\0\1\u03c5\4\u03c3\2\0\1\u03c3\15\0"+
-    "\1\u03c3\6\0\1\u03c6\1\u03c8\1\u03c7\2\u03c6\2\u03c7\1\u03c6"+
-    "\1\u03c7\1\u03c6\1\u03c4\13\0\1\u035e\301\0\1\u022e\225\0"+
-    "\34\u01f0\12\u03c9\1\0\2\u01f0\1\u0234\3\u01f0\1\u01f2\1\0"+
-    "\1\u0233\3\0\2\u01f0\4\0\1\u01f0\231\0\1\u03ca\322\0"+
-    "\12\u03cb\11\0\1\u0233\273\0\1\u0292\237\0\4\u03cc\2\0"+
-    "\1\u03cc\15\0\1\u03cc\6\0\12\u03cc\1\u0364\237\0\4\u03cd"+
-    "\2\0\1\u03cd\15\0\1\u03cd\6\0\12\u03cd\1\u03ce\237\0"+
-    "\4\u03cf\2\0\1\u03cf\15\0\1\u03cf\6\0\12\u03cf\1\u03d0"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u03cf\2\0\1\u03cf\15\0"+
-    "\1\u03cf\6\0\12\u03d1\1\u03d0\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u03cf\2\0\1\u03cf\15\0\1\u03cf\6\0\12\u03d2\1\u03d0"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u03cf\2\0\1\u03cf\15\0"+
-    "\1\u03cf\6\0\1\u03d1\1\u03d3\1\u03d2\2\u03d1\2\u03d2\1\u03d1"+
-    "\1\u03d2\1\u03d1\1\u03d0\13\0\1\u0302\223\0\4\u03d4\2\0"+
-    "\1\u03d4\15\0\1\u03d4\6\0\12\u03d4\1\u036a\13\0\1\u0302"+
-    "\223\0\4\u0365\2\0\1\u0365\15\0\1\u0365\6\0\1\u0366"+
-    "\2\u0367\1\u0366\5\u0367\1\u0368\273\0\1\u03d5\2\u03d6\1\u03d5"+
-    "\5\u03d6\1\u03d7\237\0\1\u036b\4\u03d4\2\0\1\u03d4\15\0"+
-    "\1\u03d4\6\0\12\u03d8\1\u036a\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u03d4\2\0\1\u03d4\15\0\1\u03d4\6\0\12\u03d4\1\u036a"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u03d4\2\0\1\u03d4\15\0"+
-    "\1\u03d4\6\0\2\u03d8\1\u03d4\2\u03d8\2\u03d4\1\u03d8\1\u03d4"+
-    "\1\u03d8\1\u036a\13\0\1\u0302\223\0\1\u03d9\1\u03da\1\u03db"+
-    "\1\u03dc\1\u03dd\1\u03de\1\u03df\1\u03e0\1\u03e1\1\u03e2\1\u03e3"+
-    "\1\u03e4\1\u03e5\1\u03e6\1\u03e7\1\u03e8\1\u03e9\1\u03ea\1\u03eb"+
-    "\1\u03ec\1\u03ed\1\u03ee\1\u03ef\1\u03f0\1\u03f1\1\u03f2\1\0"+
-    "\12\u0303\240\0\32\u0303\1\u0370\12\u0303\237\0\74\u0304\211\0"+
-    "\34\u023e\12\u03f3\1\0\2\u023e\1\u029f\3\u023e\1\u0240\1\u018c"+
-    "\1\u018d\1\u018e\2\0\2\u023e\4\0\1\u023e\261\0\1\u02a4"+
-    "\237\0\4\u03f4\2\0\1\u03f4\15\0\1\u03f4\6\0\12\u03f4"+
-    "\1\u0376\237\0\4\u03f5\2\0\1\u03f5\15\0\1\u03f5\6\0"+
-    "\12\u03f5\1\u03f6\237\0\4\u03f7\2\0\1\u03f7\15\0\1\u03f7"+
-    "\6\0\12\u03f7\1\u03f8\13\0\1\u0146\222\0\1\u0188\4\u03f7"+
-    "\2\0\1\u03f7\15\0\1\u03f7\6\0\12\u03f9\1\u03f8\13\0"+
-    "\1\u0146\222\0\1\u0188\4\u03f7\2\0\1\u03f7\15\0\1\u03f7"+
-    "\6\0\12\u03fa\1\u03f8\13\0\1\u0146\222\0\1\u0188\4\u03f7"+
-    "\2\0\1\u03f7\15\0\1\u03f7\6\0\1\u03f9\1\u03fb\1\u03fa"+
-    "\2\u03f9\2\u03fa\1\u03f9\1\u03fa\1\u03f9\1\u03f8\13\0\1\u0146"+
-    "\223\0\4\u03fc\2\0\1\u03fc\15\0\1\u03fc\6\0\12\u03fc"+
-    "\1\u0310\13\0\1\u0146\222\0\1\u0188\4\u03fc\2\0\1\u03fc"+
-    "\15\0\1\u03fc\6\0\12\u03fc\1\u0310\13\0\1\u0146\304\0"+
-    "\1\u0146\256\0\2\u037d\1\0\2\u037d\2\0\1\u037d\1\0"+
-    "\1\u037d\14\0\1\u0146\222\0\1\u0109\1\270\1\u03fd\30\270"+
-    "\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\1\u03fe\11\270"+
-    "\237\0\1\u0109\6\270\1\u03ff\23\270\1\u010a\12\270\237\0"+
-    "\1\u0109\32\270\1\u010a\7\270\1\u0400\2\270\237\0\1\u0109"+
-    "\32\270\1\u010a\10\270\1\u01d1\1\270\237\0\1\u0109\32\270"+
-    "\1\u010a\5\270\1\u01d1\4\270\237\0\1\u0109\26\270\1\u0401"+
-    "\3\270\1\u010a\12\270\237\0\1\u0109\1\270\1\u0402\30\270"+
-    "\1\u010a\12\270\237\0\1\u0109\26\270\1\u0403\3\270\1\u010a"+
-    "\12\270\237\0\1\u0109\32\270\1\u010a\1\270\1\u0404\10\270"+
-    "\237\0\1\u0109\1\u0405\31\270\1\u010a\12\270\237\0\1\u0109"+
-    "\1\u0406\27\270\1\u0407\1\270\1\u010a\12\270\237\0\1\u0109"+
-    "\32\270\1\u010a\1\u0408\11\270\237\0\1\u0109\4\270\1\u0409"+
-    "\25\270\1\u010a\12\270\237\0\1\u0109\25\270\1\u040a\4\270"+
-    "\1\u010a\12\270\237\0\1\u0109\1\u040b\31\270\1\u010a\12\270"+
-    "\237\0\1\u0109\32\270\1\u010a\1\u040c\11\270\237\0\1\u0109"+
-    "\32\270\1\u010a\2\270\1\u0153\7\270\237\0\1\u0109\32\270"+
-    "\1\u010a\3\270\1\u040d\6\270\237\0\1\u0109\1\u040e\1\270"+
-    "\1\u040f\27\270\1\u010a\12\270\237\0\1\u0109\1\u0400\31\270"+
-    "\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\2\270\1\u0410"+
-    "\7\270\237\0\1\u0109\32\270\1\u010a\2\270\1\u0411\7\270"+
-    "\237\0\1\u0109\15\270\1\u0412\14\270\1\u010a\12\270\237\0"+
-    "\1\u0109\32\270\1\u010a\5\270\1\u0413\4\270\237\0\1\u0109"+
-    "\32\270\1\u010a\7\270\1\u0414\2\270\237\0\1\u0109\32\270"+
-    "\1\u010a\11\270\1\u0415\237\0\1\u0109\1\270\1\u0416\30\270"+
-    "\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\3\270\1\u0417"+
-    "\6\270\237\0\1\u0109\32\270\1\u010a\1\270\1\u0418\10\270"+
-    "\237\0\1\u0109\32\270\1\u010a\1\270\1\u0419\10\270\237\0"+
-    "\1\u0109\24\270\1\u041a\5\270\1\u010a\12\270\237\0\1\u0109"+
-    "\32\270\1\u010a\6\270\1\u041b\3\270\237\0\1\u0109\32\270"+
-    "\1\u010a\3\270\1\u041c\6\270\237\0\1\u0109\1\u040d\31\270"+
-    "\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\11\270\1\u041d"+
-    "\237\0\1\u0109\25\270\1\u041e\4\270\1\u010a\12\270\237\0"+
-    "\1\u0121\3\324\1\u041f\26\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\2\324\1\u0127\27\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\6\324\1\u0132\23\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\1\324\1\u034f\30\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\3\324\1\u0420\26\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\3\324\1\u0421\6\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\6\324\1\u0422\3\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\6\324\1\u0423\3\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\5\324\1\u0424\4\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\7\324\1\u0425\2\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\u0426\31\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\24\324\1\u0427\5\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\4\324\1\u0428"+
-    "\5\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164\4\324"+
-    "\1\u0429\5\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\26\324\1\u042a"+
-    "\3\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\30\324"+
-    "\1\u042b\1\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\11\324\1\u0176\20\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\2\324\1\u042c\7\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\12\324\1\u042d\17\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\17\324\1\u012f\12\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\4\324\1\u042e"+
-    "\5\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164\6\324"+
-    "\1\u0179\3\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\30\324\1\u042f"+
-    "\1\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\30\324"+
-    "\1\u0430\1\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\260\0\1\u02f5"+
-    "\237\0\4\u0431\2\0\1\u0431\15\0\1\u0431\6\0\12\u0431"+
-    "\1\u03be\237\0\4\u0432\2\0\1\u0432\15\0\1\u0432\6\0"+
-    "\12\u0432\1\u0433\237\0\4\u0434\2\0\1\u0434\15\0\1\u0434"+
-    "\6\0\12\u0434\1\u0435\13\0\1\u035e\222\0\1\u03c5\4\u0434"+
-    "\2\0\1\u0434\15\0\1\u0434\6\0\12\u0436\1\u0435\13\0"+
-    "\1\u035e\222\0\1\u03c5\4\u0434\2\0\1\u0434\15\0\1\u0434"+
-    "\6\0\12\u0437\1\u0435\13\0\1\u035e\222\0\1\u03c5\4\u0434"+
-    "\2\0\1\u0434\15\0\1\u0434\6\0\1\u0436\1\u0438\1\u0437"+
-    "\2\u0436\2\u0437\1\u0436\1\u0437\1\u0436\1\u0435\13\0\1\u035e"+
-    "\223\0\4\u0439\2\0\1\u0439\15\0\1\u0439\6\0\12\u0439"+
-    "\1\u03c4\13\0\1\u035e\223\0\4\u03bf\2\0\1\u03bf\15\0"+
-    "\1\u03bf\6\0\1\u03c0\2\u03c1\1\u03c0\5\u03c1\1\u03c2\273\0"+
-    "\1\u043a\2\u043b\1\u043a\5\u043b\1\u043c\237\0\1\u03c5\4\u0439"+
-    "\2\0\1\u0439\15\0\1\u0439\6\0\12\u043d\1\u03c4\13\0"+
-    "\1\u035e\222\0\1\u03c5\4\u0439\2\0\1\u0439\15\0\1\u0439"+
-    "\6\0\12\u0439\1\u03c4\13\0\1\u035e\222\0\1\u03c5\4\u0439"+
-    "\2\0\1\u0439\15\0\1\u0439\6\0\2\u043d\1\u0439\2\u043d"+
-    "\2\u0439\1\u043d\1\u0439\1\u043d\1\u03c4\13\0\1\u035e\222\0"+
-    "\34\u01f0\12\u043e\1\0\2\u01f0\1\u0234\3\u01f0\1\u01f2\1\0"+
-    "\1\u0233\3\0\2\u01f0\4\0\1\u01f0\217\0\1\u043f\334\0"+
-    "\12\u0440\11\0\1\u0233\226\0\4\u0441\2\0\1\u0441\15\0"+
-    "\1\u0441\6\0\12\u0441\1\u0364\237\0\4\u0442\2\0\1\u0442"+
-    "\15\0\1\u0442\6\0\12\u0442\1\u0443\237\0\4\u0444\2\0"+
-    "\1\u0444\15\0\1\u0444\6\0\1\u0445\2\u0446\1\u0445\5\u0446"+
-    "\1\u0447\14\0\1\u0302\223\0\4\u0448\2\0\1\u0448\15\0"+
-    "\1\u0448\6\0\12\u0448\1\u03d0\13\0\1\u0302\223\0\4\u0444"+
-    "\2\0\1\u0444\15\0\1\u0444\6\0\1\u0445\2\u0446\1\u0445"+
-    "\5\u0446\1\u0447\237\0\1\u036b\4\u0448\2\0\1\u0448\15\0"+
-    "\1\u0448\6\0\12\u0449\1\u03d0\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u0448\2\0\1\u0448\15\0\1\u0448\6\0\12\u0448\1\u03d0"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u0448\2\0\1\u0448\15\0"+
-    "\1\u0448\6\0\2\u0449\1\u0448\2\u0449\2\u0448\1\u0449\1\u0448"+
-    "\1\u0449\1\u03d0\13\0\1\u0302\223\0\4\u044a\2\0\1\u044a"+
-    "\15\0\1\u044a\6\0\12\u044a\1\u036a\13\0\1\u0302\222\0"+
-    "\1\u044b\33\0\12\u03d6\237\0\1\u044b\33\0\12\u044c\237\0"+
-    "\1\u044b\33\0\1\u03d6\1\u044d\1\u044c\2\u03d6\2\u044c\1\u03d6"+
-    "\1\u044c\1\u03d6\237\0\1\u036b\4\u044a\2\0\1\u044a\15\0"+
-    "\1\u044a\6\0\12\u044a\1\u036a\13\0\1\u0302\222\0\1\u036f"+
-    "\1\u0303\2\u044e\1\u044f\1\u0450\10\u044e\1\u0303\1\u0451\5\u044e"+
-    "\6\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u0452\2\u044e\1\u0303"+
-    "\1\u044e\1\u0453\6\u044e\4\u0303\4\u044e\1\u0303\1\u044e\1\u0303"+
-    "\3\u044e\1\u0370\12\u0303\237\0\1\u036f\3\u0303\1\u044e\1\u0303"+
-    "\1\u044e\4\u0303\1\u044e\10\u0303\1\u044e\2\u0303\1\u044e\2\u0303"+
-    "\1\u044e\1\u0370\12\u0303\237\0\1\u036f\1\u0303\1\u044e\1\u0454"+
-    "\2\u044e\2\u0303\1\u044e\6\u0303\3\u044e\11\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\3\u0303\1\u044e\1\u0303\1\u044e\10\u0303\1\u044e"+
-    "\1\u0303\2\u044e\10\u0303\1\u0370\12\u0303\237\0\1\u036f\4\u0303"+
-    "\1\u0455\5\u0303\1\u044e\17\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\4\u0303\2\u044e\2\u0303\1\u044e\1\u0303\1\u044e\13\u0303\1\u044e"+
-    "\2\u0303\1\u044e\1\u0370\12\u0303\237\0\1\u036f\1\u044e\1\u0303"+
-    "\3\u044e\1\u0456\14\u044e\2\u0303\2\u044e\2\u0303\1\u044e\1\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\2\u0303\4\u044e\3\u0303\2\u044e"+
-    "\1\u0457\1\u044e\1\u0303\2\u044e\12\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\2\u044e\2\u0303\1\u044e\3\u0303\1\u044e\5\u0303\3\u044e"+
-    "\3\u0303\1\u044e\2\u0303\3\u044e\1\u0370\12\u0303\237\0\1\u036f"+
-    "\5\u044e\1\u0458\1\u0303\1\u044e\1\u0459\7\u044e\1\u045a\3\u044e"+
-    "\1\u0303\1\u044e\1\u0303\3\u044e\1\u0370\12\u0303\237\0\1\u036f"+
-    "\1\u045b\1\u044e\1\u0303\1\u0452\6\u044e\3\u0303\1\u044e\2\u0303"+
-    "\1\u044e\2\u0303\1\u044e\6\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\1\u044e\31\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u044e\2\u0303"+
-    "\1\u044e\1\u045c\1\u0303\2\u044e\1\u0303\3\u044e\2\u0303\2\u044e"+
-    "\1\u0303\1\u044e\3\u0303\1\u044e\2\u0303\2\u044e\1\u0370\12\u0303"+
-    "\237\0\1\u036f\6\u044e\1\u0303\5\u044e\3\u0303\2\u044e\1\u0303"+
-    "\10\u044e\1\u0370\12\u0303\237\0\1\u036f\1\u0303\2\u044e\1\u0459"+
-    "\1\u045d\3\u044e\1\u0303\3\u044e\1\u0303\1\u044e\1\u0303\1\u044e"+
-    "\1\u0303\1\u044e\1\u0303\1\u044e\1\u0303\3\u044e\1\u0303\1\u044e"+
-    "\1\u0370\12\u0303\237\0\1\u036f\1\u044e\6\u0303\1\u044e\6\u0303"+
-    "\1\u044e\4\u0303\1\u044e\4\u0303\2\u044e\1\u0370\12\u0303\237\0"+
-    "\1\u036f\6\u0303\1\u044e\7\u0303\1\u044e\13\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\13\u0303\1\u045e\6\u0303\1\u045f\7\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\1\u044e\11\u0303\1\u044e\6\u0303\1\u044e"+
-    "\10\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u044e\1\u0303\6\u044e"+
-    "\1\u0460\1\u0303\2\u044e\2\u0303\2\u044e\1\u0303\1\u044e\1\u0303"+
-    "\6\u044e\1\u0303\1\u0370\12\u0303\237\0\1\u036f\4\u0303\1\u044e"+
-    "\5\u0303\2\u044e\3\u0303\2\u044e\10\u0303\1\u044e\1\u0370\12\u0303"+
-    "\237\0\1\u036f\3\u0303\1\u044e\1\u0303\1\u0461\4\u0303\1\u044e"+
-    "\2\u0303\1\u044e\14\u0303\1\u0370\12\u0303\237\0\1\u036f\2\u044e"+
-    "\1\u0303\1\u044e\3\u0303\2\u044e\2\u0303\1\u044e\4\u0303\1\u044e"+
-    "\11\u0303\1\u0370\12\u0303\237\0\1\u036f\3\u0303\1\u044e\13\u0303"+
-    "\1\u044e\12\u0303\1\u0370\12\u0303\237\0\1\u036f\3\u0303\2\u044e"+
-    "\2\u0303\2\u044e\1\u0303\2\u044e\1\u0303\1\u044e\3\u0303\1\u044e"+
-    "\1\u0303\1\u044e\1\u0303\1\u044e\2\u0303\1\u044e\1\u0303\1\u0370"+
-    "\12\u0303\237\0\34\u023e\12\u0462\1\0\2\u023e\1\u029f\3\u023e"+
-    "\1\u0240\1\u018c\1\u018d\1\u018e\2\0\2\u023e\4\0\1\u023e"+
-    "\214\0\4\u0463\2\0\1\u0463\15\0\1\u0463\6\0\12\u0463"+
-    "\1\u0376\237\0\4\u0464\2\0\1\u0464\15\0\1\u0464\6\0"+
-    "\12\u0464\1\u0465\237\0\4\u0466\2\0\1\u0466\15\0\1\u0466"+
-    "\6\0\1\u0467\2\u0468\1\u0467\5\u0468\1\u0469\14\0\1\u0146"+
-    "\223\0\4\u046a\2\0\1\u046a\15\0\1\u046a\6\0\12\u046a"+
-    "\1\u03f8\13\0\1\u0146\223\0\4\u0466\2\0\1\u0466\15\0"+
-    "\1\u0466\6\0\1\u0467\2\u0468\1\u0467\5\u0468\1\u0469\237\0"+
-    "\1\u0188\4\u046a\2\0\1\u046a\15\0\1\u046a\6\0\12\u046b"+
-    "\1\u03f8\13\0\1\u0146\222\0\1\u0188\4\u046a\2\0\1\u046a"+
-    "\15\0\1\u046a\6\0\12\u046a\1\u03f8\13\0\1\u0146\222\0"+
-    "\1\u0188\4\u046a\2\0\1\u046a\15\0\1\u046a\6\0\2\u046b"+
-    "\1\u046a\2\u046b\2\u046a\1\u046b\1\u046a\1\u046b\1\u03f8\13\0"+
-    "\1\u0146\270\0\1\u0310\13\0\1\u0146\222\0\1\u0109\32\270"+
-    "\1\u010a\1\u046c\11\270\237\0\1\u0109\1\u046d\31\270\1\u010a"+
-    "\12\270\237\0\1\u0109\32\270\1\u010a\10\270\1\u046e\1\270"+
-    "\237\0\1\u0109\25\270\1\u018f\4\270\1\u010a\12\270\237\0"+
-    "\1\u0109\32\270\1\u010a\5\270\1\u046f\4\270\237\0\1\u0109"+
-    "\32\270\1\u010a\5\270\1\u0470\4\270\237\0\1\u0109\32\270"+
-    "\1\u010a\5\270\1\u040d\4\270\237\0\1\u0109\32\270\1\u010a"+
-    "\3\270\1\u046d\6\270\237\0\1\u0109\17\270\1\u0471\12\270"+
-    "\1\u010a\12\270\237\0\1\u0109\12\270\1\u0472\17\270\1\u010a"+
-    "\12\270\237\0\1\u0109\25\270\1\u0473\4\270\1\u010a\12\270"+
-    "\237\0\1\u0109\1\u0474\31\270\1\u010a\12\270\237\0\1\u0109"+
-    "\15\270\1\u0475\14\270\1\u010a\12\270\237\0\1\u0109\32\270"+
-    "\1\u010a\3\270\1\u0476\6\270\237\0\1\u0109\21\270\1\u0477"+
-    "\10\270\1\u010a\12\270\237\0\1\u0109\2\270\1\u0400\27\270"+
-    "\1\u010a\12\270\237\0\1\u0109\1\270\1\u018f\30\270\1\u010a"+
-    "\12\270\237\0\1\u0109\11\270\1\u0478\20\270\1\u010a\12\270"+
-    "\237\0\1\u0109\11\270\1\u0479\20\270\1\u010a\12\270\237\0"+
-    "\1\u0109\1\u047a\31\270\1\u010a\12\270\237\0\1\u0109\1\u047b"+
-    "\31\270\1\u010a\12\270\237\0\1\u0109\2\270\1\u047c\27\270"+
-    "\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\4\270\1\u0196"+
-    "\5\270\237\0\1\u0109\10\270\1\u047d\21\270\1\u010a\12\270"+
-    "\237\0\1\u0109\1\u047e\31\270\1\u010a\12\270\237\0\1\u0109"+
-    "\25\270\1\u047f\4\270\1\u010a\12\270\237\0\1\u0109\32\270"+
-    "\1\u010a\4\270\1\u046d\5\270\237\0\1\u0109\32\270\1\u010a"+
-    "\6\270\1\u046d\3\270\237\0\1\u0109\32\270\1\u010a\2\270"+
-    "\1\u046d\7\270\237\0\1\u0109\16\270\1\u0480\13\270\1\u010a"+
-    "\12\270\237\0\1\u0109\32\270\1\u010a\1\u0481\11\270\237\0"+
-    "\1\u0109\32\270\1\u010a\3\270\1\u0482\6\270\237\0\1\u0109"+
-    "\32\270\1\u010a\3\270\1\u0153\6\270\237\0\1\u0109\24\270"+
-    "\1\u0483\5\270\1\u010a\12\270\237\0\1\u0121\1\u0484\31\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\11\324\1\u0345\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u0485\31\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u0486\31\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\7\324\1\u0487"+
-    "\22\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u0488"+
-    "\31\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u0489"+
-    "\31\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\6\324\1\u048a\3\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\6\324\1\u0127\23\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\25\324\1\u048b\4\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\1\u048c\31\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\6\324\1\u048d\3\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\1\u048e\31\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\32\324\1\164\6\324\1\u0175\3\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\12\324\1\u0138\17\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\1\u048f\31\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\10\324\1\u0490\21\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\31\324\1\u0491"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\213\0\4\u0492\2\0\1\u0492"+
-    "\15\0\1\u0492\6\0\12\u0492\1\u03be\237\0\4\u0493\2\0"+
-    "\1\u0493\15\0\1\u0493\6\0\12\u0493\1\u0494\237\0\4\u0495"+
-    "\2\0\1\u0495\15\0\1\u0495\6\0\1\u0496\2\u0497\1\u0496"+
-    "\5\u0497\1\u0498\14\0\1\u035e\223\0\4\u0499\2\0\1\u0499"+
-    "\15\0\1\u0499\6\0\12\u0499\1\u0435\13\0\1\u035e\223\0"+
-    "\4\u0495\2\0\1\u0495\15\0\1\u0495\6\0\1\u0496\2\u0497"+
-    "\1\u0496\5\u0497\1\u0498\237\0\1\u03c5\4\u0499\2\0\1\u0499"+
-    "\15\0\1\u0499\6\0\12\u049a\1\u0435\13\0\1\u035e\222\0"+
-    "\1\u03c5\4\u0499\2\0\1\u0499\15\0\1\u0499\6\0\12\u0499"+
-    "\1\u0435\13\0\1\u035e\222\0\1\u03c5\4\u0499\2\0\1\u0499"+
-    "\15\0\1\u0499\6\0\2\u049a\1\u0499\2\u049a\2\u0499\1\u049a"+
-    "\1\u0499\1\u049a\1\u0435\13\0\1\u035e\223\0\4\u049b\2\0"+
-    "\1\u049b\15\0\1\u049b\6\0\12\u049b\1\u03c4\13\0\1\u035e"+
-    "\222\0\1\u049c\33\0\12\u043b\237\0\1\u049c\33\0\12\u049d"+
-    "\237\0\1\u049c\33\0\1\u043b\1\u049e\1\u049d\2\u043b\2\u049d"+
-    "\1\u043b\1\u049d\1\u043b\237\0\1\u03c5\4\u049b\2\0\1\u049b"+
-    "\15\0\1\u049b\6\0\12\u049b\1\u03c4\13\0\1\u035e\222\0"+
-    "\46\u01f0\1\0\2\u01f0\1\u0234\3\u01f0\1\u01f2\1\0\1\u0233"+
-    "\3\0\2\u01f0\4\0\1\u01f0\277\0\1\u049f\254\0\12\u04a0"+
-    "\11\0\1\u0233\273\0\1\u0364\237\0\4\u04a1\2\0\1\u04a1"+
-    "\15\0\1\u04a1\6\0\12\u04a1\1\u0443\237\0\4\u04a2\2\0"+
-    "\1\u04a2\15\0\1\u04a2\6\0\12\u04a2\1\u04a3\237\0\4\u04a4"+
-    "\2\0\1\u04a4\15\0\1\u04a4\6\0\12\u04a4\1\u04a5\13\0"+
-    "\1\u0302\222\0\1\u036b\4\u04a4\2\0\1\u04a4\15\0\1\u04a4"+
-    "\6\0\12\u04a6\1\u04a5\13\0\1\u0302\222\0\1\u036b\4\u04a4"+
-    "\2\0\1\u04a4\15\0\1\u04a4\6\0\12\u04a7\1\u04a5\13\0"+
-    "\1\u0302\222\0\1\u036b\4\u04a4\2\0\1\u04a4\15\0\1\u04a4"+
-    "\6\0\1\u04a6\1\u04a8\1\u04a7\2\u04a6\2\u04a7\1\u04a6\1\u04a7"+
-    "\1\u04a6\1\u04a5\13\0\1\u0302\223\0\4\u04a9\2\0\1\u04a9"+
-    "\15\0\1\u04a9\6\0\12\u04a9\1\u03d0\13\0\1\u0302\222\0"+
-    "\1\u036b\4\u04a9\2\0\1\u04a9\15\0\1\u04a9\6\0\12\u04a9"+
-    "\1\u03d0\13\0\1\u0302\270\0\1\u036a\13\0\1\u0302\256\0"+
-    "\1\u04aa\2\u04ab\1\u04aa\5\u04ab\1\u04ac\237\0\1\u044b\304\0"+
-    "\1\u044b\33\0\2\u044c\1\0\2\u044c\2\0\1\u044c\1\0"+
-    "\1\u044c\237\0\1\u04ad\32\u0303\1\u0370\12\u0303\237\0\1\u04ad"+
-    "\4\u0303\1\u04ae\25\u0303\1\u0370\12\u0303\237\0\1\u04ad\15\u0303"+
-    "\1\u03e5\14\u0303\1\u0370\12\u0303\237\0\1\u04ad\10\u0303\1\u03e5"+
-    "\21\u0303\1\u0370\12\u0303\237\0\1\u04ad\17\u0303\1\u044e\12\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u04ad\5\u0303\1\u04af\4\u0303\1\u044e"+
-    "\17\u0303\1\u0370\12\u0303\237\0\1\u036f\20\u0303\1\u044e\11\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\7\u0303\1\u044e\22\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\27\u0303\1\u044e\2\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u04ad\6\u0303\1\u04ae\10\u0303\1\u044e\12\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u04ad\24\u0303\1\u04b0\5\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\11\u0303\1\u044e\20\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u04ad\16\u0303\1\u04b1\13\u0303\1\u0370\12\u0303\237\0\1\u04ad"+
-    "\12\u0303\1\u04b2\17\u0303\1\u0370\12\u0303\237\0\1\u04ad\5\u0303"+
-    "\1\u044e\24\u0303\1\u0370\12\u0303\237\0\1\u04ad\1\u04b3\31\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u04b4\12\u0303\237\0"+
-    "\1\u036f\22\u0303\1\u044e\7\u0303\1\u0370\12\u0303\237\0\1\u04ad"+
-    "\23\u0303\1\u044e\6\u0303\1\u0370\12\u0303\237\0\1\u04ad\24\u0303"+
-    "\1\u04b5\5\u0303\1\u0370\12\u0303\237\0\34\u023e\12\u04b6\1\0"+
-    "\2\u023e\1\u029f\3\u023e\1\u0240\1\u018c\1\u018d\1\u018e\2\0"+
-    "\2\u023e\4\0\1\u023e\261\0\1\u0376\237\0\4\u04b7\2\0"+
-    "\1\u04b7\15\0\1\u04b7\6\0\12\u04b7\1\u0465\237\0\4\u04b8"+
-    "\2\0\1\u04b8\15\0\1\u04b8\6\0\1\u04b9\2\u04ba\1\u04b9"+
-    "\5\u04ba\1\u04bb\1\u04bc\237\0\4\u04bd\2\0\1\u04bd\15\0"+
-    "\1\u04bd\6\0\12\u04bd\1\u04be\13\0\1\u0146\222\0\1\u0188"+
-    "\4\u04bd\2\0\1\u04bd\15\0\1\u04bd\6\0\12\u04bf\1\u04be"+
-    "\13\0\1\u0146\222\0\1\u0188\4\u04bd\2\0\1\u04bd\15\0"+
-    "\1\u04bd\6\0\12\u04c0\1\u04be\13\0\1\u0146\222\0\1\u0188"+
-    "\4\u04bd\2\0\1\u04bd\15\0\1\u04bd\6\0\1\u04bf\1\u04c1"+
-    "\1\u04c0\2\u04bf\2\u04c0\1\u04bf\1\u04c0\1\u04bf\1\u04be\13\0"+
-    "\1\u0146\223\0\4\u04c2\2\0\1\u04c2\15\0\1\u04c2\6\0"+
-    "\12\u04c2\1\u03f8\13\0\1\u0146\222\0\1\u0188\4\u04c2\2\0"+
-    "\1\u04c2\15\0\1\u04c2\6\0\12\u04c2\1\u03f8\13\0\1\u0146"+
-    "\222\0\1\u0109\3\270\1\u04c3\26\270\1\u010a\12\270\237\0"+
-    "\1\u0109\2\270\1\u018f\27\270\1\u010a\12\270\237\0\1\u0109"+
-    "\6\270\1\u019a\23\270\1\u010a\12\270\237\0\1\u0109\1\270"+
-    "\1\u0417\30\270\1\u010a\12\270\237\0\1\u0109\3\270\1\u04c4"+
-    "\26\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\3\270"+
-    "\1\u04c5\6\270\237\0\1\u0109\32\270\1\u010a\6\270\1\u04c6"+
-    "\3\270\237\0\1\u0109\32\270\1\u010a\6\270\1\u04c7\3\270"+
-    "\237\0\1\u0109\32\270\1\u010a\5\270\1\u04c8\4\270\237\0"+
-    "\1\u0109\32\270\1\u010a\7\270\1\u04c9\2\270\237\0\1\u0109"+
-    "\1\u04ca\31\270\1\u010a\12\270\237\0\1\u0109\24\270\1\u04cb"+
-    "\5\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\4\270"+
-    "\1\u04cc\5\270\237\0\1\u0109\32\270\1\u010a\4\270\1\u04cd"+
-    "\5\270\237\0\1\u0109\26\270\1\u04ce\3\270\1\u010a\12\270"+
-    "\237\0\1\u0109\30\270\1\u04cf\1\270\1\u010a\12\270\237\0"+
-    "\1\u0109\11\270\1\u01cb\20\270\1\u010a\12\270\237\0\1\u0109"+
-    "\32\270\1\u010a\2\270\1\u04d0\7\270\237\0\1\u0109\12\270"+
-    "\1\u04d1\17\270\1\u010a\12\270\237\0\1\u0109\17\270\1\u0197"+
-    "\12\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\4\270"+
-    "\1\u04d2\5\270\237\0\1\u0109\32\270\1\u010a\6\270\1\u01ce"+
-    "\3\270\237\0\1\u0109\30\270\1\u04d3\1\270\1\u010a\12\270"+
-    "\237\0\1\u0109\30\270\1\u04d4\1\270\1\u010a\12\270\237\0"+
-    "\1\u0121\32\324\1\164\1\u04d5\11\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\2\324\1\u04d6\27\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\10\324\1\u0338\1\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\15\324\1\350\14\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\23\324\1\u04d7\6\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164\1\324"+
-    "\1\u04d8\10\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164"+
-    "\3\324\1\u0179\6\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\30\324"+
-    "\1\u04d9\1\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\1\324\1\u04da\10\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\6\324\1\u04db\23\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\32\324\1\164\5\324\1\u04dc\4\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\32\324\1\164\5\324\1\u04dd\4\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\1\324\1\350"+
-    "\10\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\13\324\1\u04de\16\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\260\0\1\u03be\237\0\4\u04df"+
-    "\2\0\1\u04df\15\0\1\u04df\6\0\12\u04df\1\u0494\237\0"+
-    "\4\u04e0\2\0\1\u04e0\15\0\1\u04e0\6\0\12\u04e0\1\u04e1"+
-    "\237\0\4\u04e2\2\0\1\u04e2\15\0\1\u04e2\6\0\12\u04e2"+
-    "\1\u04e3\13\0\1\u035e\222\0\1\u03c5\4\u04e2\2\0\1\u04e2"+
-    "\15\0\1\u04e2\6\0\12\u04e4\1\u04e3\13\0\1\u035e\222\0"+
-    "\1\u03c5\4\u04e2\2\0\1\u04e2\15\0\1\u04e2\6\0\12\u04e5"+
-    "\1\u04e3\13\0\1\u035e\222\0\1\u03c5\4\u04e2\2\0\1\u04e2"+
-    "\15\0\1\u04e2\6\0\1\u04e4\1\u04e6\1\u04e5\2\u04e4\2\u04e5"+
-    "\1\u04e4\1\u04e5\1\u04e4\1\u04e3\13\0\1\u035e\223\0\4\u04e7"+
-    "\2\0\1\u04e7\15\0\1\u04e7\6\0\12\u04e7\1\u0435\13\0"+
-    "\1\u035e\222\0\1\u03c5\4\u04e7\2\0\1\u04e7\15\0\1\u04e7"+
-    "\6\0\12\u04e7\1\u0435\13\0\1\u035e\270\0\1\u03c4\13\0"+
-    "\1\u035e\256\0\1\u04e8\2\u04e9\1\u04e8\5\u04e9\1\u04ea\237\0"+
-    "\1\u049c\304\0\1\u049c\33\0\2\u049d\1\0\2\u049d\2\0"+
-    "\1\u049d\1\0\1\u049d\240\0\1\u04eb\1\0\1\u04eb\5\0"+
-    "\1\u04eb\352\0\1\u0233\226\0\4\u04ec\2\0\1\u04ec\15\0"+
-    "\1\u04ec\6\0\12\u04ec\1\u0443\237\0\4\u04ed\2\0\1\u04ed"+
-    "\15\0\1\u04ed\6\0\12\u04ed\1\u04ee\237\0\4\u04ef\2\0"+
-    "\1\u04ef\15\0\1\u04ef\6\0\1\u04f0\2\u04f1\1\u04f0\5\u04f1"+
-    "\1\u04f2\14\0\1\u0302\223\0\4\u04f3\2\0\1\u04f3\15\0"+
-    "\1\u04f3\6\0\12\u04f3\1\u04a5\13\0\1\u0302\223\0\4\u04ef"+
-    "\2\0\1\u04ef\15\0\1\u04ef\6\0\1\u04f0\2\u04f1\1\u04f0"+
-    "\5\u04f1\1\u04f2\237\0\1\u036b\4\u04f3\2\0\1\u04f3\15\0"+
-    "\1\u04f3\6\0\12\u04f4\1\u04a5\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u04f3\2\0\1\u04f3\15\0\1\u04f3\6\0\12\u04f3\1\u04a5"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u04f3\2\0\1\u04f3\15\0"+
-    "\1\u04f3\6\0\2\u04f4\1\u04f3\2\u04f4\2\u04f3\1\u04f4\1\u04f3"+
-    "\1\u04f4\1\u04a5\13\0\1\u0302\270\0\1\u03d0\13\0\1\u0302"+
-    "\222\0\1\u04f5\33\0\12\u04ab\237\0\1\u04f5\33\0\12\u04f6"+
-    "\237\0\1\u04f5\33\0\1\u04ab\1\u04f7\1\u04f6\2\u04ab\2\u04f6"+
-    "\1\u04ab\1\u04f6\1\u04ab\237\0\1\u036f\5\u0303\1\u044e\24\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\15\u0303\1\u044e\14\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\10\u0303\1\u044e\21\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\3\u0303\1\u04f8\26\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\3\u0303\1\u044e\26\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\27\u0303\1\u04f9\2\u0303\1\u0370\12\u0303\240\0\32\u0303\1\u04fa"+
-    "\12\u0303\237\0\1\u036f\16\u0303\1\u044e\13\u0303\1\u0370\12\u0303"+
-    "\237\0\46\u023e\1\0\2\u023e\1\u029f\3\u023e\1\u0240\1\u018c"+
-    "\1\u018d\1\u018e\2\0\2\u023e\4\0\1\u023e\214\0\4\u04fb"+
-    "\2\0\1\u04fb\15\0\1\u04fb\6\0\12\u04fb\1\u0465\237\0"+
-    "\4\u04fc\2\0\1\u04fc\15\0\1\u04fc\6\0\12\u04fc\1\u04fd"+
-    "\236\0\1\u0188\4\u04fc\2\0\1\u04fc\15\0\1\u04fc\6\0"+
-    "\12\u04fe\1\u04fd\236\0\1\u0188\4\u04fc\2\0\1\u04fc\15\0"+
-    "\1\u04fc\6\0\12\u04ff\1\u04fd\236\0\1\u0188\4\u04fc\2\0"+
-    "\1\u04fc\15\0\1\u04fc\6\0\1\u04fe\1\u0500\1\u04ff\2\u04fe"+
-    "\2\u04ff\1\u04fe\1\u04ff\1\u04fe\1\u04fd\237\0\4\u0501\2\0"+
-    "\1\u0501\15\0\1\u0501\6\0\12\u0501\14\0\1\u0146\223\0"+
-    "\4\u0502\2\0\1\u0502\15\0\1\u0502\6\0\12\u0502\1\u04be"+
-    "\13\0\1\u0146\223\0\4\u0501\2\0\1\u0501\15\0\1\u0501"+
-    "\6\0\12\u0501\237\0\1\u0188\4\u0502\2\0\1\u0502\15\0"+
-    "\1\u0502\6\0\12\u0503\1\u04be\13\0\1\u0146\222\0\1\u0188"+
-    "\4\u0502\2\0\1\u0502\15\0\1\u0502\6\0\12\u0502\1\u04be"+
-    "\13\0\1\u0146\222\0\1\u0188\4\u0502\2\0\1\u0502\15\0"+
-    "\1\u0502\6\0\2\u0503\1\u0502\2\u0503\2\u0502\1\u0503\1\u0502"+
-    "\1\u0503\1\u04be\13\0\1\u0146\270\0\1\u03f8\13\0\1\u0146"+
-    "\222\0\1\u0109\1\u0504\31\270\1\u010a\12\270\237\0\1\u0109"+
-    "\32\270\1\u010a\11\270\1\u040d\237\0\1\u0109\1\u0505\31\270"+
-    "\1\u010a\12\270\237\0\1\u0109\1\u0506\31\270\1\u010a\12\270"+
-    "\237\0\1\u0109\7\270\1\u0507\22\270\1\u010a\12\270\237\0"+
-    "\1\u0109\1\u0508\31\270\1\u010a\12\270\237\0\1\u0109\1\u0509"+
-    "\31\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\6\270"+
-    "\1\u050a\3\270\237\0\1\u0109\6\270\1\u018f\23\270\1\u010a"+
-    "\12\270\237\0\1\u0109\25\270\1\u050b\4\270\1\u010a\12\270"+
-    "\237\0\1\u0109\1\u050c\31\270\1\u010a\12\270\237\0\1\u0109"+
-    "\32\270\1\u010a\6\270\1\u050d\3\270\237\0\1\u0109\1\u050e"+
-    "\31\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\6\270"+
-    "\1\u01ca\3\270\237\0\1\u0109\12\270\1\u01a0\17\270\1\u010a"+
-    "\12\270\237\0\1\u0109\1\u050f\31\270\1\u010a\12\270\237\0"+
-    "\1\u0109\10\270\1\u0510\21\270\1\u010a\12\270\237\0\1\u0109"+
-    "\31\270\1\u0511\1\u010a\12\270\237\0\1\u0121\24\324\1\u0512"+
-    "\5\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\10\324\1\u0513\1\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\1\324\1\u012e\30\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\2\324\1\u0514\27\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\3\324\1\u0515\26\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\3\324\1\u0516\26\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\1\324\1\u0517"+
-    "\10\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\3\324\1\u0518\26\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\u0519\31\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\26\324\1\u051a"+
-    "\3\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\213\0\4\u051b\2\0"+
-    "\1\u051b\15\0\1\u051b\6\0\12\u051b\1\u0494\237\0\4\u051c"+
-    "\2\0\1\u051c\15\0\1\u051c\6\0\12\u051c\1\u051d\237\0"+
-    "\4\u051e\2\0\1\u051e\15\0\1\u051e\6\0\1\u051f\2\u0520"+
-    "\1\u051f\5\u0520\1\u0521\14\0\1\u035e\223\0\4\u0522\2\0"+
-    "\1\u0522\15\0\1\u0522\6\0\12\u0522\1\u04e3\13\0\1\u035e"+
-    "\223\0\4\u051e\2\0\1\u051e\15\0\1\u051e\6\0\1\u051f"+
-    "\2\u0520\1\u051f\5\u0520\1\u0521\237\0\1\u03c5\4\u0522\2\0"+
-    "\1\u0522\15\0\1\u0522\6\0\12\u0523\1\u04e3\13\0\1\u035e"+
-    "\222\0\1\u03c5\4\u0522\2\0\1\u0522\15\0\1\u0522\6\0"+
-    "\12\u0522\1\u04e3\13\0\1\u035e\222\0\1\u03c5\4\u0522\2\0"+
-    "\1\u0522\15\0\1\u0522\6\0\2\u0523\1\u0522\2\u0523\2\u0522"+
-    "\1\u0523\1\u0522\1\u0523\1\u04e3\13\0\1\u035e\270\0\1\u0435"+
-    "\13\0\1\u035e\222\0\1\u0524\33\0\12\u04e9\237\0\1\u0524"+
-    "\33\0\12\u0525\237\0\1\u0524\33\0\1\u04e9\1\u0526\1\u0525"+
-    "\2\u04e9\2\u0525\1\u04e9\1\u0525\1\u04e9\317\0\1\u018e\272\0"+
-    "\1\u0443\237\0\4\u0527\2\0\1\u0527\15\0\1\u0527\6\0"+
-    "\12\u0527\1\u04ee\237\0\4\u0528\2\0\1\u0528\15\0\1\u0528"+
-    "\6\0\12\u0528\1\u0529\237\0\4\u052a\2\0\1\u052a\15\0"+
-    "\1\u052a\6\0\12\u052a\1\u052b\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u052a\2\0\1\u052a\15\0\1\u052a\6\0\12\u052c\1\u052b"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u052a\2\0\1\u052a\15\0"+
-    "\1\u052a\6\0\12\u052d\1\u052b\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u052a\2\0\1\u052a\15\0\1\u052a\6\0\1\u052c\1\u052e"+
-    "\1\u052d\2\u052c\2\u052d\1\u052c\1\u052d\1\u052c\1\u052b\13\0"+
-    "\1\u0302\223\0\4\u052f\2\0\1\u052f\15\0\1\u052f\6\0"+
-    "\12\u052f\1\u04a5\13\0\1\u0302\222\0\1\u036b\4\u052f\2\0"+
-    "\1\u052f\15\0\1\u052f\6\0\12\u052f\1\u04a5\13\0\1\u0302"+
-    "\256\0\1\u0530\2\u0531\1\u0530\5\u0531\1\u0532\237\0\1\u04f5"+
-    "\304\0\1\u04f5\33\0\2\u04f6\1\0\2\u04f6\2\0\1\u04f6"+
-    "\1\0\1\u04f6\237\0\1\u036f\20\u0303\1\u0533\11\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\3\u0303\1\u0459\26\u0303\1\u0370\12\u0303"+
-    "\240\0\1\u0303\1\u0534\1\u0535\2\u0303\1\u0536\1\u0537\1\u0538"+
-    "\1\u0303\1\u0539\1\u053a\2\u0303\1\u053b\1\u053c\2\u0303\1\u053d"+
-    "\1\u053e\1\u053f\1\u0303\1\u0540\1\u0541\1\u0303\1\u0542\1\u0543"+
-    "\1\u0370\1\u0544\2\u0303\1\u0545\1\u0546\1\u0547\1\u0303\1\u0548"+
-    "\1\u0549\1\u0303\305\0\1\u0465\237\0\4\u054a\2\0\1\u054a"+
-    "\15\0\1\u054a\6\0\12\u054a\1\u04fd\237\0\4\u0501\2\0"+
-    "\1\u0501\15\0\1\u0501\6\0\12\u0501\1\u037d\236\0\1\u0188"+
-    "\4\u054a\2\0\1\u054a\15\0\1\u054a\6\0\12\u054b\1\u04fd"+
-    "\236\0\1\u0188\4\u054a\2\0\1\u054a\15\0\1\u054a\6\0"+
-    "\12\u054a\1\u04fd\236\0\1\u0188\4\u054a\2\0\1\u054a\15\0"+
-    "\1\u054a\6\0\2\u054b\1\u054a\2\u054b\2\u054a\1\u054b\1\u054a"+
-    "\1\u054b\1\u04fd\237\0\4\u054c\2\0\1\u054c\15\0\1\u054c"+
-    "\6\0\12\u054c\14\0\1\u0146\223\0\4\u054d\2\0\1\u054d"+
-    "\15\0\1\u054d\6\0\12\u054d\1\u04be\13\0\1\u0146\222\0"+
-    "\1\u0188\4\u054d\2\0\1\u054d\15\0\1\u054d\6\0\12\u054d"+
-    "\1\u04be\13\0\1\u0146\222\0\1\u0109\32\270\1\u010a\1\u054e"+
-    "\11\270\237\0\1\u0109\2\270\1\u054f\27\270\1\u010a\12\270"+
-    "\237\0\1\u0109\32\270\1\u010a\10\270\1\u0400\1\270\237\0"+
-    "\1\u0109\15\270\1\u0153\14\270\1\u010a\12\270\237\0\1\u0109"+
-    "\23\270\1\u0550\6\270\1\u010a\12\270\237\0\1\u0109\32\270"+
-    "\1\u010a\1\270\1\u0551\10\270\237\0\1\u0109\32\270\1\u010a"+
-    "\3\270\1\u01ce\6\270\237\0\1\u0109\30\270\1\u0552\1\270"+
-    "\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\1\270\1\u0553"+
-    "\10\270\237\0\1\u0109\6\270\1\u0554\23\270\1\u010a\12\270"+
-    "\237\0\1\u0109\32\270\1\u010a\5\270\1\u0555\4\270\237\0"+
-    "\1\u0109\32\270\1\u010a\5\270\1\u0556\4\270\237\0\1\u0109"+
-    "\32\270\1\u010a\1\270\1\u0153\10\270\237\0\1\u0109\13\270"+
-    "\1\u0557\16\270\1\u010a\12\270\237\0\1\u0121\32\324\1\164"+
-    "\11\324\1\u0558\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\26\324\1\u0127"+
-    "\3\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\7\324\1\u0559\2\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\32\324\1\164\11\324\1\350\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121"+
-    "\3\324\1\u055a\26\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\32\324\1\164\4\324\1\u055b\5\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\16\324\1\u055c\13\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\26\324\1\u055d\3\324\1\164\12\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\212\0\1\u0121\32\324\1\164\7\324\1\u0427"+
-    "\2\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\260\0\1\u0494\237\0\4\u055e\2\0"+
-    "\1\u055e\15\0\1\u055e\6\0\12\u055e\1\u051d\237\0\4\u055f"+
-    "\2\0\1\u055f\15\0\1\u055f\6\0\12\u055f\1\u0560\237\0"+
-    "\4\u0561\2\0\1\u0561\15\0\1\u0561\6\0\12\u0561\1\u0562"+
-    "\13\0\1\u035e\222\0\1\u03c5\4\u0561\2\0\1\u0561\15\0"+
-    "\1\u0561\6\0\12\u0563\1\u0562\13\0\1\u035e\222\0\1\u03c5"+
-    "\4\u0561\2\0\1\u0561\15\0\1\u0561\6\0\12\u0564\1\u0562"+
-    "\13\0\1\u035e\222\0\1\u03c5\4\u0561\2\0\1\u0561\15\0"+
-    "\1\u0561\6\0\1\u0563\1\u0565\1\u0564\2\u0563\2\u0564\1\u0563"+
-    "\1\u0564\1\u0563\1\u0562\13\0\1\u035e\223\0\4\u0566\2\0"+
-    "\1\u0566\15\0\1\u0566\6\0\12\u0566\1\u04e3\13\0\1\u035e"+
-    "\222\0\1\u03c5\4\u0566\2\0\1\u0566\15\0\1\u0566\6\0"+
-    "\12\u0566\1\u04e3\13\0\1\u035e\256\0\1\u0567\2\u0568\1\u0567"+
-    "\5\u0568\1\u0569\237\0\1\u0524\304\0\1\u0524\33\0\2\u0525"+
-    "\1\0\2\u0525\2\0\1\u0525\1\0\1\u0525\240\0\4\u056a"+
-    "\2\0\1\u056a\15\0\1\u056a\6\0\12\u056a\1\u04ee\237\0"+
-    "\4\u056b\2\0\1\u056b\15\0\1\u056b\6\0\12\u056b\1\u056c"+
-    "\237\0\4\u056d\2\0\1\u056d\15\0\1\u056d\6\0\1\u056e"+
-    "\2\u056f\1\u056e\5\u056f\1\u0570\14\0\1\u0302\223\0\4\u0571"+
-    "\2\0\1\u0571\15\0\1\u0571\6\0\12\u0571\1\u052b\13\0"+
-    "\1\u0302\223\0\4\u056d\2\0\1\u056d\15\0\1\u056d\6\0"+
-    "\1\u056e\2\u056f\1\u056e\5\u056f\1\u0570\237\0\1\u036b\4\u0571"+
-    "\2\0\1\u0571\15\0\1\u0571\6\0\12\u0572\1\u052b\13\0"+
-    "\1\u0302\222\0\1\u036b\4\u0571\2\0\1\u0571\15\0\1\u0571"+
-    "\6\0\12\u0571\1\u052b\13\0\1\u0302\222\0\1\u036b\4\u0571"+
-    "\2\0\1\u0571\15\0\1\u0571\6\0\2\u0572\1\u0571\2\u0572"+
-    "\2\u0571\1\u0572\1\u0571\1\u0572\1\u052b\13\0\1\u0302\270\0"+
-    "\1\u04a5\13\0\1\u0302\256\0\12\u0531\14\0\1\u0302\256\0"+
-    "\12\u0573\14\0\1\u0302\256\0\1\u0531\1\u0574\1\u0573\2\u0531"+
-    "\2\u0573\1\u0531\1\u0573\1\u0531\14\0\1\u0302\222\0\1\u036f"+
-    "\12\u0303\1\u044e\17\u0303\1\u0370\12\u0303\237\0\1\u036f\11\u0303"+
-    "\1\u0575\20\u0303\1\u0370\12\u0303\237\0\1\u036f\3\u0303\1\u0576"+
-    "\26\u0303\1\u0370\12\u0303\237\0\1\u036f\7\u0303\1\u0577\22\u0303"+
-    "\1\u0370\4\u0303\1\u0578\5\u0303\237\0\1\u036f\10\u0303\1\u0579"+
-    "\4\u0303\1\u057a\5\u0303\1\u057b\6\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\3\u0303\1\u057c\26\u0303\1\u0370\2\u0303\1\u057d\7\u0303"+
-    "\237\0\1\u036f\7\u0303\1\u057e\22\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\7\u0303\1\u057f\22\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\7\u0303\1\u0580\22\u0303\1\u0370\3\u0303\1\u0581\6\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\5\u0303\1\u0582\4\u0303\237\0\1\u036f"+
-    "\7\u0303\1\u0583\22\u0303\1\u0370\12\u0303\237\0\1\u036f\31\u0303"+
-    "\1\u0584\1\u0370\12\u0303\237\0\1\u036f\1\u0303\1\u0585\30\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\7\u0303\1\u0586\1\u0303\1\u0587"+
-    "\20\u0303\1\u0370\11\u0303\1\u0582\237\0\1\u036f\22\u0303\1\u0588"+
-    "\7\u0303\1\u0370\2\u0303\1\u0589\7\u0303\237\0\1\u036f\6\u0303"+
-    "\1\u058a\1\u058b\22\u0303\1\u0370\12\u0303\237\0\1\u036f\7\u0303"+
-    "\1\u058c\5\u0303\1\u058d\14\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\23\u0303\1\u058e\6\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\3\u0303\1\u058f\6\u0303\237\0\1\u036f\3\u0303\1\u0590"+
-    "\26\u0303\1\u0370\12\u0303\237\0\1\u036f\17\u0303\1\u0591\12\u0303"+
-    "\1\u0370\1\u0592\11\u0303\237\0\1\u036f\32\u0303\1\u0370\1\u0303"+
-    "\1\u0582\10\u0303\237\0\1\u036f\32\u0303\1\u0370\1\u0593\11\u0303"+
-    "\240\0\4\u0594\2\0\1\u0594\15\0\1\u0594\6\0\12\u0594"+
-    "\1\u04fd\236\0\1\u0188\4\u0594\2\0\1\u0594\15\0\1\u0594"+
-    "\6\0\12\u0594\1\u04fd\237\0\4\u0595\2\0\1\u0595\15\0"+
-    "\1\u0595\6\0\12\u0595\14\0\1\u0146\270\0\1\u04be\13\0"+
-    "\1\u0146\222\0\1\u0109\24\270\1\u0596\5\270\1\u010a\12\270"+
-    "\237\0\1\u0109\32\270\1\u010a\10\270\1\u0597\1\270\237\0"+
-    "\1\u0109\1\270\1\u0196\30\270\1\u010a\12\270\237\0\1\u0109"+
-    "\2\270\1\u0598\27\270\1\u010a\12\270\237\0\1\u0109\3\270"+
-    "\1\u0599\26\270\1\u010a\12\270\237\0\1\u0109\3\270\1\u059a"+
-    "\26\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\1\270"+
-    "\1\u059b\10\270\237\0\1\u0109";
+    "\13\0\7\30\2\0\1\30\1\0\1\30\1\0\2\30"+
+    "\2\0\1\30\1\0\3\30\2\0\1\30\1\0\1\30"+
+    "\1\0\1\30\1\0\1\30\4\0\1\345\1\0\2\30"+
+    "\6\0\1\30\7\0\1\30\1\0\1\30\125\0\1\30"+
+    "\6\0\1\30\3\0\1\30\3\0\1\30\7\0\1\30"+
+    "\31\0\20\30\5\0\3\30\4\0\1\30\6\0\1\30"+
+    "\3\0\2\30\2\0\2\30\4\0\1\30\4\345\1\0"+
+    "\1\30\2\0\1\30\4\0\1\30\1\0\1\30\1\0"+
+    "\1\30\226\0\2\345\25\0\4\345\147\0\1\345\15\0"+
+    "\2\345\10\0\2\345\1\0\1\345\1\0\1\345\11\0"+
+    "\1\345\11\0\2\345\6\0\1\345\2\0\4\345\3\0"+
+    "\1\345\2\0\2\345\1\0\3\345\1\0\2\345\1\0"+
+    "\1\345\10\0\1\345\1\0\2\345\2\0\2\345\1\0"+
+    "\4\345\23\0\1\345\113\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\u01d7\32\43\1\204\12\205\1\u01d8\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\u01d7\4\43\1\u016e\25\43\1\204"+
+    "\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7\15\43"+
+    "\1\363\14\43\1\204\12\205\1\u01d8\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\u01d7\10\43\1\363\21\43\1\204\12\205\1\u01d8"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\u01d7\12\43\1\u01dc\4\43"+
+    "\1\u0149\12\43\1\204\12\205\1\u01d8\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\u01d7\5\43\1\u01dd\4\43\1\u0149\1\u01de\16\43"+
+    "\1\204\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7"+
+    "\5\43\1\u01df\24\43\1\204\12\205\1\u01d8\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\1\u01e0\3\43\1\u01e1\25\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\20\43\1\u0149\11\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\17\43\1\u01e2"+
+    "\12\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\20\43"+
+    "\1\u01e3\11\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7"+
+    "\17\43\1\u01e4\12\43\1\204\12\205\1\u01d8\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\7\43\1\u0149\22\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\u01d7\11\43\1\u01e5\20\43\1\204"+
+    "\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7\1\u01e6"+
+    "\31\43\1\204\12\205\1\u01d8\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\30\43\1\u0149\1\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\u01d7\4\43\1\u0151\25\43\1\204\12\205\1\u01d8"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\u01d7\6\43\1\u016e\10\43"+
+    "\1\u0149\12\43\1\204\12\205\1\u01d8\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\u01d7\13\43\1\u01e7\16\43\1\204\12\205\1\u01d8"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\u01d7\7\43\1\u01e8\22\43"+
+    "\1\204\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7"+
+    "\13\43\1\u0151\16\43\1\204\12\205\1\u01d8\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\u01d7\24\43\1\u01e9\5\43\1\204\12\205"+
+    "\1\u01d8\1\155\1\206\1\155\1\0\1\155\1\157\1\u01d9"+
+    "\1\u01da\1\u01db\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\11\43\1\u0149"+
+    "\20\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7\16\43"+
+    "\1\u01ea\13\43\1\204\12\205\1\u01d8\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\u01d7\12\43\1\u01eb\17\43\1\204\12\205\1\u01d8"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\u01d7\17\43\1\u0149\12\43"+
+    "\1\204\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7"+
+    "\5\43\1\u0149\24\43\1\204\12\205\1\u01d8\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\16\43\1\u01ec\13\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\u01d7\20\43\1\u01ed\11\43\1\204"+
+    "\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7\5\43"+
+    "\1\u01ee\24\43\1\204\12\205\1\u01d8\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\u01d7\22\43\1\u01ef\7\43\1\204\12\205\1\u01d8"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\u01d7\13\43\1\u01f0\16\43"+
+    "\1\204\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\17\43\1\u01f1\12\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\1\43\1\u01f2\7\43\1\u0149\20\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\u01d7\1\u01f3\31\43\1\204\12\205"+
+    "\1\u01d8\1\155\1\206\1\155\1\0\1\155\1\157\1\u01d9"+
+    "\1\u01da\1\u01db\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\u01d7\2\43\1\u01f4"+
+    "\27\43\1\204\12\205\1\u01d8\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\15\43\1\u01f5\14\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\5\43\1\u0149\24\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\32\43\1\u01f6\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\22\43\1\u0149\7\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\u01d7\23\43\1\u0149\2\43\1\u01eb\3\43"+
+    "\1\204\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\11\43\1\u01f7\20\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\u01d7\17\43\1\u01f8\12\43\1\204\12\205\1\u01d8\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\u01d7\24\43\1\u01f5\5\43\1\204"+
+    "\12\205\1\u01d8\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\u01d7\13\43"+
+    "\1\u01f9\16\43\1\204\12\205\1\u01d8\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\31\43\1\u01fa\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\1\160\2\0\1\156\1\u010b"+
+    "\1\u010c\1\u010d\1\u010e\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113"+
+    "\1\u0114\1\u0115\1\u0116\1\u0117\1\u0118\1\u0119\1\u011a\1\u011b"+
+    "\1\u011c\1\u011d\1\u011e\1\u011f\1\u0120\1\u0121\1\u0122\1\u0123"+
+    "\1\u0124\1\155\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\32\43\1\204\12\205"+
+    "\1\u01fb\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\246\1\0\1\247\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\250\2\0\1\251"+
+    "\4\0\1\252\3\0\1\253\17\0\1\71\2\0\1\254"+
+    "\21\0\1\255\2\0\1\256\61\0\1\30\1\76\2\0"+
+    "\1\76\1\0\2\76\1\0\1\76\2\0\1\76\1\0"+
+    "\2\30\1\76\32\30\13\0\1\76\1\0\1\76\5\0"+
+    "\1\u01fc\14\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\17\43\1\u01fd\12\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\16\43\1\u01fe\13\43\1\204\12\205\1\u01ff"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200\32\u0101"+
+    "\1\204\12\u0101\1\u0201\3\155\1\0\1\155\1\157\1\u01d9"+
+    "\1\u01da\1\u01db\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0200\4\u0101\1\u01a1\25\u0101\1\204\12\u0101\1\u0201"+
+    "\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200\15\u0101"+
+    "\1\u0117\14\u0101\1\204\12\u0101\1\u0201\3\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0200\10\u0101\1\u0117\21\u0101\1\204"+
+    "\12\u0101\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0200\12\u0101\1\u0202\4\u0101\1\u017c\12\u0101\1\204\12\u0101"+
+    "\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200"+
+    "\5\u0101\1\u0203\4\u0101\1\u017c\1\u0204\16\u0101\1\204\12\u0101"+
+    "\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200"+
+    "\5\u0101\1\u0205\24\u0101\1\204\12\u0101\1\u0201\3\155\1\0"+
+    "\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u0206\3\u0101\1\u0207"+
+    "\25\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\20\u0101\1\u017c\11\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\17\u0101\1\u0208\12\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\20\u0101"+
+    "\1\u0209\11\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0200\17\u0101\1\u020a\12\u0101\1\204\12\u0101\1\u0201"+
+    "\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\7\u0101"+
+    "\1\u017c\22\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0200\11\u0101\1\u020b\20\u0101\1\204\12\u0101\1\u0201"+
+    "\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200\1\u020c"+
+    "\31\u0101\1\204\12\u0101\1\u0201\3\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\30\u0101\1\u017c\1\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0200\4\u0101\1\u0184"+
+    "\25\u0101\1\204\12\u0101\1\u0201\3\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0200\6\u0101\1\u01a1\10\u0101\1\u017c\12\u0101"+
+    "\1\204\12\u0101\1\u0201\3\155\1\0\1\155\1\157\1\u01d9"+
+    "\1\u01da\1\u01db\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0200\13\u0101\1\u020d\16\u0101\1\204\12\u0101\1\u0201"+
+    "\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200\7\u0101"+
+    "\1\u020e\22\u0101\1\204\12\u0101\1\u0201\3\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0200\13\u0101\1\u0184\16\u0101\1\204"+
+    "\12\u0101\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0200\24\u0101\1\u020f\5\u0101\1\204\12\u0101\1\u0201\3\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\11\u0101\1\u017c"+
+    "\20\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0200\16\u0101\1\u0210\13\u0101\1\204\12\u0101\1\u0201\3\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0200\12\u0101\1\u0211"+
+    "\17\u0101\1\204\12\u0101\1\u0201\3\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0200\17\u0101\1\u017c\12\u0101\1\204\12\u0101"+
+    "\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200"+
+    "\5\u0101\1\u017c\24\u0101\1\204\12\u0101\1\u0201\3\155\1\0"+
+    "\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\16\u0101\1\u0212\13\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200"+
+    "\20\u0101\1\u0213\11\u0101\1\204\12\u0101\1\u0201\3\155\1\0"+
+    "\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0200\5\u0101\1\u0214\24\u0101"+
+    "\1\204\12\u0101\1\u0201\3\155\1\0\1\155\1\157\1\u01d9"+
+    "\1\u01da\1\u01db\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0200\22\u0101\1\u0215\7\u0101\1\204\12\u0101\1\u0201"+
+    "\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200\13\u0101"+
+    "\1\u0216\16\u0101\1\204\12\u0101\1\u0201\3\155\1\0\1\155"+
+    "\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\17\u0101\1\u0217\12\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0101"+
+    "\1\u0218\7\u0101\1\u017c\20\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0200\1\u0219\31\u0101\1\204\12\u0101"+
+    "\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200"+
+    "\2\u0101\1\u021a\27\u0101\1\204\12\u0101\1\u0201\3\155\1\0"+
+    "\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\15\u0101\1\u021b\14\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\5\u0101\1\u017c\24\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\u01f6\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\22\u0101\1\u017c\7\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0200\23\u0101"+
+    "\1\u017c\2\u0101\1\u0211\3\u0101\1\204\12\u0101\1\u0201\3\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\11\u0101\1\u021c"+
+    "\20\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0200\17\u0101\1\u021d\12\u0101\1\204\12\u0101\1\u0201\3\155"+
+    "\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0200\24\u0101\1\u021b"+
+    "\5\u0101\1\204\12\u0101\1\u0201\3\155\1\0\1\155\1\157"+
+    "\1\u01d9\1\u01da\1\u01db\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0200\13\u0101\1\u021e\16\u0101\1\204\12\u0101"+
+    "\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\31\u0101\1\u021f\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\7\0\1\266"+
+    "\1\0\1\267\17\0\1\270\2\0\1\271\4\0\1\272"+
+    "\3\0\1\273\22\0\1\274\21\0\1\275\2\0\1\276"+
+    "\62\0\1\111\1\31\2\0\3\244\1\0\1\111\2\0"+
+    "\1\u0102\1\160\2\0\1\u010a\1\u010b\1\u010c\1\u010d\1\u010e"+
+    "\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116"+
+    "\1\u0117\1\u0118\1\u0119\1\u011a\1\u011b\1\u011c\1\u011d\1\u011e"+
+    "\1\u011f\1\u0120\1\u0121\1\u0122\1\u0123\1\u0124\1\155\1\u0220"+
+    "\1\u0221\5\u0220\1\u0222\1\u0221\1\u0220\1\0\1\155\1\u0102"+
+    "\1\155\1\0\1\u0102\1\157\3\155\2\0\1\244\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\100"+
+    "\1\0\1\101\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\102\2\0\1\103\4\0\1\104"+
+    "\3\0\1\105\17\0\1\71\2\0\1\106\21\0\1\107"+
+    "\2\0\1\110\61\0\1\30\2\31\2\0\2\111\1\112"+
+    "\1\0\1\31\2\0\1\213\1\0\1\41\1\30\1\u01aa"+
+    "\32\43\1\204\12\u0128\1\0\1\155\1\216\1\155\1\0"+
+    "\1\213\1\157\3\155\2\0\1\111\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\100\1\0\1\101"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\102\2\0\1\103\4\0\1\104\3\0\1\105"+
+    "\17\0\1\71\2\0\1\106\21\0\1\107\2\0\1\110"+
+    "\61\0\1\30\2\31\2\0\2\111\1\112\1\0\1\31"+
+    "\2\0\1\213\1\0\1\41\1\30\1\u01aa\32\43\1\204"+
+    "\2\u01ab\1\u0128\2\u01ab\2\u0128\2\u01ab\1\u0128\1\0\1\155"+
+    "\1\216\1\155\1\0\1\213\1\157\3\155\2\0\1\111"+
+    "\1\155\3\0\2\155\7\0\1\266\1\0\1\267\17\0"+
+    "\1\270\2\0\1\271\4\0\1\272\3\0\1\273\22\0"+
+    "\1\274\21\0\1\275\2\0\1\276\62\0\1\111\1\31"+
+    "\2\0\3\244\1\0\1\111\2\0\1\u0102\1\160\2\0"+
+    "\1\u010a\1\u010b\1\u010c\1\u010d\1\u010e\1\u010f\1\u0110\1\u0111"+
+    "\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116\1\u0117\1\u0118\1\u0119"+
+    "\1\u011a\1\u011b\1\u011c\1\u011d\1\u011e\1\u011f\1\u0120\1\u0121"+
+    "\1\u0122\1\u0123\1\u0124\1\155\12\u0128\1\0\1\155\1\u0102"+
+    "\1\155\1\0\1\u0102\1\157\3\155\2\0\1\244\1\155"+
+    "\3\0\2\155\220\0\4\u0223\2\0\1\u0223\15\0\1\u0223"+
+    "\6\0\12\u0223\1\u012b\242\0\4\u0224\2\0\1\u0224\15\0"+
+    "\1\u0224\6\0\12\u0224\1\u0225\242\0\4\u0226\2\0\1\u0226"+
+    "\15\0\1\u0226\6\0\1\u0227\1\u0228\5\u0227\1\u0229\1\u0228"+
+    "\1\u0227\13\0\1\u01b5\227\0\4\u022a\2\0\1\u022a\15\0"+
+    "\1\u022a\6\0\12\u022a\1\u022b\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u022a\2\0\1\u022a\15\0\1\u022a\6\0\12\u022d\1\u022b"+
+    "\12\0\1\u01b5\226\0\1\u022c\4\u022a\2\0\1\u022a\15\0"+
+    "\1\u022a\6\0\12\u022e\1\u022b\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u022a\2\0\1\u022a\15\0\1\u022a\6\0\2\u022e\1\u022d"+
+    "\1\u022e\1\u022f\2\u022d\2\u022e\1\u022d\1\u022b\12\0\1\u01b5"+
+    "\274\0\1\u0201\6\0\1\u0230\1\u0231\1\u0232\103\0\1\u012d"+
+    "\2\0\1\u012d\33\0\4\u012d\310\0\1\u012d\171\0\1\u012d"+
+    "\44\0\1\u012d\1\0\2\u012d\21\0\1\u012d\4\0\1\u012d"+
+    "\17\0\4\u012d\3\0\1\u012d\12\0\1\u012d\275\0\1\u012d"+
+    "\314\0\4\u012d\244\0\2\u012d\25\0\4\u012d\147\0\1\u012d"+
+    "\15\0\2\u012d\10\0\2\u012d\1\0\1\u012d\1\0\1\u012d"+
+    "\11\0\1\u012d\11\0\2\u012d\6\0\1\u012d\2\0\4\u012d"+
+    "\3\0\1\u012d\2\0\2\u012d\1\0\3\u012d\1\0\2\u012d"+
+    "\1\0\1\u012d\10\0\1\u012d\1\0\2\u012d\2\0\2\u012d"+
+    "\1\0\4\u012d\23\0\1\u012d\330\0\1\u013e\1\333\2\u0233"+
+    "\1\u0234\1\u0235\10\u0233\1\333\1\u0236\5\u0233\6\333\1\u013f"+
+    "\12\333\242\0\1\u013e\1\u0237\2\u0233\1\333\1\u0233\1\u0238"+
+    "\3\u0233\1\u0239\2\u0233\4\333\4\u0233\1\333\2\u0233\1\333"+
+    "\2\u0233\1\u013f\12\333\242\0\1\u013e\3\333\1\u0233\1\333"+
+    "\1\u0233\2\333\1\u023a\1\333\1\u0233\10\333\1\u0233\2\333"+
+    "\2\u0233\2\333\1\u013f\12\333\242\0\1\u013e\1\333\1\u0233"+
+    "\1\u023b\2\u0233\2\333\1\u0233\3\333\1\u023c\1\u023d\1\333"+
+    "\1\u023e\2\u0233\11\333\1\u013f\12\333\242\0\1\u013e\3\333"+
+    "\1\u0233\1\333\1\u0233\10\333\1\u0233\1\333\2\u0233\10\333"+
+    "\1\u013f\12\333\242\0\1\u013e\4\333\1\u023f\5\333\1\u0233"+
+    "\17\333\1\u013f\12\333\242\0\1\u013e\4\333\2\u0233\2\333"+
+    "\1\u0233\1\333\1\u0233\13\333\2\u0233\2\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\u0240\1\333\2\u0233\1\u0241\1\u0242\12\u0233"+
+    "\1\u0243\1\u0233\2\333\2\u0233\3\333\1\u0233\1\u013f\12\333"+
+    "\242\0\1\u013e\2\333\4\u0233\3\333\2\u0233\1\u0244\1\u0233"+
+    "\1\333\2\u0233\12\333\1\u013f\12\333\242\0\1\u013e\1\u0245"+
+    "\1\u0233\2\333\1\u0233\3\333\1\u0246\5\333\3\u0233\3\333"+
+    "\1\u0233\1\333\1\u0233\1\333\2\u0233\1\u013f\12\333\242\0"+
+    "\1\u013e\3\u0233\1\u0247\1\u0233\1\u0248\1\333\1\u0233\1\u0249"+
+    "\7\u0233\1\u024a\3\u0233\1\333\2\u0233\1\333\2\u0233\1\u013f"+
+    "\12\333\242\0\1\u013e\1\u024b\1\u0233\1\333\1\u024c\6\u0233"+
+    "\3\333\1\u0233\2\333\1\u0233\2\333\1\u0233\6\333\1\u013f"+
+    "\12\333\242\0\1\u013e\1\u0233\31\333\1\u013f\12\333\242\0"+
+    "\1\u013e\1\u0233\2\333\1\u0233\1\u024d\1\u024e\2\u0233\1\333"+
+    "\1\u024f\2\u0233\2\333\2\u0233\1\333\1\u0233\3\333\1\u0250"+
+    "\1\u0233\2\333\1\u0233\1\u013f\12\333\242\0\1\u013e\3\u0233"+
+    "\1\u0251\2\u0233\1\333\1\u0233\1\u0252\3\u0233\3\333\2\u0233"+
+    "\1\333\10\u0233\1\u013f\12\333\242\0\1\u013e\1\u0253\2\u0233"+
+    "\1\u0254\1\u0255\1\u0256\2\u0233\1\u0257\3\u0233\1\333\1\u0233"+
+    "\1\333\1\u0233\1\333\1\u0233\1\333\1\u0233\1\333\4\u0233"+
+    "\1\333\1\u013f\12\333\242\0\1\u013e\1\u0233\6\333\1\u0233"+
+    "\3\333\1\u0258\2\333\1\u0233\4\333\1\u0233\2\333\1\u0233"+
+    "\2\333\1\u0233\1\u013f\12\333\242\0\1\u013e\6\333\1\u0233"+
+    "\7\333\1\u0233\13\333\1\u013f\12\333\242\0\1\u013e\13\333"+
+    "\1\u0259\6\333\1\u025a\7\333\1\u013f\12\333\242\0\1\u013e"+
+    "\1\u0233\11\333\1\u0233\6\333\1\u0233\10\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\u0233\1\333\6\u0233\1\u025b\1\333\2\u0233"+
+    "\2\333\2\u0233\1\333\1\u0233\1\333\3\u0233\1\333\3\u0233"+
+    "\1\u013f\12\333\242\0\1\u013e\4\333\1\u0233\1\u025c\4\333"+
+    "\2\u0233\3\333\2\u0233\5\333\1\u0233\3\333\1\u013f\12\333"+
+    "\242\0\1\u013e\3\333\2\u0233\2\333\1\u0233\1\u025d\1\333"+
+    "\2\u0233\1\333\1\u0233\3\333\1\u0233\1\333\1\u0233\1\333"+
+    "\1\u0233\3\333\1\u0233\1\u013f\12\333\242\0\1\u013e\3\333"+
+    "\1\u0233\1\333\1\u025e\4\333\1\u0233\2\333\1\u0233\14\333"+
+    "\1\u013f\12\333\242\0\1\u013e\2\u0233\1\333\1\u025f\1\333"+
+    "\1\u0260\1\333\2\u0233\2\333\1\u0233\4\333\1\u0233\11\333"+
+    "\1\u013f\12\333\242\0\1\u013e\3\333\1\u0233\13\333\1\u0233"+
+    "\12\333\1\u013f\12\333\25\0\1\55\1\0\1\56\2\0"+
+    "\1\246\1\0\1\247\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\250\2\0\1\251\4\0"+
+    "\1\252\3\0\1\253\17\0\1\71\2\0\1\254\21\0"+
+    "\1\255\2\0\1\256\61\0\1\30\1\76\2\0\1\76"+
+    "\1\0\2\76\1\0\1\76\2\0\1\202\1\160\2\30"+
+    "\1\346\1\347\1\350\1\351\1\352\1\353\1\354\1\355"+
+    "\1\356\1\357\1\360\1\361\1\362\1\363\1\364\1\365"+
+    "\1\366\1\367\1\370\1\371\1\372\1\373\1\374\1\375"+
+    "\1\376\1\377\1\u0100\1\155\12\u0101\1\u01d8\1\155\1\202"+
+    "\1\155\1\0\1\155\1\157\1\u01d9\1\u01da\1\u01db\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\246\1\0\1\247\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\250\2\0\1\251\4\0"+
+    "\1\252\3\0\1\253\17\0\1\71\2\0\1\254\21\0"+
+    "\1\255\2\0\1\256\61\0\1\30\1\76\2\0\1\76"+
+    "\1\0\2\76\1\0\1\76\2\0\1\76\1\0\2\30"+
+    "\1\76\32\30\1\0\12\u0261\1\76\1\0\1\76\233\0"+
+    "\1\u01d9\3\0\1\u0262\45\u01d9\1\u0230\2\u01d9\1\u0263\1\u0230"+
+    "\1\u01d9\1\u0264\2\u01d9\1\u01db\2\0\1\u0230\1\u01d9\3\0"+
+    "\1\u01d9\1\155\213\0\1\155\3\0\1\u0265\45\u01da\1\u0231"+
+    "\2\u01da\1\u0266\1\0\1\155\1\u0267\1\u01d9\1\u01da\1\u01db"+
+    "\2\0\1\u0231\1\u01da\3\0\2\155\213\0\1\u01db\3\0"+
+    "\1\u0268\45\u01db\1\u0232\2\u01db\1\u0269\1\u0232\1\u01db\1\u026a"+
+    "\2\u01db\1\155\2\0\1\u0232\1\u01db\3\0\1\u01db\1\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\3\43\1\u026b\26\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\15\43\1\u0149\14\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\16\43\1\u026c\1\u026d\12\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\17\43\1\u026e\12\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\12\43\1\u026f\17\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\3\43\1\u0270"+
+    "\26\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\3\43"+
+    "\1\u0271\26\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\10\43\1\u0272\21\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\1\u0273\31\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\11\43\1\u0274\20\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\15\43\1\u0275\14\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\2\43\1\u0149\27\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\25\43\1\u0276\4\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\10\43\1\u0149\21\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\3\43\1\u0277"+
+    "\26\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\3\43"+
+    "\1\u0149\26\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\17\43\1\u0149\12\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\12\43\1\u0278\17\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\17\43\1\u0279\12\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\31\43\1\u0149\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\7\43\1\u027a\22\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\17\43\1\u027b\12\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\25\43\1\u027c\4\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\30\43\1\u027d"+
+    "\1\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\1\u01ef"+
+    "\31\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\16\43"+
+    "\1\u0149\13\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\156\32\u0101\1\u027e\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\2\43\1\u027f\27\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\1\43\1\u0280\30\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\17\43\1\u0281\12\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\1\u0282\31\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\246\1\0\1\247\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\250\2\0\1\251"+
+    "\4\0\1\252\3\0\1\253\17\0\1\71\2\0\1\254"+
+    "\21\0\1\255\2\0\1\256\61\0\1\30\1\76\2\0"+
+    "\1\76\1\0\2\76\1\0\1\76\2\0\1\76\1\0"+
+    "\2\30\1\76\32\30\13\0\1\76\1\0\1\76\5\0"+
+    "\1\u0283\307\0\1\u0284\14\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\5\43\1\u0285\24\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\32\43\1\204\12\205\1\u01ff"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\246\1\0\1\247\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\250\2\0\1\251\4\0"+
+    "\1\252\3\0\1\253\17\0\1\71\2\0\1\254\21\0"+
+    "\1\255\2\0\1\256\61\0\1\30\1\76\2\0\1\76"+
+    "\1\0\2\76\1\0\1\76\2\0\1\76\1\0\2\30"+
+    "\1\76\32\30\13\0\1\76\1\0\1\76\5\0\1\u0286"+
+    "\225\0\1\155\1\160\2\0\1\156\1\u010b\1\u010c\1\u010d"+
+    "\1\u010e\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115"+
+    "\1\u0116\1\u0117\1\u0118\1\u0119\1\u011a\1\u011b\1\u011c\1\u011d"+
+    "\1\u011e\1\u011f\1\u0120\1\u0121\1\u0122\1\u0123\1\u0124\1\155"+
+    "\12\u0101\1\u0201\3\155\1\0\1\155\1\157\1\u01d9\1\u01da"+
+    "\1\u01db\3\0\1\155\3\0\2\155\253\0\12\u0261\236\0"+
+    "\1\155\3\0\1\u0177\3\u0101\1\u0287\26\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\15\u0101\1\u017c"+
+    "\14\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\16\u0101\1\u0288\1\u0289\12\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\17\u0101\1\u028a\12\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\12\u0101\1\u028b\17\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\3\u0101\1\u028c\26\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\3\u0101\1\u028d"+
+    "\26\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\10\u0101\1\u028e\21\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\1\u028f\31\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\11\u0101\1\u0290"+
+    "\20\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\15\u0101\1\u0291\14\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\2\u0101\1\u017c\27\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\25\u0101"+
+    "\1\u0292\4\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\10\u0101\1\u017c\21\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\3\u0101\1\u0293\26\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\3\u0101\1\u017c\26\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\17\u0101\1\u017c\12\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\12\u0101\1\u0294"+
+    "\17\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\17\u0101\1\u0295\12\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\31\u0101\1\u017c\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\7\u0101\1\u0296"+
+    "\22\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\17\u0101\1\u0297\12\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\25\u0101\1\u0298\4\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\30\u0101"+
+    "\1\u0299\1\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u0215\31\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\16\u0101\1\u017c\13\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\2\u0101"+
+    "\1\u029a\27\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u0101\1\u029b\30\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\17\u0101\1\u029c\12\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\1\u029d\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\100\1\0\1\101\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\102"+
+    "\2\0\1\103\4\0\1\104\3\0\1\105\17\0\1\71"+
+    "\2\0\1\106\21\0\1\107\2\0\1\110\61\0\1\30"+
+    "\2\31\2\0\2\111\1\112\1\0\1\31\2\0\1\213"+
+    "\1\0\1\41\1\30\1\u029e\32\43\1\204\12\u029f\1\0"+
+    "\1\155\1\216\1\155\1\0\1\213\1\157\3\155\2\0"+
+    "\1\111\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\100\1\0\1\101\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\102\2\0\1\103"+
+    "\4\0\1\104\3\0\1\105\17\0\1\71\2\0\1\106"+
+    "\21\0\1\107\2\0\1\110\61\0\1\30\2\31\2\0"+
+    "\2\111\1\112\1\0\1\31\2\0\1\213\1\0\1\41"+
+    "\1\30\1\u029e\32\43\1\204\12\u0220\1\0\1\155\1\216"+
+    "\1\155\1\0\1\213\1\157\3\155\2\0\1\111\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\100"+
+    "\1\0\1\101\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\102\2\0\1\103\4\0\1\104"+
+    "\3\0\1\105\17\0\1\71\2\0\1\106\21\0\1\107"+
+    "\2\0\1\110\61\0\1\30\2\31\2\0\2\111\1\112"+
+    "\1\0\1\31\2\0\1\213\1\0\1\41\1\30\1\u029e"+
+    "\32\43\1\204\2\u0220\1\u029f\1\u0220\1\u02a0\2\u029f\2\u0220"+
+    "\1\u029f\1\0\1\155\1\216\1\155\1\0\1\213\1\157"+
+    "\3\155\2\0\1\111\1\155\3\0\2\155\265\0\1\u012b"+
+    "\242\0\4\u02a1\2\0\1\u02a1\15\0\1\u02a1\6\0\12\u02a1"+
+    "\1\u0225\242\0\4\u02a2\2\0\1\u02a2\15\0\1\u02a2\6\0"+
+    "\12\u02a2\1\u02a3\242\0\4\u02a4\2\0\1\u02a4\15\0\1\u02a4"+
+    "\6\0\12\u02a4\1\u02a5\12\0\1\u01b5\226\0\1\u022c\4\u02a4"+
+    "\2\0\1\u02a4\15\0\1\u02a4\6\0\12\u02a6\1\u02a5\12\0"+
+    "\1\u01b5\226\0\1\u022c\4\u02a4\2\0\1\u02a4\15\0\1\u02a4"+
+    "\6\0\12\u02a7\1\u02a5\12\0\1\u01b5\226\0\1\u022c\4\u02a4"+
+    "\2\0\1\u02a4\15\0\1\u02a4\6\0\2\u02a7\1\u02a6\1\u02a7"+
+    "\1\u02a8\2\u02a6\2\u02a7\1\u02a6\1\u02a5\12\0\1\u01b5\227\0"+
+    "\4\u02a9\2\0\1\u02a9\15\0\1\u02a9\6\0\12\u02a9\1\u022b"+
+    "\12\0\1\u01b5\227\0\4\u0226\2\0\1\u0226\15\0\1\u0226"+
+    "\6\0\1\u0227\1\u0228\5\u0227\1\u0229\1\u0228\1\u0227\276\0"+
+    "\1\u02aa\1\u02ab\5\u02aa\1\u02ac\1\u02ab\1\u02aa\242\0\1\u022c"+
+    "\4\u02a9\2\0\1\u02a9\15\0\1\u02a9\6\0\12\u02a9\1\u022b"+
+    "\12\0\1\u01b5\226\0\1\u022c\4\u02a9\2\0\1\u02a9\15\0"+
+    "\1\u02a9\6\0\12\u02ad\1\u022b\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u02a9\2\0\1\u02a9\15\0\1\u02a9\6\0\2\u02ad\1\u02a9"+
+    "\2\u02ad\2\u02a9\2\u02ad\1\u02a9\1\u022b\12\0\1\u01b5\222\0"+
+    "\1\u0230\3\0\51\u0230\1\u02ae\5\u0230\1\u0232\2\0\2\u0230"+
+    "\3\0\1\u0230\220\0\51\u0231\1\u02af\2\0\1\u0231\1\u0230"+
+    "\1\u0231\1\u0232\2\0\2\u0231\220\0\1\u0232\3\0\51\u0232"+
+    "\1\u02b0\5\u0232\3\0\2\u0232\3\0\1\u0232\220\0\1\u02b1"+
+    "\32\333\1\u013f\12\333\242\0\1\u02b1\4\333\1\u0258\25\333"+
+    "\1\u013f\12\333\242\0\1\u02b1\15\333\1\u01c9\14\333\1\u013f"+
+    "\12\333\242\0\1\u02b1\10\333\1\u01c9\21\333\1\u013f\12\333"+
+    "\242\0\1\u02b1\12\333\1\u02b2\4\333\1\u0233\12\333\1\u013f"+
+    "\12\333\242\0\1\u02b1\5\333\1\u02b3\4\333\1\u0233\1\u02b4"+
+    "\16\333\1\u013f\12\333\242\0\1\u02b1\5\333\1\u02b5\24\333"+
+    "\1\u013f\12\333\242\0\1\u013e\1\u02b6\3\333\1\u02b7\25\333"+
+    "\1\u013f\12\333\242\0\1\u013e\20\333\1\u0233\11\333\1\u013f"+
+    "\12\333\242\0\1\u013e\17\333\1\u02b8\12\333\1\u013f\12\333"+
+    "\242\0\1\u013e\20\333\1\u02b9\11\333\1\u013f\12\333\242\0"+
+    "\1\u02b1\17\333\1\u02ba\12\333\1\u013f\12\333\242\0\1\u013e"+
+    "\7\333\1\u0233\22\333\1\u013f\12\333\242\0\1\u02b1\11\333"+
+    "\1\u02bb\20\333\1\u013f\12\333\242\0\1\u02b1\1\u02bc\31\333"+
+    "\1\u013f\12\333\242\0\1\u013e\30\333\1\u0233\1\333\1\u013f"+
+    "\12\333\242\0\1\u02b1\4\333\1\u023b\25\333\1\u013f\12\333"+
+    "\242\0\1\u02b1\6\333\1\u0258\10\333\1\u0233\12\333\1\u013f"+
+    "\12\333\242\0\1\u02b1\13\333\1\u02bd\16\333\1\u013f\12\333"+
+    "\242\0\1\u02b1\7\333\1\u02be\22\333\1\u013f\12\333\242\0"+
+    "\1\u02b1\13\333\1\u023b\16\333\1\u013f\12\333\242\0\1\u02b1"+
+    "\24\333\1\u02bf\5\333\1\u013f\12\333\242\0\1\u013e\11\333"+
+    "\1\u0233\20\333\1\u013f\12\333\242\0\1\u02b1\16\333\1\u02c0"+
+    "\13\333\1\u013f\12\333\242\0\1\u02b1\12\333\1\u02c1\17\333"+
+    "\1\u013f\12\333\242\0\1\u02b1\17\333\1\u0233\12\333\1\u013f"+
+    "\12\333\242\0\1\u02b1\5\333\1\u0233\24\333\1\u013f\12\333"+
+    "\242\0\1\u013e\16\333\1\u02c2\13\333\1\u013f\12\333\242\0"+
+    "\1\u02b1\20\333\1\u02c3\11\333\1\u013f\12\333\242\0\1\u02b1"+
+    "\5\333\1\u02c4\24\333\1\u013f\12\333\242\0\1\u02b1\22\333"+
+    "\1\u02c5\7\333\1\u013f\12\333\242\0\1\u02b1\13\333\1\u02c6"+
+    "\16\333\1\u013f\12\333\242\0\1\u013e\17\333\1\u02c7\12\333"+
+    "\1\u013f\12\333\242\0\1\u013e\1\333\1\u02c8\7\333\1\u0233"+
+    "\20\333\1\u013f\12\333\242\0\1\u02b1\1\u02c9\31\333\1\u013f"+
+    "\12\333\242\0\1\u02b1\2\333\1\u02ca\27\333\1\u013f\12\333"+
+    "\242\0\1\u013e\15\333\1\u02cb\14\333\1\u013f\12\333\242\0"+
+    "\1\u013e\5\333\1\u0233\24\333\1\u013f\12\333\242\0\1\u013e"+
+    "\32\333\1\u02cc\12\333\242\0\1\u013e\22\333\1\u0233\7\333"+
+    "\1\u013f\12\333\242\0\1\u02b1\23\333\1\u0233\2\333\1\u02c1"+
+    "\3\333\1\u013f\12\333\242\0\1\u013e\11\333\1\u02cd\20\333"+
+    "\1\u013f\12\333\242\0\1\u02b1\17\333\1\u02ce\12\333\1\u013f"+
+    "\12\333\242\0\1\u02b1\24\333\1\u02cb\5\333\1\u013f\12\333"+
+    "\242\0\1\u02b1\13\333\1\u02cf\16\333\1\u013f\12\333\242\0"+
+    "\1\u013e\31\333\1\u02d0\1\u013f\12\333\276\0\12\u02d1\7\0"+
+    "\1\u0230\1\u0231\1\u0232\224\0\1\u01d9\1\160\2\0\1\u0262"+
+    "\45\u01d9\1\u0230\2\u01d9\1\u0263\1\u0230\1\u01d9\1\u0264\2\u01d9"+
+    "\1\u01db\2\0\1\u0230\1\u01d9\3\0\1\u01d9\1\155\213\0"+
+    "\1\155\3\0\1\156\4\u02d2\2\155\1\u02d2\15\155\1\u02d2"+
+    "\6\155\12\u02d2\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\u0230\3\0\51\u0230"+
+    "\1\u02ae\5\u0230\1\u0232\1\334\1\0\2\u0230\3\0\1\u0230"+
+    "\214\0\1\155\1\160\2\0\1\u0265\45\u01da\1\u0231\2\u01da"+
+    "\1\u0266\1\0\1\155\1\u0267\1\u01d9\1\u01da\1\u01db\2\0"+
+    "\1\u0231\1\u01da\3\0\2\155\213\0\1\155\3\0\1\156"+
+    "\4\u02d3\2\155\1\u02d3\15\155\1\u02d3\6\155\12\u02d3\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\217\0\51\u0231\1\u02af\2\0\1\u0231\1\u0230\1\u0231"+
+    "\1\u0232\1\334\1\0\2\u0231\220\0\1\u01db\1\160\2\0"+
+    "\1\u0268\45\u01db\1\u0232\2\u01db\1\u0269\1\u0232\1\u01db\1\u026a"+
+    "\2\u01db\1\155\2\0\1\u0232\1\u01db\3\0\1\u01db\1\155"+
+    "\213\0\1\155\3\0\1\156\4\u02d4\2\155\1\u02d4\15\155"+
+    "\1\u02d4\6\155\12\u02d4\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\u0232\3\0"+
+    "\51\u0232\1\u02b0\5\u0232\1\0\1\334\1\0\2\u0232\3\0"+
+    "\1\u0232\3\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\4\43\1\363\25\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\17\43\1\u02d5\12\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\4\43\1\u02d6\25\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\25\43\1\u02d7\4\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\5\43\1\u02d8\24\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\1\43\1\u02d9"+
+    "\30\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\4\43"+
+    "\1\u02da\25\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\15\43\1\u02db\14\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\17\43\1\u01eb\12\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\3\43\1\u02dc\26\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\25\43\1\u02dd\4\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\17\43\1\u02d7\12\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\20\43\1\u02de\11\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\24\43\1\u02d7"+
+    "\5\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\5\43"+
+    "\1\u02df\24\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\11\43\1\u02e0\20\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\5\43\1\u016e\24\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\13\43\1\u02e1\16\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\3\43\1\u015f\26\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\156"+
+    "\1\u0101\1\u02e2\3\u0101\1\u02e3\1\u02e4\1\u02e5\1\u0101\1\u02e6"+
+    "\1\u02e7\1\u02e8\1\u02e9\1\u02ea\1\u02eb\1\u0101\1\u02ec\1\u02ed"+
+    "\1\u02ee\2\u0101\1\u02ef\1\u02f0\1\u02f1\1\u0101\1\u02f2\1\204"+
+    "\1\u02f3\2\u0101\1\u02f4\1\u0101\1\u02f5\1\u02f6\3\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\10\43\1\u02f7\21\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\25\43\1\u02f8\4\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\20\43\1\u02f9\11\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\7\43\1\u01eb\22\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\275\0\1\u02fa\225\0"+
+    "\1\u02fb\3\0\1\u02fb\32\u02fc\1\u02fb\12\u02fc\1\u02fd\2\u02fb"+
+    "\1\u02fe\2\u02fb\1\u02ff\3\0\1\u0300\1\0\2\u02fb\3\0"+
+    "\1\u02fb\3\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\32\43\1\204\12\205\1\u0301\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\275\0\1\u0302\225\0\1\155\3\0\1\u0177\4\u0101\1\u0117"+
+    "\25\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\17\u0101\1\u0303\12\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\4\u0101\1\u0304\25\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\25\u0101"+
+    "\1\u0305\4\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\5\u0101\1\u0306\24\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u0307\30\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\4\u0101\1\u0308\25\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\15\u0101\1\u0309\14\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\17\u0101\1\u0211"+
+    "\12\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\3\u0101\1\u030a\26\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\25\u0101\1\u030b\4\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\17\u0101"+
+    "\1\u0305\12\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\20\u0101\1\u030c\11\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\24\u0101\1\u0305\5\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\5\u0101\1\u030d\24\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\11\u0101\1\u030e\20\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\5\u0101\1\u01a1"+
+    "\24\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\13\u0101\1\u030f\16\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\3\u0101\1\u0192\26\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\10\u0101"+
+    "\1\u0310\21\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\25\u0101\1\u0311\4\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\20\u0101\1\u0312\11\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\7\u0101\1\u0211\22\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\7\0"+
+    "\1\266\1\0\1\267\17\0\1\270\2\0\1\271\4\0"+
+    "\1\272\3\0\1\273\22\0\1\274\21\0\1\275\2\0"+
+    "\1\276\62\0\1\111\1\31\2\0\3\244\1\0\1\111"+
+    "\2\0\1\u0102\1\160\2\0\1\u010a\1\u010b\1\u010c\1\u010d"+
+    "\1\u010e\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115"+
+    "\1\u0116\1\u0117\1\u0118\1\u0119\1\u011a\1\u011b\1\u011c\1\u011d"+
+    "\1\u011e\1\u011f\1\u0120\1\u0121\1\u0122\1\u0123\1\u0124\1\155"+
+    "\1\u0313\1\u0314\5\u0313\1\u0315\1\u0314\1\u0313\1\0\1\155"+
+    "\1\u0102\1\155\1\0\1\u0102\1\157\3\155\2\0\1\244"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\100\1\0\1\101\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\102\2\0\1\103\4\0"+
+    "\1\104\3\0\1\105\17\0\1\71\2\0\1\106\21\0"+
+    "\1\107\2\0\1\110\61\0\1\30\2\31\2\0\2\111"+
+    "\1\112\1\0\1\31\2\0\1\213\1\0\1\41\1\30"+
+    "\1\u029e\32\43\1\204\12\u0128\1\0\1\155\1\216\1\155"+
+    "\1\0\1\213\1\157\3\155\2\0\1\111\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\100\1\0"+
+    "\1\101\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\102\2\0\1\103\4\0\1\104\3\0"+
+    "\1\105\17\0\1\71\2\0\1\106\21\0\1\107\2\0"+
+    "\1\110\61\0\1\30\2\31\2\0\2\111\1\112\1\0"+
+    "\1\31\2\0\1\213\1\0\1\41\1\30\1\u029e\32\43"+
+    "\1\204\2\u029f\1\u0128\2\u029f\2\u0128\2\u029f\1\u0128\1\0"+
+    "\1\155\1\216\1\155\1\0\1\213\1\157\3\155\2\0"+
+    "\1\111\1\155\3\0\2\155\220\0\4\u0316\2\0\1\u0316"+
+    "\15\0\1\u0316\6\0\12\u0316\1\u0225\242\0\4\u0317\2\0"+
+    "\1\u0317\15\0\1\u0317\6\0\12\u0317\1\u0318\242\0\4\u0319"+
+    "\2\0\1\u0319\15\0\1\u0319\6\0\1\u031a\1\u031b\5\u031a"+
+    "\1\u031c\1\u031b\1\u031a\13\0\1\u01b5\227\0\4\u031d\2\0"+
+    "\1\u031d\15\0\1\u031d\6\0\12\u031d\1\u02a5\12\0\1\u01b5"+
+    "\227\0\4\u0319\2\0\1\u0319\15\0\1\u0319\6\0\1\u031a"+
+    "\1\u031b\5\u031a\1\u031c\1\u031b\1\u031a\242\0\1\u022c\4\u031d"+
+    "\2\0\1\u031d\15\0\1\u031d\6\0\12\u031d\1\u02a5\12\0"+
+    "\1\u01b5\226\0\1\u022c\4\u031d\2\0\1\u031d\15\0\1\u031d"+
+    "\6\0\12\u031e\1\u02a5\12\0\1\u01b5\226\0\1\u022c\4\u031d"+
+    "\2\0\1\u031d\15\0\1\u031d\6\0\2\u031e\1\u031d\2\u031e"+
+    "\2\u031d\2\u031e\1\u031d\1\u02a5\12\0\1\u01b5\227\0\4\u031f"+
+    "\2\0\1\u031f\15\0\1\u031f\6\0\12\u031f\1\u022b\12\0"+
+    "\1\u01b5\226\0\1\u0320\33\0\12\u0321\242\0\1\u0320\33\0"+
+    "\12\u02aa\242\0\1\u0320\33\0\2\u02aa\1\u0321\1\u02aa\1\u0322"+
+    "\2\u0321\2\u02aa\1\u0321\242\0\1\u022c\4\u031f\2\0\1\u031f"+
+    "\15\0\1\u031f\6\0\12\u031f\1\u022b\12\0\1\u01b5\227\0"+
+    "\4\u0323\2\0\1\u0323\15\0\1\u0323\6\0\12\u0323\243\0"+
+    "\4\u0324\2\0\1\u0324\15\0\1\u0324\6\0\12\u0324\243\0"+
+    "\4\u0325\2\0\1\u0325\15\0\1\u0325\6\0\12\u0325\242\0"+
+    "\1\u013e\3\333\1\u0326\26\333\1\u013f\12\333\242\0\1\u013e"+
+    "\15\333\1\u0233\14\333\1\u013f\12\333\242\0\1\u013e\16\333"+
+    "\1\u0327\1\u0328\12\333\1\u013f\12\333\242\0\1\u013e\17\333"+
+    "\1\u0329\12\333\1\u013f\12\333\242\0\1\u013e\12\333\1\u032a"+
+    "\17\333\1\u013f\12\333\242\0\1\u013e\3\333\1\u032b\26\333"+
+    "\1\u013f\12\333\242\0\1\u013e\3\333\1\u032c\26\333\1\u013f"+
+    "\12\333\242\0\1\u013e\10\333\1\u032d\21\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\u032e\31\333\1\u013f\12\333\242\0\1\u013e"+
+    "\11\333\1\u032f\20\333\1\u013f\12\333\242\0\1\u013e\15\333"+
+    "\1\u0330\14\333\1\u013f\12\333\242\0\1\u013e\2\333\1\u0233"+
+    "\27\333\1\u013f\12\333\242\0\1\u013e\25\333\1\u0331\4\333"+
+    "\1\u013f\12\333\242\0\1\u013e\10\333\1\u0233\21\333\1\u013f"+
+    "\12\333\242\0\1\u013e\3\333\1\u0332\26\333\1\u013f\12\333"+
+    "\242\0\1\u013e\3\333\1\u0233\26\333\1\u013f\12\333\242\0"+
+    "\1\u013e\17\333\1\u0233\12\333\1\u013f\12\333\242\0\1\u013e"+
+    "\12\333\1\u0333\17\333\1\u013f\12\333\242\0\1\u013e\17\333"+
+    "\1\u0334\12\333\1\u013f\12\333\242\0\1\u013e\31\333\1\u0233"+
+    "\1\u013f\12\333\242\0\1\u013e\7\333\1\u0335\22\333\1\u013f"+
+    "\12\333\242\0\1\u013e\17\333\1\u0336\12\333\1\u013f\12\333"+
+    "\242\0\1\u013e\25\333\1\u0337\4\333\1\u013f\12\333\242\0"+
+    "\1\u013e\30\333\1\u0338\1\333\1\u013f\12\333\242\0\1\u013e"+
+    "\1\u02c5\31\333\1\u013f\12\333\242\0\1\u013e\16\333\1\u0233"+
+    "\13\333\1\u013f\12\333\243\0\32\333\1\u0339\12\333\242\0"+
+    "\1\u013e\2\333\1\u033a\27\333\1\u013f\12\333\242\0\1\u013e"+
+    "\1\333\1\u033b\30\333\1\u013f\12\333\242\0\1\u013e\17\333"+
+    "\1\u033c\12\333\1\u013f\12\333\242\0\1\u013e\1\u033d\31\333"+
+    "\1\u013f\12\333\276\0\12\u033e\7\0\1\u0230\1\u0231\1\u0232"+
+    "\224\0\1\155\3\0\1\156\4\u01d9\2\155\1\u01d9\15\155"+
+    "\1\u01d9\6\155\12\u01d9\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\156\4\u01da\2\155\1\u01da\15\155\1\u01da\6\155\12\u01da"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\156\4\u01db\2\155"+
+    "\1\u01db\15\155\1\u01db\6\155\12\u01db\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\4\43"+
+    "\1\u033f\25\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\1\u0340\31\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\10\43\1\u0341\21\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\13\43\1\u0342\16\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\17\43\1\u0343\12\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\15\43\1\u0344\14\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\12\43\1\u0345\17\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\4\43\1\u01ef\25\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\10\43\1\u0346"+
+    "\21\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\12\43"+
+    "\1\u0149\17\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\7\43\1\u0347\22\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\3\43\1\u01f5\26\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\5\43\1\u0348\24\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\11\u0101"+
+    "\1\u0349\20\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\7\u0101\1\u034a\22\u0101\1\204\1\u034b\11\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\10\u0101\1\u034c"+
+    "\4\u0101\1\u034d\5\u0101\1\u034e\6\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\3\u0101\1\u034f\26\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\7\u0101\1\u0350\22\u0101\1\204\10\u0101\1\u0351\1\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\7\u0101\1\u0352\22\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\7\u0101\1\u0353\22\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\5\u0101\1\u0354\4\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\7\u0101\1\u0355"+
+    "\22\u0101\1\204\10\u0101\1\u0356\1\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\5\u0101\1\u0357\4\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\13\u0101\1\u0358"+
+    "\16\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\7\u0101\1\u0359\22\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\26\u0101\1\u035a\3\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\7\u0101\1\u0357\2\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\15\u0101\1\u035b\14\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\10\u0101"+
+    "\1\u035c\1\u035d\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\6\u0101\1\u035e\1\u035f\22\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\3\u0101\1\u0360\26\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\4\u0101\1\u0357\5\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\1\u0101\1\u0361\10\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\1\u0101"+
+    "\1\u0362\10\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\13\43\1\u0363\16\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\3\43\1\u0364\26\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\4\43\1\u02e0"+
+    "\25\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\220\0"+
+    "\32\u0365\1\0\12\u0365\10\0\1\u0366\1\0\1\u0367\223\0"+
+    "\1\u02fb\3\0\46\u02fb\1\u02fd\2\u02fb\1\u02fe\2\u02fb\1\u02ff"+
+    "\5\0\2\u02fb\3\0\1\u02fb\214\0\1\u02fb\3\0\1\u0368"+
+    "\32\u02fc\1\u0369\12\u02fc\1\u036a\2\u02fb\1\u02fe\2\u02fb\1\u02ff"+
+    "\1\0\1\u036b\3\0\2\u02fb\3\0\1\u02fb\214\0\1\u02fd"+
+    "\3\0\46\u02fd\1\0\2\u02fd\1\u036c\2\u02fd\1\u02ff\5\0"+
+    "\2\u02fd\3\0\1\u02fd\221\0\4\u036d\2\0\1\u036d\15\0"+
+    "\1\u036d\6\0\12\u036d\243\0\32\u036e\1\0\12\u036e\12\0"+
+    "\1\u0300\230\0\4\u036f\2\0\1\u036f\15\0\1\u036f\6\0"+
+    "\12\u036f\1\u0370\24\0\1\55\1\0\1\56\2\0\1\246"+
+    "\1\0\1\247\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\250\2\0\1\251\4\0\1\252"+
+    "\3\0\1\253\17\0\1\71\2\0\1\254\21\0\1\255"+
+    "\2\0\1\256\61\0\1\30\1\76\2\0\1\76\1\0"+
+    "\2\76\1\0\1\76\2\0\1\u0371\1\u0372\2\30\1\u0371"+
+    "\32\u0373\13\u0374\1\76\1\u0374\1\u0371\1\u0374\1\0\1\u0374"+
+    "\1\0\3\u0374\3\0\1\u0374\3\0\2\u0374\213\0\1\u0375"+
+    "\3\0\1\u0375\32\u0376\1\u0375\12\u0376\1\u0377\2\u0375\1\u0378"+
+    "\2\u0375\1\u0379\3\0\1\u037a\1\0\2\u0375\3\0\1\u0375"+
+    "\214\0\1\155\3\0\1\u0177\4\u0101\1\u037b\25\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u037c"+
+    "\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\10\u0101\1\u037d\21\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\13\u0101\1\u037e\16\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\17\u0101"+
+    "\1\u037f\12\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\15\u0101\1\u0380\14\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\12\u0101\1\u0381\17\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\4\u0101\1\u0215\25\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\10\u0101\1\u0382\21\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\12\u0101\1\u017c"+
+    "\17\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\7\u0101\1\u0383\22\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\3\u0101\1\u021b\26\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\5\u0101"+
+    "\1\u0384\24\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\13\u0101\1\u0385\16\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\3\u0101\1\u0386\26\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\4\u0101\1\u030e\25\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\100\1\0\1\101\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\102\2\0\1\103\4\0\1\104\3\0\1\105\17\0"+
+    "\1\71\2\0\1\106\21\0\1\107\2\0\1\110\61\0"+
+    "\1\30\2\31\2\0\2\111\1\112\1\0\1\31\2\0"+
+    "\1\213\1\0\1\41\1\30\1\u01ad\32\43\1\204\12\u0387"+
+    "\1\u0201\1\155\1\216\1\155\1\0\1\213\1\157\1\u01d9"+
+    "\1\u01da\1\u01db\2\0\1\111\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\100\1\0\1\101\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\102\2\0\1\103\4\0\1\104\3\0\1\105\17\0"+
+    "\1\71\2\0\1\106\21\0\1\107\2\0\1\110\61\0"+
+    "\1\30\2\31\2\0\2\111\1\112\1\0\1\31\2\0"+
+    "\1\213\1\0\1\41\1\30\1\u01ad\32\43\1\204\12\u0313"+
+    "\1\u0201\1\155\1\216\1\155\1\0\1\213\1\157\1\u01d9"+
+    "\1\u01da\1\u01db\2\0\1\111\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\100\1\0\1\101\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\102\2\0\1\103\4\0\1\104\3\0\1\105\17\0"+
+    "\1\71\2\0\1\106\21\0\1\107\2\0\1\110\61\0"+
+    "\1\30\2\31\2\0\2\111\1\112\1\0\1\31\2\0"+
+    "\1\213\1\0\1\41\1\30\1\u01ad\32\43\1\204\2\u0313"+
+    "\1\u0387\1\u0313\1\u0388\2\u0387\2\u0313\1\u0387\1\u0201\1\155"+
+    "\1\216\1\155\1\0\1\213\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\2\0\1\111\1\155\3\0\2\155\265\0\1\u0225\242\0"+
+    "\4\u0389\2\0\1\u0389\15\0\1\u0389\6\0\12\u0389\1\u0318"+
+    "\242\0\4\u038a\2\0\1\u038a\15\0\1\u038a\6\0\12\u038a"+
+    "\1\u038b\242\0\4\u038c\2\0\1\u038c\15\0\1\u038c\6\0"+
+    "\12\u038c\1\u038d\12\0\1\u01b5\226\0\1\u022c\4\u038c\2\0"+
+    "\1\u038c\15\0\1\u038c\6\0\12\u038e\1\u038d\12\0\1\u01b5"+
+    "\226\0\1\u022c\4\u038c\2\0\1\u038c\15\0\1\u038c\6\0"+
+    "\12\u038f\1\u038d\12\0\1\u01b5\226\0\1\u022c\4\u038c\2\0"+
+    "\1\u038c\15\0\1\u038c\6\0\2\u038f\1\u038e\1\u038f\1\u0390"+
+    "\2\u038e\2\u038f\1\u038e\1\u038d\12\0\1\u01b5\227\0\4\u0391"+
+    "\2\0\1\u0391\15\0\1\u0391\6\0\12\u0391\1\u02a5\12\0"+
+    "\1\u01b5\226\0\1\u022c\4\u0391\2\0\1\u0391\15\0\1\u0391"+
+    "\6\0\12\u0391\1\u02a5\12\0\1\u01b5\274\0\1\u022b\12\0"+
+    "\1\u01b5\262\0\1\u0392\1\u0393\5\u0392\1\u0394\1\u0393\1\u0392"+
+    "\242\0\1\u0320\307\0\1\u0320\33\0\2\u0321\1\0\2\u0321"+
+    "\2\0\2\u0321\244\0\4\u0230\2\0\1\u0230\15\0\1\u0230"+
+    "\6\0\12\u0230\243\0\4\u0231\2\0\1\u0231\15\0\1\u0231"+
+    "\6\0\12\u0231\243\0\4\u0232\2\0\1\u0232\15\0\1\u0232"+
+    "\6\0\12\u0232\242\0\1\u013e\4\333\1\u01c9\25\333\1\u013f"+
+    "\12\333\242\0\1\u013e\17\333\1\u0395\12\333\1\u013f\12\333"+
+    "\242\0\1\u013e\4\333\1\u0396\25\333\1\u013f\12\333\242\0"+
+    "\1\u013e\25\333\1\u0397\4\333\1\u013f\12\333\242\0\1\u013e"+
+    "\5\333\1\u0398\24\333\1\u013f\12\333\242\0\1\u013e\1\333"+
+    "\1\u0399\30\333\1\u013f\12\333\242\0\1\u013e\4\333\1\u039a"+
+    "\25\333\1\u013f\12\333\242\0\1\u013e\15\333\1\u039b\14\333"+
+    "\1\u013f\12\333\242\0\1\u013e\17\333\1\u02c1\12\333\1\u013f"+
+    "\12\333\242\0\1\u013e\3\333\1\u039c\26\333\1\u013f\12\333"+
+    "\242\0\1\u013e\25\333\1\u039d\4\333\1\u013f\12\333\242\0"+
+    "\1\u013e\17\333\1\u0397\12\333\1\u013f\12\333\242\0\1\u013e"+
+    "\20\333\1\u039e\11\333\1\u013f\12\333\242\0\1\u013e\24\333"+
+    "\1\u0397\5\333\1\u013f\12\333\242\0\1\u013e\5\333\1\u039f"+
+    "\24\333\1\u013f\12\333\242\0\1\u013e\11\333\1\u03a0\20\333"+
+    "\1\u013f\12\333\242\0\1\u013e\5\333\1\u0258\24\333\1\u013f"+
+    "\12\333\242\0\1\u013e\13\333\1\u03a1\16\333\1\u013f\12\333"+
+    "\242\0\1\u013e\3\333\1\u0249\26\333\1\u013f\12\333\243\0"+
+    "\1\333\1\u03a2\3\333\1\u03a3\1\u03a4\1\u03a5\1\333\1\u03a6"+
+    "\1\u03a7\1\u03a8\1\u03a9\1\u03aa\1\u03ab\1\333\1\u03ac\1\u03ad"+
+    "\1\u03ae\2\333\1\u03af\1\u03b0\1\u03b1\1\333\1\u03b2\1\u013f"+
+    "\1\u03b3\2\333\1\u03b4\1\333\1\u03b5\1\u03b6\3\333\242\0"+
+    "\1\u013e\10\333\1\u03b7\21\333\1\u013f\12\333\242\0\1\u013e"+
+    "\25\333\1\u03b8\4\333\1\u013f\12\333\242\0\1\u013e\20\333"+
+    "\1\u03b9\11\333\1\u013f\12\333\242\0\1\u013e\7\333\1\u02c1"+
+    "\22\333\1\u013f\12\333\276\0\12\u03ba\7\0\1\u0230\1\u0231"+
+    "\1\u0232\13\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\20\43\1\u03bb\11\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\1\43\1\u03bc\30\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\2\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\13\43\1\u0155\16\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\2\43\1\u01f5\27\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\5\43\1\u02dc\24\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\4\43\1\u03bd"+
+    "\25\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\3\43"+
+    "\1\u03be\26\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\1\43\1\u01f5\30\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\4\43\1\u03bf\25\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\2\0\1\55\1\0\1\56\2\0\1\57"+
+    "\1\0\1\60\4\0\1\61\1\0\1\62\1\0\1\63"+
+    "\2\0\1\64\3\0\1\65\2\0\1\66\4\0\1\67"+
+    "\3\0\1\70\17\0\1\71\2\0\1\72\21\0\1\73"+
+    "\2\0\1\74\61\0\2\30\1\75\1\0\1\76\1\0"+
+    "\1\76\1\77\1\0\1\30\2\0\1\202\1\0\1\41"+
+    "\1\30\1\203\11\43\1\u03c0\20\43\1\204\12\205\1\76"+
+    "\1\155\1\206\1\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0101"+
+    "\1\u03c1\30\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\24\u0101\1\u03c2\5\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u03c3\30\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\14\u0101\1\u03c4\15\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\1\u0101\1\u03c5\30\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u03c6"+
+    "\30\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u0101\1\u03c7\30\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\24\u0101\1\u03c8\5\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u03c9"+
+    "\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\24\u0101\1\u03ca\5\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\24\u0101\1\u03cb\5\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\27\u0101"+
+    "\1\u03cc\2\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\24\u0101\1\u03cd\5\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u020f\31\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\24\u0101"+
+    "\1\u03c7\5\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\20\u0101\1\u03ce\11\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\24\u0101\1\u03cf\5\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\1\u0101\1\u03d0\30\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\4\u0101\1\u03d1\25\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u03d2\31\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\21\u0101\1\u03d3\10\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\4\u0101\1\u03d4\25\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\24\u0101\1\u03d5"+
+    "\5\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\1\u0101\1\u03d6\10\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177";
 
   private static final String ZZ_TRANS_PACKED_1 =
-    "\3\270\1\u059c\26\270\1\u010a\12\270\237\0\1\u0109\1\u059d"+
-    "\31\270\1\u010a\12\270\237\0\1\u0109\26\270\1\u059e\3\270"+
-    "\1\u010a\12\270\237\0\1\u0121\7\324\1\u059f\22\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\1\u05a0\31\324\1\164"+
-    "\12\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\32\324\1\164\1\u0338"+
-    "\11\324\1\0\3\161\1\0\2\161\1\162\3\161\3\0"+
-    "\1\161\4\0\2\161\212\0\1\u0121\24\324\1\u05a1\5\324"+
-    "\1\164\12\324\1\0\3\161\1\0\2\161\1\162\3\161"+
-    "\3\0\1\161\4\0\2\161\212\0\1\u0121\1\324\1\u05a2"+
-    "\30\324\1\164\12\324\1\0\3\161\1\0\2\161\1\162"+
-    "\3\161\3\0\1\161\4\0\2\161\212\0\1\u0121\32\324"+
-    "\1\164\2\324\1\u012e\7\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\213\0\4\u05a3"+
-    "\2\0\1\u05a3\15\0\1\u05a3\6\0\12\u05a3\1\u051d\237\0"+
-    "\4\u05a4\2\0\1\u05a4\15\0\1\u05a4\6\0\12\u05a4\1\u05a5"+
-    "\237\0\4\u05a6\2\0\1\u05a6\15\0\1\u05a6\6\0\1\u05a7"+
-    "\2\u05a8\1\u05a7\5\u05a8\1\u05a9\14\0\1\u035e\223\0\4\u05aa"+
-    "\2\0\1\u05aa\15\0\1\u05aa\6\0\12\u05aa\1\u0562\13\0"+
-    "\1\u035e\223\0\4\u05a6\2\0\1\u05a6\15\0\1\u05a6\6\0"+
-    "\1\u05a7\2\u05a8\1\u05a7\5\u05a8\1\u05a9\237\0\1\u03c5\4\u05aa"+
-    "\2\0\1\u05aa\15\0\1\u05aa\6\0\12\u05ab\1\u0562\13\0"+
-    "\1\u035e\222\0\1\u03c5\4\u05aa\2\0\1\u05aa\15\0\1\u05aa"+
-    "\6\0\12\u05aa\1\u0562\13\0\1\u035e\222\0\1\u03c5\4\u05aa"+
-    "\2\0\1\u05aa\15\0\1\u05aa\6\0\2\u05ab\1\u05aa\2\u05ab"+
-    "\2\u05aa\1\u05ab\1\u05aa\1\u05ab\1\u0562\13\0\1\u035e\270\0"+
-    "\1\u04e3\13\0\1\u035e\256\0\12\u0568\14\0\1\u035e\256\0"+
-    "\12\u05ac\14\0\1\u035e\256\0\1\u0568\1\u05ad\1\u05ac\2\u0568"+
-    "\2\u05ac\1\u0568\1\u05ac\1\u0568\14\0\1\u035e\270\0\1\u04ee"+
-    "\237\0\4\u05ae\2\0\1\u05ae\15\0\1\u05ae\6\0\12\u05ae"+
-    "\1\u056c\237\0\4\u05af\2\0\1\u05af\15\0\1\u05af\6\0"+
-    "\12\u05af\1\u05b0\237\0\4\u05b1\2\0\1\u05b1\15\0\1\u05b1"+
-    "\6\0\12\u05b1\1\u05b2\13\0\1\u0302\222\0\1\u036b\4\u05b1"+
-    "\2\0\1\u05b1\15\0\1\u05b1\6\0\12\u05b3\1\u05b2\13\0"+
-    "\1\u0302\222\0\1\u036b\4\u05b1\2\0\1\u05b1\15\0\1\u05b1"+
-    "\6\0\12\u05b4\1\u05b2\13\0\1\u0302\222\0\1\u036b\4\u05b1"+
-    "\2\0\1\u05b1\15\0\1\u05b1\6\0\1\u05b3\1\u05b5\1\u05b4"+
-    "\2\u05b3\2\u05b4\1\u05b3\1\u05b4\1\u05b3\1\u05b2\13\0\1\u0302"+
-    "\223\0\4\u05b6\2\0\1\u05b6\15\0\1\u05b6\6\0\12\u05b6"+
-    "\1\u052b\13\0\1\u0302\222\0\1\u036b\4\u05b6\2\0\1\u05b6"+
-    "\15\0\1\u05b6\6\0\12\u05b6\1\u052b\13\0\1\u0302\304\0"+
-    "\1\u0302\256\0\2\u0573\1\0\2\u0573\2\0\1\u0573\1\0"+
-    "\1\u0573\14\0\1\u0302\222\0\1\u036f\1\u0303\1\u05b7\30\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\24\u0303\1\u05b8\5\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\24\u0303\1\u05b9\5\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\1\u0303\1\u05ba\30\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\14\u0303\1\u05bb\15\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\1\u0303\1\u05bc\30\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u0303"+
-    "\1\u05bd\30\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u0303\1\u05be"+
-    "\30\u0303\1\u0370\12\u0303\237\0\1\u036f\21\u0303\1\u05bf\10\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\24\u0303\1\u05c0\5\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\24\u0303\1\u05c1\5\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\24\u0303\1\u05c2\5\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\1\u04b0\31\u0303\1\u0370\12\u0303\237\0\1\u036f\24\u0303"+
-    "\1\u05be\5\u0303\1\u0370\12\u0303\237\0\1\u036f\24\u0303\1\u05c3"+
-    "\5\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u0303\1\u05c4\30\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\31\u0303\1\u05c5\1\u0370\12\u0303"+
-    "\237\0\1\u036f\24\u0303\1\u05c6\5\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\1\u0303\1\u05c7\30\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\1\u05c8\31\u0303\1\u0370\12\u0303\237\0\1\u036f\21\u0303\1\u05c9"+
-    "\10\u0303\1\u0370\12\u0303\237\0\1\u036f\4\u0303\1\u05ca\25\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\24\u0303\1\u05cb\5\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\24\u0303\1\u05cc\5\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\4\u0303\1\u05cd\25\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\21\u0303\1\u05ce\10\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\24\u0303\1\u05cf\5\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\1\u05d0\11\u0303\237\0\1\u036f\32\u0303\1\u0370\7\u0303"+
-    "\1\u05d1\2\u0303\237\0\1\u036f\1\u05d2\31\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\1\u05d3\31\u0303\1\u0370\12\u0303\305\0\1\u04fd"+
-    "\237\0\4\u037d\2\0\1\u037d\15\0\1\u037d\6\0\12\u037d"+
-    "\14\0\1\u0146\222\0\1\u0109\32\270\1\u010a\11\270\1\u05d4"+
-    "\237\0\1\u0109\26\270\1\u018f\3\270\1\u010a\12\270\237\0"+
-    "\1\u0109\32\270\1\u010a\7\270\1\u05d5\2\270\237\0\1\u0109"+
-    "\32\270\1\u010a\11\270\1\u0153\237\0\1\u0109\3\270\1\u05d6"+
-    "\26\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a\4\270"+
-    "\1\u05d7\5\270\237\0\1\u0109\16\270\1\u05d8\13\270\1\u010a"+
-    "\12\270\237\0\1\u0109\26\270\1\u05d9\3\270\1\u010a\12\270"+
-    "\237\0\1\u0109\32\270\1\u010a\7\270\1\u04cb\2\270\237\0"+
-    "\1\u0121\32\324\1\164\11\324\1\u05da\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\212\0"+
-    "\1\u0121\4\324\1\u0127\25\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\212\0\1\u0121\24\324\1\350\5\324\1\164\12\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\212\0\1\u0121\32\324\1\164\6\324\1\350\3\324"+
-    "\1\0\3\161\1\0\2\161\1\162\3\161\3\0\1\161"+
-    "\4\0\2\161\260\0\1\u051d\237\0\4\u05db\2\0\1\u05db"+
-    "\15\0\1\u05db\6\0\12\u05db\1\u05a5\237\0\4\u05dc\2\0"+
-    "\1\u05dc\15\0\1\u05dc\6\0\12\u05dc\1\u05dd\237\0\4\u05de"+
-    "\2\0\1\u05de\15\0\1\u05de\6\0\12\u05de\1\u05df\13\0"+
-    "\1\u035e\222\0\1\u03c5\4\u05de\2\0\1\u05de\15\0\1\u05de"+
-    "\6\0\12\u05e0\1\u05df\13\0\1\u035e\222\0\1\u03c5\4\u05de"+
-    "\2\0\1\u05de\15\0\1\u05de\6\0\12\u05e1\1\u05df\13\0"+
-    "\1\u035e\222\0\1\u03c5\4\u05de\2\0\1\u05de\15\0\1\u05de"+
-    "\6\0\1\u05e0\1\u05e2\1\u05e1\2\u05e0\2\u05e1\1\u05e0\1\u05e1"+
-    "\1\u05e0\1\u05df\13\0\1\u035e\223\0\4\u05e3\2\0\1\u05e3"+
-    "\15\0\1\u05e3\6\0\12\u05e3\1\u0562\13\0\1\u035e\222\0"+
-    "\1\u03c5\4\u05e3\2\0\1\u05e3\15\0\1\u05e3\6\0\12\u05e3"+
-    "\1\u0562\13\0\1\u035e\304\0\1\u035e\256\0\2\u05ac\1\0"+
-    "\2\u05ac\2\0\1\u05ac\1\0\1\u05ac\14\0\1\u035e\223\0"+
-    "\4\u05e4\2\0\1\u05e4\15\0\1\u05e4\6\0\12\u05e4\1\u056c"+
-    "\237\0\4\u05e5\2\0\1\u05e5\15\0\1\u05e5\6\0\12\u05e5"+
-    "\1\u05e6\237\0\4\u05e7\2\0\1\u05e7\15\0\1\u05e7\6\0"+
-    "\1\u05e8\2\u05e9\1\u05e8\5\u05e9\1\u05ea\14\0\1\u0302\223\0"+
-    "\4\u05eb\2\0\1\u05eb\15\0\1\u05eb\6\0\12\u05eb\1\u05b2"+
-    "\13\0\1\u0302\223\0\4\u05e7\2\0\1\u05e7\15\0\1\u05e7"+
-    "\6\0\1\u05e8\2\u05e9\1\u05e8\5\u05e9\1\u05ea\237\0\1\u036b"+
-    "\4\u05eb\2\0\1\u05eb\15\0\1\u05eb\6\0\12\u05ec\1\u05b2"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u05eb\2\0\1\u05eb\15\0"+
-    "\1\u05eb\6\0\12\u05eb\1\u05b2\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u05eb\2\0\1\u05eb\15\0\1\u05eb\6\0\2\u05ec\1\u05eb"+
-    "\2\u05ec\2\u05eb\1\u05ec\1\u05eb\1\u05ec\1\u05b2\13\0\1\u0302"+
-    "\270\0\1\u052b\13\0\1\u0302\222\0\1\u036f\25\u0303\1\u05ed"+
-    "\4\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u05ee\31\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\15\u0303\1\u05ef\14\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\21\u0303\1\u05f0\10\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\16\u0303\1\u05f1\4\u0303\1\u05f2\6\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\4\u0303\1\u05f3\25\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\11\u0303\1\u05f4\237\0\1\u036f\4\u0303"+
-    "\1\u05f5\25\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\11\u0303\1\u05f6\237\0\1\u036f\24\u0303\1\u05f7\5\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\1\u05f8\1\u05f9\1\u0303\1\u05fa\20\u0303"+
-    "\1\u05fb\5\u0303\1\u0370\5\u0303\1\u05fc\4\u0303\237\0\1\u036f"+
-    "\16\u0303\1\u05fd\13\u0303\1\u0370\12\u0303\237\0\1\u036f\11\u0303"+
-    "\1\u05fe\13\u0303\1\u05ff\4\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\32\u0303\1\u0370\11\u0303\1\u0600\237\0\1\u036f\23\u0303\1\u0601"+
-    "\6\u0303\1\u0370\12\u0303\237\0\1\u036f\31\u0303\1\u0602\1\u0370"+
-    "\12\u0303\237\0\1\u036f\26\u0303\1\u0603\3\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\11\u0303\1\u0604\20\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\3\u0303\1\u0605\6\u0303\237\0\1\u036f"+
-    "\5\u0303\1\u0606\24\u0303\1\u0370\12\u0303\237\0\1\u036f\10\u0303"+
-    "\1\u0607\21\u0303\1\u0370\12\u0303\237\0\1\u036f\3\u0303\1\u0608"+
-    "\26\u0303\1\u0370\12\u0303\237\0\1\u036f\21\u0303\1\u0609\6\u0303"+
-    "\1\u060a\1\u0303\1\u0370\12\u0303\237\0\1\u036f\12\u0303\1\u060b"+
-    "\17\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370\1\u0303"+
-    "\1\u060c\10\u0303\237\0\1\u036f\24\u0303\1\u060d\5\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\24\u0303\1\u060e\5\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\4\u0303\1\u060f\5\u0303\237\0"+
-    "\1\u036f\5\u0303\1\u0610\23\u0303\1\u0611\1\u0370\12\u0303\237\0"+
-    "\1\u0109\7\270\1\u0612\22\270\1\u010a\12\270\237\0\1\u0109"+
-    "\1\u0613\31\270\1\u010a\12\270\237\0\1\u0109\32\270\1\u010a"+
-    "\1\u0400\11\270\237\0\1\u0109\24\270\1\u0614\5\270\1\u010a"+
-    "\12\270\237\0\1\u0109\1\270\1\u0615\30\270\1\u010a\12\270"+
-    "\237\0\1\u0109\32\270\1\u010a\2\270\1\u0196\7\270\237\0"+
-    "\1\u0121\1\u0616\31\324\1\164\12\324\1\0\3\161\1\0"+
-    "\2\161\1\162\3\161\3\0\1\161\4\0\2\161\213\0"+
-    "\4\u0617\2\0\1\u0617\15\0\1\u0617\6\0\12\u0617\1\u05a5"+
-    "\237\0\4\u0618\2\0\1\u0618\15\0\1\u0618\6\0\12\u0618"+
-    "\1\u0619\237\0\4\u061a\2\0\1\u061a\15\0\1\u061a\6\0"+
-    "\1\u061b\2\u061c\1\u061b\5\u061c\1\u061d\14\0\1\u035e\223\0"+
-    "\4\u061e\2\0\1\u061e\15\0\1\u061e\6\0\12\u061e\1\u05df"+
-    "\13\0\1\u035e\223\0\4\u061a\2\0\1\u061a\15\0\1\u061a"+
-    "\6\0\1\u061b\2\u061c\1\u061b\5\u061c\1\u061d\237\0\1\u03c5"+
-    "\4\u061e\2\0\1\u061e\15\0\1\u061e\6\0\12\u061f\1\u05df"+
-    "\13\0\1\u035e\222\0\1\u03c5\4\u061e\2\0\1\u061e\15\0"+
-    "\1\u061e\6\0\12\u061e\1\u05df\13\0\1\u035e\222\0\1\u03c5"+
-    "\4\u061e\2\0\1\u061e\15\0\1\u061e\6\0\2\u061f\1\u061e"+
-    "\2\u061f\2\u061e\1\u061f\1\u061e\1\u061f\1\u05df\13\0\1\u035e"+
-    "\270\0\1\u0562\13\0\1\u035e\270\0\1\u056c\237\0\4\u0620"+
-    "\2\0\1\u0620\15\0\1\u0620\6\0\12\u0620\1\u05e6\237\0"+
-    "\4\u0621\2\0\1\u0621\15\0\1\u0621\6\0\1\u0622\2\u0623"+
-    "\1\u0622\5\u0623\1\u0624\1\u0625\237\0\4\u0626\2\0\1\u0626"+
-    "\15\0\1\u0626\6\0\12\u0626\1\u0627\13\0\1\u0302\222\0"+
-    "\1\u036b\4\u0626\2\0\1\u0626\15\0\1\u0626\6\0\12\u0628"+
-    "\1\u0627\13\0\1\u0302\222\0\1\u036b\4\u0626\2\0\1\u0626"+
-    "\15\0\1\u0626\6\0\12\u0629\1\u0627\13\0\1\u0302\222\0"+
-    "\1\u036b\4\u0626\2\0\1\u0626\15\0\1\u0626\6\0\1\u0628"+
-    "\1\u062a\1\u0629\2\u0628\2\u0629\1\u0628\1\u0629\1\u0628\1\u0627"+
-    "\13\0\1\u0302\223\0\4\u062b\2\0\1\u062b\15\0\1\u062b"+
-    "\6\0\12\u062b\1\u05b2\13\0\1\u0302\222\0\1\u036b\4\u062b"+
-    "\2\0\1\u062b\15\0\1\u062b\6\0\12\u062b\1\u05b2\13\0"+
-    "\1\u0302\222\0\1\u036f\1\u0303\1\u062c\30\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\1\u062d\11\u0303\237\0\1\u036f"+
-    "\6\u0303\1\u062e\23\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\7\u0303\1\u062f\2\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\10\u0303\1\u04b5\1\u0303\237\0\1\u036f\32\u0303\1\u0370\5\u0303"+
-    "\1\u04b5\4\u0303\237\0\1\u036f\26\u0303\1\u0630\3\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\1\u0303\1\u0631\30\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\26\u0303\1\u0632\3\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\1\u0303\1\u0633\10\u0303\237\0\1\u036f"+
-    "\1\u0634\31\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u0635\27\u0303"+
-    "\1\u0636\1\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\1\u0637\11\u0303\237\0\1\u036f\4\u0303\1\u0638\25\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\25\u0303\1\u0639\4\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\1\u063a\31\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\32\u0303\1\u0370\1\u063b\11\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\2\u0303\1\u03e5\7\u0303\237\0\1\u036f\32\u0303\1\u0370\3\u0303"+
-    "\1\u063c\6\u0303\237\0\1\u036f\1\u063d\1\u0303\1\u063e\27\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\1\u062f\31\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\2\u0303\1\u063f\7\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\2\u0303\1\u0640\7\u0303\237\0\1\u036f"+
-    "\15\u0303\1\u0641\14\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\5\u0303\1\u0642\4\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\7\u0303\1\u0643\2\u0303\237\0\1\u036f\32\u0303\1\u0370\11\u0303"+
-    "\1\u0644\237\0\1\u036f\1\u0303\1\u0645\30\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\3\u0303\1\u0646\6\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\1\u0303\1\u0647\10\u0303\237\0\1\u036f"+
-    "\32\u0303\1\u0370\1\u0303\1\u0648\10\u0303\237\0\1\u036f\24\u0303"+
-    "\1\u0649\5\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\6\u0303\1\u064a\3\u0303\237\0\1\u036f\32\u0303\1\u0370\3\u0303"+
-    "\1\u064b\6\u0303\237\0\1\u036f\1\u063c\31\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\11\u0303\1\u064c\237\0\1\u036f"+
-    "\25\u0303\1\u064d\4\u0303\1\u0370\12\u0303\237\0\1\u0109\32\270"+
-    "\1\u010a\11\270\1\u064e\237\0\1\u0109\4\270\1\u018f\25\270"+
-    "\1\u010a\12\270\237\0\1\u0109\24\270\1\u0153\5\270\1\u010a"+
-    "\12\270\237\0\1\u0109\32\270\1\u010a\6\270\1\u0153\3\270"+
-    "\237\0\1\u0121\32\324\1\164\5\324\1\u064f\4\324\1\0"+
-    "\3\161\1\0\2\161\1\162\3\161\3\0\1\161\4\0"+
-    "\2\161\260\0\1\u05a5\237\0\4\u0650\2\0\1\u0650\15\0"+
-    "\1\u0650\6\0\12\u0650\1\u0619\237\0\4\u0651\2\0\1\u0651"+
-    "\15\0\1\u0651\6\0\1\u0652\2\u0653\1\u0652\5\u0653\1\u0654"+
-    "\1\u0655\237\0\4\u0656\2\0\1\u0656\15\0\1\u0656\6\0"+
-    "\12\u0656\1\u0657\13\0\1\u035e\222\0\1\u03c5\4\u0656\2\0"+
-    "\1\u0656\15\0\1\u0656\6\0\12\u0658\1\u0657\13\0\1\u035e"+
-    "\222\0\1\u03c5\4\u0656\2\0\1\u0656\15\0\1\u0656\6\0"+
-    "\12\u0659\1\u0657\13\0\1\u035e\222\0\1\u03c5\4\u0656\2\0"+
-    "\1\u0656\15\0\1\u0656\6\0\1\u0658\1\u065a\1\u0659\2\u0658"+
-    "\2\u0659\1\u0658\1\u0659\1\u0658\1\u0657\13\0\1\u035e\223\0"+
-    "\4\u065b\2\0\1\u065b\15\0\1\u065b\6\0\12\u065b\1\u05df"+
-    "\13\0\1\u035e\222\0\1\u03c5\4\u065b\2\0\1\u065b\15\0"+
-    "\1\u065b\6\0\12\u065b\1\u05df\13\0\1\u035e\223\0\4\u065c"+
-    "\2\0\1\u065c\15\0\1\u065c\6\0\12\u065c\1\u05e6\237\0"+
-    "\4\u065d\2\0\1\u065d\15\0\1\u065d\6\0\12\u065d\1\u065e"+
-    "\236\0\1\u036b\4\u065d\2\0\1\u065d\15\0\1\u065d\6\0"+
-    "\12\u065f\1\u065e\236\0\1\u036b\4\u065d\2\0\1\u065d\15\0"+
-    "\1\u065d\6\0\12\u0660\1\u065e\236\0\1\u036b\4\u065d\2\0"+
-    "\1\u065d\15\0\1\u065d\6\0\1\u065f\1\u0661\1\u0660\2\u065f"+
-    "\2\u0660\1\u065f\1\u0660\1\u065f\1\u065e\237\0\4\u0662\2\0"+
-    "\1\u0662\15\0\1\u0662\6\0\12\u0662\14\0\1\u0302\223\0"+
-    "\4\u0663\2\0\1\u0663\15\0\1\u0663\6\0\12\u0663\1\u0627"+
-    "\13\0\1\u0302\223\0\4\u0662\2\0\1\u0662\15\0\1\u0662"+
-    "\6\0\12\u0662\237\0\1\u036b\4\u0663\2\0\1\u0663\15\0"+
-    "\1\u0663\6\0\12\u0664\1\u0627\13\0\1\u0302\222\0\1\u036b"+
-    "\4\u0663\2\0\1\u0663\15\0\1\u0663\6\0\12\u0663\1\u0627"+
-    "\13\0\1\u0302\222\0\1\u036b\4\u0663\2\0\1\u0663\15\0"+
-    "\1\u0663\6\0\2\u0664\1\u0663\2\u0664\2\u0663\1\u0664\1\u0663"+
-    "\1\u0664\1\u0627\13\0\1\u0302\270\0\1\u05b2\13\0\1\u0302"+
-    "\222\0\1\u036f\32\u0303\1\u0370\1\u0665\11\u0303\237\0\1\u036f"+
-    "\1\u0666\31\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\10\u0303\1\u0667\1\u0303\237\0\1\u036f\25\u0303\1\u044e\4\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370\5\u0303\1\u0668"+
-    "\4\u0303\237\0\1\u036f\32\u0303\1\u0370\5\u0303\1\u0669\4\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\5\u0303\1\u063c\4\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\3\u0303\1\u0666\6\u0303\237\0\1\u036f"+
-    "\17\u0303\1\u066a\12\u0303\1\u0370\12\u0303\237\0\1\u036f\12\u0303"+
-    "\1\u066b\17\u0303\1\u0370\12\u0303\237\0\1\u036f\25\u0303\1\u066c"+
-    "\4\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u066d\31\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\15\u0303\1\u066e\14\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\3\u0303\1\u066f\6\u0303\237\0"+
-    "\1\u036f\21\u0303\1\u0670\10\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\2\u0303\1\u062f\27\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u0303"+
-    "\1\u044e\30\u0303\1\u0370\12\u0303\237\0\1\u036f\11\u0303\1\u0671"+
-    "\20\u0303\1\u0370\12\u0303\237\0\1\u036f\11\u0303\1\u0672\20\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\1\u0673\31\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\1\u0674\31\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\2\u0303\1\u0675\27\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\4\u0303\1\u0455\5\u0303\237\0\1\u036f\10\u0303\1\u0676"+
-    "\21\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u0677\31\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\25\u0303\1\u0678\4\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\4\u0303\1\u0666\5\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\6\u0303\1\u0666\3\u0303\237\0\1\u036f"+
-    "\32\u0303\1\u0370\2\u0303\1\u0666\7\u0303\237\0\1\u036f\16\u0303"+
-    "\1\u0679\13\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\1\u067a\11\u0303\237\0\1\u036f\32\u0303\1\u0370\3\u0303\1\u067b"+
-    "\6\u0303\237\0\1\u036f\32\u0303\1\u0370\3\u0303\1\u03e5\6\u0303"+
-    "\237\0\1\u036f\24\u0303\1\u067c\5\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u0109\1\u067d\31\270\1\u010a\12\270\237\0\1\u0121\7\324"+
-    "\1\u067e\22\324\1\164\12\324\1\0\3\161\1\0\2\161"+
-    "\1\162\3\161\3\0\1\161\4\0\2\161\213\0\4\u067f"+
-    "\2\0\1\u067f\15\0\1\u067f\6\0\12\u067f\1\u0619\237\0"+
-    "\4\u0680\2\0\1\u0680\15\0\1\u0680\6\0\12\u0680\1\u0681"+
-    "\236\0\1\u03c5\4\u0680\2\0\1\u0680\15\0\1\u0680\6\0"+
-    "\12\u0682\1\u0681\236\0\1\u03c5\4\u0680\2\0\1\u0680\15\0"+
-    "\1\u0680\6\0\12\u0683\1\u0681\236\0\1\u03c5\4\u0680\2\0"+
-    "\1\u0680\15\0\1\u0680\6\0\1\u0682\1\u0684\1\u0683\2\u0682"+
-    "\2\u0683\1\u0682\1\u0683\1\u0682\1\u0681\237\0\4\u0685\2\0"+
-    "\1\u0685\15\0\1\u0685\6\0\12\u0685\14\0\1\u035e\223\0"+
-    "\4\u0686\2\0\1\u0686\15\0\1\u0686\6\0\12\u0686\1\u0657"+
-    "\13\0\1\u035e\223\0\4\u0685\2\0\1\u0685\15\0\1\u0685"+
-    "\6\0\12\u0685\237\0\1\u03c5\4\u0686\2\0\1\u0686\15\0"+
-    "\1\u0686\6\0\12\u0687\1\u0657\13\0\1\u035e\222\0\1\u03c5"+
-    "\4\u0686\2\0\1\u0686\15\0\1\u0686\6\0\12\u0686\1\u0657"+
-    "\13\0\1\u035e\222\0\1\u03c5\4\u0686\2\0\1\u0686\15\0"+
-    "\1\u0686\6\0\2\u0687\1\u0686\2\u0687\2\u0686\1\u0687\1\u0686"+
-    "\1\u0687\1\u0657\13\0\1\u035e\270\0\1\u05df\13\0\1\u035e"+
-    "\270\0\1\u05e6\237\0\4\u0688\2\0\1\u0688\15\0\1\u0688"+
-    "\6\0\12\u0688\1\u065e\237\0\4\u0662\2\0\1\u0662\15\0"+
-    "\1\u0662\6\0\12\u0662\1\u0573\236\0\1\u036b\4\u0688\2\0"+
-    "\1\u0688\15\0\1\u0688\6\0\12\u0689\1\u065e\236\0\1\u036b"+
-    "\4\u0688\2\0\1\u0688\15\0\1\u0688\6\0\12\u0688\1\u065e"+
-    "\236\0\1\u036b\4\u0688\2\0\1\u0688\15\0\1\u0688\6\0"+
-    "\2\u0689\1\u0688\2\u0689\2\u0688\1\u0689\1\u0688\1\u0689\1\u065e"+
-    "\237\0\4\u068a\2\0\1\u068a\15\0\1\u068a\6\0\12\u068a"+
-    "\14\0\1\u0302\223\0\4\u068b\2\0\1\u068b\15\0\1\u068b"+
-    "\6\0\12\u068b\1\u0627\13\0\1\u0302\222\0\1\u036b\4\u068b"+
-    "\2\0\1\u068b\15\0\1\u068b\6\0\12\u068b\1\u0627\13\0"+
-    "\1\u0302\222\0\1\u036f\3\u0303\1\u068c\26\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\2\u0303\1\u044e\27\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\6\u0303\1\u0459\23\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\1\u0303\1\u0646\30\u0303\1\u0370\12\u0303\237\0\1\u036f\3\u0303"+
-    "\1\u068d\26\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\3\u0303\1\u068e\6\u0303\237\0\1\u036f\32\u0303\1\u0370\6\u0303"+
-    "\1\u068f\3\u0303\237\0\1\u036f\32\u0303\1\u0370\6\u0303\1\u0690"+
-    "\3\u0303\237\0\1\u036f\32\u0303\1\u0370\5\u0303\1\u0691\4\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\7\u0303\1\u0692\2\u0303\237\0"+
-    "\1\u036f\1\u0693\31\u0303\1\u0370\12\u0303\237\0\1\u036f\24\u0303"+
-    "\1\u0694\5\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\4\u0303\1\u0695\5\u0303\237\0\1\u036f\32\u0303\1\u0370\4\u0303"+
-    "\1\u0696\5\u0303\237\0\1\u036f\26\u0303\1\u0697\3\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\30\u0303\1\u0698\1\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\11\u0303\1\u04af\20\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\2\u0303\1\u0699\7\u0303\237\0\1\u036f"+
-    "\12\u0303\1\u069a\17\u0303\1\u0370\12\u0303\237\0\1\u036f\17\u0303"+
-    "\1\u0456\12\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\4\u0303\1\u069b\5\u0303\237\0\1\u036f\32\u0303\1\u0370\6\u0303"+
-    "\1\u04b2\3\u0303\237\0\1\u036f\30\u0303\1\u069c\1\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\30\u0303\1\u069d\1\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u0109\32\270\1\u010a\5\270\1\u069e\4\270\237\0"+
-    "\1\u0121\1\324\1\u03a5\30\324\1\164\12\324\1\0\3\161"+
-    "\1\0\2\161\1\162\3\161\3\0\1\161\4\0\2\161"+
-    "\260\0\1\u0619\237\0\4\u069f\2\0\1\u069f\15\0\1\u069f"+
-    "\6\0\12\u069f\1\u0681\237\0\4\u0685\2\0\1\u0685\15\0"+
-    "\1\u0685\6\0\12\u0685\1\u05ac\236\0\1\u03c5\4\u069f\2\0"+
-    "\1\u069f\15\0\1\u069f\6\0\12\u06a0\1\u0681\236\0\1\u03c5"+
-    "\4\u069f\2\0\1\u069f\15\0\1\u069f\6\0\12\u069f\1\u0681"+
-    "\236\0\1\u03c5\4\u069f\2\0\1\u069f\15\0\1\u069f\6\0"+
-    "\2\u06a0\1\u069f\2\u06a0\2\u069f\1\u06a0\1\u069f\1\u06a0\1\u0681"+
-    "\237\0\4\u06a1\2\0\1\u06a1\15\0\1\u06a1\6\0\12\u06a1"+
-    "\14\0\1\u035e\223\0\4\u06a2\2\0\1\u06a2\15\0\1\u06a2"+
-    "\6\0\12\u06a2\1\u0657\13\0\1\u035e\222\0\1\u03c5\4\u06a2"+
-    "\2\0\1\u06a2\15\0\1\u06a2\6\0\12\u06a2\1\u0657\13\0"+
-    "\1\u035e\223\0\4\u06a3\2\0\1\u06a3\15\0\1\u06a3\6\0"+
-    "\12\u06a3\1\u065e\236\0\1\u036b\4\u06a3\2\0\1\u06a3\15\0"+
-    "\1\u06a3\6\0\12\u06a3\1\u065e\237\0\4\u06a4\2\0\1\u06a4"+
-    "\15\0\1\u06a4\6\0\12\u06a4\14\0\1\u0302\270\0\1\u0627"+
-    "\13\0\1\u0302\222\0\1\u036f\1\u06a5\31\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\11\u0303\1\u063c\237\0\1\u036f"+
-    "\1\u06a6\31\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u06a7\31\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\7\u0303\1\u06a8\22\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\1\u06a9\31\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\1\u06aa\31\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\6\u0303\1\u06ab\3\u0303\237\0\1\u036f\6\u0303\1\u044e"+
-    "\23\u0303\1\u0370\12\u0303\237\0\1\u036f\25\u0303\1\u06ac\4\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\1\u06ad\31\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\6\u0303\1\u06ae\3\u0303\237\0"+
-    "\1\u036f\1\u06af\31\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\6\u0303\1\u04ae\3\u0303\237\0\1\u036f\12\u0303\1\u045f"+
-    "\17\u0303\1\u0370\12\u0303\237\0\1\u036f\1\u06b0\31\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\10\u0303\1\u06b1\21\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\31\u0303\1\u06b2\1\u0370\12\u0303\237\0\1\u0109"+
-    "\7\270\1\u06b3\22\270\1\u010a\12\270\240\0\4\u06b4\2\0"+
-    "\1\u06b4\15\0\1\u06b4\6\0\12\u06b4\1\u0681\236\0\1\u03c5"+
-    "\4\u06b4\2\0\1\u06b4\15\0\1\u06b4\6\0\12\u06b4\1\u0681"+
-    "\237\0\4\u06b5\2\0\1\u06b5\15\0\1\u06b5\6\0\12\u06b5"+
-    "\14\0\1\u035e\270\0\1\u0657\13\0\1\u035e\270\0\1\u065e"+
-    "\237\0\4\u0573\2\0\1\u0573\15\0\1\u0573\6\0\12\u0573"+
-    "\14\0\1\u0302\222\0\1\u036f\32\u0303\1\u0370\1\u06b6\11\u0303"+
-    "\237\0\1\u036f\2\u0303\1\u06b7\27\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\10\u0303\1\u062f\1\u0303\237\0\1\u036f"+
-    "\15\u0303\1\u03e5\14\u0303\1\u0370\12\u0303\237\0\1\u036f\23\u0303"+
-    "\1\u06b8\6\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\1\u0303\1\u06b9\10\u0303\237\0\1\u036f\32\u0303\1\u0370\3\u0303"+
-    "\1\u04b2\6\u0303\237\0\1\u036f\30\u0303\1\u06ba\1\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\32\u0303\1\u0370\1\u0303\1\u06bb\10\u0303"+
-    "\237\0\1\u036f\6\u0303\1\u06bc\23\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\5\u0303\1\u06bd\4\u0303\237\0\1\u036f"+
-    "\32\u0303\1\u0370\5\u0303\1\u06be\4\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\1\u0303\1\u03e5\10\u0303\237\0\1\u036f\13\u0303\1\u06bf"+
-    "\16\u0303\1\u0370\12\u0303\237\0\1\u0109\1\270\1\u046d\30\270"+
-    "\1\u010a\12\270\305\0\1\u0681\237\0\4\u05ac\2\0\1\u05ac"+
-    "\15\0\1\u05ac\6\0\12\u05ac\14\0\1\u035e\222\0\1\u036f"+
-    "\24\u0303\1\u06c0\5\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\10\u0303\1\u06c1\1\u0303\237\0\1\u036f\1\u0303\1\u0455"+
-    "\30\u0303\1\u0370\12\u0303\237\0\1\u036f\2\u0303\1\u06c2\27\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\3\u0303\1\u06c3\26\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\3\u0303\1\u06c4\26\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\1\u0303\1\u06c5\10\u0303\237\0"+
-    "\1\u036f\3\u0303\1\u06c6\26\u0303\1\u0370\12\u0303\237\0\1\u036f"+
-    "\1\u06c7\31\u0303\1\u0370\12\u0303\237\0\1\u036f\26\u0303\1\u06c8"+
-    "\3\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370\11\u0303"+
-    "\1\u06c9\237\0\1\u036f\26\u0303\1\u044e\3\u0303\1\u0370\12\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\7\u0303\1\u06ca\2\u0303\237\0"+
-    "\1\u036f\32\u0303\1\u0370\11\u0303\1\u03e5\237\0\1\u036f\3\u0303"+
-    "\1\u06cb\26\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\4\u0303\1\u06cc\5\u0303\237\0\1\u036f\16\u0303\1\u06cd\13\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\26\u0303\1\u06ce\3\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\32\u0303\1\u0370\7\u0303\1\u0694\2\u0303"+
-    "\237\0\1\u036f\7\u0303\1\u06cf\22\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\1\u06d0\31\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303"+
-    "\1\u0370\1\u062f\11\u0303\237\0\1\u036f\24\u0303\1\u06d1\5\u0303"+
-    "\1\u0370\12\u0303\237\0\1\u036f\1\u0303\1\u06d2\30\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\32\u0303\1\u0370\2\u0303\1\u0455\7\u0303"+
-    "\237\0\1\u036f\32\u0303\1\u0370\11\u0303\1\u06d3\237\0\1\u036f"+
-    "\4\u0303\1\u044e\25\u0303\1\u0370\12\u0303\237\0\1\u036f\24\u0303"+
-    "\1\u03e5\5\u0303\1\u0370\12\u0303\237\0\1\u036f\32\u0303\1\u0370"+
-    "\6\u0303\1\u03e5\3\u0303\237\0\1\u036f\1\u06d4\31\u0303\1\u0370"+
-    "\12\u0303\237\0\1\u036f\32\u0303\1\u0370\5\u0303\1\u06d5\4\u0303"+
-    "\237\0\1\u036f\7\u0303\1\u06d6\22\u0303\1\u0370\12\u0303\237\0"+
-    "\1\u036f\1\u0303\1\u0666\30\u0303\1\u0370\12\u0303\26\0";
+    "\1\u03d7\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u03d8\31\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\7\43\1\u01f5\22\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\2\0\1\55\1\0\1\56\2\0\1\57\1\0"+
+    "\1\60\4\0\1\61\1\0\1\62\1\0\1\63\2\0"+
+    "\1\64\3\0\1\65\2\0\1\66\4\0\1\67\3\0"+
+    "\1\70\17\0\1\71\2\0\1\72\21\0\1\73\2\0"+
+    "\1\74\61\0\2\30\1\75\1\0\1\76\1\0\1\76"+
+    "\1\77\1\0\1\30\2\0\1\202\1\0\1\41\1\30"+
+    "\1\203\13\43\1\u0149\16\43\1\204\12\205\1\76\1\155"+
+    "\1\206\1\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\217\0\1\u03d9\32\u0365\1\u03da\12\u0365\10\0"+
+    "\1\u0366\231\0\51\u0366\1\u03db\2\0\3\u0366\1\u0232\3\0"+
+    "\1\u0366\225\0\4\u03dc\2\0\1\u03dc\15\0\1\u03dc\6\0"+
+    "\12\u03dc\1\u03dd\235\0\1\u02fb\3\0\1\u02fb\32\u02fc\1\u02fb"+
+    "\12\u02fc\1\u02fd\2\u02fb\1\u02fe\2\u02fb\1\u02ff\5\0\2\u02fb"+
+    "\3\0\1\u02fb\214\0\1\u02fb\3\0\1\u02fb\32\u02fc\1\u0369"+
+    "\12\u02fc\1\u02fd\2\u02fb\1\u02fe\2\u02fb\1\u02ff\5\0\2\u02fb"+
+    "\3\0\1\u02fb\214\0\1\u02fd\3\0\34\u02fd\12\u03de\1\0"+
+    "\2\u02fd\1\u036c\2\u02fd\1\u02ff\5\0\2\u02fd\3\0\1\u02fd"+
+    "\220\0\51\u036b\1\u03df\2\0\3\u036b\1\u0232\2\0\1\u03e0"+
+    "\1\u036b\225\0\4\u03e1\2\0\1\u03e1\15\0\1\u03e1\6\0"+
+    "\12\u03e1\243\0\4\u02fb\2\0\1\u02fb\15\0\1\u02fb\6\0"+
+    "\12\u02fb\242\0\1\u03e2\32\u036e\1\u03e3\12\u036e\1\u03e4\7\0"+
+    "\1\u036b\232\0\4\u03e5\2\0\1\u03e5\15\0\1\u03e5\6\0"+
+    "\12\u03e5\1\u03e6\307\0\1\u03e7\24\0\1\55\1\0\1\56"+
+    "\2\0\1\246\1\0\1\247\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\250\2\0\1\251"+
+    "\4\0\1\252\3\0\1\253\17\0\1\71\2\0\1\254"+
+    "\21\0\1\255\2\0\1\256\61\0\1\30\1\76\2\0"+
+    "\1\76\1\0\2\76\1\0\1\76\2\0\1\u0371\1\0"+
+    "\2\30\1\u03e8\32\u0373\13\u0374\1\76\1\u0374\1\u0371\1\u0374"+
+    "\1\0\1\u0374\1\u03e9\3\u0374\3\0\1\u0374\3\0\2\u0374"+
+    "\213\0\1\u0372\1\u03ea\2\0\65\u0372\1\u03eb\1\0\2\u0372"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\u0371\1\0\1\41\1\30\1\u03e8"+
+    "\32\u0373\1\u0374\12\u03ec\1\76\1\u0374\1\u03ed\1\u0374\1\0"+
+    "\1\u0374\1\u03e9\3\u0374\3\0\1\u0374\3\0\2\u0374\213\0"+
+    "\1\u0374\3\0\1\u03ee\45\u0374\1\0\3\u0374\1\0\1\u0374"+
+    "\1\u03e9\3\u0374\3\0\1\u0374\3\0\2\u0374\213\0\1\u0375"+
+    "\3\0\46\u0375\1\u0377\2\u0375\1\u0378\2\u0375\1\u0379\5\0"+
+    "\2\u0375\3\0\1\u0375\214\0\1\u0375\3\0\1\u03ef\32\u0376"+
+    "\1\u03f0\12\u0376\1\u03f1\2\u0375\1\u0378\2\u0375\1\u0379\1\u0230"+
+    "\1\u0231\1\u0232\2\0\2\u0375\3\0\1\u0375\214\0\1\u0377"+
+    "\3\0\46\u0377\1\0\2\u0377\1\u03f2\2\u0377\1\u0379\5\0"+
+    "\2\u0377\3\0\1\u0377\221\0\4\u03f3\2\0\1\u03f3\15\0"+
+    "\1\u03f3\6\0\12\u03f3\243\0\32\u03f4\1\0\12\u03f4\12\0"+
+    "\1\u037a\223\0\1\155\3\0\1\u0177\20\u0101\1\u03f5\11\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\1\u0101\1\u03f6\30\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\13\u0101\1\u0188\16\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\2\u0101\1\u021b"+
+    "\27\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\5\u0101\1\u030a\24\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\4\u0101\1\u03f7\25\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\3\u0101"+
+    "\1\u03f8\26\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u0101\1\u021b\30\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\4\u0101\1\u03f9\25\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\11\u0101\1\u03fa\20\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\7\u0101\1\u021b\22\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\13\u0101\1\u017c"+
+    "\16\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\100\1\0\1\101\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\102\2\0"+
+    "\1\103\4\0\1\104\3\0\1\105\17\0\1\71\2\0"+
+    "\1\106\21\0\1\107\2\0\1\110\61\0\1\30\2\31"+
+    "\2\0\2\111\1\112\1\0\1\31\2\0\1\213\1\0"+
+    "\1\41\1\30\1\u01ad\32\43\1\204\12\u0128\1\u0201\1\155"+
+    "\1\216\1\155\1\0\1\213\1\157\1\u01d9\1\u01da\1\u01db"+
+    "\2\0\1\111\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\100\1\0\1\101\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\102\2\0"+
+    "\1\103\4\0\1\104\3\0\1\105\17\0\1\71\2\0"+
+    "\1\106\21\0\1\107\2\0\1\110\61\0\1\30\2\31"+
+    "\2\0\2\111\1\112\1\0\1\31\2\0\1\213\1\0"+
+    "\1\41\1\30\1\u01ad\32\43\1\204\2\u0387\1\u0128\2\u0387"+
+    "\2\u0128\2\u0387\1\u0128\1\u0201\1\155\1\216\1\155\1\0"+
+    "\1\213\1\157\1\u01d9\1\u01da\1\u01db\2\0\1\111\1\155"+
+    "\3\0\2\155\220\0\4\u03fb\2\0\1\u03fb\15\0\1\u03fb"+
+    "\6\0\12\u03fb\1\u0318\242\0\4\u03fc\2\0\1\u03fc\15\0"+
+    "\1\u03fc\6\0\12\u03fc\1\u03fd\242\0\4\u03fe\2\0\1\u03fe"+
+    "\15\0\1\u03fe\6\0\1\u03ff\1\u0400\5\u03ff\1\u0401\1\u0400"+
+    "\1\u03ff\13\0\1\u01b5\227\0\4\u0402\2\0\1\u0402\15\0"+
+    "\1\u0402\6\0\12\u0402\1\u038d\12\0\1\u01b5\227\0\4\u03fe"+
+    "\2\0\1\u03fe\15\0\1\u03fe\6\0\1\u03ff\1\u0400\5\u03ff"+
+    "\1\u0401\1\u0400\1\u03ff\242\0\1\u022c\4\u0402\2\0\1\u0402"+
+    "\15\0\1\u0402\6\0\12\u0402\1\u038d\12\0\1\u01b5\226\0"+
+    "\1\u022c\4\u0402\2\0\1\u0402\15\0\1\u0402\6\0\12\u0403"+
+    "\1\u038d\12\0\1\u01b5\226\0\1\u022c\4\u0402\2\0\1\u0402"+
+    "\15\0\1\u0402\6\0\2\u0403\1\u0402\2\u0403\2\u0402\2\u0403"+
+    "\1\u0402\1\u038d\12\0\1\u01b5\274\0\1\u02a5\12\0\1\u01b5"+
+    "\226\0\1\u0404\33\0\12\u0405\242\0\1\u0404\33\0\12\u0392"+
+    "\242\0\1\u0404\33\0\2\u0392\1\u0405\1\u0392\1\u0406\2\u0405"+
+    "\2\u0392\1\u0405\242\0\1\u013e\4\333\1\u0407\25\333\1\u013f"+
+    "\12\333\242\0\1\u013e\1\u0408\31\333\1\u013f\12\333\242\0"+
+    "\1\u013e\10\333\1\u0409\21\333\1\u013f\12\333\242\0\1\u013e"+
+    "\13\333\1\u040a\16\333\1\u013f\12\333\242\0\1\u013e\17\333"+
+    "\1\u040b\12\333\1\u013f\12\333\242\0\1\u013e\15\333\1\u040c"+
+    "\14\333\1\u013f\12\333\242\0\1\u013e\12\333\1\u040d\17\333"+
+    "\1\u013f\12\333\242\0\1\u013e\4\333\1\u02c5\25\333\1\u013f"+
+    "\12\333\242\0\1\u013e\10\333\1\u040e\21\333\1\u013f\12\333"+
+    "\242\0\1\u013e\12\333\1\u0233\17\333\1\u013f\12\333\242\0"+
+    "\1\u013e\7\333\1\u040f\22\333\1\u013f\12\333\242\0\1\u013e"+
+    "\3\333\1\u02cb\26\333\1\u013f\12\333\242\0\1\u013e\5\333"+
+    "\1\u0410\24\333\1\u013f\12\333\242\0\1\u013e\11\333\1\u0411"+
+    "\20\333\1\u013f\12\333\242\0\1\u013e\7\333\1\u0412\22\333"+
+    "\1\u013f\1\u0413\11\333\242\0\1\u013e\10\333\1\u0414\4\333"+
+    "\1\u0415\5\333\1\u0416\6\333\1\u013f\12\333\242\0\1\u013e"+
+    "\3\333\1\u0417\26\333\1\u013f\12\333\242\0\1\u013e\7\333"+
+    "\1\u0418\22\333\1\u013f\10\333\1\u0419\1\333\242\0\1\u013e"+
+    "\7\333\1\u041a\22\333\1\u013f\12\333\242\0\1\u013e\7\333"+
+    "\1\u041b\22\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f"+
+    "\5\333\1\u041c\4\333\242\0\1\u013e\7\333\1\u041d\22\333"+
+    "\1\u013f\10\333\1\u041e\1\333\242\0\1\u013e\32\333\1\u013f"+
+    "\5\333\1\u041f\4\333\242\0\1\u013e\13\333\1\u0420\16\333"+
+    "\1\u013f\12\333\242\0\1\u013e\7\333\1\u0421\22\333\1\u013f"+
+    "\12\333\242\0\1\u013e\26\333\1\u0422\3\333\1\u013f\12\333"+
+    "\242\0\1\u013e\32\333\1\u013f\7\333\1\u041f\2\333\242\0"+
+    "\1\u013e\15\333\1\u0423\14\333\1\u013f\12\333\242\0\1\u013e"+
+    "\32\333\1\u013f\10\333\1\u0424\1\u0425\242\0\1\u013e\6\333"+
+    "\1\u0426\1\u0427\22\333\1\u013f\12\333\242\0\1\u013e\3\333"+
+    "\1\u0428\26\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f"+
+    "\4\333\1\u041f\5\333\242\0\1\u013e\32\333\1\u013f\1\333"+
+    "\1\u0429\10\333\242\0\1\u013e\32\333\1\u013f\1\333\1\u042a"+
+    "\10\333\242\0\1\u013e\13\333\1\u042b\16\333\1\u013f\12\333"+
+    "\242\0\1\u013e\3\333\1\u042c\26\333\1\u013f\12\333\242\0"+
+    "\1\u013e\4\333\1\u03a0\25\333\1\u013f\12\333\276\0\12\u042d"+
+    "\7\0\1\u0230\1\u0231\1\u0232\13\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\1\43\1\u042e\30\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\17\43\1\u042f\12\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\10\43\1\u0430"+
+    "\21\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\13\43"+
+    "\1\u01ec\16\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\1\u0431\31\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\2\0\1\55\1\0\1\56\2\0\1\57\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\65\2\0\1\66\4\0\1\67\3\0\1\70"+
+    "\17\0\1\71\2\0\1\72\21\0\1\73\2\0\1\74"+
+    "\61\0\2\30\1\75\1\0\1\76\1\0\1\76\1\77"+
+    "\1\0\1\30\2\0\1\202\1\0\1\41\1\30\1\203"+
+    "\5\43\1\u0432\24\43\1\204\12\205\1\76\1\155\1\206"+
+    "\1\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\25\u0101\1\u0433\4\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\15\u0101\1\u0434\14\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\21\u0101\1\u0435\10\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\16\u0101\1\u0436"+
+    "\4\u0101\1\u0437\6\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\4\u0101\1\u0438\25\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204"+
+    "\7\u0101\1\u0439\2\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\4\u0101\1\u043a\25\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\24\u0101\1\u043b\5\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0101"+
+    "\1\u043c\30\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u043d\1\u043e\1\u0101\1\u043f\16\u0101\1\u0440"+
+    "\1\u0101\1\u0441\5\u0101\1\204\5\u0101\1\u0442\4\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u0443\30\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\31\u0101\1\u0444\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\16\u0101\1\u0445\13\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\15\u0101\1\u0446\14\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\11\u0101\1\u0447\13\u0101\1\u0448\4\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\7\u0101"+
+    "\1\u0449\2\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\21\u0101\1\u044a\7\u0101\1\u044b\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\12\u0101\1\u044c\17\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\10\u0101\1\u044d\1\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\5\u0101\1\u044e\24\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\10\u0101\1\u044f\21\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\24\u0101\1\u0450\5\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\1\u0451\11\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\5\u0101\1\u0452\10\u0101"+
+    "\1\u0453\13\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\220\0\32\u0365"+
+    "\1\0\12\u0365\243\0\32\u0365\1\u03da\12\u0365\243\0\4\u0454"+
+    "\2\0\1\u0454\15\0\1\u0454\6\0\12\u0454\243\0\4\u0455"+
+    "\2\0\1\u0455\15\0\1\u0455\6\0\12\u0455\1\u0456\307\0"+
+    "\1\u0457\235\0\1\u02fd\3\0\34\u02fd\12\u0458\1\0\2\u02fd"+
+    "\1\u036c\2\u02fd\1\u02ff\1\0\1\u036b\3\0\2\u02fd\3\0"+
+    "\1\u02fd\221\0\4\u0459\2\0\1\u0459\15\0\1\u0459\6\0"+
+    "\12\u0459\262\0\1\u045a\270\0\4\u02fd\2\0\1\u02fd\15\0"+
+    "\1\u02fd\6\0\12\u02fd\243\0\32\u036e\1\0\12\u036e\243\0"+
+    "\32\u036e\1\u03e3\12\u036e\276\0\12\u045b\243\0\4\u045c\2\0"+
+    "\1\u045c\15\0\1\u045c\6\0\12\u045c\1\u03e6\242\0\4\u045d"+
+    "\2\0\1\u045d\15\0\1\u045d\6\0\12\u045d\1\u045e\242\0"+
+    "\4\u045f\2\0\1\u045f\15\0\1\u045f\6\0\1\u0460\1\u0461"+
+    "\5\u0460\1\u0462\1\u0461\1\u0460\13\0\1\u0463\11\0\1\55"+
+    "\1\0\1\56\2\0\1\246\1\0\1\247\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\250"+
+    "\2\0\1\251\4\0\1\252\3\0\1\253\17\0\1\71"+
+    "\2\0\1\254\21\0\1\255\2\0\1\256\61\0\1\30"+
+    "\1\76\2\0\1\76\1\0\2\76\1\0\1\76\2\0"+
+    "\1\u0371\1\u0372\2\30\1\u03e8\32\u0373\13\u0374\1\76\1\u0374"+
+    "\1\u0371\1\u0374\1\0\1\u0374\1\u03e9\3\u0374\3\0\1\u0374"+
+    "\3\0\2\u0374\220\0\32\u0464\1\0\12\u0464\12\0\1\u0465"+
+    "\227\0\1\u0466\53\0\1\u03e9\227\0\2\u0372\2\0\72\u0372"+
+    "\1\0\1\55\1\0\1\56\2\0\1\235\1\0\1\60"+
+    "\4\0\1\61\1\0\1\62\1\0\1\63\2\0\1\64"+
+    "\3\0\1\236\2\0\1\237\4\0\1\67\3\0\1\240"+
+    "\17\0\1\71\2\0\1\241\21\0\1\242\2\0\1\243"+
+    "\61\0\1\30\2\75\2\0\2\244\1\245\1\0\1\75"+
+    "\2\0\1\u0467\1\0\1\41\1\30\1\u0468\32\u0373\1\u0374"+
+    "\12\u03ec\1\0\1\u0374\1\u0469\1\u0374\1\0\1\u0467\1\u03e9"+
+    "\3\u0374\2\0\1\244\1\u0374\3\0\2\u0374\2\0\1\55"+
+    "\1\0\1\56\2\0\1\257\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\260"+
+    "\2\0\1\261\4\0\1\67\3\0\1\262\17\0\1\71"+
+    "\2\0\1\263\21\0\1\264\2\0\1\265\41\0\1\134"+
+    "\17\0\1\30\1\77\1\75\1\136\1\76\1\0\1\76"+
+    "\1\77\1\0\1\77\2\0\1\u0371\1\0\1\41\1\30"+
+    "\1\u03e8\32\u0373\1\u0374\12\u03ec\1\76\1\u0374\1\u03ed\1\u0374"+
+    "\1\0\1\u0374\1\u03e9\3\u0374\3\0\1\u0374\3\0\2\u0374"+
+    "\213\0\1\u0374\1\u0372\2\0\1\u03ee\45\u0374\1\0\3\u0374"+
+    "\1\0\1\u0374\1\u03e9\3\u0374\3\0\1\u0374\3\0\2\u0374"+
+    "\213\0\1\u0375\3\0\1\u0375\32\u0376\1\u0375\12\u0376\1\u0377"+
+    "\2\u0375\1\u0378\2\u0375\1\u0379\5\0\2\u0375\3\0\1\u0375"+
+    "\214\0\1\u0375\3\0\1\u0375\32\u0376\1\u03f0\12\u0376\1\u0377"+
+    "\2\u0375\1\u0378\2\u0375\1\u0379\5\0\2\u0375\3\0\1\u0375"+
+    "\214\0\1\u0377\3\0\34\u0377\12\u046a\1\0\2\u0377\1\u03f2"+
+    "\2\u0377\1\u0379\5\0\2\u0377\3\0\1\u0377\221\0\4\u046b"+
+    "\2\0\1\u046b\15\0\1\u046b\6\0\12\u046b\243\0\4\u0375"+
+    "\2\0\1\u0375\15\0\1\u0375\6\0\12\u0375\242\0\1\u046c"+
+    "\32\u03f4\1\u046d\12\u03f4\1\u0201\6\0\1\u0230\1\u0231\1\u0232"+
+    "\224\0\1\155\3\0\1\u0177\1\u0101\1\u046e\30\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\17\u0101"+
+    "\1\u046f\12\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\10\u0101\1\u0470\21\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\13\u0101\1\u0212\16\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\1\u0471\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\5\u0101\1\u0472\24\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\265\0\1\u0318\242\0\4\u0473\2\0\1\u0473\15\0"+
+    "\1\u0473\6\0\12\u0473\1\u03fd\242\0\4\u0474\2\0\1\u0474"+
+    "\15\0\1\u0474\6\0\12\u0474\1\u0475\242\0\4\u0476\2\0"+
+    "\1\u0476\15\0\1\u0476\6\0\12\u0476\1\u0477\12\0\1\u01b5"+
+    "\226\0\1\u022c\4\u0476\2\0\1\u0476\15\0\1\u0476\6\0"+
+    "\12\u0478\1\u0477\12\0\1\u01b5\226\0\1\u022c\4\u0476\2\0"+
+    "\1\u0476\15\0\1\u0476\6\0\12\u0479\1\u0477\12\0\1\u01b5"+
+    "\226\0\1\u022c\4\u0476\2\0\1\u0476\15\0\1\u0476\6\0"+
+    "\2\u0479\1\u0478\1\u0479\1\u047a\2\u0478\2\u0479\1\u0478\1\u0477"+
+    "\12\0\1\u01b5\227\0\4\u047b\2\0\1\u047b\15\0\1\u047b"+
+    "\6\0\12\u047b\1\u038d\12\0\1\u01b5\226\0\1\u022c\4\u047b"+
+    "\2\0\1\u047b\15\0\1\u047b\6\0\12\u047b\1\u038d\12\0"+
+    "\1\u01b5\262\0\1\u047c\1\u047d\5\u047c\1\u047e\1\u047d\1\u047c"+
+    "\242\0\1\u0404\307\0\1\u0404\33\0\2\u0405\1\0\2\u0405"+
+    "\2\0\2\u0405\243\0\1\u013e\20\333\1\u047f\11\333\1\u013f"+
+    "\12\333\242\0\1\u013e\1\333\1\u0480\30\333\1\u013f\12\333"+
+    "\242\0\1\u013e\13\333\1\u023f\16\333\1\u013f\12\333\242\0"+
+    "\1\u013e\2\333\1\u02cb\27\333\1\u013f\12\333\242\0\1\u013e"+
+    "\5\333\1\u039c\24\333\1\u013f\12\333\242\0\1\u013e\4\333"+
+    "\1\u0481\25\333\1\u013f\12\333\242\0\1\u013e\3\333\1\u0482"+
+    "\26\333\1\u013f\12\333\242\0\1\u013e\1\333\1\u02cb\30\333"+
+    "\1\u013f\12\333\242\0\1\u013e\4\333\1\u0483\25\333\1\u013f"+
+    "\12\333\242\0\1\u013e\11\333\1\u0484\20\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\333\1\u0485\30\333\1\u013f\12\333\242\0"+
+    "\1\u013e\24\333\1\u0486\5\333\1\u013f\12\333\242\0\1\u013e"+
+    "\1\333\1\u0487\30\333\1\u013f\12\333\242\0\1\u013e\14\333"+
+    "\1\u0488\15\333\1\u013f\12\333\242\0\1\u013e\1\333\1\u0489"+
+    "\30\333\1\u013f\12\333\242\0\1\u013e\1\333\1\u048a\30\333"+
+    "\1\u013f\12\333\242\0\1\u013e\1\333\1\u048b\30\333\1\u013f"+
+    "\12\333\242\0\1\u013e\24\333\1\u048c\5\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\u048d\31\333\1\u013f\12\333\242\0\1\u013e"+
+    "\24\333\1\u048e\5\333\1\u013f\12\333\242\0\1\u013e\24\333"+
+    "\1\u048f\5\333\1\u013f\12\333\242\0\1\u013e\27\333\1\u0490"+
+    "\2\333\1\u013f\12\333\242\0\1\u013e\24\333\1\u0491\5\333"+
+    "\1\u013f\12\333\242\0\1\u013e\1\u02bf\31\333\1\u013f\12\333"+
+    "\242\0\1\u013e\24\333\1\u048b\5\333\1\u013f\12\333\242\0"+
+    "\1\u013e\20\333\1\u0492\11\333\1\u013f\12\333\242\0\1\u013e"+
+    "\24\333\1\u0493\5\333\1\u013f\12\333\242\0\1\u013e\1\333"+
+    "\1\u0494\30\333\1\u013f\12\333\242\0\1\u013e\4\333\1\u0495"+
+    "\25\333\1\u013f\12\333\242\0\1\u013e\1\u0496\31\333\1\u013f"+
+    "\12\333\242\0\1\u013e\21\333\1\u0497\10\333\1\u013f\12\333"+
+    "\242\0\1\u013e\4\333\1\u0498\25\333\1\u013f\12\333\242\0"+
+    "\1\u013e\24\333\1\u0499\5\333\1\u013f\12\333\242\0\1\u013e"+
+    "\32\333\1\u013f\1\333\1\u049a\10\333\242\0\1\u013e\1\u049b"+
+    "\31\333\1\u013f\12\333\242\0\1\u013e\1\u049c\31\333\1\u013f"+
+    "\12\333\242\0\1\u013e\7\333\1\u02cb\22\333\1\u013f\12\333"+
+    "\242\0\1\u013e\13\333\1\u0233\16\333\1\u013f\12\333\317\0"+
+    "\1\u0230\1\u0231\1\u0232\13\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\17\43\1\u049d\12\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\5\43\1\u049e\24\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\16\43\1\u02e0\13\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\2\0\1\55"+
+    "\1\0\1\56\2\0\1\57\1\0\1\60\4\0\1\61"+
+    "\1\0\1\62\1\0\1\63\2\0\1\64\3\0\1\65"+
+    "\2\0\1\66\4\0\1\67\3\0\1\70\17\0\1\71"+
+    "\2\0\1\72\21\0\1\73\2\0\1\74\61\0\2\30"+
+    "\1\75\1\0\1\76\1\0\1\76\1\77\1\0\1\30"+
+    "\2\0\1\202\1\0\1\41\1\30\1\203\15\43\1\u049f"+
+    "\14\43\1\204\12\205\1\76\1\155\1\206\1\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\2\0"+
+    "\1\55\1\0\1\56\2\0\1\57\1\0\1\60\4\0"+
+    "\1\61\1\0\1\62\1\0\1\63\2\0\1\64\3\0"+
+    "\1\65\2\0\1\66\4\0\1\67\3\0\1\70\17\0"+
+    "\1\71\2\0\1\72\21\0\1\73\2\0\1\74\61\0"+
+    "\2\30\1\75\1\0\1\76\1\0\1\76\1\77\1\0"+
+    "\1\30\2\0\1\202\1\0\1\41\1\30\1\203\7\43"+
+    "\1\u01ef\22\43\1\204\12\205\1\76\1\155\1\206\1\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\1\u0101\1\u04a0\30\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\6\u0101"+
+    "\1\u04a1\23\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\3\u0101\1\u044c\6\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\6\u0101"+
+    "\1\u021b\3\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\5\u0101\1\u021b\4\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\27\u0101\1\u04a2\2\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u04a3"+
+    "\30\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\27\u0101\1\u04a4\2\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\1\u04a5\31\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u017c"+
+    "\30\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u04a6\30\u0101\1\u04a7\1\204\1\u04a8\11\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\1\u0101"+
+    "\1\u04a9\10\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\4\u0101\1\u04aa\25\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\3\u0101\1\u04ab\6\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\25\u0101\1\u04ac"+
+    "\4\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u04ad\31\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\4\u0101\1\u04ae\5\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\24\u0101\1\u04af"+
+    "\5\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\1\u0101\1\u04b0\10\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\32\u0101\1\204\3\u0101\1\u0215"+
+    "\6\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\11\u0101\1\u0117\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\10\u0101\1\u043c\1\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\1\u04b1\1\u0101\1\u04b2\27\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\10\u0101\1\u04b3\1\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\4\u0101\1\u04b4\5\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\25\u0101\1\u017c"+
+    "\4\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\5\u0101\1\u04b5\4\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\32\u0101\1\204\3\u0101\1\u04b6"+
+    "\6\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\7\u0101\1\u04b7\2\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\2\u0101\1\u04b8\7\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\1\u043c\31\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\7\u0101\1\u04b9\2\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\3\u0101\1\u04ba\15\u0101\1\u0188\10\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\220\0\4\u0366\2\0\1\u0366\15\0"+
+    "\1\u0366\6\0\12\u0366\243\0\4\u04bb\2\0\1\u04bb\15\0"+
+    "\1\u04bb\6\0\12\u04bb\1\u0456\242\0\4\u04bc\2\0\1\u04bc"+
+    "\15\0\1\u04bc\6\0\12\u04bc\1\u04bd\242\0\4\u04be\2\0"+
+    "\1\u04be\15\0\1\u04be\6\0\1\u04bf\1\u04c0\5\u04bf\1\u04c1"+
+    "\1\u04c0\1\u04bf\13\0\1\u04c2\222\0\1\u02fd\3\0\34\u02fd"+
+    "\12\u04c3\1\0\2\u02fd\1\u036c\2\u02fd\1\u02ff\1\0\1\u036b"+
+    "\3\0\2\u02fd\3\0\1\u02fd\221\0\4\u036b\2\0\1\u036b"+
+    "\15\0\1\u036b\6\0\12\u036b\274\0\1\u04c4\311\0\12\u04c5"+
+    "\10\0\1\u036b\232\0\4\u04c6\2\0\1\u04c6\15\0\1\u04c6"+
+    "\6\0\12\u04c6\1\u03e6\242\0\4\u04c7\2\0\1\u04c7\15\0"+
+    "\1\u04c7\6\0\12\u04c7\1\u04c8\242\0\4\u04c9\2\0\1\u04c9"+
+    "\15\0\1\u04c9\6\0\1\u04ca\1\u04cb\5\u04ca\1\u04cc\1\u04cb"+
+    "\1\u04ca\13\0\1\u0463\227\0\4\u04cd\2\0\1\u04cd\15\0"+
+    "\1\u04cd\6\0\12\u04cd\1\u04ce\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u04cd\2\0\1\u04cd\15\0\1\u04cd\6\0\12\u04d0\1\u04ce"+
+    "\12\0\1\u0463\226\0\1\u04cf\4\u04cd\2\0\1\u04cd\15\0"+
+    "\1\u04cd\6\0\12\u04d1\1\u04ce\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u04cd\2\0\1\u04cd\15\0\1\u04cd\6\0\2\u04d1\1\u04d0"+
+    "\1\u04d1\1\u04d2\2\u04d0\2\u04d1\1\u04d0\1\u04ce\12\0\1\u0463"+
+    "\274\0\1\u03e4\7\0\1\u036b\231\0\1\u04d3\32\u0464\1\u04d4"+
+    "\12\u0464\236\0\2\u0465\2\0\60\u0465\1\0\1\u04d5\3\u0465"+
+    "\1\u04d6\1\0\3\u0465\212\0\1\u0374\1\u0372\2\0\46\u0374"+
+    "\1\0\3\u0374\1\0\1\u0374\1\0\3\u0374\3\0\1\u0374"+
+    "\3\0\2\u0374\7\0\1\u012e\1\0\1\u012f\17\0\1\u0130"+
+    "\2\0\1\u0131\4\0\1\u0132\3\0\1\u0133\22\0\1\u0134"+
+    "\21\0\1\u0135\2\0\1\u0136\62\0\1\244\1\75\2\0"+
+    "\3\244\1\0\1\244\2\0\1\u0467\3\0\1\u0468\33\u0374"+
+    "\12\u03ec\1\0\1\u0374\1\u0467\1\u0374\1\0\1\u0467\1\u03e9"+
+    "\3\u0374\2\0\1\244\1\u0374\3\0\2\u0374\7\0\1\u012e"+
+    "\1\0\1\u012f\17\0\1\u0130\2\0\1\u0131\4\0\1\u0132"+
+    "\3\0\1\u0133\22\0\1\u0134\21\0\1\u0135\2\0\1\u0136"+
+    "\62\0\1\244\1\75\2\0\3\244\1\0\1\244\2\0"+
+    "\1\u0467\1\u0372\2\0\1\u0468\33\u0374\12\u03ec\1\0\1\u0374"+
+    "\1\u0467\1\u0374\1\0\1\u0467\1\u03e9\3\u0374\2\0\1\244"+
+    "\1\u0374\3\0\2\u0374\2\0\1\55\1\0\1\56\2\0"+
+    "\1\u0137\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\u0138\2\0\1\u0139\4\0"+
+    "\1\67\3\0\1\u013a\17\0\1\71\2\0\1\u013b\21\0"+
+    "\1\u013c\2\0\1\u013d\41\0\1\134\17\0\1\30\1\245"+
+    "\1\75\1\136\1\0\2\244\1\245\1\0\1\245\2\0"+
+    "\1\u0467\1\0\1\41\1\30\1\u0468\32\u0373\1\u0374\12\u03ec"+
+    "\1\0\1\u0374\1\u0469\1\u0374\1\0\1\u0467\1\u03e9\3\u0374"+
+    "\2\0\1\244\1\u0374\3\0\2\u0374\213\0\1\u0377\3\0"+
+    "\34\u0377\12\u04d7\1\0\2\u0377\1\u03f2\2\u0377\1\u0379\1\u0230"+
+    "\1\u0231\1\u0232\2\0\2\u0377\3\0\1\u0377\221\0\4\u0377"+
+    "\2\0\1\u0377\15\0\1\u0377\6\0\12\u0377\243\0\32\u03f4"+
+    "\1\0\12\u03f4\243\0\32\u03f4\1\u046d\12\u03f4\236\0\1\155"+
+    "\3\0\1\u0177\17\u0101\1\u04d8\12\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\5\u0101\1\u04d9\24\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\16\u0101\1\u030e\13\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\15\u0101\1\u04da\14\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\7\u0101\1\u0215"+
+    "\22\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\220\0\4\u04db\2\0"+
+    "\1\u04db\15\0\1\u04db\6\0\12\u04db\1\u03fd\242\0\4\u04dc"+
+    "\2\0\1\u04dc\15\0\1\u04dc\6\0\12\u04dc\1\u04dd\242\0"+
+    "\4\u04de\2\0\1\u04de\15\0\1\u04de\6\0\1\u04df\1\u04e0"+
+    "\5\u04df\1\u04e1\1\u04e0\1\u04df\13\0\1\u01b5\227\0\4\u04e2"+
+    "\2\0\1\u04e2\15\0\1\u04e2\6\0\12\u04e2\1\u0477\12\0"+
+    "\1\u01b5\227\0\4\u04de\2\0\1\u04de\15\0\1\u04de\6\0"+
+    "\1\u04df\1\u04e0\5\u04df\1\u04e1\1\u04e0\1\u04df\242\0\1\u022c"+
+    "\4\u04e2\2\0\1\u04e2\15\0\1\u04e2\6\0\12\u04e2\1\u0477"+
+    "\12\0\1\u01b5\226\0\1\u022c\4\u04e2\2\0\1\u04e2\15\0"+
+    "\1\u04e2\6\0\12\u04e3\1\u0477\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u04e2\2\0\1\u04e2\15\0\1\u04e2\6\0\2\u04e3\1\u04e2"+
+    "\2\u04e3\2\u04e2\2\u04e3\1\u04e2\1\u0477\12\0\1\u01b5\274\0"+
+    "\1\u038d\12\0\1\u01b5\262\0\12\u04e4\13\0\1\u01b5\262\0"+
+    "\12\u047c\13\0\1\u01b5\262\0\2\u047c\1\u04e4\1\u047c\1\u04e5"+
+    "\2\u04e4\2\u047c\1\u04e4\13\0\1\u01b5\226\0\1\u013e\1\333"+
+    "\1\u04e6\30\333\1\u013f\12\333\242\0\1\u013e\17\333\1\u04e7"+
+    "\12\333\1\u013f\12\333\242\0\1\u013e\10\333\1\u04e8\21\333"+
+    "\1\u013f\12\333\242\0\1\u013e\13\333\1\u02c2\16\333\1\u013f"+
+    "\12\333\242\0\1\u013e\1\u04e9\31\333\1\u013f\12\333\242\0"+
+    "\1\u013e\5\333\1\u04ea\24\333\1\u013f\12\333\242\0\1\u013e"+
+    "\25\333\1\u04eb\4\333\1\u013f\12\333\242\0\1\u013e\15\333"+
+    "\1\u04ec\14\333\1\u013f\12\333\242\0\1\u013e\21\333\1\u04ed"+
+    "\10\333\1\u013f\12\333\242\0\1\u013e\16\333\1\u04ee\4\333"+
+    "\1\u04ef\6\333\1\u013f\12\333\242\0\1\u013e\4\333\1\u04f0"+
+    "\25\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\7\333"+
+    "\1\u04f1\2\333\242\0\1\u013e\4\333\1\u04f2\25\333\1\u013f"+
+    "\12\333\242\0\1\u013e\24\333\1\u04f3\5\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\333\1\u04f4\30\333\1\u013f\12\333\242\0"+
+    "\1\u013e\1\u04f5\1\u04f6\1\333\1\u04f7\16\333\1\u04f8\1\333"+
+    "\1\u04f9\5\333\1\u013f\5\333\1\u04fa\4\333\242\0\1\u013e"+
+    "\1\333\1\u04fb\30\333\1\u013f\12\333\242\0\1\u013e\31\333"+
+    "\1\u04fc\1\u013f\12\333\242\0\1\u013e\16\333\1\u04fd\13\333"+
+    "\1\u013f\12\333\242\0\1\u013e\15\333\1\u04fe\14\333\1\u013f"+
+    "\12\333\242\0\1\u013e\11\333\1\u04ff\13\333\1\u0500\4\333"+
+    "\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\7\333\1\u0501"+
+    "\2\333\242\0\1\u013e\21\333\1\u0502\7\333\1\u0503\1\u013f"+
+    "\12\333\242\0\1\u013e\12\333\1\u0504\17\333\1\u013f\12\333"+
+    "\242\0\1\u013e\32\333\1\u013f\10\333\1\u0505\1\333\242\0"+
+    "\1\u013e\5\333\1\u0506\24\333\1\u013f\12\333\242\0\1\u013e"+
+    "\10\333\1\u0507\21\333\1\u013f\12\333\242\0\1\u013e\24\333"+
+    "\1\u0508\5\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f"+
+    "\1\u0509\11\333\242\0\1\u013e\5\333\1\u050a\10\333\1\u050b"+
+    "\13\333\1\u013f\12\333\25\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\10\43\1\u050c\21\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\2\0\1\55\1\0\1\56"+
+    "\2\0\1\57\1\0\1\60\4\0\1\61\1\0\1\62"+
+    "\1\0\1\63\2\0\1\64\3\0\1\65\2\0\1\66"+
+    "\4\0\1\67\3\0\1\70\17\0\1\71\2\0\1\72"+
+    "\21\0\1\73\2\0\1\74\61\0\2\30\1\75\1\0"+
+    "\1\76\1\0\1\76\1\77\1\0\1\30\2\0\1\202"+
+    "\1\0\1\41\1\30\1\203\4\43\1\u01f5\25\43\1\204"+
+    "\12\205\1\76\1\155\1\206\1\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\2\0\1\55\1\0"+
+    "\1\56\2\0\1\57\1\0\1\60\4\0\1\61\1\0"+
+    "\1\62\1\0\1\63\2\0\1\64\3\0\1\65\2\0"+
+    "\1\66\4\0\1\67\3\0\1\70\17\0\1\71\2\0"+
+    "\1\72\21\0\1\73\2\0\1\74\61\0\2\30\1\75"+
+    "\1\0\1\76\1\0\1\76\1\77\1\0\1\30\2\0"+
+    "\1\202\1\0\1\41\1\30\1\203\25\43\1\u01ef\4\43"+
+    "\1\204\12\205\1\76\1\155\1\206\1\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\1\u0101\1\u050d\10\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\6\u0101"+
+    "\1\u050e\3\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\5\u0101\1\u050f\4\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\5\u0101\1\u0510\4\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204"+
+    "\5\u0101\1\u043c\4\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\17\u0101\1\u0511\12\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\12\u0101\1\u0512\17\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\25\u0101"+
+    "\1\u0513\4\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u0514\31\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\1\u0515\31\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\15\u0101\1\u0516"+
+    "\14\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u0101\1\u0517\30\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\32\u0101\1\204\10\u0101\1\u0518"+
+    "\1\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\21\u0101"+
+    "\1\u0519\10\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u051a\31\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\32\u0101\1\204\3\u0101\1\u043c"+
+    "\6\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\2\u0101"+
+    "\1\u044c\27\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\11\u0101\1\u051b\20\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\11\u0101\1\u051c\20\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\1\u020d\11\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\2\u0101\1\u020d\7\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\1\u0188"+
+    "\11\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\10\u0101"+
+    "\1\u051d\21\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\1\u051e\31\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\32\u0101\1\204\1\u0101\1\u051f"+
+    "\10\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\10\u0101\1\u0117\1\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\25\u0101\1\u0520\4\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\220\0\4\u0521\2\0\1\u0521\15\0\1\u0521\6\0"+
+    "\12\u0521\1\u0456\242\0\4\u0522\2\0\1\u0522\15\0\1\u0522"+
+    "\6\0\12\u0522\1\u0523\242\0\4\u0524\2\0\1\u0524\15\0"+
+    "\1\u0524\6\0\1\u0525\1\u0526\5\u0525\1\u0527\1\u0526\1\u0525"+
+    "\13\0\1\u04c2\227\0\4\u0528\2\0\1\u0528\15\0\1\u0528"+
+    "\6\0\12\u0528\1\u0529\12\0\1\u04c2\226\0\1\u052a\4\u0528"+
+    "\2\0\1\u0528\15\0\1\u0528\6\0\12\u052b\1\u0529\12\0"+
+    "\1\u04c2\226\0\1\u052a\4\u0528\2\0\1\u0528\15\0\1\u0528"+
+    "\6\0\12\u052c\1\u0529\12\0\1\u04c2\226\0\1\u052a\4\u0528"+
+    "\2\0\1\u0528\15\0\1\u0528\6\0\2\u052c\1\u052b\1\u052c"+
+    "\1\u052d\2\u052b\2\u052c\1\u052b\1\u0529\12\0\1\u04c2\304\0"+
+    "\1\u0366\225\0\1\u02fd\3\0\34\u02fd\12\u052e\1\0\2\u02fd"+
+    "\1\u036c\2\u02fd\1\u02ff\1\0\1\u036b\3\0\2\u02fd\3\0"+
+    "\1\u02fd\236\0\1\u052f\325\0\12\u0530\10\0\1\u036b\277\0"+
+    "\1\u03e6\242\0\4\u0531\2\0\1\u0531\15\0\1\u0531\6\0"+
+    "\12\u0531\1\u04c8\242\0\4\u0532\2\0\1\u0532\15\0\1\u0532"+
+    "\6\0\12\u0532\1\u0533\242\0\4\u0534\2\0\1\u0534\15\0"+
+    "\1\u0534\6\0\12\u0534\1\u0535\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u0534\2\0\1\u0534\15\0\1\u0534\6\0\12\u0536\1\u0535"+
+    "\12\0\1\u0463\226\0\1\u04cf\4\u0534\2\0\1\u0534\15\0"+
+    "\1\u0534\6\0\12\u0537\1\u0535\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u0534\2\0\1\u0534\15\0\1\u0534\6\0\2\u0537\1\u0536"+
+    "\1\u0537\1\u0538\2\u0536\2\u0537\1\u0536\1\u0535\12\0\1\u0463"+
+    "\227\0\4\u0539\2\0\1\u0539\15\0\1\u0539\6\0\12\u0539"+
+    "\1\u04ce\12\0\1\u0463\227\0\4\u04c9\2\0\1\u04c9\15\0"+
+    "\1\u04c9\6\0\1\u04ca\1\u04cb\5\u04ca\1\u04cc\1\u04cb\1\u04ca"+
+    "\276\0\1\u053a\1\u053b\5\u053a\1\u053c\1\u053b\1\u053a\242\0"+
+    "\1\u04cf\4\u0539\2\0\1\u0539\15\0\1\u0539\6\0\12\u0539"+
+    "\1\u04ce\12\0\1\u0463\226\0\1\u04cf\4\u0539\2\0\1\u0539"+
+    "\15\0\1\u0539\6\0\12\u053d\1\u04ce\12\0\1\u0463\226\0"+
+    "\1\u04cf\4\u0539\2\0\1\u0539\15\0\1\u0539\6\0\2\u053d"+
+    "\1\u0539\2\u053d\2\u0539\2\u053d\1\u0539\1\u04ce\12\0\1\u0463"+
+    "\227\0\1\u053e\1\u053f\1\u0540\1\u0541\1\u0542\1\u0543\1\u0544"+
+    "\1\u0545\1\u0546\1\u0547\1\u0548\1\u0549\1\u054a\1\u054b\1\u054c"+
+    "\1\u054d\1\u054e\1\u054f\1\u0550\1\u0551\1\u0552\1\u0553\1\u0554"+
+    "\1\u0555\1\u0556\1\u0557\1\0\12\u0464\243\0\32\u0464\1\u04d4"+
+    "\12\u0464\236\0\2\u0465\2\0\72\u0465\212\0\1\u0377\3\0"+
+    "\34\u0377\12\u0558\1\0\2\u0377\1\u03f2\2\u0377\1\u0379\1\u0230"+
+    "\1\u0231\1\u0232\2\0\2\u0377\3\0\1\u0377\214\0\1\155"+
+    "\3\0\1\u0177\10\u0101\1\u0559\21\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\4\u0101\1\u021b\25\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\25\u0101\1\u0215\4\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\265\0"+
+    "\1\u03fd\242\0\4\u055a\2\0\1\u055a\15\0\1\u055a\6\0"+
+    "\12\u055a\1\u04dd\242\0\4\u055b\2\0\1\u055b\15\0\1\u055b"+
+    "\6\0\12\u055b\1\u055c\242\0\4\u055d\2\0\1\u055d\15\0"+
+    "\1\u055d\6\0\12\u055d\1\u055e\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u055d\2\0\1\u055d\15\0\1\u055d\6\0\12\u055f\1\u055e"+
+    "\12\0\1\u01b5\226\0\1\u022c\4\u055d\2\0\1\u055d\15\0"+
+    "\1\u055d\6\0\12\u0560\1\u055e\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u055d\2\0\1\u055d\15\0\1\u055d\6\0\2\u0560\1\u055f"+
+    "\1\u0560\1\u0561\2\u055f\2\u0560\1\u055f\1\u055e\12\0\1\u01b5"+
+    "\227\0\4\u0562\2\0\1\u0562\15\0\1\u0562\6\0\12\u0562"+
+    "\1\u0477\12\0\1\u01b5\226\0\1\u022c\4\u0562\2\0\1\u0562"+
+    "\15\0\1\u0562\6\0\12\u0562\1\u0477\12\0\1\u01b5\307\0"+
+    "\1\u01b5\262\0\2\u04e4\1\0\2\u04e4\2\0\2\u04e4\14\0"+
+    "\1\u01b5\226\0\1\u013e\17\333\1\u0563\12\333\1\u013f\12\333"+
+    "\242\0\1\u013e\5\333\1\u0564\24\333\1\u013f\12\333\242\0"+
+    "\1\u013e\16\333\1\u03a0\13\333\1\u013f\12\333\242\0\1\u013e"+
+    "\15\333\1\u0565\14\333\1\u013f\12\333\242\0\1\u013e\7\333"+
+    "\1\u02c5\22\333\1\u013f\12\333\242\0\1\u013e\1\333\1\u0566"+
+    "\30\333\1\u013f\12\333\242\0\1\u013e\6\333\1\u0567\23\333"+
+    "\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\3\333\1\u0504"+
+    "\6\333\242\0\1\u013e\32\333\1\u013f\6\333\1\u02cb\3\333"+
+    "\242\0\1\u013e\32\333\1\u013f\5\333\1\u02cb\4\333\242\0"+
+    "\1\u013e\27\333\1\u0568\2\333\1\u013f\12\333\242\0\1\u013e"+
+    "\1\333\1\u0569\30\333\1\u013f\12\333\242\0\1\u013e\27\333"+
+    "\1\u056a\2\333\1\u013f\12\333\242\0\1\u013e\1\u056b\31\333"+
+    "\1\u013f\12\333\242\0\1\u013e\1\333\1\u0233\30\333\1\u013f"+
+    "\12\333\242\0\1\u013e\1\u056c\30\333\1\u056d\1\u013f\1\u056e"+
+    "\11\333\242\0\1\u013e\32\333\1\u013f\1\333\1\u056f\10\333"+
+    "\242\0\1\u013e\4\333\1\u0570\25\333\1\u013f\12\333\242\0"+
+    "\1\u013e\32\333\1\u013f\3\333\1\u0571\6\333\242\0\1\u013e"+
+    "\25\333\1\u0572\4\333\1\u013f\12\333\242\0\1\u013e\1\u0573"+
+    "\31\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\4\333"+
+    "\1\u0574\5\333\242\0\1\u013e\24\333\1\u0575\5\333\1\u013f"+
+    "\12\333\242\0\1\u013e\32\333\1\u013f\1\333\1\u0576\10\333"+
+    "\242\0\1\u013e\32\333\1\u013f\3\333\1\u02c5\6\333\242\0"+
+    "\1\u013e\32\333\1\u013f\11\333\1\u01c9\242\0\1\u013e\32\333"+
+    "\1\u013f\10\333\1\u04f4\1\333\242\0\1\u013e\1\u0577\1\333"+
+    "\1\u0578\27\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f"+
+    "\10\333\1\u0579\1\333\242\0\1\u013e\32\333\1\u013f\4\333"+
+    "\1\u057a\5\333\242\0\1\u013e\25\333\1\u0233\4\333\1\u013f"+
+    "\12\333\242\0\1\u013e\32\333\1\u013f\5\333\1\u057b\4\333"+
+    "\242\0\1\u013e\32\333\1\u013f\3\333\1\u057c\6\333\242\0"+
+    "\1\u013e\32\333\1\u013f\7\333\1\u057d\2\333\242\0\1\u013e"+
+    "\32\333\1\u013f\2\333\1\u057e\7\333\242\0\1\u013e\1\u04f4"+
+    "\31\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\7\333"+
+    "\1\u057f\2\333\242\0\1\u013e\3\333\1\u0580\15\333\1\u023f"+
+    "\10\333\1\u013f\12\333\25\0\1\55\1\0\1\56\2\0"+
+    "\1\57\1\0\1\60\4\0\1\61\1\0\1\62\1\0"+
+    "\1\63\2\0\1\64\3\0\1\65\2\0\1\66\4\0"+
+    "\1\67\3\0\1\70\17\0\1\71\2\0\1\72\21\0"+
+    "\1\73\2\0\1\74\61\0\2\30\1\75\1\0\1\76"+
+    "\1\0\1\76\1\77\1\0\1\30\2\0\1\202\1\0"+
+    "\1\41\1\30\1\203\5\43\1\u0364\24\43\1\204\12\205"+
+    "\1\76\1\155\1\206\1\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\3\u0101\1\u0581\26\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\6\u0101\1\u0192\23\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0101\1\u04b3"+
+    "\30\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\3\u0101\1\u0582\26\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\32\u0101\1\204\10\u0101\1\u0583"+
+    "\1\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101"+
+    "\1\204\2\u0101\1\u0584\7\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\2\u0101\1\u0585\7\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\3\u0101"+
+    "\1\u0586\6\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\5\u0101\1\u0587\4\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\3\u0101\1\u0588\6\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\2\u0101\1\u0589"+
+    "\27\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u058a\31\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\24\u0101\1\u058b\5\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\23\u0101\1\u020d"+
+    "\6\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\1\u058c\11\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\32\u0101\1\204\1\u058d\11\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\11\u0101"+
+    "\1\u058e\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\12\u0101"+
+    "\1\u058f\17\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\2\u0101\1\u0211\7\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\2\u0101\1\u0590\27\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\265\0\1\u0456\242\0\4\u0591"+
+    "\2\0\1\u0591\15\0\1\u0591\6\0\12\u0591\1\u0523\242\0"+
+    "\4\u0592\2\0\1\u0592\15\0\1\u0592\6\0\12\u0592\1\u0593"+
+    "\242\0\4\u0594\2\0\1\u0594\15\0\1\u0594\6\0\12\u0594"+
+    "\1\u0595\12\0\1\u04c2\226\0\1\u052a\4\u0594\2\0\1\u0594"+
+    "\15\0\1\u0594\6\0\12\u0596\1\u0595\12\0\1\u04c2\226\0"+
+    "\1\u052a\4\u0594\2\0\1\u0594\15\0\1\u0594\6\0\12\u0597"+
+    "\1\u0595\12\0\1\u04c2\226\0\1\u052a\4\u0594\2\0\1\u0594"+
+    "\15\0\1\u0594\6\0\2\u0597\1\u0596\1\u0597\1\u0598\2\u0596"+
+    "\2\u0597\1\u0596\1\u0595\12\0\1\u04c2\227\0\4\u0599\2\0"+
+    "\1\u0599\15\0\1\u0599\6\0\12\u0599\1\u0529\12\0\1\u04c2"+
+    "\227\0\4\u0524\2\0\1\u0524\15\0\1\u0524\6\0\1\u0525"+
+    "\1\u0526\5\u0525\1\u0527\1\u0526\1\u0525\276\0\1\u059a\1\u059b"+
+    "\5\u059a\1\u059c\1\u059b\1\u059a\242\0\1\u052a\4\u0599\2\0"+
+    "\1\u0599\15\0\1\u0599\6\0\12\u0599\1\u0529\12\0\1\u04c2"+
+    "\226\0\1\u052a\4\u0599\2\0\1\u0599\15\0\1\u0599\6\0"+
+    "\12\u059d\1\u0529\12\0\1\u04c2\226\0\1\u052a\4\u0599\2\0"+
+    "\1\u0599\15\0\1\u0599\6\0\2\u059d\1\u0599\2\u059d\2\u0599"+
+    "\2\u059d\1\u0599\1\u0529\12\0\1\u04c2\222\0\1\u02fd\3\0"+
+    "\34\u02fd\12\u059e\1\0\2\u02fd\1\u036c\2\u02fd\1\u02ff\1\0"+
+    "\1\u036b\3\0\2\u02fd\3\0\1\u02fd\224\0\1\u059f\337\0"+
+    "\12\u05a0\10\0\1\u036b\232\0\4\u05a1\2\0\1\u05a1\15\0"+
+    "\1\u05a1\6\0\12\u05a1\1\u04c8\242\0\4\u05a2\2\0\1\u05a2"+
+    "\15\0\1\u05a2\6\0\12\u05a2\1\u05a3\242\0\4\u05a4\2\0"+
+    "\1\u05a4\15\0\1\u05a4\6\0\1\u05a5\1\u05a6\5\u05a5\1\u05a7"+
+    "\1\u05a6\1\u05a5\13\0\1\u0463\227\0\4\u05a8\2\0\1\u05a8"+
+    "\15\0\1\u05a8\6\0\12\u05a8\1\u0535\12\0\1\u0463\227\0"+
+    "\4\u05a4\2\0\1\u05a4\15\0\1\u05a4\6\0\1\u05a5\1\u05a6"+
+    "\5\u05a5\1\u05a7\1\u05a6\1\u05a5\242\0\1\u04cf\4\u05a8\2\0"+
+    "\1\u05a8\15\0\1\u05a8\6\0\12\u05a8\1\u0535\12\0\1\u0463"+
+    "\226\0\1\u04cf\4\u05a8\2\0\1\u05a8\15\0\1\u05a8\6\0"+
+    "\12\u05a9\1\u0535\12\0\1\u0463\226\0\1\u04cf\4\u05a8\2\0"+
+    "\1\u05a8\15\0\1\u05a8\6\0\2\u05a9\1\u05a8\2\u05a9\2\u05a8"+
+    "\2\u05a9\1\u05a8\1\u0535\12\0\1\u0463\227\0\4\u05aa\2\0"+
+    "\1\u05aa\15\0\1\u05aa\6\0\12\u05aa\1\u04ce\12\0\1\u0463"+
+    "\226\0\1\u05ab\33\0\12\u05ac\242\0\1\u05ab\33\0\12\u053a"+
+    "\242\0\1\u05ab\33\0\2\u053a\1\u05ac\1\u053a\1\u05ad\2\u05ac"+
+    "\2\u053a\1\u05ac\242\0\1\u04cf\4\u05aa\2\0\1\u05aa\15\0"+
+    "\1\u05aa\6\0\12\u05aa\1\u04ce\12\0\1\u0463\226\0\1\u04d3"+
+    "\1\u0464\2\u05ae\1\u05af\1\u05b0\10\u05ae\1\u0464\1\u05b1\5\u05ae"+
+    "\6\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u05b2\2\u05ae\1\u0464"+
+    "\1\u05ae\1\u05b3\3\u05ae\1\u05b4\2\u05ae\4\u0464\4\u05ae\1\u0464"+
+    "\2\u05ae\1\u0464\2\u05ae\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464"+
+    "\1\u05ae\1\u0464\1\u05ae\2\u0464\1\u05b5\1\u0464\1\u05ae\10\u0464"+
+    "\1\u05ae\2\u0464\2\u05ae\2\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\1\u0464\1\u05ae\1\u05b6\2\u05ae\2\u0464\1\u05ae\3\u0464\1\u05b7"+
+    "\1\u05b8\1\u0464\1\u05b9\2\u05ae\11\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\3\u0464\1\u05ae\1\u0464\1\u05ae\10\u0464\1\u05ae\1\u0464"+
+    "\2\u05ae\10\u0464\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464\1\u05ba"+
+    "\5\u0464\1\u05ae\17\u0464\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464"+
+    "\2\u05ae\2\u0464\1\u05ae\1\u0464\1\u05ae\13\u0464\2\u05ae\2\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u05bb\1\u0464\2\u05ae\1\u05bc"+
+    "\1\u05bd\12\u05ae\1\u05be\1\u05ae\2\u0464\2\u05ae\3\u0464\1\u05ae"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\2\u0464\4\u05ae\3\u0464\2\u05ae"+
+    "\1\u05bf\1\u05ae\1\u0464\2\u05ae\12\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u05c0\1\u05ae\2\u0464\1\u05ae\3\u0464\1\u05c1\5\u0464"+
+    "\3\u05ae\3\u0464\1\u05ae\1\u0464\1\u05ae\1\u0464\2\u05ae\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\3\u05ae\1\u05c2\1\u05ae\1\u05c3\1\u0464"+
+    "\1\u05ae\1\u05c4\7\u05ae\1\u05c5\3\u05ae\1\u0464\2\u05ae\1\u0464"+
+    "\2\u05ae\1\u04d4\12\u0464\242\0\1\u04d3\1\u05c6\1\u05ae\1\u0464"+
+    "\1\u05c7\6\u05ae\3\u0464\1\u05ae\2\u0464\1\u05ae\2\u0464\1\u05ae"+
+    "\6\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u05ae\31\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\1\u05ae\2\u0464\1\u05ae\1\u05c8\1\u05c9"+
+    "\2\u05ae\1\u0464\1\u05ca\2\u05ae\2\u0464\2\u05ae\1\u0464\1\u05ae"+
+    "\3\u0464\1\u05cb\1\u05ae\2\u0464\1\u05ae\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\3\u05ae\1\u05cc\2\u05ae\1\u0464\1\u05ae\1\u05cd\3\u05ae"+
+    "\3\u0464\2\u05ae\1\u0464\10\u05ae\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\1\u05ce\2\u05ae\1\u05cf\1\u05d0\1\u05d1\2\u05ae\1\u05d2\3\u05ae"+
+    "\1\u0464\1\u05ae\1\u0464\1\u05ae\1\u0464\1\u05ae\1\u0464\1\u05ae"+
+    "\1\u0464\4\u05ae\1\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u05ae"+
+    "\6\u0464\1\u05ae\3\u0464\1\u05d3\2\u0464\1\u05ae\4\u0464\1\u05ae"+
+    "\2\u0464\1\u05ae\2\u0464\1\u05ae\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\6\u0464\1\u05ae\7\u0464\1\u05ae\13\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\13\u0464\1\u05d4\6\u0464\1\u05d5\7\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\1\u05ae\11\u0464\1\u05ae\6\u0464\1\u05ae\10\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u05ae\1\u0464\6\u05ae\1\u05d6"+
+    "\1\u0464\2\u05ae\2\u0464\2\u05ae\1\u0464\1\u05ae\1\u0464\3\u05ae"+
+    "\1\u0464\3\u05ae\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464\1\u05ae"+
+    "\1\u05d7\4\u0464\2\u05ae\3\u0464\2\u05ae\5\u0464\1\u05ae\3\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\2\u05ae\2\u0464\1\u05ae"+
+    "\1\u05d8\1\u0464\2\u05ae\1\u0464\1\u05ae\3\u0464\1\u05ae\1\u0464"+
+    "\1\u05ae\1\u0464\1\u05ae\3\u0464\1\u05ae\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\3\u0464\1\u05ae\1\u0464\1\u05d9\4\u0464\1\u05ae\2\u0464"+
+    "\1\u05ae\14\u0464\1\u04d4\12\u0464\242\0\1\u04d3\2\u05ae\1\u0464"+
+    "\1\u05da\1\u0464\1\u05db\1\u0464\2\u05ae\2\u0464\1\u05ae\4\u0464"+
+    "\1\u05ae\11\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u05ae"+
+    "\13\u0464\1\u05ae\12\u0464\1\u04d4\12\u0464\236\0\1\u0377\3\0"+
+    "\34\u0377\12\u05dc\1\0\2\u0377\1\u03f2\2\u0377\1\u0379\1\u0230"+
+    "\1\u0231\1\u0232\2\0\2\u0377\3\0\1\u0377\214\0\1\155"+
+    "\3\0\1\u0177\5\u0101\1\u0386\24\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\220\0\4\u05dd\2\0\1\u05dd\15\0\1\u05dd\6\0"+
+    "\12\u05dd\1\u04dd\242\0\4\u05de\2\0\1\u05de\15\0\1\u05de"+
+    "\6\0\12\u05de\1\u05df\242\0\4\u05e0\2\0\1\u05e0\15\0"+
+    "\1\u05e0\6\0\1\u05e1\1\u05e2\5\u05e1\1\u05e3\1\u05e2\1\u05e1"+
+    "\13\0\1\u01b5\227\0\4\u05e4\2\0\1\u05e4\15\0\1\u05e4"+
+    "\6\0\12\u05e4\1\u055e\12\0\1\u01b5\227\0\4\u05e0\2\0"+
+    "\1\u05e0\15\0\1\u05e0\6\0\1\u05e1\1\u05e2\5\u05e1\1\u05e3"+
+    "\1\u05e2\1\u05e1\242\0\1\u022c\4\u05e4\2\0\1\u05e4\15\0"+
+    "\1\u05e4\6\0\12\u05e4\1\u055e\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u05e4\2\0\1\u05e4\15\0\1\u05e4\6\0\12\u05e5\1\u055e"+
+    "\12\0\1\u01b5\226\0\1\u022c\4\u05e4\2\0\1\u05e4\15\0"+
+    "\1\u05e4\6\0\2\u05e5\1\u05e4\2\u05e5\2\u05e4\2\u05e5\1\u05e4"+
+    "\1\u055e\12\0\1\u01b5\274\0\1\u0477\12\0\1\u01b5\226\0"+
+    "\1\u013e\10\333\1\u05e6\21\333\1\u013f\12\333\242\0\1\u013e"+
+    "\4\333\1\u02cb\25\333\1\u013f\12\333\242\0\1\u013e\25\333"+
+    "\1\u02c5\4\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f"+
+    "\1\333\1\u05e7\10\333\242\0\1\u013e\32\333\1\u013f\6\333"+
+    "\1\u05e8\3\333\242\0\1\u013e\32\333\1\u013f\5\333\1\u05e9"+
+    "\4\333\242\0\1\u013e\32\333\1\u013f\5\333\1\u05ea\4\333"+
+    "\242\0\1\u013e\32\333\1\u013f\5\333\1\u04f4\4\333\242\0"+
+    "\1\u013e\17\333\1\u05eb\12\333\1\u013f\12\333\242\0\1\u013e"+
+    "\12\333\1\u05ec\17\333\1\u013f\12\333\242\0\1\u013e\25\333"+
+    "\1\u05ed\4\333\1\u013f\12\333\242\0\1\u013e\1\u05ee\31\333"+
+    "\1\u013f\12\333\242\0\1\u013e\1\u05ef\31\333\1\u013f\12\333"+
+    "\242\0\1\u013e\15\333\1\u05f0\14\333\1\u013f\12\333\242\0"+
+    "\1\u013e\1\333\1\u05f1\30\333\1\u013f\12\333\242\0\1\u013e"+
+    "\32\333\1\u013f\10\333\1\u05f2\1\333\242\0\1\u013e\21\333"+
+    "\1\u05f3\10\333\1\u013f\12\333\242\0\1\u013e\1\u05f4\31\333"+
+    "\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\3\333\1\u04f4"+
+    "\6\333\242\0\1\u013e\2\333\1\u0504\27\333\1\u013f\12\333"+
+    "\242\0\1\u013e\11\333\1\u05f5\20\333\1\u013f\12\333\242\0"+
+    "\1\u013e\11\333\1\u05f6\20\333\1\u013f\12\333\242\0\1\u013e"+
+    "\32\333\1\u013f\1\u02bd\11\333\242\0\1\u013e\32\333\1\u013f"+
+    "\2\333\1\u02bd\7\333\242\0\1\u013e\32\333\1\u013f\1\u023f"+
+    "\11\333\242\0\1\u013e\10\333\1\u05f7\21\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\u05f8\31\333\1\u013f\12\333\242\0\1\u013e"+
+    "\32\333\1\u013f\1\333\1\u05f9\10\333\242\0\1\u013e\32\333"+
+    "\1\u013f\10\333\1\u01c9\1\333\242\0\1\u013e\25\333\1\u05fa"+
+    "\4\333\1\u013f\12\333\236\0\1\155\3\0\1\u0177\1\u05fb"+
+    "\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\7\u0101\1\u043c\2\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\1\u05fc\31\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u05fd\31\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\7\u0101\1\u05fe\22\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\6\u0101\1\u05ff\23\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0600\31\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\1\u0601\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\1\u0101\1\u0602\10\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\2\u0101"+
+    "\1\u0603\7\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\6\u0101\1\u017c\23\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\25\u0101\1\u0604\4\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0605\31\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\2\u0101\1\u01a1\7\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\12\u0101\1\u01a3\17\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\24\u0101\1\u017c"+
+    "\5\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\220\0\4\u0606\2\0"+
+    "\1\u0606\15\0\1\u0606\6\0\12\u0606\1\u0523\242\0\4\u0607"+
+    "\2\0\1\u0607\15\0\1\u0607\6\0\12\u0607\1\u0608\242\0"+
+    "\4\u0609\2\0\1\u0609\15\0\1\u0609\6\0\1\u060a\1\u060b"+
+    "\5\u060a\1\u060c\1\u060b\1\u060a\13\0\1\u04c2\227\0\4\u060d"+
+    "\2\0\1\u060d\15\0\1\u060d\6\0\12\u060d\1\u0595\12\0"+
+    "\1\u04c2\227\0\4\u0609\2\0\1\u0609\15\0\1\u0609\6\0"+
+    "\1\u060a\1\u060b\5\u060a\1\u060c\1\u060b\1\u060a\242\0\1\u052a"+
+    "\4\u060d\2\0\1\u060d\15\0\1\u060d\6\0\12\u060d\1\u0595"+
+    "\12\0\1\u04c2\226\0\1\u052a\4\u060d\2\0\1\u060d\15\0"+
+    "\1\u060d\6\0\12\u060e\1\u0595\12\0\1\u04c2\226\0\1\u052a"+
+    "\4\u060d\2\0\1\u060d\15\0\1\u060d\6\0\2\u060e\1\u060d"+
+    "\2\u060e\2\u060d\2\u060e\1\u060d\1\u0595\12\0\1\u04c2\227\0"+
+    "\4\u060f\2\0\1\u060f\15\0\1\u060f\6\0\12\u060f\1\u0529"+
+    "\12\0\1\u04c2\226\0\1\u0610\33\0\12\u0611\242\0\1\u0610"+
+    "\33\0\12\u059a\242\0\1\u0610\33\0\2\u059a\1\u0611\1\u059a"+
+    "\1\u0612\2\u0611\2\u059a\1\u0611\242\0\1\u052a\4\u060f\2\0"+
+    "\1\u060f\15\0\1\u060f\6\0\12\u060f\1\u0529\12\0\1\u04c2"+
+    "\222\0\1\u02fd\3\0\46\u02fd\1\0\2\u02fd\1\u036c\2\u02fd"+
+    "\1\u02ff\1\0\1\u036b\3\0\2\u02fd\3\0\1\u02fd\303\0"+
+    "\1\u0613\260\0\12\u0614\10\0\1\u036b\277\0\1\u04c8\242\0"+
+    "\4\u0615\2\0\1\u0615\15\0\1\u0615\6\0\12\u0615\1\u05a3"+
+    "\242\0\4\u0616\2\0\1\u0616\15\0\1\u0616\6\0\12\u0616"+
+    "\1\u0617\242\0\4\u0618\2\0\1\u0618\15\0\1\u0618\6\0"+
+    "\12\u0618\1\u0619\12\0\1\u0463\226\0\1\u04cf\4\u0618\2\0"+
+    "\1\u0618\15\0\1\u0618\6\0\12\u061a\1\u0619\12\0\1\u0463"+
+    "\226\0\1\u04cf\4\u0618\2\0\1\u0618\15\0\1\u0618\6\0"+
+    "\12\u061b\1\u0619\12\0\1\u0463\226\0\1\u04cf\4\u0618\2\0"+
+    "\1\u0618\15\0\1\u0618\6\0\2\u061b\1\u061a\1\u061b\1\u061c"+
+    "\2\u061a\2\u061b\1\u061a\1\u0619\12\0\1\u0463\227\0\4\u061d"+
+    "\2\0\1\u061d\15\0\1\u061d\6\0\12\u061d\1\u0535\12\0"+
+    "\1\u0463\226\0\1\u04cf\4\u061d\2\0\1\u061d\15\0\1\u061d"+
+    "\6\0\12\u061d\1\u0535\12\0\1\u0463\274\0\1\u04ce\12\0"+
+    "\1\u0463\262\0\1\u061e\1\u061f\5\u061e\1\u0620\1\u061f\1\u061e"+
+    "\242\0\1\u05ab\307\0\1\u05ab\33\0\2\u05ac\1\0\2\u05ac"+
+    "\2\0\2\u05ac\243\0\1\u0621\32\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u0621\4\u0464\1\u05d3\25\u0464\1\u04d4\12\u0464\242\0\1\u0621"+
+    "\15\u0464\1\u054a\14\u0464\1\u04d4\12\u0464\242\0\1\u0621\10\u0464"+
+    "\1\u054a\21\u0464\1\u04d4\12\u0464\242\0\1\u0621\12\u0464\1\u0622"+
+    "\4\u0464\1\u05ae\12\u0464\1\u04d4\12\u0464\242\0\1\u0621\5\u0464"+
+    "\1\u0623\4\u0464\1\u05ae\1\u0624\16\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u0621\5\u0464\1\u0625\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\1\u0626\3\u0464\1\u0627\25\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\20\u0464\1\u05ae\11\u0464\1\u04d4\12\u0464\242\0\1\u04d3\17\u0464"+
+    "\1\u0628\12\u0464\1\u04d4\12\u0464\242\0\1\u04d3\20\u0464\1\u0629"+
+    "\11\u0464\1\u04d4\12\u0464\242\0\1\u0621\17\u0464\1\u062a\12\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\7\u0464\1\u05ae\22\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u0621\11\u0464\1\u062b\20\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u0621\1\u062c\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\30\u0464\1\u05ae\1\u0464\1\u04d4\12\u0464\242\0\1\u0621\4\u0464"+
+    "\1\u05b6\25\u0464\1\u04d4\12\u0464\242\0\1\u0621\6\u0464\1\u05d3"+
+    "\10\u0464\1\u05ae\12\u0464\1\u04d4\12\u0464\242\0\1\u0621\13\u0464"+
+    "\1\u062d\16\u0464\1\u04d4\12\u0464\242\0\1\u0621\7\u0464\1\u062e"+
+    "\22\u0464\1\u04d4\12\u0464\242\0\1\u0621\13\u0464\1\u05b6\16\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u0621\24\u0464\1\u062f\5\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\11\u0464\1\u05ae\20\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u0621\16\u0464\1\u0630\13\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u0621\12\u0464\1\u0631\17\u0464\1\u04d4\12\u0464\242\0\1\u0621"+
+    "\17\u0464\1\u05ae\12\u0464\1\u04d4\12\u0464\242\0\1\u0621\5\u0464"+
+    "\1\u05ae\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3\16\u0464\1\u0632"+
+    "\13\u0464\1\u04d4\12\u0464\242\0\1\u0621\20\u0464\1\u0633\11\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u0621\5\u0464\1\u0634\24\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u0621\22\u0464\1\u0635\7\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u0621\13\u0464\1\u0636\16\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\17\u0464\1\u0637\12\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\1\u0464\1\u0638\7\u0464\1\u05ae\20\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u0621\1\u0639\31\u0464\1\u04d4\12\u0464\242\0\1\u0621\2\u0464"+
+    "\1\u063a\27\u0464\1\u04d4\12\u0464\242\0\1\u04d3\15\u0464\1\u063b"+
+    "\14\u0464\1\u04d4\12\u0464\242\0\1\u04d3\5\u0464\1\u05ae\24\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u063c\12\u0464\242\0"+
+    "\1\u04d3\22\u0464\1\u05ae\7\u0464\1\u04d4\12\u0464\242\0\1\u0621"+
+    "\23\u0464\1\u05ae\2\u0464\1\u0631\3\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\11\u0464\1\u063d\20\u0464\1\u04d4\12\u0464\242\0\1\u0621"+
+    "\17\u0464\1\u063e\12\u0464\1\u04d4\12\u0464\242\0\1\u0621\24\u0464"+
+    "\1\u063b\5\u0464\1\u04d4\12\u0464\242\0\1\u0621\13\u0464\1\u063f"+
+    "\16\u0464\1\u04d4\12\u0464\242\0\1\u04d3\31\u0464\1\u0640\1\u04d4"+
+    "\12\u0464\236\0\1\u0377\3\0\34\u0377\12\u0641\1\0\2\u0377"+
+    "\1\u03f2\2\u0377\1\u0379\1\u0230\1\u0231\1\u0232\2\0\2\u0377"+
+    "\3\0\1\u0377\266\0\1\u04dd\242\0\4\u0642\2\0\1\u0642"+
+    "\15\0\1\u0642\6\0\12\u0642\1\u05df\242\0\4\u0643\2\0"+
+    "\1\u0643\15\0\1\u0643\6\0\1\u0644\1\u0645\5\u0644\1\u0646"+
+    "\1\u0645\1\u0644\1\u0647\242\0\4\u0648\2\0\1\u0648\15\0"+
+    "\1\u0648\6\0\12\u0648\1\u0649\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u0648\2\0\1\u0648\15\0\1\u0648\6\0\12\u064a\1\u0649"+
+    "\12\0\1\u01b5\226\0\1\u022c\4\u0648\2\0\1\u0648\15\0"+
+    "\1\u0648\6\0\12\u064b\1\u0649\12\0\1\u01b5\226\0\1\u022c"+
+    "\4\u0648\2\0\1\u0648\15\0\1\u0648\6\0\2\u064b\1\u064a"+
+    "\1\u064b\1\u064c\2\u064a\2\u064b\1\u064a\1\u0649\12\0\1\u01b5"+
+    "\227\0\4\u064d\2\0\1\u064d\15\0\1\u064d\6\0\12\u064d"+
+    "\1\u055e\12\0\1\u01b5\226\0\1\u022c\4\u064d\2\0\1\u064d"+
+    "\15\0\1\u064d\6\0\12\u064d\1\u055e\12\0\1\u01b5\226\0"+
+    "\1\u013e\5\333\1\u042c\24\333\1\u013f\12\333\242\0\1\u013e"+
+    "\3\333\1\u064e\26\333\1\u013f\12\333\242\0\1\u013e\6\333"+
+    "\1\u0249\23\333\1\u013f\12\333\242\0\1\u013e\1\333\1\u0579"+
+    "\30\333\1\u013f\12\333\242\0\1\u013e\3\333\1\u064f\26\333"+
+    "\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\10\333\1\u0650"+
+    "\1\333\242\0\1\u013e\32\333\1\u013f\2\333\1\u0651\7\333"+
+    "\242\0\1\u013e\32\333\1\u013f\2\333\1\u0652\7\333\242\0"+
+    "\1\u013e\32\333\1\u013f\3\333\1\u0653\6\333\242\0\1\u013e"+
+    "\32\333\1\u013f\5\333\1\u0654\4\333\242\0\1\u013e\32\333"+
+    "\1\u013f\3\333\1\u0655\6\333\242\0\1\u013e\2\333\1\u0656"+
+    "\27\333\1\u013f\12\333\242\0\1\u013e\1\u0657\31\333\1\u013f"+
+    "\12\333\242\0\1\u013e\24\333\1\u0658\5\333\1\u013f\12\333"+
+    "\242\0\1\u013e\23\333\1\u02bd\6\333\1\u013f\12\333\242\0"+
+    "\1\u013e\32\333\1\u013f\1\u0659\11\333\242\0\1\u013e\32\333"+
+    "\1\u013f\1\u065a\11\333\242\0\1\u013e\32\333\1\u013f\11\333"+
+    "\1\u065b\242\0\1\u013e\12\333\1\u065c\17\333\1\u013f\12\333"+
+    "\242\0\1\u013e\32\333\1\u013f\2\333\1\u02c1\7\333\242\0"+
+    "\1\u013e\2\333\1\u065d\27\333\1\u013f\12\333\236\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\1\u0101\1\u065e\10\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\2\u0101\1\u065f\27\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\6\u0101\1\u044c\3\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\213\0"+
+    "\1\155\3\0\1\u0177\15\u0101\1\u0117\14\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204"+
+    "\10\u0101\1\u0447\1\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\23\u0101\1\u0660\6\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\32\u0101\1\204\4\u0101\1\u0661"+
+    "\5\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u0590"+
+    "\31\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\10\u0101\1\u0211\1\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\31\u0101\1\u0662\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204"+
+    "\4\u0101\1\u0663\5\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\265\0\1\u0523\242\0"+
+    "\4\u0664\2\0\1\u0664\15\0\1\u0664\6\0\12\u0664\1\u0608"+
+    "\242\0\4\u0665\2\0\1\u0665\15\0\1\u0665\6\0\12\u0665"+
+    "\1\u0666\242\0\4\u0667\2\0\1\u0667\15\0\1\u0667\6\0"+
+    "\12\u0667\1\u0668\12\0\1\u04c2\226\0\1\u052a\4\u0667\2\0"+
+    "\1\u0667\15\0\1\u0667\6\0\12\u0669\1\u0668\12\0\1\u04c2"+
+    "\226\0\1\u052a\4\u0667\2\0\1\u0667\15\0\1\u0667\6\0"+
+    "\12\u066a\1\u0668\12\0\1\u04c2\226\0\1\u052a\4\u0667\2\0"+
+    "\1\u0667\15\0\1\u0667\6\0\2\u066a\1\u0669\1\u066a\1\u066b"+
+    "\2\u0669\2\u066a\1\u0669\1\u0668\12\0\1\u04c2\227\0\4\u066c"+
+    "\2\0\1\u066c\15\0\1\u066c\6\0\12\u066c\1\u0595\12\0"+
+    "\1\u04c2\226\0\1\u052a\4\u066c\2\0\1\u066c\15\0\1\u066c"+
+    "\6\0\12\u066c\1\u0595\12\0\1\u04c2\274\0\1\u0529\12\0"+
+    "\1\u04c2\262\0\1\u066d\1\u066e\5\u066d\1\u066f\1\u066e\1\u066d"+
+    "\242\0\1\u0610\307\0\1\u0610\33\0\2\u0611\1\0\2\u0611"+
+    "\2\0\2\u0611\244\0\1\u0670\1\0\1\u0670\5\0\1\u0670"+
+    "\354\0\1\u036b\232\0\4\u0671\2\0\1\u0671\15\0\1\u0671"+
+    "\6\0\12\u0671\1\u05a3\242\0\4\u0672\2\0\1\u0672\15\0"+
+    "\1\u0672\6\0\12\u0672\1\u0673\242\0\4\u0674\2\0\1\u0674"+
+    "\15\0\1\u0674\6\0\1\u0675\1\u0676\5\u0675\1\u0677\1\u0676"+
+    "\1\u0675\13\0\1\u0463\227\0\4\u0678\2\0\1\u0678\15\0"+
+    "\1\u0678\6\0\12\u0678\1\u0619\12\0\1\u0463\227\0\4\u0674"+
+    "\2\0\1\u0674\15\0\1\u0674\6\0\1\u0675\1\u0676\5\u0675"+
+    "\1\u0677\1\u0676\1\u0675\242\0\1\u04cf\4\u0678\2\0\1\u0678"+
+    "\15\0\1\u0678\6\0\12\u0678\1\u0619\12\0\1\u0463\226\0"+
+    "\1\u04cf\4\u0678\2\0\1\u0678\15\0\1\u0678\6\0\12\u0679"+
+    "\1\u0619\12\0\1\u0463\226\0\1\u04cf\4\u0678\2\0\1\u0678"+
+    "\15\0\1\u0678\6\0\2\u0679\1\u0678\2\u0679\2\u0678\2\u0679"+
+    "\1\u0678\1\u0619\12\0\1\u0463\274\0\1\u0535\12\0\1\u0463"+
+    "\226\0\1\u067a\33\0\12\u067b\242\0\1\u067a\33\0\12\u061e"+
+    "\242\0\1\u067a\33\0\2\u061e\1\u067b\1\u061e\1\u067c\2\u067b"+
+    "\2\u061e\1\u067b\242\0\1\u04d3\3\u0464\1\u067d\26\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\15\u0464\1\u05ae\14\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\16\u0464\1\u067e\1\u067f\12\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\17\u0464\1\u0680\12\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\12\u0464\1\u0681\17\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\3\u0464\1\u0682\26\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464"+
+    "\1\u0683\26\u0464\1\u04d4\12\u0464\242\0\1\u04d3\10\u0464\1\u0684"+
+    "\21\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0685\31\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\11\u0464\1\u0686\20\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\15\u0464\1\u0687\14\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\2\u0464\1\u05ae\27\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\25\u0464\1\u0688\4\u0464\1\u04d4\12\u0464\242\0\1\u04d3\10\u0464"+
+    "\1\u05ae\21\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u0689"+
+    "\26\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u05ae\26\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\17\u0464\1\u05ae\12\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\12\u0464\1\u068a\17\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\17\u0464\1\u068b\12\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\31\u0464\1\u05ae\1\u04d4\12\u0464\242\0\1\u04d3\7\u0464"+
+    "\1\u068c\22\u0464\1\u04d4\12\u0464\242\0\1\u04d3\17\u0464\1\u068d"+
+    "\12\u0464\1\u04d4\12\u0464\242\0\1\u04d3\25\u0464\1\u068e\4\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\30\u0464\1\u068f\1\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\1\u0635\31\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\16\u0464\1\u05ae\13\u0464\1\u04d4\12\u0464\243\0\32\u0464"+
+    "\1\u0690\12\u0464\242\0\1\u04d3\2\u0464\1\u0691\27\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\1\u0464\1\u0692\30\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\17\u0464\1\u0693\12\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0694\31\u0464\1\u04d4\12\u0464\236\0\1\u0377\3\0"+
+    "\46\u0377\1\0\2\u0377\1\u03f2\2\u0377\1\u0379\1\u0230\1\u0231"+
+    "\1\u0232\2\0\2\u0377\3\0\1\u0377\221\0\4\u0695\2\0"+
+    "\1\u0695\15\0\1\u0695\6\0\12\u0695\1\u05df\242\0\4\u0696"+
+    "\2\0\1\u0696\15\0\1\u0696\6\0\12\u0696\1\u0697\241\0"+
+    "\1\u022c\4\u0696\2\0\1\u0696\15\0\1\u0696\6\0\12\u0698"+
+    "\1\u0697\241\0\1\u022c\4\u0696\2\0\1\u0696\15\0\1\u0696"+
+    "\6\0\12\u0699\1\u0697\241\0\1\u022c\4\u0696\2\0\1\u0696"+
+    "\15\0\1\u0696\6\0\2\u0699\1\u0698\1\u0699\1\u069a\2\u0698"+
+    "\2\u0699\1\u0698\1\u0697\242\0\4\u069b\2\0\1\u069b\15\0"+
+    "\1\u069b\6\0\12\u069b\13\0\1\u01b5\227\0\4\u069c\2\0"+
+    "\1\u069c\15\0\1\u069c\6\0\12\u069c\1\u0649\12\0\1\u01b5"+
+    "\227\0\4\u069b\2\0\1\u069b\15\0\1\u069b\6\0\12\u069b"+
+    "\242\0\1\u022c\4\u069c\2\0\1\u069c\15\0\1\u069c\6\0"+
+    "\12\u069c\1\u0649\12\0\1\u01b5\226\0\1\u022c\4\u069c\2\0"+
+    "\1\u069c\15\0\1\u069c\6\0\12\u069d\1\u0649\12\0\1\u01b5"+
+    "\226\0\1\u022c\4\u069c\2\0\1\u069c\15\0\1\u069c\6\0"+
+    "\2\u069d\1\u069c\2\u069d\2\u069c\2\u069d\1\u069c\1\u0649\12\0"+
+    "\1\u01b5\274\0\1\u055e\12\0\1\u01b5\226\0\1\u013e\1\u069e"+
+    "\31\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\7\333"+
+    "\1\u04f4\2\333\242\0\1\u013e\1\u069f\31\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\u06a0\31\333\1\u013f\12\333\242\0\1\u013e"+
+    "\7\333\1\u06a1\22\333\1\u013f\12\333\242\0\1\u013e\6\333"+
+    "\1\u06a2\23\333\1\u013f\12\333\242\0\1\u013e\1\u06a3\31\333"+
+    "\1\u013f\12\333\242\0\1\u013e\1\u06a4\31\333\1\u013f\12\333"+
+    "\242\0\1\u013e\32\333\1\u013f\1\333\1\u06a5\10\333\242\0"+
+    "\1\u013e\32\333\1\u013f\2\333\1\u06a6\7\333\242\0\1\u013e"+
+    "\6\333\1\u0233\23\333\1\u013f\12\333\242\0\1\u013e\25\333"+
+    "\1\u06a7\4\333\1\u013f\12\333\242\0\1\u013e\1\u06a8\31\333"+
+    "\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\2\333\1\u0258"+
+    "\7\333\242\0\1\u013e\12\333\1\u025a\17\333\1\u013f\12\333"+
+    "\242\0\1\u013e\24\333\1\u0233\5\333\1\u013f\12\333\236\0"+
+    "\1\155\3\0\1\u0177\24\u0101\1\u06a9\5\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204"+
+    "\6\u0101\1\u06aa\3\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\213\0\1\155\3\0"+
+    "\1\u0177\1\u0101\1\u0188\30\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\2\u0101\1\u06ab\27\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\3\u0101"+
+    "\1\u06ac\26\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\3\u0101\1\u06ad\26\u0101\1\204\12\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\220\0\4\u06ae\2\0\1\u06ae\15\0\1\u06ae\6\0"+
+    "\12\u06ae\1\u0608\242\0\4\u06af\2\0\1\u06af\15\0\1\u06af"+
+    "\6\0\12\u06af\1\u06b0\242\0\4\u06b1\2\0\1\u06b1\15\0"+
+    "\1\u06b1\6\0\1\u06b2\1\u06b3\5\u06b2\1\u06b4\1\u06b3\1\u06b2"+
+    "\13\0\1\u04c2\227\0\4\u06b5\2\0\1\u06b5\15\0\1\u06b5"+
+    "\6\0\12\u06b5\1\u0668\12\0\1\u04c2\227\0\4\u06b1\2\0"+
+    "\1\u06b1\15\0\1\u06b1\6\0\1\u06b2\1\u06b3\5\u06b2\1\u06b4"+
+    "\1\u06b3\1\u06b2\242\0\1\u052a\4\u06b5\2\0\1\u06b5\15\0"+
+    "\1\u06b5\6\0\12\u06b5\1\u0668\12\0\1\u04c2\226\0\1\u052a"+
+    "\4\u06b5\2\0\1\u06b5\15\0\1\u06b5\6\0\12\u06b6\1\u0668"+
+    "\12\0\1\u04c2\226\0\1\u052a\4\u06b5\2\0\1\u06b5\15\0"+
+    "\1\u06b5\6\0\2\u06b6\1\u06b5\2\u06b6\2\u06b5\2\u06b6\1\u06b5"+
+    "\1\u0668\12\0\1\u04c2\274\0\1\u0595\12\0\1\u04c2\226\0"+
+    "\1\u06b7\33\0\12\u06b8\242\0\1\u06b7\33\0\12\u066d\242\0"+
+    "\1\u06b7\33\0\2\u066d\1\u06b8\1\u066d\1\u06b9\2\u06b8\2\u066d"+
+    "\1\u06b8\321\0\1\u0232\276\0\1\u05a3\242\0\4\u06ba\2\0"+
+    "\1\u06ba\15\0\1\u06ba\6\0\12\u06ba\1\u0673\242\0\4\u06bb"+
+    "\2\0\1\u06bb\15\0\1\u06bb\6\0\12\u06bb\1\u06bc\242\0"+
+    "\4\u06bd\2\0\1\u06bd\15\0\1\u06bd\6\0\12\u06bd\1\u06be"+
+    "\12\0\1\u0463\226\0\1\u04cf\4\u06bd\2\0\1\u06bd\15\0"+
+    "\1\u06bd\6\0\12\u06bf\1\u06be\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u06bd\2\0\1\u06bd\15\0\1\u06bd\6\0\12\u06c0\1\u06be"+
+    "\12\0\1\u0463\226\0\1\u04cf\4\u06bd\2\0\1\u06bd\15\0"+
+    "\1\u06bd\6\0\2\u06c0\1\u06bf\1\u06c0\1\u06c1\2\u06bf\2\u06c0"+
+    "\1\u06bf\1\u06be\12\0\1\u0463\227\0\4\u06c2\2\0\1\u06c2"+
+    "\15\0\1\u06c2\6\0\12\u06c2\1\u0619\12\0\1\u0463\226\0"+
+    "\1\u04cf\4\u06c2\2\0\1\u06c2\15\0\1\u06c2\6\0\12\u06c2"+
+    "\1\u0619\12\0\1\u0463\262\0\1\u06c3\1\u06c4\5\u06c3\1\u06c5"+
+    "\1\u06c4\1\u06c3\242\0\1\u067a\307\0\1\u067a\33\0\2\u067b"+
+    "\1\0\2\u067b\2\0\2\u067b\243\0\1\u04d3\4\u0464\1\u054a"+
+    "\25\u0464\1\u04d4\12\u0464\242\0\1\u04d3\17\u0464\1\u06c6\12\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464\1\u06c7\25\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\25\u0464\1\u06c8\4\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\5\u0464\1\u06c9\24\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0464\1\u06ca\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\4\u0464\1\u06cb\25\u0464\1\u04d4\12\u0464\242\0\1\u04d3\15\u0464"+
+    "\1\u06cc\14\u0464\1\u04d4\12\u0464\242\0\1\u04d3\17\u0464\1\u0631"+
+    "\12\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u06cd\26\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\25\u0464\1\u06ce\4\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\17\u0464\1\u06c8\12\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\20\u0464\1\u06cf\11\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\24\u0464\1\u06c8\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\5\u0464\1\u06d0\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3\11\u0464"+
+    "\1\u06d1\20\u0464\1\u04d4\12\u0464\242\0\1\u04d3\5\u0464\1\u05d3"+
+    "\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3\13\u0464\1\u06d2\16\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u05c4\26\u0464\1\u04d4"+
+    "\12\u0464\243\0\1\u0464\1\u06d3\3\u0464\1\u06d4\1\u06d5\1\u06d6"+
+    "\1\u0464\1\u06d7\1\u06d8\1\u06d9\1\u06da\1\u06db\1\u06dc\1\u0464"+
+    "\1\u06dd\1\u06de\1\u06df\2\u0464\1\u06e0\1\u06e1\1\u06e2\1\u0464"+
+    "\1\u06e3\1\u04d4\1\u06e4\2\u0464\1\u06e5\1\u0464\1\u06e6\1\u06e7"+
+    "\3\u0464\242\0\1\u04d3\10\u0464\1\u06e8\21\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\25\u0464\1\u06e9\4\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\20\u0464\1\u06ea\11\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\7\u0464\1\u0631\22\u0464\1\u04d4\12\u0464\310\0\1\u05df\242\0"+
+    "\4\u06eb\2\0\1\u06eb\15\0\1\u06eb\6\0\12\u06eb\1\u0697"+
+    "\242\0\4\u069b\2\0\1\u069b\15\0\1\u069b\6\0\12\u069b"+
+    "\1\u04e4\241\0\1\u022c\4\u06eb\2\0\1\u06eb\15\0\1\u06eb"+
+    "\6\0\12\u06eb\1\u0697\241\0\1\u022c\4\u06eb\2\0\1\u06eb"+
+    "\15\0\1\u06eb\6\0\12\u06ec\1\u0697\241\0\1\u022c\4\u06eb"+
+    "\2\0\1\u06eb\15\0\1\u06eb\6\0\2\u06ec\1\u06eb\2\u06ec"+
+    "\2\u06eb\2\u06ec\1\u06eb\1\u0697\242\0\4\u06ed\2\0\1\u06ed"+
+    "\15\0\1\u06ed\6\0\12\u06ed\13\0\1\u01b5\227\0\4\u06ee"+
+    "\2\0\1\u06ee\15\0\1\u06ee\6\0\12\u06ee\1\u0649\12\0"+
+    "\1\u01b5\226\0\1\u022c\4\u06ee\2\0\1\u06ee\15\0\1\u06ee"+
+    "\6\0\12\u06ee\1\u0649\12\0\1\u01b5\226\0\1\u013e\32\333"+
+    "\1\u013f\1\333\1\u06ef\10\333\242\0\1\u013e\2\333\1\u06f0"+
+    "\27\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f\6\333"+
+    "\1\u0504\3\333\242\0\1\u013e\15\333\1\u01c9\14\333\1\u013f"+
+    "\12\333\242\0\1\u013e\32\333\1\u013f\10\333\1\u04ff\1\333"+
+    "\242\0\1\u013e\23\333\1\u06f1\6\333\1\u013f\12\333\242\0"+
+    "\1\u013e\32\333\1\u013f\4\333\1\u06f2\5\333\242\0\1\u013e"+
+    "\1\u065d\31\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f"+
+    "\10\333\1\u02c1\1\333\242\0\1\u013e\31\333\1\u06f3\1\u013f"+
+    "\12\333\242\0\1\u013e\32\333\1\u013f\4\333\1\u06f4\5\333"+
+    "\236\0\1\155\3\0\1\u0177\32\u0101\1\204\7\u0101\1\u06f5"+
+    "\2\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177\27\u0101"+
+    "\1\u017c\2\u0101\1\204\12\u0101\1\0\3\155\1\0\1\155"+
+    "\1\157\3\155\3\0\1\155\3\0\2\155\213\0\1\155"+
+    "\3\0\1\u0177\32\u0101\1\204\3\u0101\1\u06f6\6\u0101\1\0"+
+    "\3\155\1\0\1\155\1\157\3\155\3\0\1\155\3\0"+
+    "\2\155\213\0\1\155\3\0\1\u0177\32\u0101\1\204\7\u0101"+
+    "\1\u0117\2\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\3\u0101\1\u06f7\26\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\265\0"+
+    "\1\u0608\242\0\4\u06f8\2\0\1\u06f8\15\0\1\u06f8\6\0"+
+    "\12\u06f8\1\u06b0\242\0\4\u06f9\2\0\1\u06f9\15\0\1\u06f9"+
+    "\6\0\12\u06f9\1\u06fa\242\0\4\u06fb\2\0\1\u06fb\15\0"+
+    "\1\u06fb\6\0\12\u06fb\1\u06fc\12\0\1\u04c2\226\0\1\u052a"+
+    "\4\u06fb\2\0\1\u06fb\15\0\1\u06fb\6\0\12\u06fd\1\u06fc"+
+    "\12\0\1\u04c2\226\0\1\u052a\4\u06fb\2\0\1\u06fb\15\0"+
+    "\1\u06fb\6\0\12\u06fe\1\u06fc\12\0\1\u04c2\226\0\1\u052a"+
+    "\4\u06fb\2\0\1\u06fb\15\0\1\u06fb\6\0\2\u06fe\1\u06fd"+
+    "\1\u06fe\1\u06ff\2\u06fd\2\u06fe\1\u06fd\1\u06fc\12\0\1\u04c2"+
+    "\227\0\4\u0700\2\0\1\u0700\15\0\1\u0700\6\0\12\u0700"+
+    "\1\u0668\12\0\1\u04c2\226\0\1\u052a\4\u0700\2\0\1\u0700"+
+    "\15\0\1\u0700\6\0\12\u0700\1\u0668\12\0\1\u04c2\262\0"+
+    "\1\u0701\1\u0702\5\u0701\1\u0703\1\u0702\1\u0701\242\0\1\u06b7"+
+    "\307\0\1\u06b7\33\0\2\u06b8\1\0\2\u06b8\2\0\2\u06b8"+
+    "\244\0\4\u0704\2\0\1\u0704\15\0\1\u0704\6\0\12\u0704"+
+    "\1\u0673\242\0\4\u0705\2\0\1\u0705\15\0\1\u0705\6\0"+
+    "\12\u0705\1\u0706\242\0\4\u0707\2\0\1\u0707\15\0\1\u0707"+
+    "\6\0\1\u0708\1\u0709\5\u0708\1\u070a\1\u0709\1\u0708\13\0"+
+    "\1\u0463\227\0\4\u070b\2\0\1\u070b\15\0\1\u070b\6\0"+
+    "\12\u070b\1\u06be\12\0\1\u0463\227\0\4\u0707\2\0\1\u0707"+
+    "\15\0\1\u0707\6\0\1\u0708\1\u0709\5\u0708\1\u070a\1\u0709"+
+    "\1\u0708\242\0\1\u04cf\4\u070b\2\0\1\u070b\15\0\1\u070b"+
+    "\6\0\12\u070b\1\u06be\12\0\1\u0463\226\0\1\u04cf\4\u070b"+
+    "\2\0\1\u070b\15\0\1\u070b\6\0\12\u070c\1\u06be\12\0"+
+    "\1\u0463\226\0\1\u04cf\4\u070b\2\0\1\u070b\15\0\1\u070b"+
+    "\6\0\2\u070c\1\u070b\2\u070c\2\u070b\2\u070c\1\u070b\1\u06be"+
+    "\12\0\1\u0463\274\0\1\u0619\12\0\1\u0463\262\0\12\u070d"+
+    "\13\0\1\u0463\262\0\12\u06c3\13\0\1\u0463\262\0\2\u06c3"+
+    "\1\u070d\1\u06c3\1\u070e\2\u070d\2\u06c3\1\u070d\13\0\1\u0463"+
+    "\226\0\1\u04d3\4\u0464\1\u070f\25\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0710\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\10\u0464"+
+    "\1\u0711\21\u0464\1\u04d4\12\u0464\242\0\1\u04d3\13\u0464\1\u0712"+
+    "\16\u0464\1\u04d4\12\u0464\242\0\1\u04d3\17\u0464\1\u0713\12\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\15\u0464\1\u0714\14\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\12\u0464\1\u0715\17\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\4\u0464\1\u0635\25\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\10\u0464\1\u0716\21\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\12\u0464\1\u05ae\17\u0464\1\u04d4\12\u0464\242\0\1\u04d3\7\u0464"+
+    "\1\u0717\22\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u063b"+
+    "\26\u0464\1\u04d4\12\u0464\242\0\1\u04d3\5\u0464\1\u0718\24\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\11\u0464\1\u0719\20\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\7\u0464\1\u071a\22\u0464\1\u04d4\1\u071b"+
+    "\11\u0464\242\0\1\u04d3\10\u0464\1\u071c\4\u0464\1\u071d\5\u0464"+
+    "\1\u071e\6\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u071f"+
+    "\26\u0464\1\u04d4\12\u0464\242\0\1\u04d3\7\u0464\1\u0720\22\u0464"+
+    "\1\u04d4\10\u0464\1\u0721\1\u0464\242\0\1\u04d3\7\u0464\1\u0722"+
+    "\22\u0464\1\u04d4\12\u0464\242\0\1\u04d3\7\u0464\1\u0723\22\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\5\u0464\1\u0724"+
+    "\4\u0464\242\0\1\u04d3\7\u0464\1\u0725\22\u0464\1\u04d4\10\u0464"+
+    "\1\u0726\1\u0464\242\0\1\u04d3\32\u0464\1\u04d4\5\u0464\1\u0727"+
+    "\4\u0464\242\0\1\u04d3\13\u0464\1\u0728\16\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\7\u0464\1\u0729\22\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\26\u0464\1\u072a\3\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\7\u0464\1\u0727\2\u0464\242\0\1\u04d3\15\u0464"+
+    "\1\u072b\14\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\10\u0464\1\u072c\1\u072d\242\0\1\u04d3\6\u0464\1\u072e\1\u072f"+
+    "\22\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u0730\26\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\4\u0464\1\u0727"+
+    "\5\u0464\242\0\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u0731\10\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u0732\10\u0464\242\0"+
+    "\1\u04d3\13\u0464\1\u0733\16\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\3\u0464\1\u0734\26\u0464\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464"+
+    "\1\u06d1\25\u0464\1\u04d4\12\u0464\243\0\4\u0735\2\0\1\u0735"+
+    "\15\0\1\u0735\6\0\12\u0735\1\u0697\241\0\1\u022c\4\u0735"+
+    "\2\0\1\u0735\15\0\1\u0735\6\0\12\u0735\1\u0697\242\0"+
+    "\4\u0736\2\0\1\u0736\15\0\1\u0736\6\0\12\u0736\13\0"+
+    "\1\u01b5\274\0\1\u0649\12\0\1\u01b5\226\0\1\u013e\24\333"+
+    "\1\u0737\5\333\1\u013f\12\333\242\0\1\u013e\32\333\1\u013f"+
+    "\6\333\1\u0738\3\333\242\0\1\u013e\1\333\1\u023f\30\333"+
+    "\1\u013f\12\333\242\0\1\u013e\2\333\1\u0739\27\333\1\u013f"+
+    "\12\333\242\0\1\u013e\3\333\1\u073a\26\333\1\u013f\12\333"+
+    "\242\0\1\u013e\3\333\1\u073b\26\333\1\u013f\12\333\236\0"+
+    "\1\155\3\0\1\u0177\7\u0101\1\u073c\22\u0101\1\204\12\u0101"+
+    "\1\0\3\155\1\0\1\155\1\157\3\155\3\0\1\155"+
+    "\3\0\2\155\213\0\1\155\3\0\1\u0177\1\u073d\31\u0101"+
+    "\1\204\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155"+
+    "\3\0\1\155\3\0\2\155\213\0\1\155\3\0\1\u0177"+
+    "\32\u0101\1\204\1\u0101\1\u044c\10\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\220\0"+
+    "\4\u073e\2\0\1\u073e\15\0\1\u073e\6\0\12\u073e\1\u06b0"+
+    "\242\0\4\u073f\2\0\1\u073f\15\0\1\u073f\6\0\12\u073f"+
+    "\1\u0740\242\0\4\u0741\2\0\1\u0741\15\0\1\u0741\6\0"+
+    "\1\u0742\1\u0743\5\u0742\1\u0744\1\u0743\1\u0742\13\0\1\u04c2"+
+    "\227\0\4\u0745\2\0\1\u0745\15\0\1\u0745\6\0\12\u0745"+
+    "\1\u06fc\12\0\1\u04c2\227\0\4\u0741\2\0\1\u0741\15\0"+
+    "\1\u0741\6\0\1\u0742\1\u0743\5\u0742\1\u0744\1\u0743\1\u0742"+
+    "\242\0\1\u052a\4\u0745\2\0\1\u0745\15\0\1\u0745\6\0"+
+    "\12\u0745\1\u06fc\12\0\1\u04c2\226\0\1\u052a\4\u0745\2\0"+
+    "\1\u0745\15\0\1\u0745\6\0\12\u0746\1\u06fc\12\0\1\u04c2"+
+    "\226\0\1\u052a\4\u0745\2\0\1\u0745\15\0\1\u0745\6\0"+
+    "\2\u0746\1\u0745\2\u0746\2\u0745\2\u0746\1\u0745\1\u06fc\12\0"+
+    "\1\u04c2\274\0\1\u0668\12\0\1\u04c2\262\0\12\u0747\13\0"+
+    "\1\u04c2\262\0\12\u0701\13\0\1\u04c2\262\0\2\u0701\1\u0747"+
+    "\1\u0701\1\u0748\2\u0747\2\u0701\1\u0747\13\0\1\u04c2\274\0"+
+    "\1\u0673\242\0\4\u0749\2\0\1\u0749\15\0\1\u0749\6\0"+
+    "\12\u0749\1\u0706\242\0\4\u074a\2\0\1\u074a\15\0\1\u074a"+
+    "\6\0\12\u074a\1\u074b\242\0\4\u074c\2\0\1\u074c\15\0"+
+    "\1\u074c\6\0\12\u074c\1\u074d\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u074c\2\0\1\u074c\15\0\1\u074c\6\0\12\u074e\1\u074d"+
+    "\12\0\1\u0463\226\0\1\u04cf\4\u074c\2\0\1\u074c\15\0"+
+    "\1\u074c\6\0\12\u074f\1\u074d\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u074c\2\0\1\u074c\15\0\1\u074c\6\0\2\u074f\1\u074e"+
+    "\1\u074f\1\u0750\2\u074e\2\u074f\1\u074e\1\u074d\12\0\1\u0463"+
+    "\227\0\4\u0751\2\0\1\u0751\15\0\1\u0751\6\0\12\u0751"+
+    "\1\u06be\12\0\1\u0463\226\0\1\u04cf\4\u0751\2\0\1\u0751"+
+    "\15\0\1\u0751\6\0\12\u0751\1\u06be\12\0\1\u0463\307\0"+
+    "\1\u0463\262\0\2\u070d\1\0\2\u070d\2\0\2\u070d\14\0"+
+    "\1\u0463\226\0\1\u04d3\20\u0464\1\u0752\11\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\1\u0464\1\u0753\30\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\13\u0464\1\u05ba\16\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\2\u0464\1\u063b\27\u0464\1\u04d4\12\u0464\242\0\1\u04d3\5\u0464"+
+    "\1\u06cd\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464\1\u0754"+
+    "\25\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u0755\26\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464\1\u063b\30\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\4\u0464\1\u0756\25\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\11\u0464\1\u0757\20\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0464\1\u0758\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\24\u0464\1\u0759\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464"+
+    "\1\u075a\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3\14\u0464\1\u075b"+
+    "\15\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464\1\u075c\30\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464\1\u075d\30\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\1\u0464\1\u075e\30\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\24\u0464\1\u075f\5\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0760\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\24\u0464"+
+    "\1\u0761\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3\24\u0464\1\u0762"+
+    "\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3\27\u0464\1\u0763\2\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\24\u0464\1\u0764\5\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\1\u062f\31\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\24\u0464\1\u075e\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\20\u0464\1\u0765\11\u0464\1\u04d4\12\u0464\242\0\1\u04d3\24\u0464"+
+    "\1\u0766\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464\1\u0767"+
+    "\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464\1\u0768\25\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u0769\31\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\21\u0464\1\u076a\10\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\4\u0464\1\u076b\25\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\24\u0464\1\u076c\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\1\u0464\1\u076d\10\u0464\242\0\1\u04d3\1\u076e\31\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u076f\31\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\7\u0464\1\u063b\22\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\13\u0464\1\u05ae\16\u0464\1\u04d4\12\u0464\310\0\1\u0697"+
+    "\242\0\4\u04e4\2\0\1\u04e4\15\0\1\u04e4\6\0\12\u04e4"+
+    "\13\0\1\u01b5\226\0\1\u013e\32\333\1\u013f\7\333\1\u0770"+
+    "\2\333\242\0\1\u013e\27\333\1\u0233\2\333\1\u013f\12\333"+
+    "\242\0\1\u013e\32\333\1\u013f\3\333\1\u0771\6\333\242\0"+
+    "\1\u013e\32\333\1\u013f\7\333\1\u01c9\2\333\242\0\1\u013e"+
+    "\3\333\1\u0772\26\333\1\u013f\12\333\236\0\1\155\3\0"+
+    "\1\u0177\32\u0101\1\204\7\u0101\1\u0773\2\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\213\0\1\155\3\0\1\u0177\4\u0101\1\u017c\25\u0101\1\204"+
+    "\12\u0101\1\0\3\155\1\0\1\155\1\157\3\155\3\0"+
+    "\1\155\3\0\2\155\265\0\1\u06b0\242\0\4\u0774\2\0"+
+    "\1\u0774\15\0\1\u0774\6\0\12\u0774\1\u0740\242\0\4\u0775"+
+    "\2\0\1\u0775\15\0\1\u0775\6\0\12\u0775\1\u0776\242\0"+
+    "\4\u0777\2\0\1\u0777\15\0\1\u0777\6\0\12\u0777\1\u0778"+
+    "\12\0\1\u04c2\226\0\1\u052a\4\u0777\2\0\1\u0777\15\0"+
+    "\1\u0777\6\0\12\u0779\1\u0778\12\0\1\u04c2\226\0\1\u052a"+
+    "\4\u0777\2\0\1\u0777\15\0\1\u0777\6\0\12\u077a\1\u0778"+
+    "\12\0\1\u04c2\226\0\1\u052a\4\u0777\2\0\1\u0777\15\0"+
+    "\1\u0777\6\0\2\u077a\1\u0779\1\u077a\1\u077b\2\u0779\2\u077a"+
+    "\1\u0779\1\u0778\12\0\1\u04c2\227\0\4\u077c\2\0\1\u077c"+
+    "\15\0\1\u077c\6\0\12\u077c\1\u06fc\12\0\1\u04c2\226\0"+
+    "\1\u052a\4\u077c\2\0\1\u077c\15\0\1\u077c\6\0\12\u077c"+
+    "\1\u06fc\12\0\1\u04c2\307\0\1\u04c2\262\0\2\u0747\1\0"+
+    "\2\u0747\2\0\2\u0747\14\0\1\u04c2\227\0\4\u077d\2\0"+
+    "\1\u077d\15\0\1\u077d\6\0\12\u077d\1\u0706\242\0\4\u077e"+
+    "\2\0\1\u077e\15\0\1\u077e\6\0\12\u077e\1\u077f\242\0"+
+    "\4\u0780\2\0\1\u0780\15\0\1\u0780\6\0\1\u0781\1\u0782"+
+    "\5\u0781\1\u0783\1\u0782\1\u0781\13\0\1\u0463\227\0\4\u0784"+
+    "\2\0\1\u0784\15\0\1\u0784\6\0\12\u0784\1\u074d\12\0"+
+    "\1\u0463\227\0\4\u0780\2\0\1\u0780\15\0\1\u0780\6\0"+
+    "\1\u0781\1\u0782\5\u0781\1\u0783\1\u0782\1\u0781\242\0\1\u04cf"+
+    "\4\u0784\2\0\1\u0784\15\0\1\u0784\6\0\12\u0784\1\u074d"+
+    "\12\0\1\u0463\226\0\1\u04cf\4\u0784\2\0\1\u0784\15\0"+
+    "\1\u0784\6\0\12\u0785\1\u074d\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u0784\2\0\1\u0784\15\0\1\u0784\6\0\2\u0785\1\u0784"+
+    "\2\u0785\2\u0784\2\u0785\1\u0784\1\u074d\12\0\1\u0463\274\0"+
+    "\1\u06be\12\0\1\u0463\226\0\1\u04d3\1\u0464\1\u0786\30\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\17\u0464\1\u0787\12\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\10\u0464\1\u0788\21\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\13\u0464\1\u0632\16\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0789\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\5\u0464"+
+    "\1\u078a\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3\25\u0464\1\u078b"+
+    "\4\u0464\1\u04d4\12\u0464\242\0\1\u04d3\15\u0464\1\u078c\14\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\21\u0464\1\u078d\10\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\16\u0464\1\u078e\4\u0464\1\u078f\6\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\4\u0464\1\u0790\25\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\7\u0464\1\u0791\2\u0464"+
+    "\242\0\1\u04d3\4\u0464\1\u0792\25\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\24\u0464\1\u0793\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\1\u0464\1\u0794\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0795"+
+    "\1\u0796\1\u0464\1\u0797\16\u0464\1\u0798\1\u0464\1\u0799\5\u0464"+
+    "\1\u04d4\5\u0464\1\u079a\4\u0464\242\0\1\u04d3\1\u0464\1\u079b"+
+    "\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3\31\u0464\1\u079c\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\16\u0464\1\u079d\13\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\15\u0464\1\u079e\14\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\11\u0464\1\u079f\13\u0464\1\u07a0\4\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\7\u0464\1\u07a1\2\u0464\242\0"+
+    "\1\u04d3\21\u0464\1\u07a2\7\u0464\1\u07a3\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\12\u0464\1\u07a4\17\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\10\u0464\1\u07a5\1\u0464\242\0\1\u04d3\5\u0464"+
+    "\1\u07a6\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3\10\u0464\1\u07a7"+
+    "\21\u0464\1\u04d4\12\u0464\242\0\1\u04d3\24\u0464\1\u07a8\5\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\1\u07a9\11\u0464"+
+    "\242\0\1\u04d3\5\u0464\1\u07aa\10\u0464\1\u07ab\13\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u013e\7\333\1\u07ac\22\333\1\u013f\12\333"+
+    "\242\0\1\u013e\1\u07ad\31\333\1\u013f\12\333\242\0\1\u013e"+
+    "\32\333\1\u013f\1\333\1\u0504\10\333\236\0\1\155\3\0"+
+    "\1\u0177\1\u07ae\31\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\220\0"+
+    "\4\u07af\2\0\1\u07af\15\0\1\u07af\6\0\12\u07af\1\u0740"+
+    "\242\0\4\u07b0\2\0\1\u07b0\15\0\1\u07b0\6\0\12\u07b0"+
+    "\1\u07b1\242\0\4\u07b2\2\0\1\u07b2\15\0\1\u07b2\6\0"+
+    "\1\u07b3\1\u07b4\5\u07b3\1\u07b5\1\u07b4\1\u07b3\13\0\1\u04c2"+
+    "\227\0\4\u07b6\2\0\1\u07b6\15\0\1\u07b6\6\0\12\u07b6"+
+    "\1\u0778\12\0\1\u04c2\227\0\4\u07b2\2\0\1\u07b2\15\0"+
+    "\1\u07b2\6\0\1\u07b3\1\u07b4\5\u07b3\1\u07b5\1\u07b4\1\u07b3"+
+    "\242\0\1\u052a\4\u07b6\2\0\1\u07b6\15\0\1\u07b6\6\0"+
+    "\12\u07b6\1\u0778\12\0\1\u04c2\226\0\1\u052a\4\u07b6\2\0"+
+    "\1\u07b6\15\0\1\u07b6\6\0\12\u07b7\1\u0778\12\0\1\u04c2"+
+    "\226\0\1\u052a\4\u07b6\2\0\1\u07b6\15\0\1\u07b6\6\0"+
+    "\2\u07b7\1\u07b6\2\u07b7\2\u07b6\2\u07b7\1\u07b6\1\u0778\12\0"+
+    "\1\u04c2\274\0\1\u06fc\12\0\1\u04c2\274\0\1\u0706\242\0"+
+    "\4\u07b8\2\0\1\u07b8\15\0\1\u07b8\6\0\12\u07b8\1\u077f"+
+    "\242\0\4\u07b9\2\0\1\u07b9\15\0\1\u07b9\6\0\1\u07ba"+
+    "\1\u07bb\5\u07ba\1\u07bc\1\u07bb\1\u07ba\1\u07bd\242\0\4\u07be"+
+    "\2\0\1\u07be\15\0\1\u07be\6\0\12\u07be\1\u07bf\12\0"+
+    "\1\u0463\226\0\1\u04cf\4\u07be\2\0\1\u07be\15\0\1\u07be"+
+    "\6\0\12\u07c0\1\u07bf\12\0\1\u0463\226\0\1\u04cf\4\u07be"+
+    "\2\0\1\u07be\15\0\1\u07be\6\0\12\u07c1\1\u07bf\12\0"+
+    "\1\u0463\226\0\1\u04cf\4\u07be\2\0\1\u07be\15\0\1\u07be"+
+    "\6\0\2\u07c1\1\u07c0\1\u07c1\1\u07c2\2\u07c0\2\u07c1\1\u07c0"+
+    "\1\u07bf\12\0\1\u0463\227\0\4\u07c3\2\0\1\u07c3\15\0"+
+    "\1\u07c3\6\0\12\u07c3\1\u074d\12\0\1\u0463\226\0\1\u04cf"+
+    "\4\u07c3\2\0\1\u07c3\15\0\1\u07c3\6\0\12\u07c3\1\u074d"+
+    "\12\0\1\u0463\226\0\1\u04d3\17\u0464\1\u07c4\12\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\5\u0464\1\u07c5\24\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\16\u0464\1\u06d1\13\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\15\u0464\1\u07c6\14\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\7\u0464\1\u0635\22\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464"+
+    "\1\u07c7\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3\6\u0464\1\u07c8"+
+    "\23\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\3\u0464"+
+    "\1\u07a4\6\u0464\242\0\1\u04d3\32\u0464\1\u04d4\6\u0464\1\u063b"+
+    "\3\u0464\242\0\1\u04d3\32\u0464\1\u04d4\5\u0464\1\u063b\4\u0464"+
+    "\242\0\1\u04d3\27\u0464\1\u07c9\2\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0464\1\u07ca\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\27\u0464\1\u07cb\2\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u07cc"+
+    "\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464\1\u05ae\30\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u07cd\30\u0464\1\u07ce\1\u04d4"+
+    "\1\u07cf\11\u0464\242\0\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u07d0"+
+    "\10\u0464\242\0\1\u04d3\4\u0464\1\u07d1\25\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\3\u0464\1\u07d2\6\u0464\242\0"+
+    "\1\u04d3\25\u0464\1\u07d3\4\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\1\u07d4\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\4\u0464\1\u07d5\5\u0464\242\0\1\u04d3\24\u0464\1\u07d6\5\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u07d7"+
+    "\10\u0464\242\0\1\u04d3\32\u0464\1\u04d4\3\u0464\1\u0635\6\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\11\u0464\1\u054a\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\10\u0464\1\u0794\1\u0464\242\0\1\u04d3\1\u07d8"+
+    "\1\u0464\1\u07d9\27\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\10\u0464\1\u07da\1\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\4\u0464\1\u07db\5\u0464\242\0\1\u04d3\25\u0464\1\u05ae\4\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\5\u0464\1\u07dc"+
+    "\4\u0464\242\0\1\u04d3\32\u0464\1\u04d4\3\u0464\1\u07dd\6\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\7\u0464\1\u07de\2\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\2\u0464\1\u07df\7\u0464\242\0\1\u04d3"+
+    "\1\u0794\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\7\u0464\1\u07e0\2\u0464\242\0\1\u04d3\3\u0464\1\u07e1\15\u0464"+
+    "\1\u05ba\10\u0464\1\u04d4\12\u0464\242\0\1\u013e\32\333\1\u013f"+
+    "\7\333\1\u07e2\2\333\242\0\1\u013e\4\333\1\u0233\25\333"+
+    "\1\u013f\12\333\236\0\1\155\3\0\1\u0177\32\u0101\1\204"+
+    "\5\u0101\1\u07e3\4\u0101\1\0\3\155\1\0\1\155\1\157"+
+    "\3\155\3\0\1\155\3\0\2\155\265\0\1\u0740\242\0"+
+    "\4\u07e4\2\0\1\u07e4\15\0\1\u07e4\6\0\12\u07e4\1\u07b1"+
+    "\242\0\4\u07e5\2\0\1\u07e5\15\0\1\u07e5\6\0\1\u07e6"+
+    "\1\u07e7\5\u07e6\1\u07e8\1\u07e7\1\u07e6\1\u07e9\242\0\4\u07ea"+
+    "\2\0\1\u07ea\15\0\1\u07ea\6\0\12\u07ea\1\u07eb\12\0"+
+    "\1\u04c2\226\0\1\u052a\4\u07ea\2\0\1\u07ea\15\0\1\u07ea"+
+    "\6\0\12\u07ec\1\u07eb\12\0\1\u04c2\226\0\1\u052a\4\u07ea"+
+    "\2\0\1\u07ea\15\0\1\u07ea\6\0\12\u07ed\1\u07eb\12\0"+
+    "\1\u04c2\226\0\1\u052a\4\u07ea\2\0\1\u07ea\15\0\1\u07ea"+
+    "\6\0\2\u07ed\1\u07ec\1\u07ed\1\u07ee\2\u07ec\2\u07ed\1\u07ec"+
+    "\1\u07eb\12\0\1\u04c2\227\0\4\u07ef\2\0\1\u07ef\15\0"+
+    "\1\u07ef\6\0\12\u07ef\1\u0778\12\0\1\u04c2\226\0\1\u052a"+
+    "\4\u07ef\2\0\1\u07ef\15\0\1\u07ef\6\0\12\u07ef\1\u0778"+
+    "\12\0\1\u04c2\227\0\4\u07f0\2\0\1\u07f0\15\0\1\u07f0"+
+    "\6\0\12\u07f0\1\u077f\242\0\4\u07f1\2\0\1\u07f1\15\0"+
+    "\1\u07f1\6\0\12\u07f1\1\u07f2\241\0\1\u04cf\4\u07f1\2\0"+
+    "\1\u07f1\15\0\1\u07f1\6\0\12\u07f3\1\u07f2\241\0\1\u04cf"+
+    "\4\u07f1\2\0\1\u07f1\15\0\1\u07f1\6\0\12\u07f4\1\u07f2"+
+    "\241\0\1\u04cf\4\u07f1\2\0\1\u07f1\15\0\1\u07f1\6\0"+
+    "\2\u07f4\1\u07f3\1\u07f4\1\u07f5\2\u07f3\2\u07f4\1\u07f3\1\u07f2"+
+    "\242\0\4\u07f6\2\0\1\u07f6\15\0\1\u07f6\6\0\12\u07f6"+
+    "\13\0\1\u0463\227\0\4\u07f7\2\0\1\u07f7\15\0\1\u07f7"+
+    "\6\0\12\u07f7\1\u07bf\12\0\1\u0463\227\0\4\u07f6\2\0"+
+    "\1\u07f6\15\0\1\u07f6\6\0\12\u07f6\242\0\1\u04cf\4\u07f7"+
+    "\2\0\1\u07f7\15\0\1\u07f7\6\0\12\u07f7\1\u07bf\12\0"+
+    "\1\u0463\226\0\1\u04cf\4\u07f7\2\0\1\u07f7\15\0\1\u07f7"+
+    "\6\0\12\u07f8\1\u07bf\12\0\1\u0463\226\0\1\u04cf\4\u07f7"+
+    "\2\0\1\u07f7\15\0\1\u07f7\6\0\2\u07f8\1\u07f7\2\u07f8"+
+    "\2\u07f7\2\u07f8\1\u07f7\1\u07bf\12\0\1\u0463\274\0\1\u074d"+
+    "\12\0\1\u0463\226\0\1\u04d3\10\u0464\1\u07f9\21\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\4\u0464\1\u063b\25\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\25\u0464\1\u0635\4\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u07fa\10\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\6\u0464\1\u07fb\3\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\5\u0464\1\u07fc\4\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\5\u0464\1\u07fd\4\u0464\242\0\1\u04d3\32\u0464\1\u04d4\5\u0464"+
+    "\1\u0794\4\u0464\242\0\1\u04d3\17\u0464\1\u07fe\12\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\12\u0464\1\u07ff\17\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\25\u0464\1\u0800\4\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0801\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0802"+
+    "\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\15\u0464\1\u0803\14\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464\1\u0804\30\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\10\u0464\1\u0805\1\u0464"+
+    "\242\0\1\u04d3\21\u0464\1\u0806\10\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\1\u0807\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\3\u0464\1\u0794\6\u0464\242\0\1\u04d3\2\u0464\1\u07a4"+
+    "\27\u0464\1\u04d4\12\u0464\242\0\1\u04d3\11\u0464\1\u0808\20\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\11\u0464\1\u0809\20\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\1\u062d\11\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\2\u0464\1\u062d\7\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\1\u05ba\11\u0464\242\0\1\u04d3\10\u0464\1\u080a"+
+    "\21\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u080b\31\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u080c\10\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\10\u0464\1\u054a\1\u0464\242\0"+
+    "\1\u04d3\25\u0464\1\u080d\4\u0464\1\u04d4\12\u0464\242\0\1\u013e"+
+    "\1\u080e\31\333\1\u013f\12\333\236\0\1\155\3\0\1\u0177"+
+    "\7\u0101\1\u080f\22\u0101\1\204\12\u0101\1\0\3\155\1\0"+
+    "\1\155\1\157\3\155\3\0\1\155\3\0\2\155\220\0"+
+    "\4\u0810\2\0\1\u0810\15\0\1\u0810\6\0\12\u0810\1\u07b1"+
+    "\242\0\4\u0811\2\0\1\u0811\15\0\1\u0811\6\0\12\u0811"+
+    "\1\u0812\241\0\1\u052a\4\u0811\2\0\1\u0811\15\0\1\u0811"+
+    "\6\0\12\u0813\1\u0812\241\0\1\u052a\4\u0811\2\0\1\u0811"+
+    "\15\0\1\u0811\6\0\12\u0814\1\u0812\241\0\1\u052a\4\u0811"+
+    "\2\0\1\u0811\15\0\1\u0811\6\0\2\u0814\1\u0813\1\u0814"+
+    "\1\u0815\2\u0813\2\u0814\1\u0813\1\u0812\242\0\4\u0816\2\0"+
+    "\1\u0816\15\0\1\u0816\6\0\12\u0816\13\0\1\u04c2\227\0"+
+    "\4\u0817\2\0\1\u0817\15\0\1\u0817\6\0\12\u0817\1\u07eb"+
+    "\12\0\1\u04c2\227\0\4\u0816\2\0\1\u0816\15\0\1\u0816"+
+    "\6\0\12\u0816\242\0\1\u052a\4\u0817\2\0\1\u0817\15\0"+
+    "\1\u0817\6\0\12\u0817\1\u07eb\12\0\1\u04c2\226\0\1\u052a"+
+    "\4\u0817\2\0\1\u0817\15\0\1\u0817\6\0\12\u0818\1\u07eb"+
+    "\12\0\1\u04c2\226\0\1\u052a\4\u0817\2\0\1\u0817\15\0"+
+    "\1\u0817\6\0\2\u0818\1\u0817\2\u0818\2\u0817\2\u0818\1\u0817"+
+    "\1\u07eb\12\0\1\u04c2\274\0\1\u0778\12\0\1\u04c2\274\0"+
+    "\1\u077f\242\0\4\u0819\2\0\1\u0819\15\0\1\u0819\6\0"+
+    "\12\u0819\1\u07f2\242\0\4\u07f6\2\0\1\u07f6\15\0\1\u07f6"+
+    "\6\0\12\u07f6\1\u070d\241\0\1\u04cf\4\u0819\2\0\1\u0819"+
+    "\15\0\1\u0819\6\0\12\u0819\1\u07f2\241\0\1\u04cf\4\u0819"+
+    "\2\0\1\u0819\15\0\1\u0819\6\0\12\u081a\1\u07f2\241\0"+
+    "\1\u04cf\4\u0819\2\0\1\u0819\15\0\1\u0819\6\0\2\u081a"+
+    "\1\u0819\2\u081a\2\u0819\2\u081a\1\u0819\1\u07f2\242\0\4\u081b"+
+    "\2\0\1\u081b\15\0\1\u081b\6\0\12\u081b\13\0\1\u0463"+
+    "\227\0\4\u081c\2\0\1\u081c\15\0\1\u081c\6\0\12\u081c"+
+    "\1\u07bf\12\0\1\u0463\226\0\1\u04cf\4\u081c\2\0\1\u081c"+
+    "\15\0\1\u081c\6\0\12\u081c\1\u07bf\12\0\1\u0463\226\0"+
+    "\1\u04d3\5\u0464\1\u0734\24\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\3\u0464\1\u081d\26\u0464\1\u04d4\12\u0464\242\0\1\u04d3\6\u0464"+
+    "\1\u05c4\23\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0464\1\u07da"+
+    "\30\u0464\1\u04d4\12\u0464\242\0\1\u04d3\3\u0464\1\u081e\26\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\10\u0464\1\u081f"+
+    "\1\u0464\242\0\1\u04d3\32\u0464\1\u04d4\2\u0464\1\u0820\7\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\2\u0464\1\u0821\7\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\3\u0464\1\u0822\6\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\5\u0464\1\u0823\4\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\3\u0464\1\u0824\6\u0464\242\0\1\u04d3\2\u0464\1\u0825"+
+    "\27\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0826\31\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\24\u0464\1\u0827\5\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\23\u0464\1\u062d\6\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\1\u0828\11\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\1\u0829\11\u0464\242\0\1\u04d3\32\u0464\1\u04d4\11\u0464"+
+    "\1\u082a\242\0\1\u04d3\12\u0464\1\u082b\17\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\32\u0464\1\u04d4\2\u0464\1\u0631\7\u0464\242\0"+
+    "\1\u04d3\2\u0464\1\u082c\27\u0464\1\u04d4\12\u0464\242\0\1\u013e"+
+    "\32\333\1\u013f\5\333\1\u082d\4\333\236\0\1\155\3\0"+
+    "\1\u0177\1\u0101\1\u020d\30\u0101\1\204\12\u0101\1\0\3\155"+
+    "\1\0\1\155\1\157\3\155\3\0\1\155\3\0\2\155"+
+    "\265\0\1\u07b1\242\0\4\u082e\2\0\1\u082e\15\0\1\u082e"+
+    "\6\0\12\u082e\1\u0812\242\0\4\u0816\2\0\1\u0816\15\0"+
+    "\1\u0816\6\0\12\u0816\1\u0747\241\0\1\u052a\4\u082e\2\0"+
+    "\1\u082e\15\0\1\u082e\6\0\12\u082e\1\u0812\241\0\1\u052a"+
+    "\4\u082e\2\0\1\u082e\15\0\1\u082e\6\0\12\u082f\1\u0812"+
+    "\241\0\1\u052a\4\u082e\2\0\1\u082e\15\0\1\u082e\6\0"+
+    "\2\u082f\1\u082e\2\u082f\2\u082e\2\u082f\1\u082e\1\u0812\242\0"+
+    "\4\u0830\2\0\1\u0830\15\0\1\u0830\6\0\12\u0830\13\0"+
+    "\1\u04c2\227\0\4\u0831\2\0\1\u0831\15\0\1\u0831\6\0"+
+    "\12\u0831\1\u07eb\12\0\1\u04c2\226\0\1\u052a\4\u0831\2\0"+
+    "\1\u0831\15\0\1\u0831\6\0\12\u0831\1\u07eb\12\0\1\u04c2"+
+    "\227\0\4\u0832\2\0\1\u0832\15\0\1\u0832\6\0\12\u0832"+
+    "\1\u07f2\241\0\1\u04cf\4\u0832\2\0\1\u0832\15\0\1\u0832"+
+    "\6\0\12\u0832\1\u07f2\242\0\4\u0833\2\0\1\u0833\15\0"+
+    "\1\u0833\6\0\12\u0833\13\0\1\u0463\274\0\1\u07bf\12\0"+
+    "\1\u0463\226\0\1\u04d3\1\u0834\31\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\7\u0464\1\u0794\2\u0464\242\0\1\u04d3"+
+    "\1\u0835\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0836\31\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\7\u0464\1\u0837\22\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\6\u0464\1\u0838\23\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\1\u0839\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\1\u083a\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\1\u0464\1\u083b\10\u0464\242\0\1\u04d3\32\u0464\1\u04d4\2\u0464"+
+    "\1\u083c\7\u0464\242\0\1\u04d3\6\u0464\1\u05ae\23\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\25\u0464\1\u083d\4\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\1\u083e\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\2\u0464\1\u05d3\7\u0464\242\0\1\u04d3\12\u0464"+
+    "\1\u05d5\17\u0464\1\u04d4\12\u0464\242\0\1\u04d3\24\u0464\1\u05ae"+
+    "\5\u0464\1\u04d4\12\u0464\242\0\1\u013e\7\333\1\u083f\22\333"+
+    "\1\u013f\12\333\243\0\4\u0840\2\0\1\u0840\15\0\1\u0840"+
+    "\6\0\12\u0840\1\u0812\241\0\1\u052a\4\u0840\2\0\1\u0840"+
+    "\15\0\1\u0840\6\0\12\u0840\1\u0812\242\0\4\u0841\2\0"+
+    "\1\u0841\15\0\1\u0841\6\0\12\u0841\13\0\1\u04c2\274\0"+
+    "\1\u07eb\12\0\1\u04c2\274\0\1\u07f2\242\0\4\u070d\2\0"+
+    "\1\u070d\15\0\1\u070d\6\0\12\u070d\13\0\1\u0463\226\0"+
+    "\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u0842\10\u0464\242\0\1\u04d3"+
+    "\2\u0464\1\u0843\27\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\6\u0464\1\u07a4\3\u0464\242\0\1\u04d3\15\u0464\1\u054a"+
+    "\14\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\10\u0464"+
+    "\1\u079f\1\u0464\242\0\1\u04d3\23\u0464\1\u0844\6\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\4\u0464\1\u0845\5\u0464"+
+    "\242\0\1\u04d3\1\u082c\31\u0464\1\u04d4\12\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\10\u0464\1\u0631\1\u0464\242\0\1\u04d3\31\u0464"+
+    "\1\u0846\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\4\u0464"+
+    "\1\u0847\5\u0464\242\0\1\u013e\1\333\1\u02bd\30\333\1\u013f"+
+    "\12\333\310\0\1\u0812\242\0\4\u0747\2\0\1\u0747\15\0"+
+    "\1\u0747\6\0\12\u0747\13\0\1\u04c2\226\0\1\u04d3\24\u0464"+
+    "\1\u0848\5\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\6\u0464\1\u0849\3\u0464\242\0\1\u04d3\1\u0464\1\u05ba\30\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\2\u0464\1\u084a\27\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\3\u0464\1\u084b\26\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\3\u0464\1\u084c\26\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\7\u0464\1\u084d\2\u0464\242\0\1\u04d3"+
+    "\27\u0464\1\u05ae\2\u0464\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464"+
+    "\1\u04d4\3\u0464\1\u084e\6\u0464\242\0\1\u04d3\32\u0464\1\u04d4"+
+    "\7\u0464\1\u054a\2\u0464\242\0\1\u04d3\3\u0464\1\u084f\26\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\7\u0464\1\u0850\22\u0464\1\u04d4"+
+    "\12\u0464\242\0\1\u04d3\1\u0851\31\u0464\1\u04d4\12\u0464\242\0"+
+    "\1\u04d3\32\u0464\1\u04d4\1\u0464\1\u07a4\10\u0464\242\0\1\u04d3"+
+    "\32\u0464\1\u04d4\7\u0464\1\u0852\2\u0464\242\0\1\u04d3\4\u0464"+
+    "\1\u05ae\25\u0464\1\u04d4\12\u0464\242\0\1\u04d3\1\u0853\31\u0464"+
+    "\1\u04d4\12\u0464\242\0\1\u04d3\32\u0464\1\u04d4\5\u0464\1\u0854"+
+    "\4\u0464\242\0\1\u04d3\7\u0464\1\u0855\22\u0464\1\u04d4\12\u0464"+
+    "\242\0\1\u04d3\1\u0464\1\u062d\30\u0464\1\u04d4\12\u0464\24\0";
 
   private static int [] zzUnpackTrans() {
-    int [] result = new int[341204];
+    int [] result = new int[423000];
     int offset = 0;
     offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
     offset = zzUnpackTrans(ZZ_TRANS_PACKED_1, offset, result);
@@ -3919,25 +5524,31 @@
   private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();
 
   private static final String ZZ_ATTRIBUTE_PACKED_0 =
-    "\1\0\1\11\50\1\20\0\1\1\1\0\1\1\12\0"+
-    "\1\1\21\0\1\1\32\0\2\1\1\0\4\1\1\0"+
-    "\1\1\1\0\4\1\67\0\32\1\3\0\5\1\32\0"+
-    "\4\1\21\0\1\11\1\0\24\1\2\0\1\1\1\0"+
-    "\10\1\3\0\2\1\1\0\4\1\2\0\2\1\1\0"+
-    "\2\1\10\0\1\1\32\0\1\1\1\0\11\1\1\0"+
-    "\1\1\2\0\2\1\1\0\1\1\10\0\3\1\15\0"+
-    "\11\1\3\0\2\1\1\0\4\1\2\0\4\1\1\0"+
-    "\2\1\1\0\2\1\1\0\3\1\3\0\1\1\4\0"+
-    "\2\1\20\0\1\1\10\0\1\1\3\0\1\1\40\0"+
-    "\3\1\23\0\1\1\40\0\1\1\4\0\1\1\6\0"+
-    "\1\1\2\0\1\1\4\0\2\1\43\0\1\1\57\0"+
-    "\2\1\10\0\1\1\53\0\1\1\72\0\1\1\150\0"+
-    "\1\11\1\0\1\1\177\0\1\1\132\0\6\1\3\0"+
-    "\2\1\1\0\4\1\2\0\3\1\112\0\1\1\10\0"+
-    "\1\1\64\0\1\1\u01eb\0";
+    "\1\0\1\11\51\1\21\0\1\1\1\0\1\1\12\0"+
+    "\1\1\10\0\2\1\11\0\1\1\46\0\6\1\2\0"+
+    "\5\1\23\0\1\1\77\0\1\1\1\0\32\1\3\0"+
+    "\6\1\33\0\4\1\4\0\1\1\22\0\1\11\10\0"+
+    "\56\1\1\0\1\1\1\0\11\1\4\0\1\1\1\0"+
+    "\2\1\1\0\6\1\1\0\4\1\1\0\4\1\2\0"+
+    "\2\1\4\0\1\1\1\0\3\1\2\0\2\1\10\0"+
+    "\1\1\41\0\1\1\1\0\35\1\1\0\4\1\2\0"+
+    "\2\1\1\0\1\1\37\0\3\1\15\0\12\1\4\0"+
+    "\1\1\1\0\2\1\1\0\6\1\1\0\4\1\1\0"+
+    "\4\1\2\0\2\1\4\0\1\1\1\0\3\1\1\0"+
+    "\2\1\1\0\2\1\1\0\2\1\1\0\24\1\1\0"+
+    "\4\1\2\0\1\1\31\0\2\1\20\0\1\1\37\0"+
+    "\1\1\3\0\15\1\25\0\3\1\31\0\3\1\50\0"+
+    "\13\1\32\0\2\1\1\0\1\1\4\0\1\1\7\0"+
+    "\1\1\2\0\1\1\20\0\2\1\61\0\7\1\53\0"+
+    "\2\1\6\0\1\1\70\0\6\1\66\0\2\1\62\0"+
+    "\3\1\65\0\1\11\1\0\1\1\64\0\1\1\113\0"+
+    "\1\1\125\0\7\1\4\0\1\1\1\0\2\1\1\0"+
+    "\6\1\1\0\4\1\1\0\4\1\2\0\2\1\4\0"+
+    "\1\1\1\0\3\1\1\0\1\1\104\0\1\1\37\0"+
+    "\1\1\56\0\1\1\u01e5\0";
 
   private static int [] zzUnpackAttribute() {
-    int [] result = new int[1750];
+    int [] result = new int[2133];
     int offset = 0;
     offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
     return result;
@@ -4048,7 +5659,6 @@
 
   /**
    * Creates a new scanner
-   * There is also a java.io.InputStream version of this constructor.
    *
    * @param   in  the java.io.Reader to read input from.
    */
@@ -4056,7 +5666,6 @@
     this.zzReader = in;
   }
 
-  
 
   /** 
    * Unpacks the compressed character translation table.
@@ -4068,7 +5677,7 @@
     char [] map = new char[0x10000];
     int i = 0;  /* index in packed string  */
     int j = 0;  /* index in unpacked array */
-    while (i < 3010) {
+    while (i < 3018) {
       int  count = packed.charAt(i++);
       char value = packed.charAt(i++);
       do map[j++] = value; while (--count > 0);
@@ -4348,7 +5957,7 @@
 
       switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
         case 1: 
-          { /* Break so we don't hit fall-through warning: */ break;/* Not numeric, word, ideographic, hiragana, or SE Asian -- ignore it. */
+          { /* Break so we don't hit fall-through warning: */ break; /* Not numeric, word, ideographic, hiragana, or SE Asian -- ignore it. */
           }
         case 12: break;
         case 2: 
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizerImpl.jflex
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizerImpl.jflex	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizerImpl.jflex	(working copy)
@@ -35,11 +35,13 @@
  *       Asian languages, including Thai, Lao, Myanmar, and Khmer</li>
  *   <li>&lt;IDEOGRAPHIC&gt;: A single CJKV ideographic character</li>
  *   <li>&lt;HIRAGANA&gt;: A single hiragana character</li>
+ *   <li>&lt;KATAKANA&gt;: A sequence of katakana characters</li>
+ *   <li>&lt;HANGUL&gt;: A sequence of Hangul characters</li>
  * </ul>
  */
 %%
 
-%unicode 6.1
+%unicode 6.3
 %integer
 %final
 %public
@@ -50,34 +52,40 @@
 %buffer 4096
 
 %include SUPPLEMENTARY.jflex-macro
-ALetter = ([\p{WB:ALetter}] | {ALetterSupp})
-Format =  ([\p{WB:Format}] | {FormatSupp})
-Numeric = ([\p{WB:Numeric}] | {NumericSupp})
-Extend =  ([\p{WB:Extend}] | {ExtendSupp})
-Katakana = ([\p{WB:Katakana}] | {KatakanaSupp})
-MidLetter = ([\p{WB:MidLetter}] | {MidLetterSupp})
-MidNum = ([\p{WB:MidNum}] | {MidNumSupp})
-MidNumLet = ([\p{WB:MidNumLet}] | {MidNumLetSupp})
-ExtendNumLet = ([\p{WB:ExtendNumLet}] | {ExtendNumLetSupp})
-ComplexContext = ([\p{LB:Complex_Context}] | {ComplexContextSupp})
-Han = ([\p{Script:Han}] | {HanSupp})
-Hiragana = ([\p{Script:Hiragana}] | {HiraganaSupp})
+ALetter           = (\p{WB:ALetter}                                     | {ALetterSupp})
+Format            = (\p{WB:Format}                                      | {FormatSupp})
+Numeric           = ([\p{WB:Numeric}[\p{Blk:HalfAndFullForms}&&\p{Nd}]] | {NumericSupp})
+Extend            = (\p{WB:Extend}                                      | {ExtendSupp})
+Katakana          = (\p{WB:Katakana}                                    | {KatakanaSupp})
+MidLetter         = (\p{WB:MidLetter}                                   | {MidLetterSupp})
+MidNum            = (\p{WB:MidNum}                                      | {MidNumSupp})
+MidNumLet         = (\p{WB:MidNumLet}                                   | {MidNumLetSupp})
+ExtendNumLet      = (\p{WB:ExtendNumLet}                                | {ExtendNumLetSupp})
+ComplexContext    = (\p{LB:Complex_Context}                             | {ComplexContextSupp})
+Han               = (\p{Script:Han}                                     | {HanSupp})
+Hiragana          = (\p{Script:Hiragana}                                | {HiraganaSupp})
+SingleQuote       = (\p{WB:Single_Quote}                                | {SingleQuoteSupp})
+DoubleQuote       = (\p{WB:Double_Quote}                                | {DoubleQuoteSupp})
+HebrewLetter      = (\p{WB:Hebrew_Letter}                               | {HebrewLetterSupp})
+RegionalIndicator = (\p{WB:Regional_Indicator}                          | {RegionalIndicatorSupp})
+HebrewOrALetter   = ({HebrewLetter} | {ALetter})
 
-// Script=Hangul & Aletter
-HangulEx       = (!(!\p{Script:Hangul}|!\p{WB:ALetter})) ({Format} | {Extend})*
 // UAX#29 WB4. X (Extend | Format)* --> X
 //
-ALetterEx      = {ALetter}                     ({Format} | {Extend})*
-// TODO: Convert hard-coded full-width numeric range to property intersection (something like [\p{Full-Width}&&\p{Numeric}]) once JFlex supports it
-NumericEx      = ({Numeric} | [\uFF10-\uFF19]) ({Format} | {Extend})*
-KatakanaEx     = {Katakana}                    ({Format} | {Extend})* 
-MidLetterEx    = ({MidLetter} | {MidNumLet})   ({Format} | {Extend})* 
-MidNumericEx   = ({MidNum} | {MidNumLet})      ({Format} | {Extend})*
-ExtendNumLetEx = {ExtendNumLet}                ({Format} | {Extend})*
+HangulEx            = [\p{Script:Hangul}&&[\p{WB:ALetter}\p{WB:Hebrew_Letter}]] ({Format} | {Extend})*
+HebrewOrALetterEx   = {HebrewOrALetter}                                         ({Format} | {Extend})*
+NumericEx           = {Numeric}                                                 ({Format} | {Extend})*
+KatakanaEx          = {Katakana}                                                ({Format} | {Extend})* 
+MidLetterEx         = ({MidLetter} | {MidNumLet} | {SingleQuote})               ({Format} | {Extend})* 
+MidNumericEx        = ({MidNum} | {MidNumLet} | {SingleQuote})                  ({Format} | {Extend})*
+ExtendNumLetEx      = {ExtendNumLet}                                            ({Format} | {Extend})*
+HanEx               = {Han}                                                     ({Format} | {Extend})*
+HiraganaEx          = {Hiragana}                                                ({Format} | {Extend})*
+SingleQuoteEx       = {SingleQuote}                                             ({Format} | {Extend})*                                            
+DoubleQuoteEx       = {DoubleQuote}                                             ({Format} | {Extend})*
+HebrewLetterEx      = {HebrewLetter}                                            ({Format} | {Extend})*
+RegionalIndicatorEx = {RegionalIndicator}                                       ({Format} | {Extend})*
 
-HanEx = {Han} ({Format} | {Extend})*
-HiraganaEx = {Hiragana} ({Format} | {Extend})*
-
 // URL and E-mail syntax specifications:
 //
 //     RFC-952:  DOD INTERNET HOST TABLE SPECIFICATION
@@ -213,10 +221,10 @@
 {EMAIL} { return EMAIL_TYPE; }
 
 // UAX#29 WB8.   Numeric × Numeric
-//        WB11.  Numeric (MidNum | MidNumLet) × Numeric
-//        WB12.  Numeric × (MidNum | MidNumLet) Numeric
-//        WB13a. (ALetter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
-//        WB13b. ExtendNumLet × (ALetter | Numeric | Katakana)
+//        WB11.  Numeric (MidNum | MidNumLet | Single_Quote) × Numeric
+//        WB12.  Numeric × (MidNum | MidNumLet | Single_Quote) Numeric
+//        WB13a. (ALetter | Hebrew_Letter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
+//        WB13b. ExtendNumLet × (ALetter | Hebrew_Letter | Numeric | Katakana) 
 //
 {ExtendNumLetEx}* {NumericEx} ({ExtendNumLetEx}+ {NumericEx} 
                               | {MidNumericEx} {NumericEx} 
@@ -227,26 +235,36 @@
 // subset of the below for typing purposes only!
 {HangulEx}+
   { return HANGUL_TYPE; }
-
+  
 {KatakanaEx}+
   { return KATAKANA_TYPE; }
 
-// UAX#29 WB5.   ALetter × ALetter
-//        WB6.   ALetter × (MidLetter | MidNumLet) ALetter
-//        WB7.   ALetter (MidLetter | MidNumLet) × ALetter
-//        WB9.   ALetter × Numeric
-//        WB10.  Numeric × ALetter
+// UAX#29 WB5.   (ALetter | Hebrew_Letter) × (ALetter | Hebrew_Letter)
+//        WB6.   (ALetter | Hebrew_Letter) × (MidLetter | MidNumLet | Single_Quote) (ALetter | Hebrew_Letter)
+//        WB7.   (ALetter | Hebrew_Letter) (MidLetter | MidNumLet | Single_Quote) × (ALetter | Hebrew_Letter)
+//        WB7a.  Hebrew_Letter × Single_Quote
+//        WB7b.  Hebrew_Letter × Double_Quote Hebrew_Letter
+//        WB7c.  Hebrew_Letter Double_Quote × Hebrew_Letter
+//        WB9.   (ALetter | Hebrew_Letter) × Numeric
+//        WB10.  Numeric × (ALetter | Hebrew_Letter)
 //        WB13.  Katakana × Katakana
-//        WB13a. (ALetter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
-//        WB13b. ExtendNumLet × (ALetter | Numeric | Katakana)
+//        WB13a. (ALetter | Hebrew_Letter | Numeric | Katakana | ExtendNumLet) × ExtendNumLet
+//        WB13b. ExtendNumLet × (ALetter | Hebrew_Letter | Numeric | Katakana) 
 //
-{ExtendNumLetEx}*  ( {KatakanaEx} ({ExtendNumLetEx}* {KatakanaEx})* 
-                   | ( {NumericEx}  ({ExtendNumLetEx}+ {NumericEx} | {MidNumericEx} {NumericEx} | {NumericEx})*
-                     | {ALetterEx}  ({ExtendNumLetEx}+ {ALetterEx} | {MidLetterEx}  {ALetterEx} | {ALetterEx})* )+ ) 
-({ExtendNumLetEx}+ ( {KatakanaEx} ({ExtendNumLetEx}* {KatakanaEx})* 
-                   | ( {NumericEx}  ({ExtendNumLetEx}+ {NumericEx} | {MidNumericEx} {NumericEx} | {NumericEx})*
-                     | {ALetterEx}  ({ExtendNumLetEx}+ {ALetterEx} | {MidLetterEx}  {ALetterEx} | {ALetterEx})* )+ ) )*
-{ExtendNumLetEx}*  
+{ExtendNumLetEx}*  ( {KatakanaEx}
+                   | ( {HebrewLetterEx}    ( {SingleQuoteEx}     | {DoubleQuoteEx} {HebrewLetterEx}      )
+                     | {NumericEx}         ( ( {ExtendNumLetEx}* | {MidNumericEx} )* {NumericEx}         )*
+                     | {HebrewOrALetterEx} ( ( {ExtendNumLetEx}* | {MidLetterEx}  )* {HebrewOrALetterEx} )*
+                     )+
+                   )
+({ExtendNumLetEx}+ ( {KatakanaEx}
+                   | ( {HebrewLetterEx}    ( {SingleQuoteEx}     | {DoubleQuoteEx}   {HebrewLetterEx}    )
+                     | {NumericEx}         ( ( {ExtendNumLetEx}* | {MidNumericEx} )* {NumericEx}         )*
+                     | {HebrewOrALetterEx} ( ( {ExtendNumLetEx}* | {MidLetterEx}  )* {HebrewOrALetterEx} )*
+                     )+
+                   )
+)*
+{ExtendNumLetEx}* 
   { return WORD_TYPE; }
 
 
@@ -258,7 +276,7 @@
 //    annex.  That means that satisfactory treatment of languages like Chinese
 //    or Thai requires special handling.
 // 
-// In Unicode 6.1, only one character has the \p{Line_Break = Contingent_Break}
+// In Unicode 6.3, only one character has the \p{Line_Break = Contingent_Break}
 // property: U+FFFC ( ￼ ) OBJECT REPLACEMENT CHARACTER.
 //
 // In the ICU implementation of UAX#29, \p{Line_Break = Complex_Context}
@@ -280,6 +298,8 @@
 // UAX#29 WB3.   CR × LF
 //        WB3a.  (Newline | CR | LF) ÷
 //        WB3b.  ÷ (Newline | CR | LF)
+//        WB13c. Regional_Indicator × Regional_Indicator
 //        WB14.  Any ÷ Any
 //
-[^] { /* Break so we don't hit fall-through warning: */ break;/* Not numeric, word, ideographic, hiragana, or SE Asian -- ignore it. */ }
+{RegionalIndicatorEx} {RegionalIndicatorEx}+ | [^]
+  { /* Break so we don't hit fall-through warning: */ break; /* Not numeric, word, ideographic, hiragana, or SE Asian -- ignore it. */ }
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerImpl.java
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerImpl.java	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerImpl.java	(working copy)
@@ -1,4 +1,4 @@
-/* The following code was generated by JFlex. */
+/* The following code was generated by JFlex 1.5.0-SNAPSHOT */
 
 package org.apache.lucene.analysis.wikipedia;
 
@@ -84,21 +84,20 @@
   private static final int [] ZZ_ACTION = zzUnpackAction();
 
   private static final String ZZ_ACTION_PACKED_0 =
-    "\12\0\4\1\4\2\1\3\1\1\1\4\1\1\2\5"+
-    "\1\6\2\5\1\7\1\5\2\10\1\11\1\12\1\11"+
-    "\1\13\1\14\1\10\1\15\1\16\1\15\1\17\1\20"+
-    "\1\10\1\21\1\10\4\22\1\23\1\22\1\24\1\25"+
-    "\1\26\3\0\1\27\14\0\1\30\1\31\1\32\1\33"+
-    "\1\11\1\0\1\34\1\35\1\36\1\0\1\37\1\0"+
-    "\1\40\3\0\1\41\1\42\2\43\1\42\2\44\2\0"+
-    "\1\43\1\0\14\43\1\42\3\0\1\11\1\45\3\0"+
-    "\1\46\1\47\5\0\1\50\4\0\1\50\2\0\2\50"+
-    "\2\0\1\11\5\0\1\31\1\42\1\43\1\51\3\0"+
-    "\1\11\2\0\1\52\30\0\1\53\2\0\1\54\1\55"+
-    "\1\56";
+    "\12\0\4\1\4\2\1\3\1\4\1\1\2\5\1\6"+
+    "\1\5\1\7\1\5\2\10\1\11\1\5\1\12\1\11"+
+    "\1\13\1\14\1\15\1\16\1\15\1\17\1\20\1\10"+
+    "\1\21\1\10\4\22\1\23\1\24\1\25\1\26\3\0"+
+    "\1\27\14\0\1\30\1\31\1\32\1\33\1\11\1\0"+
+    "\1\34\1\35\1\36\1\0\1\37\1\0\1\40\3\0"+
+    "\1\41\1\42\2\43\1\42\2\44\2\0\1\43\1\0"+
+    "\14\43\1\42\3\0\1\11\1\45\3\0\1\46\1\47"+
+    "\5\0\1\50\4\0\1\50\2\0\2\50\2\0\1\11"+
+    "\5\0\1\31\1\42\1\43\1\51\3\0\1\11\2\0"+
+    "\1\52\30\0\1\53\2\0\1\54\1\55\1\56";
 
   private static int [] zzUnpackAction() {
-    int [] result = new int[184];
+    int [] result = new int[181];
     int offset = 0;
     offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
     return result;
@@ -125,30 +124,30 @@
   private static final String ZZ_ROWMAP_PACKED_0 =
     "\0\0\0\54\0\130\0\204\0\260\0\334\0\u0108\0\u0134"+
     "\0\u0160\0\u018c\0\u01b8\0\u01e4\0\u0210\0\u023c\0\u0268\0\u0294"+
-    "\0\u02c0\0\u02ec\0\u01b8\0\u0318\0\u0344\0\u0370\0\u01b8\0\u039c"+
-    "\0\u03c8\0\u03f4\0\u0420\0\u044c\0\u0478\0\u01b8\0\u039c\0\u04a4"+
-    "\0\u01b8\0\u04d0\0\u04fc\0\u0528\0\u0554\0\u0580\0\u05ac\0\u05d8"+
-    "\0\u0604\0\u0630\0\u065c\0\u0688\0\u06b4\0\u01b8\0\u06e0\0\u039c"+
-    "\0\u070c\0\u0738\0\u0764\0\u0790\0\u01b8\0\u01b8\0\u07bc\0\u07e8"+
-    "\0\u0814\0\u01b8\0\u0840\0\u086c\0\u0898\0\u08c4\0\u08f0\0\u091c"+
-    "\0\u0948\0\u0974\0\u09a0\0\u09cc\0\u09f8\0\u0a24\0\u0a50\0\u0a7c"+
-    "\0\u01b8\0\u01b8\0\u0aa8\0\u0ad4\0\u0b00\0\u0b00\0\u01b8\0\u0b2c"+
+    "\0\u02c0\0\u02ec\0\u01b8\0\u0318\0\u0344\0\u01b8\0\u0370\0\u039c"+
+    "\0\u03c8\0\u03f4\0\u0420\0\u01b8\0\u0370\0\u044c\0\u0478\0\u01b8"+
+    "\0\u04a4\0\u04d0\0\u04fc\0\u0528\0\u0554\0\u0580\0\u05ac\0\u05d8"+
+    "\0\u0604\0\u0630\0\u065c\0\u01b8\0\u0688\0\u0370\0\u06b4\0\u06e0"+
+    "\0\u070c\0\u01b8\0\u01b8\0\u0738\0\u0764\0\u0790\0\u01b8\0\u07bc"+
+    "\0\u07e8\0\u0814\0\u0840\0\u086c\0\u0898\0\u08c4\0\u08f0\0\u091c"+
+    "\0\u0948\0\u0974\0\u09a0\0\u09cc\0\u09f8\0\u01b8\0\u01b8\0\u0a24"+
+    "\0\u0a50\0\u0a7c\0\u0a7c\0\u01b8\0\u0aa8\0\u0ad4\0\u0b00\0\u0b2c"+
     "\0\u0b58\0\u0b84\0\u0bb0\0\u0bdc\0\u0c08\0\u0c34\0\u0c60\0\u0c8c"+
-    "\0\u0cb8\0\u0ce4\0\u0d10\0\u0898\0\u0d3c\0\u0d68\0\u0d94\0\u0dc0"+
+    "\0\u0814\0\u0cb8\0\u0ce4\0\u0d10\0\u0d3c\0\u0d68\0\u0d94\0\u0dc0"+
     "\0\u0dec\0\u0e18\0\u0e44\0\u0e70\0\u0e9c\0\u0ec8\0\u0ef4\0\u0f20"+
-    "\0\u0f4c\0\u0f78\0\u0fa4\0\u0fd0\0\u0ffc\0\u1028\0\u1054\0\u1080"+
-    "\0\u10ac\0\u10d8\0\u01b8\0\u1104\0\u1130\0\u115c\0\u1188\0\u01b8"+
+    "\0\u0f4c\0\u0f78\0\u0fa4\0\u0fd0\0\u0ffc\0\u1028\0\u1054\0\u01b8"+
+    "\0\u1080\0\u10ac\0\u10d8\0\u1104\0\u01b8\0\u1130\0\u115c\0\u1188"+
     "\0\u11b4\0\u11e0\0\u120c\0\u1238\0\u1264\0\u1290\0\u12bc\0\u12e8"+
-    "\0\u1314\0\u1340\0\u136c\0\u1398\0\u13c4\0\u086c\0\u09f8\0\u13f0"+
-    "\0\u141c\0\u1448\0\u1474\0\u14a0\0\u14cc\0\u14f8\0\u1524\0\u01b8"+
-    "\0\u1550\0\u157c\0\u15a8\0\u15d4\0\u1600\0\u162c\0\u1658\0\u1684"+
-    "\0\u16b0\0\u01b8\0\u16dc\0\u1708\0\u1734\0\u1760\0\u178c\0\u17b8"+
+    "\0\u1314\0\u1340\0\u07e8\0\u0974\0\u136c\0\u1398\0\u13c4\0\u13f0"+
+    "\0\u141c\0\u1448\0\u1474\0\u14a0\0\u01b8\0\u14cc\0\u14f8\0\u1524"+
+    "\0\u1550\0\u157c\0\u15a8\0\u15d4\0\u1600\0\u162c\0\u01b8\0\u1658"+
+    "\0\u1684\0\u16b0\0\u16dc\0\u1708\0\u1734\0\u1760\0\u178c\0\u17b8"+
     "\0\u17e4\0\u1810\0\u183c\0\u1868\0\u1894\0\u18c0\0\u18ec\0\u1918"+
     "\0\u1944\0\u1970\0\u199c\0\u19c8\0\u19f4\0\u1a20\0\u1a4c\0\u1a78"+
-    "\0\u1aa4\0\u1ad0\0\u1afc\0\u1b28\0\u1b54\0\u01b8\0\u01b8\0\u01b8";
+    "\0\u1aa4\0\u1ad0\0\u01b8\0\u01b8\0\u01b8";
 
   private static int [] zzUnpackRowMap() {
-    int [] result = new int[184];
+    int [] result = new int[181];
     int offset = 0;
     offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
     return result;
@@ -172,152 +171,149 @@
 
   private static final String ZZ_TRANS_PACKED_0 =
     "\1\13\1\14\5\13\1\15\1\13\1\16\3\13\1\17"+
-    "\1\20\1\21\1\22\1\23\1\24\2\13\1\25\2\13"+
-    "\15\17\1\26\2\13\3\17\1\13\7\27\1\30\5\27"+
-    "\4\31\1\27\1\32\3\27\1\33\1\27\15\31\3\27"+
-    "\3\31\10\27\1\30\5\27\4\34\1\27\1\32\3\27"+
-    "\1\35\1\27\15\34\3\27\3\34\1\27\7\36\1\37"+
-    "\5\36\4\40\1\36\1\32\2\27\1\36\1\41\1\36"+
-    "\15\40\3\36\1\42\2\40\2\36\1\43\5\36\1\37"+
-    "\5\36\4\44\1\36\1\45\2\36\1\46\2\36\15\44"+
-    "\3\36\3\44\10\36\1\37\5\36\4\47\1\36\1\45"+
-    "\2\36\1\46\2\36\15\47\3\36\3\47\10\36\1\37"+
-    "\5\36\4\47\1\36\1\45\2\36\1\50\2\36\15\47"+
-    "\3\36\3\47\10\36\1\37\1\36\1\51\3\36\4\52"+
-    "\1\36\1\45\5\36\15\52\3\36\3\52\10\36\1\53"+
-    "\5\36\4\54\1\36\1\45\5\36\15\54\1\36\1\55"+
-    "\1\36\3\54\1\36\1\56\1\57\5\56\1\60\1\56"+
-    "\1\61\3\56\4\62\1\56\1\63\2\56\1\64\2\56"+
-    "\15\62\2\56\1\65\3\62\1\56\55\0\1\66\62\0"+
-    "\1\67\4\0\4\70\7\0\6\70\1\71\6\70\3\0"+
-    "\3\70\12\0\1\72\43\0\1\73\1\74\1\75\1\76"+
-    "\2\77\1\0\1\100\3\0\1\100\1\17\1\20\1\21"+
-    "\1\22\7\0\15\17\3\0\3\17\3\0\1\101\1\0"+
-    "\1\102\2\103\1\0\1\104\3\0\1\104\3\20\1\22"+
-    "\7\0\15\20\3\0\3\20\2\0\1\73\1\105\1\75"+
-    "\1\76\2\103\1\0\1\104\3\0\1\104\1\21\1\20"+
-    "\1\21\1\22\7\0\15\21\3\0\3\21\3\0\1\106"+
-    "\1\0\1\102\2\77\1\0\1\100\3\0\1\100\4\22"+
-    "\7\0\15\22\3\0\3\22\24\0\1\13\55\0\1\107"+
-    "\73\0\1\110\16\0\1\67\4\0\4\70\7\0\15\70"+
-    "\3\0\3\70\16\0\4\31\7\0\15\31\3\0\3\31"+
-    "\24\0\1\27\56\0\1\111\42\0\4\34\7\0\15\34"+
-    "\3\0\3\34\27\0\1\112\42\0\4\40\7\0\15\40"+
-    "\3\0\3\40\16\0\4\40\7\0\2\40\1\113\12\40"+
-    "\3\0\3\40\2\0\1\114\67\0\4\44\7\0\15\44"+
-    "\3\0\3\44\24\0\1\36\55\0\1\115\43\0\4\47"+
-    "\7\0\15\47\3\0\3\47\26\0\1\116\37\0\1\117"+
-    "\57\0\4\52\7\0\15\52\3\0\3\52\11\0\1\120"+
-    "\4\0\4\70\7\0\15\70\3\0\3\70\16\0\4\54"+
-    "\7\0\15\54\3\0\3\54\47\0\1\117\6\0\1\121"+
-    "\63\0\1\122\57\0\4\62\7\0\15\62\3\0\3\62"+
-    "\24\0\1\56\55\0\1\123\43\0\4\70\7\0\15\70"+
-    "\3\0\3\70\14\0\1\36\1\0\4\124\1\0\3\125"+
-    "\3\0\15\124\3\0\3\124\14\0\1\36\1\0\4\124"+
-    "\1\0\3\125\3\0\3\124\1\126\11\124\3\0\3\124"+
-    "\16\0\1\127\1\0\1\127\10\0\15\127\3\0\3\127"+
-    "\16\0\1\130\1\131\1\132\1\133\7\0\15\130\3\0"+
-    "\3\130\16\0\1\134\1\0\1\134\10\0\15\134\3\0"+
-    "\3\134\16\0\1\135\1\136\1\135\1\136\7\0\15\135"+
-    "\3\0\3\135\16\0\1\137\2\140\1\141\7\0\15\137"+
-    "\3\0\3\137\16\0\1\100\2\142\10\0\15\100\3\0"+
-    "\3\100\16\0\1\143\2\144\1\145\7\0\15\143\3\0"+
-    "\3\143\16\0\4\136\7\0\15\136\3\0\3\136\16\0"+
-    "\1\146\2\147\1\150\7\0\15\146\3\0\3\146\16\0"+
-    "\1\151\2\152\1\153\7\0\15\151\3\0\3\151\16\0"+
-    "\1\154\1\144\1\155\1\145\7\0\15\154\3\0\3\154"+
-    "\16\0\1\156\2\131\1\133\7\0\15\156\3\0\3\156"+
-    "\30\0\1\157\1\160\64\0\1\161\27\0\4\40\7\0"+
-    "\2\40\1\162\12\40\3\0\3\40\2\0\1\163\101\0"+
-    "\1\164\1\165\40\0\4\70\7\0\6\70\1\166\6\70"+
-    "\3\0\3\70\2\0\1\167\63\0\1\170\71\0\1\171"+
-    "\1\172\34\0\1\173\1\0\1\36\1\0\4\124\1\0"+
-    "\3\125\3\0\15\124\3\0\3\124\16\0\4\174\1\0"+
-    "\3\125\3\0\15\174\3\0\3\174\12\0\1\173\1\0"+
-    "\1\36\1\0\4\124\1\0\3\125\3\0\10\124\1\175"+
-    "\4\124\3\0\3\124\2\0\1\73\13\0\1\127\1\0"+
-    "\1\127\10\0\15\127\3\0\3\127\3\0\1\176\1\0"+
-    "\1\102\2\177\6\0\1\130\1\131\1\132\1\133\7\0"+
-    "\15\130\3\0\3\130\3\0\1\200\1\0\1\102\2\201"+
-    "\1\0\1\202\3\0\1\202\3\131\1\133\7\0\15\131"+
-    "\3\0\3\131\3\0\1\203\1\0\1\102\2\201\1\0"+
-    "\1\202\3\0\1\202\1\132\1\131\1\132\1\133\7\0"+
-    "\15\132\3\0\3\132\3\0\1\204\1\0\1\102\2\177"+
-    "\6\0\4\133\7\0\15\133\3\0\3\133\3\0\1\205"+
-    "\2\0\1\205\7\0\1\135\1\136\1\135\1\136\7\0"+
-    "\15\135\3\0\3\135\3\0\1\205\2\0\1\205\7\0"+
-    "\4\136\7\0\15\136\3\0\3\136\3\0\1\177\1\0"+
-    "\1\102\2\177\6\0\1\137\2\140\1\141\7\0\15\137"+
-    "\3\0\3\137\3\0\1\201\1\0\1\102\2\201\1\0"+
-    "\1\202\3\0\1\202\3\140\1\141\7\0\15\140\3\0"+
-    "\3\140\3\0\1\177\1\0\1\102\2\177\6\0\4\141"+
-    "\7\0\15\141\3\0\3\141\3\0\1\202\2\0\2\202"+
-    "\1\0\1\202\3\0\1\202\3\142\10\0\15\142\3\0"+
-    "\3\142\3\0\1\106\1\0\1\102\2\77\1\0\1\100"+
-    "\3\0\1\100\1\143\2\144\1\145\7\0\15\143\3\0"+
-    "\3\143\3\0\1\101\1\0\1\102\2\103\1\0\1\104"+
-    "\3\0\1\104\3\144\1\145\7\0\15\144\3\0\3\144"+
-    "\3\0\1\106\1\0\1\102\2\77\1\0\1\100\3\0"+
-    "\1\100\4\145\7\0\15\145\3\0\3\145\3\0\1\77"+
-    "\1\0\1\102\2\77\1\0\1\100\3\0\1\100\1\146"+
-    "\2\147\1\150\7\0\15\146\3\0\3\146\3\0\1\103"+
-    "\1\0\1\102\2\103\1\0\1\104\3\0\1\104\3\147"+
-    "\1\150\7\0\15\147\3\0\3\147\3\0\1\77\1\0"+
-    "\1\102\2\77\1\0\1\100\3\0\1\100\4\150\7\0"+
-    "\15\150\3\0\3\150\3\0\1\100\2\0\2\100\1\0"+
-    "\1\100\3\0\1\100\1\151\2\152\1\153\7\0\15\151"+
-    "\3\0\3\151\3\0\1\104\2\0\2\104\1\0\1\104"+
-    "\3\0\1\104\3\152\1\153\7\0\15\152\3\0\3\152"+
-    "\3\0\1\100\2\0\2\100\1\0\1\100\3\0\1\100"+
-    "\4\153\7\0\15\153\3\0\3\153\3\0\1\206\1\0"+
-    "\1\102\2\77\1\0\1\100\3\0\1\100\1\154\1\144"+
-    "\1\155\1\145\7\0\15\154\3\0\3\154\3\0\1\207"+
-    "\1\0\1\102\2\103\1\0\1\104\3\0\1\104\1\155"+
-    "\1\144\1\155\1\145\7\0\15\155\3\0\3\155\3\0"+
-    "\1\204\1\0\1\102\2\177\6\0\1\156\2\131\1\133"+
-    "\7\0\15\156\3\0\3\156\31\0\1\160\54\0\1\210"+
-    "\64\0\1\211\26\0\4\40\7\0\15\40\3\0\1\40"+
-    "\1\212\1\40\31\0\1\165\54\0\1\213\35\0\1\36"+
-    "\1\0\4\124\1\0\3\125\3\0\3\124\1\214\11\124"+
-    "\3\0\3\124\2\0\1\215\102\0\1\172\54\0\1\216"+
-    "\34\0\1\217\52\0\1\173\3\0\4\174\7\0\15\174"+
-    "\3\0\3\174\12\0\1\173\1\0\1\220\1\0\4\124"+
-    "\1\0\3\125\3\0\15\124\3\0\3\124\16\0\1\221"+
-    "\1\133\1\221\1\133\7\0\15\221\3\0\3\221\16\0"+
-    "\4\141\7\0\15\141\3\0\3\141\16\0\4\145\7\0"+
-    "\15\145\3\0\3\145\16\0\4\150\7\0\15\150\3\0"+
-    "\3\150\16\0\4\153\7\0\15\153\3\0\3\153\16\0"+
-    "\1\222\1\145\1\222\1\145\7\0\15\222\3\0\3\222"+
-    "\16\0\4\133\7\0\15\133\3\0\3\133\16\0\4\223"+
-    "\7\0\15\223\3\0\3\223\33\0\1\224\61\0\1\225"+
-    "\30\0\4\40\6\0\1\226\15\40\3\0\2\40\1\227"+
-    "\33\0\1\230\32\0\1\173\1\0\1\36\1\0\4\124"+
-    "\1\0\3\125\3\0\10\124\1\231\4\124\3\0\3\124"+
-    "\2\0\1\232\104\0\1\233\36\0\4\234\7\0\15\234"+
-    "\3\0\3\234\3\0\1\176\1\0\1\102\2\177\6\0"+
-    "\1\221\1\133\1\221\1\133\7\0\15\221\3\0\3\221"+
-    "\3\0\1\206\1\0\1\102\2\77\1\0\1\100\3\0"+
-    "\1\100\1\222\1\145\1\222\1\145\7\0\15\222\3\0"+
-    "\3\222\3\0\1\205\2\0\1\205\7\0\4\223\7\0"+
-    "\15\223\3\0\3\223\34\0\1\235\55\0\1\236\26\0"+
-    "\1\237\60\0\4\40\6\0\1\226\15\40\3\0\3\40"+
-    "\34\0\1\240\31\0\1\173\1\0\1\117\1\0\4\124"+
-    "\1\0\3\125\3\0\15\124\3\0\3\124\34\0\1\241"+
-    "\32\0\1\242\2\0\4\234\7\0\15\234\3\0\3\234"+
-    "\35\0\1\243\62\0\1\244\20\0\1\245\77\0\1\246"+
-    "\53\0\1\247\32\0\1\36\1\0\4\174\1\0\3\125"+
-    "\3\0\15\174\3\0\3\174\36\0\1\250\53\0\1\251"+
-    "\33\0\4\252\7\0\15\252\3\0\3\252\36\0\1\253"+
-    "\53\0\1\254\54\0\1\255\61\0\1\256\11\0\1\257"+
-    "\12\0\4\252\7\0\15\252\3\0\3\252\37\0\1\260"+
-    "\53\0\1\261\54\0\1\262\22\0\1\13\62\0\4\263"+
-    "\7\0\15\263\3\0\3\263\40\0\1\264\53\0\1\265"+
-    "\43\0\1\266\26\0\2\263\1\0\2\263\1\0\2\263"+
-    "\2\0\5\263\7\0\15\263\3\0\4\263\27\0\1\267"+
-    "\53\0\1\270\24\0";
+    "\1\20\1\21\1\22\1\23\3\13\1\24\2\13\15\17"+
+    "\1\25\2\13\3\17\1\13\7\26\1\27\5\26\4\30"+
+    "\5\26\1\31\1\26\15\30\3\26\3\30\10\26\1\27"+
+    "\5\26\4\32\5\26\1\33\1\26\15\32\3\26\3\32"+
+    "\1\26\7\34\1\35\5\34\4\36\1\34\1\37\2\26"+
+    "\1\34\1\40\1\34\15\36\3\34\1\41\2\36\2\34"+
+    "\1\42\5\34\1\35\5\34\4\43\4\34\1\44\2\34"+
+    "\15\43\3\34\3\43\10\34\1\35\5\34\4\45\4\34"+
+    "\1\44\2\34\15\45\3\34\3\45\10\34\1\35\5\34"+
+    "\4\45\4\34\1\46\2\34\15\45\3\34\3\45\10\34"+
+    "\1\35\1\34\1\47\3\34\4\50\7\34\15\50\3\34"+
+    "\3\50\10\34\1\51\5\34\4\52\7\34\15\52\1\34"+
+    "\1\53\1\34\3\52\1\34\1\54\1\55\5\54\1\56"+
+    "\1\54\1\57\3\54\4\60\4\54\1\61\2\54\15\60"+
+    "\2\54\1\62\3\60\1\54\55\0\1\63\62\0\1\64"+
+    "\4\0\4\65\7\0\6\65\1\66\6\65\3\0\3\65"+
+    "\12\0\1\67\43\0\1\70\1\71\1\72\1\73\2\74"+
+    "\1\0\1\75\3\0\1\75\1\17\1\20\1\21\1\22"+
+    "\7\0\15\17\3\0\3\17\3\0\1\76\1\0\1\77"+
+    "\2\100\1\0\1\101\3\0\1\101\3\20\1\22\7\0"+
+    "\15\20\3\0\3\20\2\0\1\70\1\102\1\72\1\73"+
+    "\2\100\1\0\1\101\3\0\1\101\1\21\1\20\1\21"+
+    "\1\22\7\0\15\21\3\0\3\21\3\0\1\103\1\0"+
+    "\1\77\2\74\1\0\1\75\3\0\1\75\4\22\7\0"+
+    "\15\22\3\0\3\22\26\0\1\104\73\0\1\105\16\0"+
+    "\1\64\4\0\4\65\7\0\15\65\3\0\3\65\16\0"+
+    "\4\30\7\0\15\30\3\0\3\30\27\0\1\106\42\0"+
+    "\4\32\7\0\15\32\3\0\3\32\27\0\1\107\42\0"+
+    "\4\36\7\0\15\36\3\0\3\36\24\0\1\26\45\0"+
+    "\4\36\7\0\2\36\1\110\12\36\3\0\3\36\2\0"+
+    "\1\111\67\0\4\43\7\0\15\43\3\0\3\43\26\0"+
+    "\1\112\43\0\4\45\7\0\15\45\3\0\3\45\26\0"+
+    "\1\113\37\0\1\114\57\0\4\50\7\0\15\50\3\0"+
+    "\3\50\11\0\1\115\4\0\4\65\7\0\15\65\3\0"+
+    "\3\65\16\0\4\52\7\0\15\52\3\0\3\52\47\0"+
+    "\1\114\6\0\1\116\63\0\1\117\57\0\4\60\7\0"+
+    "\15\60\3\0\3\60\26\0\1\120\43\0\4\65\7\0"+
+    "\15\65\3\0\3\65\14\0\1\34\1\0\4\121\1\0"+
+    "\3\122\3\0\15\121\3\0\3\121\14\0\1\34\1\0"+
+    "\4\121\1\0\3\122\3\0\3\121\1\123\11\121\3\0"+
+    "\3\121\16\0\1\124\1\0\1\124\10\0\15\124\3\0"+
+    "\3\124\16\0\1\125\1\126\1\127\1\130\7\0\15\125"+
+    "\3\0\3\125\16\0\1\131\1\0\1\131\10\0\15\131"+
+    "\3\0\3\131\16\0\1\132\1\133\1\132\1\133\7\0"+
+    "\15\132\3\0\3\132\16\0\1\134\2\135\1\136\7\0"+
+    "\15\134\3\0\3\134\16\0\1\75\2\137\10\0\15\75"+
+    "\3\0\3\75\16\0\1\140\2\141\1\142\7\0\15\140"+
+    "\3\0\3\140\16\0\4\133\7\0\15\133\3\0\3\133"+
+    "\16\0\1\143\2\144\1\145\7\0\15\143\3\0\3\143"+
+    "\16\0\1\146\2\147\1\150\7\0\15\146\3\0\3\146"+
+    "\16\0\1\151\1\141\1\152\1\142\7\0\15\151\3\0"+
+    "\3\151\16\0\1\153\2\126\1\130\7\0\15\153\3\0"+
+    "\3\153\30\0\1\154\1\155\64\0\1\156\27\0\4\36"+
+    "\7\0\2\36\1\157\12\36\3\0\3\36\2\0\1\160"+
+    "\101\0\1\161\1\162\40\0\4\65\7\0\6\65\1\163"+
+    "\6\65\3\0\3\65\2\0\1\164\63\0\1\165\71\0"+
+    "\1\166\1\167\34\0\1\170\1\0\1\34\1\0\4\121"+
+    "\1\0\3\122\3\0\15\121\3\0\3\121\16\0\4\171"+
+    "\1\0\3\122\3\0\15\171\3\0\3\171\12\0\1\170"+
+    "\1\0\1\34\1\0\4\121\1\0\3\122\3\0\10\121"+
+    "\1\172\4\121\3\0\3\121\2\0\1\70\13\0\1\124"+
+    "\1\0\1\124\10\0\15\124\3\0\3\124\3\0\1\173"+
+    "\1\0\1\77\2\174\6\0\1\125\1\126\1\127\1\130"+
+    "\7\0\15\125\3\0\3\125\3\0\1\175\1\0\1\77"+
+    "\2\176\1\0\1\177\3\0\1\177\3\126\1\130\7\0"+
+    "\15\126\3\0\3\126\3\0\1\200\1\0\1\77\2\176"+
+    "\1\0\1\177\3\0\1\177\1\127\1\126\1\127\1\130"+
+    "\7\0\15\127\3\0\3\127\3\0\1\201\1\0\1\77"+
+    "\2\174\6\0\4\130\7\0\15\130\3\0\3\130\3\0"+
+    "\1\202\2\0\1\202\7\0\1\132\1\133\1\132\1\133"+
+    "\7\0\15\132\3\0\3\132\3\0\1\202\2\0\1\202"+
+    "\7\0\4\133\7\0\15\133\3\0\3\133\3\0\1\174"+
+    "\1\0\1\77\2\174\6\0\1\134\2\135\1\136\7\0"+
+    "\15\134\3\0\3\134\3\0\1\176\1\0\1\77\2\176"+
+    "\1\0\1\177\3\0\1\177\3\135\1\136\7\0\15\135"+
+    "\3\0\3\135\3\0\1\174\1\0\1\77\2\174\6\0"+
+    "\4\136\7\0\15\136\3\0\3\136\3\0\1\177\2\0"+
+    "\2\177\1\0\1\177\3\0\1\177\3\137\10\0\15\137"+
+    "\3\0\3\137\3\0\1\103\1\0\1\77\2\74\1\0"+
+    "\1\75\3\0\1\75\1\140\2\141\1\142\7\0\15\140"+
+    "\3\0\3\140\3\0\1\76\1\0\1\77\2\100\1\0"+
+    "\1\101\3\0\1\101\3\141\1\142\7\0\15\141\3\0"+
+    "\3\141\3\0\1\103\1\0\1\77\2\74\1\0\1\75"+
+    "\3\0\1\75\4\142\7\0\15\142\3\0\3\142\3\0"+
+    "\1\74\1\0\1\77\2\74\1\0\1\75\3\0\1\75"+
+    "\1\143\2\144\1\145\7\0\15\143\3\0\3\143\3\0"+
+    "\1\100\1\0\1\77\2\100\1\0\1\101\3\0\1\101"+
+    "\3\144\1\145\7\0\15\144\3\0\3\144\3\0\1\74"+
+    "\1\0\1\77\2\74\1\0\1\75\3\0\1\75\4\145"+
+    "\7\0\15\145\3\0\3\145\3\0\1\75\2\0\2\75"+
+    "\1\0\1\75\3\0\1\75\1\146\2\147\1\150\7\0"+
+    "\15\146\3\0\3\146\3\0\1\101\2\0\2\101\1\0"+
+    "\1\101\3\0\1\101\3\147\1\150\7\0\15\147\3\0"+
+    "\3\147\3\0\1\75\2\0\2\75\1\0\1\75\3\0"+
+    "\1\75\4\150\7\0\15\150\3\0\3\150\3\0\1\203"+
+    "\1\0\1\77\2\74\1\0\1\75\3\0\1\75\1\151"+
+    "\1\141\1\152\1\142\7\0\15\151\3\0\3\151\3\0"+
+    "\1\204\1\0\1\77\2\100\1\0\1\101\3\0\1\101"+
+    "\1\152\1\141\1\152\1\142\7\0\15\152\3\0\3\152"+
+    "\3\0\1\201\1\0\1\77\2\174\6\0\1\153\2\126"+
+    "\1\130\7\0\15\153\3\0\3\153\31\0\1\155\54\0"+
+    "\1\205\64\0\1\206\26\0\4\36\7\0\15\36\3\0"+
+    "\1\36\1\207\1\36\31\0\1\162\54\0\1\210\35\0"+
+    "\1\34\1\0\4\121\1\0\3\122\3\0\3\121\1\211"+
+    "\11\121\3\0\3\121\2\0\1\212\102\0\1\167\54\0"+
+    "\1\213\34\0\1\214\52\0\1\170\3\0\4\171\7\0"+
+    "\15\171\3\0\3\171\12\0\1\170\1\0\1\215\1\0"+
+    "\4\121\1\0\3\122\3\0\15\121\3\0\3\121\16\0"+
+    "\1\216\1\130\1\216\1\130\7\0\15\216\3\0\3\216"+
+    "\16\0\4\136\7\0\15\136\3\0\3\136\16\0\4\142"+
+    "\7\0\15\142\3\0\3\142\16\0\4\145\7\0\15\145"+
+    "\3\0\3\145\16\0\4\150\7\0\15\150\3\0\3\150"+
+    "\16\0\1\217\1\142\1\217\1\142\7\0\15\217\3\0"+
+    "\3\217\16\0\4\130\7\0\15\130\3\0\3\130\16\0"+
+    "\4\220\7\0\15\220\3\0\3\220\33\0\1\221\61\0"+
+    "\1\222\30\0\4\36\6\0\1\223\15\36\3\0\2\36"+
+    "\1\224\33\0\1\225\32\0\1\170\1\0\1\34\1\0"+
+    "\4\121\1\0\3\122\3\0\10\121\1\226\4\121\3\0"+
+    "\3\121\2\0\1\227\104\0\1\230\36\0\4\231\7\0"+
+    "\15\231\3\0\3\231\3\0\1\173\1\0\1\77\2\174"+
+    "\6\0\1\216\1\130\1\216\1\130\7\0\15\216\3\0"+
+    "\3\216\3\0\1\203\1\0\1\77\2\74\1\0\1\75"+
+    "\3\0\1\75\1\217\1\142\1\217\1\142\7\0\15\217"+
+    "\3\0\3\217\3\0\1\202\2\0\1\202\7\0\4\220"+
+    "\7\0\15\220\3\0\3\220\34\0\1\232\55\0\1\233"+
+    "\26\0\1\234\60\0\4\36\6\0\1\223\15\36\3\0"+
+    "\3\36\34\0\1\235\31\0\1\170\1\0\1\114\1\0"+
+    "\4\121\1\0\3\122\3\0\15\121\3\0\3\121\34\0"+
+    "\1\236\32\0\1\237\2\0\4\231\7\0\15\231\3\0"+
+    "\3\231\35\0\1\240\62\0\1\241\20\0\1\242\77\0"+
+    "\1\243\53\0\1\244\32\0\1\34\1\0\4\171\1\0"+
+    "\3\122\3\0\15\171\3\0\3\171\36\0\1\245\53\0"+
+    "\1\246\33\0\4\247\7\0\15\247\3\0\3\247\36\0"+
+    "\1\250\53\0\1\251\54\0\1\252\61\0\1\253\11\0"+
+    "\1\254\12\0\4\247\7\0\15\247\3\0\3\247\37\0"+
+    "\1\255\53\0\1\256\54\0\1\257\22\0\1\13\62\0"+
+    "\4\260\7\0\15\260\3\0\3\260\40\0\1\261\53\0"+
+    "\1\262\43\0\1\263\26\0\2\260\1\0\2\260\1\0"+
+    "\2\260\2\0\5\260\7\0\15\260\3\0\4\260\27\0"+
+    "\1\264\53\0\1\265\24\0";
 
   private static int [] zzUnpackTrans() {
-    int [] result = new int[7040];
+    int [] result = new int[6908];
     int offset = 0;
     offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
     return result;
@@ -355,8 +351,8 @@
   private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();
 
   private static final String ZZ_ATTRIBUTE_PACKED_0 =
-    "\12\0\1\11\7\1\1\11\3\1\1\11\6\1\1\11"+
-    "\2\1\1\11\14\1\1\11\6\1\2\11\3\0\1\11"+
+    "\12\0\1\11\7\1\1\11\2\1\1\11\5\1\1\11"+
+    "\3\1\1\11\13\1\1\11\5\1\2\11\3\0\1\11"+
     "\14\0\2\1\2\11\1\1\1\0\2\1\1\11\1\0"+
     "\1\1\1\0\1\1\3\0\7\1\2\0\1\1\1\0"+
     "\15\1\3\0\1\1\1\11\3\0\1\1\1\11\5\0"+
@@ -365,7 +361,7 @@
     "\2\0\3\11";
 
   private static int [] zzUnpackAttribute() {
-    int [] result = new int[184];
+    int [] result = new int[181];
     int offset = 0;
     offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
     return result;
@@ -508,7 +504,6 @@
 
   /**
    * Creates a new scanner
-   * There is also a java.io.InputStream version of this constructor.
    *
    * @param   in  the java.io.Reader to read input from.
    */
@@ -516,7 +511,6 @@
     this.zzReader = in;
   }
 
-  
 
   /** 
    * Unpacks the compressed character translation table.
Index: lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerImpl.jflex
===================================================================
--- lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerImpl.jflex	(revision 1548223)
+++ lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerImpl.jflex	(working copy)
@@ -212,7 +212,7 @@
   {DOUBLE_BRACE} {numWikiTokensSeen = 0; positionInc = 1; currentTokType = CITATION; yybegin(DOUBLE_BRACE_STATE);/* Break so we don't hit fall-through warning: */ break;}
   {CITATION} {numWikiTokensSeen = 0; positionInc = 1; currentTokType = CITATION; yybegin(DOUBLE_BRACE_STATE);/* Break so we don't hit fall-through warning: */ break;}
 //ignore
-  . | {WHITESPACE} |{INFOBOX}                                               {numWikiTokensSeen = 0;  positionInc = 1; /* Break so we don't hit fall-through warning: */ break;}
+  [^] |{INFOBOX}                                               {numWikiTokensSeen = 0;  positionInc = 1; /* Break so we don't hit fall-through warning: */ break;}
 }
 
 <INTERNAL_LINK_STATE>{
@@ -221,7 +221,7 @@
   {ALPHANUM} {yybegin(INTERNAL_LINK_STATE); numWikiTokensSeen++; return currentTokType;}
   {DOUBLE_BRACKET_CLOSE} {numLinkToks = 0; yybegin(YYINITIAL); /* Break so we don't hit fall-through warning: */ break;}
   //ignore
-  . | {WHITESPACE}                                               { positionInc = 1; /* Break so we don't hit fall-through warning: */ break;}
+  [^]                                               { positionInc = 1; /* Break so we don't hit fall-through warning: */ break;}
 }
 
 <EXTERNAL_LINK_STATE>{
@@ -236,7 +236,7 @@
   {ALPHANUM} {yybegin(CATEGORY_STATE); numWikiTokensSeen++; return currentTokType;}
   {DOUBLE_BRACKET_CLOSE} {yybegin(YYINITIAL);/* Break so we don't hit fall-through warning: */ break;}
   //ignore
-  . | {WHITESPACE}                                               { positionInc = 1; /* Break so we don't hit fall-through warning: */ break;}
+  [^]                                               { positionInc = 1; /* Break so we don't hit fall-through warning: */ break;}
 }
 //italics
 <TWO_SINGLE_QUOTES_STATE>{
@@ -249,7 +249,7 @@
    {EXTERNAL_LINK} {currentTokType = EXTERNAL_LINK; numWikiTokensSeen = 0; yybegin(EXTERNAL_LINK_STATE); /* Break so we don't hit fall-through warning: */ break;}
 
    //ignore
-  . | {WHITESPACE}                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
+   [^]                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
 }
 //bold
 <THREE_SINGLE_QUOTES_STATE>{
@@ -260,7 +260,7 @@
    {EXTERNAL_LINK} {currentTokType = EXTERNAL_LINK; numWikiTokensSeen = 0; yybegin(EXTERNAL_LINK_STATE); /* Break so we don't hit fall-through warning: */ break;}
 
    //ignore
-  . | {WHITESPACE}                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
+   [^]                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
 
 }
 //bold italics
@@ -272,7 +272,7 @@
    {EXTERNAL_LINK} {currentTokType = EXTERNAL_LINK; numWikiTokensSeen = 0; yybegin(EXTERNAL_LINK_STATE); /* Break so we don't hit fall-through warning: */ break;}
 
    //ignore
-  . | {WHITESPACE}                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
+   [^]                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
 }
 
 <DOUBLE_EQUALS_STATE>{
@@ -280,15 +280,15 @@
  {ALPHANUM} {currentTokType = HEADING; yybegin(DOUBLE_EQUALS_STATE); numWikiTokensSeen++; return currentTokType;}
  {DOUBLE_EQUALS} {yybegin(YYINITIAL); /* Break so we don't hit fall-through warning: */ break;}
   //ignore
-  . | {WHITESPACE}                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
+  [^]                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
 }
 
 <DOUBLE_BRACE_STATE>{
   {ALPHANUM} {yybegin(DOUBLE_BRACE_STATE); numWikiTokensSeen = 0; return currentTokType;}
   {DOUBLE_BRACE_CLOSE} {yybegin(YYINITIAL); /* Break so we don't hit fall-through warning: */ break;}
   {CITATION_CLOSE} {yybegin(YYINITIAL); /* Break so we don't hit fall-through warning: */ break;}
-   //ignore
-  . | {WHITESPACE}                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
+  //ignore
+  [^]                                               { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
 }
 
 <STRING> {
@@ -305,7 +305,7 @@
 
   {PIPE} {yybegin(STRING); return currentTokType;/*pipe*/}
 
-  .|{WHITESPACE}                                              { /* Break so we don't hit fall-through warning: */ break;/* ignore STRING */ }
+  [^]                                              { /* Break so we don't hit fall-through warning: */ break;/* ignore STRING */ }
 }
 
 
@@ -327,7 +327,7 @@
 //end wikipedia
 
 /** Ignore the rest */
-. | {WHITESPACE}|{TAGS}                                                { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
+[^] | {TAGS}                                          { /* Break so we don't hit fall-through warning: */ break;/* ignore */ }
 
 
 //INTERNAL_LINK = "["{2}({ALPHANUM}+{WHITESPACE}*)+"]"{2}
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestStandardAnalyzer.java
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestStandardAnalyzer.java	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestStandardAnalyzer.java	(working copy)
@@ -202,7 +202,7 @@
   }
   
   public void testUnicodeWordBreaks() throws Exception {
-    WordBreakTestUnicode_6_1_0 wordBreakTest = new WordBreakTestUnicode_6_1_0();
+    WordBreakTestUnicode_6_3_0 wordBreakTest = new WordBreakTestUnicode_6_3_0();
     wordBreakTest.test(a);
   }
   
@@ -230,6 +230,8 @@
     checkOneTerm(a, "壹゙", "壹゙"); // ideographic
     checkOneTerm(a, "아゙",  "아゙"); // hangul
   }
+  
+  
 
   /** blast some random strings through the analyzer */
   public void testRandomStrings() throws Exception {
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer.java
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer.java	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestUAX29URLEmailTokenizer.java	(working copy)
@@ -424,7 +424,7 @@
   }
 
   public void testUnicodeWordBreaks() throws Exception {
-    WordBreakTestUnicode_6_1_0 wordBreakTest = new WordBreakTestUnicode_6_1_0();
+    WordBreakTestUnicode_6_3_0 wordBreakTest = new WordBreakTestUnicode_6_3_0();
     wordBreakTest.test(a);
   }
   
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/WordBreakTestUnicode_6_1_0.java (deleted)
===================================================================
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/WordBreakTestUnicode_6_3_0.java
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/WordBreakTestUnicode_6_3_0.java	(revision 0)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/WordBreakTestUnicode_6_3_0.java	(working copy)
@@ -0,0 +1,5537 @@
+package org.apache.lucene.analysis.core;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.lucene.analysis.Analyzer;
+import org.apache.lucene.analysis.BaseTokenStreamTestCase;
+import org.junit.Ignore;
+
+/**
+ * This class was automatically generated by generateJavaUnicodeWordBreakTest.pl
+ * from: http://www.unicode.org/Public/6.3.0/ucd/auxiliary/WordBreakTest.txt
+ *
+ * WordBreakTest.txt indicates the points in the provided character sequences
+ * at which conforming implementations must and must not break words.  This
+ * class tests for expected token extraction from each of the test sequences
+ * in WordBreakTest.txt, where the expected tokens are those character
+ * sequences bounded by word breaks and containing at least one character
+ * from one of the following character sets:
+ *
+ *    \p{Script = Han}                (From http://www.unicode.org/Public/6.3.0/ucd/Scripts.txt)
+ *    \p{Script = Hiragana}
+ *    \p{LineBreak = Complex_Context} (From http://www.unicode.org/Public/6.3.0/ucd/LineBreak.txt)
+ *    \p{WordBreak = ALetter}         (From http://www.unicode.org/Public/6.3.0/ucd/auxiliary/WordBreakProperty.txt)
+ *    \p{WordBreak = Hebrew_Letter}
+ *    \p{WordBreak = Katakana}
+ *    \p{WordBreak = Numeric}         (Excludes full-width Arabic digits)
+ *    [\uFF10-\uFF19]                (Full-width Arabic digits)
+ */
+@Ignore
+public class WordBreakTestUnicode_6_3_0 extends BaseTokenStreamTestCase {
+
+  public void test(Analyzer analyzer) throws Exception {
+    // ÷ 0001 ÷ 0001 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0001",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 0001 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 000D ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\r",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 000D ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\r",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 000A ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\n",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 000A ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\n",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 000B ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u000B",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 000B ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 3031 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0001 × 0308 ÷ 3031 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0001 ÷ 0041 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0001 × 0308 ÷ 0041 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0001 ÷ 003A ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u003A",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 003A ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 002C ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u002C",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 002C ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 002E ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u002E",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 002E ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 0030 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0001 × 0308 ÷ 0030 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0001 ÷ 005F ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u005F",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 005F ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 1F1E6 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 05D0 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0001 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0001 ÷ 0022 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\"",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 0022 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\"",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 0027 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0027",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 ÷ 0027 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 0001 × 00AD ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u00AD",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 × 00AD ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 0001 × 0300 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0300",
+                     new String[] {  });
+
+    // ÷ 0001 × 0308 × 0300 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 0001 ÷ 0061 × 2060 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0001 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0001 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0001 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0001 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0001 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0001 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0001 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0001 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0001 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <START OF HEADING> (Other) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0001 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0001\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0001 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0001",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 0001 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 000D ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\r",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 000D ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\r",
+                     new String[] {  });
+
+    // ÷ 000D × 000A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) × [3.0] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\n",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 000A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\n",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 000B ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u000B",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 000B ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 3031 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 000D ÷ 0308 ÷ 3031 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 000D ÷ 0041 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 000D ÷ 0308 ÷ 0041 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 000D ÷ 003A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u003A",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 003A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 002C ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u002C",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 002C ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 002E ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u002E",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 002E ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0030 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 000D ÷ 0308 ÷ 0030 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 000D ÷ 005F ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u005F",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 005F ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 1F1E6 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 05D0 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 000D ÷ 0308 ÷ 05D0 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 000D ÷ 0022 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\"",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 0022 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\"",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0027 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0027",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 ÷ 0027 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 00AD ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u00AD",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 × 00AD ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0300 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0300",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0308 × 0300 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 000D ÷ 0061 × 2060 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 000D ÷ 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 000D ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 000D ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 000D ÷ 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <CARRIAGE RETURN (CR)> (CR) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\r\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0001 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0001",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 0001 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 000D ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\r",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 000D ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\r",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 000A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\n",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 000A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\n",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 000B ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u000B",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 000B ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 3031 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 000A ÷ 0308 ÷ 3031 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 000A ÷ 0041 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 000A ÷ 0308 ÷ 0041 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 000A ÷ 003A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u003A",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 003A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 002C ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u002C",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 002C ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 002E ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u002E",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 002E ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0030 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 000A ÷ 0308 ÷ 0030 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 000A ÷ 005F ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u005F",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 005F ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 1F1E6 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 05D0 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 000A ÷ 0308 ÷ 05D0 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 000A ÷ 0022 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\"",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 0022 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\"",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0027 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0027",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 ÷ 0027 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 00AD ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u00AD",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 × 00AD ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0300 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0300",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0308 × 0300 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 000A ÷ 0061 × 2060 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 000A ÷ 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 000A ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 000A ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 000A ÷ 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <LINE FEED (LF)> (LF) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\n\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0001 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0001",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 0001 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 000D ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\r",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 000D ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\r",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 000A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\n",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 000A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\n",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 000B ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u000B",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 000B ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 3031 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 000B ÷ 0308 ÷ 3031 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 000B ÷ 0041 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 000B ÷ 0308 ÷ 0041 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 000B ÷ 003A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u003A",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 003A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 002C ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u002C",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 002C ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 002E ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u002E",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 002E ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0030 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 000B ÷ 0308 ÷ 0030 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 000B ÷ 005F ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u005F",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 005F ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 1F1E6 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 05D0 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 000B ÷ 0308 ÷ 05D0 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 000B ÷ 0022 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\"",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 0022 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\"",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0027 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0027",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 ÷ 0027 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 00AD ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u00AD",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 × 00AD ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0300 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0300",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0308 × 0300 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 000B ÷ 0061 × 2060 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 000B ÷ 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 000B ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 000B ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 000B ÷ 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] <LINE TABULATION> (Newline) ÷ [3.1] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u000B\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 3031 ÷ 0001 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0001",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 0001 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0001",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 000D ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\r",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 000D ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\r",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 000A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\n",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 000A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\n",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 000B ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u000B",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 000B ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u000B",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 × 3031 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [13.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u3031",
+                     new String[] { "\u3031\u3031" });
+
+    // ÷ 3031 × 0308 × 3031 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u3031",
+                     new String[] { "\u3031\u0308\u3031" });
+
+    // ÷ 3031 ÷ 0041 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0041",
+                     new String[] { "\u3031", "\u0041" });
+
+    // ÷ 3031 × 0308 ÷ 0041 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0041",
+                     new String[] { "\u3031\u0308", "\u0041" });
+
+    // ÷ 3031 ÷ 003A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u003A",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 003A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u003A",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 002C ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u002C",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 002C ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u002C",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 002E ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u002E",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 002E ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u002E",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 0030 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0030",
+                     new String[] { "\u3031", "\u0030" });
+
+    // ÷ 3031 × 0308 ÷ 0030 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0030",
+                     new String[] { "\u3031\u0308", "\u0030" });
+
+    // ÷ 3031 × 005F ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u005F",
+                     new String[] { "\u3031\u005F" });
+
+    // ÷ 3031 × 0308 × 005F ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u005F",
+                     new String[] { "\u3031\u0308\u005F" });
+
+    // ÷ 3031 ÷ 1F1E6 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\uD83C\uDDE6",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\uD83C\uDDE6",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 05D0 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u05D0",
+                     new String[] { "\u3031", "\u05D0" });
+
+    // ÷ 3031 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u05D0",
+                     new String[] { "\u3031\u0308", "\u05D0" });
+
+    // ÷ 3031 ÷ 0022 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\"",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 0022 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\"",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 ÷ 0027 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0027",
+                     new String[] { "\u3031" });
+
+    // ÷ 3031 × 0308 ÷ 0027 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0027",
+                     new String[] { "\u3031\u0308" });
+
+    // ÷ 3031 × 00AD ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u00AD",
+                     new String[] { "\u3031\u00AD" });
+
+    // ÷ 3031 × 0308 × 00AD ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u00AD",
+                     new String[] { "\u3031\u0308\u00AD" });
+
+    // ÷ 3031 × 0300 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0300",
+                     new String[] { "\u3031\u0300" });
+
+    // ÷ 3031 × 0308 × 0300 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0300",
+                     new String[] { "\u3031\u0308\u0300" });
+
+    // ÷ 3031 ÷ 0061 × 2060 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0061\u2060",
+                     new String[] { "\u3031", "\u0061\u2060" });
+
+    // ÷ 3031 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0061\u2060",
+                     new String[] { "\u3031\u0308", "\u0061\u2060" });
+
+    // ÷ 3031 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0061\u003A",
+                     new String[] { "\u3031", "\u0061" });
+
+    // ÷ 3031 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0061\u003A",
+                     new String[] { "\u3031\u0308", "\u0061" });
+
+    // ÷ 3031 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0061\u0027",
+                     new String[] { "\u3031", "\u0061" });
+
+    // ÷ 3031 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0061\u0027",
+                     new String[] { "\u3031\u0308", "\u0061" });
+
+    // ÷ 3031 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0061\u0027\u2060",
+                     new String[] { "\u3031", "\u0061" });
+
+    // ÷ 3031 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0061\u0027\u2060",
+                     new String[] { "\u3031\u0308", "\u0061" });
+
+    // ÷ 3031 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0061\u002C",
+                     new String[] { "\u3031", "\u0061" });
+
+    // ÷ 3031 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0061\u002C",
+                     new String[] { "\u3031\u0308", "\u0061" });
+
+    // ÷ 3031 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0031\u003A",
+                     new String[] { "\u3031", "\u0031" });
+
+    // ÷ 3031 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0031\u003A",
+                     new String[] { "\u3031\u0308", "\u0031" });
+
+    // ÷ 3031 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0031\u0027",
+                     new String[] { "\u3031", "\u0031" });
+
+    // ÷ 3031 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0031\u0027",
+                     new String[] { "\u3031\u0308", "\u0031" });
+
+    // ÷ 3031 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0031\u002C",
+                     new String[] { "\u3031", "\u0031" });
+
+    // ÷ 3031 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0031\u002C",
+                     new String[] { "\u3031\u0308", "\u0031" });
+
+    // ÷ 3031 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0031\u002E\u2060",
+                     new String[] { "\u3031", "\u0031" });
+
+    // ÷ 3031 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] VERTICAL KANA REPEAT MARK (Katakana) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u3031\u0308\u0031\u002E\u2060",
+                     new String[] { "\u3031\u0308", "\u0031" });
+
+    // ÷ 0041 ÷ 0001 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0001",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 0001 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0001",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 ÷ 000D ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\r",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 000D ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\r",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 ÷ 000A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\n",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 000A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\n",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 ÷ 000B ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u000B",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 000B ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u000B",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 ÷ 3031 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u3031",
+                     new String[] { "\u0041", "\u3031" });
+
+    // ÷ 0041 × 0308 ÷ 3031 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u3031",
+                     new String[] { "\u0041\u0308", "\u3031" });
+
+    // ÷ 0041 × 0041 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [5.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0041",
+                     new String[] { "\u0041\u0041" });
+
+    // ÷ 0041 × 0308 × 0041 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0041",
+                     new String[] { "\u0041\u0308\u0041" });
+
+    // ÷ 0041 ÷ 003A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u003A",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 003A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u003A",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 ÷ 002C ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u002C",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 002C ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u002C",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 ÷ 002E ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u002E",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 002E ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u002E",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 × 0030 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [9.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0030",
+                     new String[] { "\u0041\u0030" });
+
+    // ÷ 0041 × 0308 × 0030 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0030",
+                     new String[] { "\u0041\u0308\u0030" });
+
+    // ÷ 0041 × 005F ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u005F",
+                     new String[] { "\u0041\u005F" });
+
+    // ÷ 0041 × 0308 × 005F ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u005F",
+                     new String[] { "\u0041\u0308\u005F" });
+
+    // ÷ 0041 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\uD83C\uDDE6",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\uD83C\uDDE6",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 × 05D0 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [5.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u05D0",
+                     new String[] { "\u0041\u05D0" });
+
+    // ÷ 0041 × 0308 × 05D0 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u05D0",
+                     new String[] { "\u0041\u0308\u05D0" });
+
+    // ÷ 0041 ÷ 0022 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\"",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 0022 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\"",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 ÷ 0027 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0027",
+                     new String[] { "\u0041" });
+
+    // ÷ 0041 × 0308 ÷ 0027 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0027",
+                     new String[] { "\u0041\u0308" });
+
+    // ÷ 0041 × 00AD ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u00AD",
+                     new String[] { "\u0041\u00AD" });
+
+    // ÷ 0041 × 0308 × 00AD ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u00AD",
+                     new String[] { "\u0041\u0308\u00AD" });
+
+    // ÷ 0041 × 0300 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0300",
+                     new String[] { "\u0041\u0300" });
+
+    // ÷ 0041 × 0308 × 0300 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0300",
+                     new String[] { "\u0041\u0308\u0300" });
+
+    // ÷ 0041 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0061\u2060",
+                     new String[] { "\u0041\u0061\u2060" });
+
+    // ÷ 0041 × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0061\u2060",
+                     new String[] { "\u0041\u0308\u0061\u2060" });
+
+    // ÷ 0041 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0061\u003A",
+                     new String[] { "\u0041\u0061" });
+
+    // ÷ 0041 × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0061\u003A",
+                     new String[] { "\u0041\u0308\u0061" });
+
+    // ÷ 0041 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0061\u0027",
+                     new String[] { "\u0041\u0061" });
+
+    // ÷ 0041 × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0061\u0027",
+                     new String[] { "\u0041\u0308\u0061" });
+
+    // ÷ 0041 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0061\u0027\u2060",
+                     new String[] { "\u0041\u0061" });
+
+    // ÷ 0041 × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0041\u0308\u0061" });
+
+    // ÷ 0041 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0061\u002C",
+                     new String[] { "\u0041\u0061" });
+
+    // ÷ 0041 × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0061\u002C",
+                     new String[] { "\u0041\u0308\u0061" });
+
+    // ÷ 0041 × 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0031\u003A",
+                     new String[] { "\u0041\u0031" });
+
+    // ÷ 0041 × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0031\u003A",
+                     new String[] { "\u0041\u0308\u0031" });
+
+    // ÷ 0041 × 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0031\u0027",
+                     new String[] { "\u0041\u0031" });
+
+    // ÷ 0041 × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0031\u0027",
+                     new String[] { "\u0041\u0308\u0031" });
+
+    // ÷ 0041 × 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0031\u002C",
+                     new String[] { "\u0041\u0031" });
+
+    // ÷ 0041 × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0031\u002C",
+                     new String[] { "\u0041\u0308\u0031" });
+
+    // ÷ 0041 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0031\u002E\u2060",
+                     new String[] { "\u0041\u0031" });
+
+    // ÷ 0041 × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN CAPITAL LETTER A (ALetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0041\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0041\u0308\u0031" });
+
+    // ÷ 003A ÷ 0001 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0001",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 0001 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 000D ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\r",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 000D ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\r",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 000A ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\n",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 000A ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\n",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 000B ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u000B",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 000B ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 3031 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 003A × 0308 ÷ 3031 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 003A ÷ 0041 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 003A × 0308 ÷ 0041 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 003A ÷ 003A ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u003A",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 003A ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 002C ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u002C",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 002C ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 002E ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u002E",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 002E ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 0030 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 003A × 0308 ÷ 0030 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 003A ÷ 005F ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u005F",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 005F ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 1F1E6 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 05D0 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 003A × 0308 ÷ 05D0 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 003A ÷ 0022 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\"",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 0022 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\"",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 0027 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0027",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 ÷ 0027 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 003A × 00AD ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u00AD",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 × 00AD ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 003A × 0300 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0300",
+                     new String[] {  });
+
+    // ÷ 003A × 0308 × 0300 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 003A ÷ 0061 × 2060 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 003A × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 003A ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 003A ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 003A × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 003A ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 003A × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 003A ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 003A × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 003A ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 003A × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u003A\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C ÷ 0001 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0001",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 0001 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 000D ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\r",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 000D ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\r",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 000A ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\n",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 000A ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\n",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 000B ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u000B",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 000B ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 3031 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 002C × 0308 ÷ 3031 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 002C ÷ 0041 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 002C × 0308 ÷ 0041 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 002C ÷ 003A ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u003A",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 003A ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 002C ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u002C",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 002C ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 002E ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u002E",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 002E ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 0030 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 002C × 0308 ÷ 0030 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 002C ÷ 005F ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u005F",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 005F ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 1F1E6 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 05D0 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 002C × 0308 ÷ 05D0 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 002C ÷ 0022 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\"",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 0022 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\"",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 0027 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0027",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 ÷ 0027 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 002C × 00AD ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u00AD",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 × 00AD ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 002C × 0300 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0300",
+                     new String[] {  });
+
+    // ÷ 002C × 0308 × 0300 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 002C ÷ 0061 × 2060 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 002C × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 002C ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 002C ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 002C × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002C\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E ÷ 0001 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0001",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 0001 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 000D ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\r",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 000D ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\r",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 000A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\n",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 000A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\n",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 000B ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u000B",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 000B ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 3031 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 002E × 0308 ÷ 3031 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 002E ÷ 0041 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 002E × 0308 ÷ 0041 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 002E ÷ 003A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u003A",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 003A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 002C ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u002C",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 002C ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 002E ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u002E",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 002E ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 0030 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 002E × 0308 ÷ 0030 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 002E ÷ 005F ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u005F",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 005F ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 1F1E6 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 05D0 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 002E × 0308 ÷ 05D0 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 002E ÷ 0022 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\"",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 0022 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\"",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 0027 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0027",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 ÷ 0027 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 002E × 00AD ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u00AD",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 × 00AD ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 002E × 0300 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0300",
+                     new String[] {  });
+
+    // ÷ 002E × 0308 × 0300 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 002E ÷ 0061 × 2060 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 002E × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 002E ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 002E ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 002E × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] FULL STOP (MidNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u002E\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0030 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0001",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0001",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 ÷ 000D ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\r",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 000D ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\r",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 ÷ 000A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\n",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 000A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\n",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 ÷ 000B ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u000B",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 000B ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u000B",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u3031",
+                     new String[] { "\u0030", "\u3031" });
+
+    // ÷ 0030 × 0308 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u3031",
+                     new String[] { "\u0030\u0308", "\u3031" });
+
+    // ÷ 0030 × 0041 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [10.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0041",
+                     new String[] { "\u0030\u0041" });
+
+    // ÷ 0030 × 0308 × 0041 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [10.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0041",
+                     new String[] { "\u0030\u0308\u0041" });
+
+    // ÷ 0030 ÷ 003A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u003A",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 003A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u003A",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 ÷ 002C ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u002C",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 002C ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u002C",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 ÷ 002E ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u002E",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 002E ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u002E",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 × 0030 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [8.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0030",
+                     new String[] { "\u0030\u0030" });
+
+    // ÷ 0030 × 0308 × 0030 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [8.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0030",
+                     new String[] { "\u0030\u0308\u0030" });
+
+    // ÷ 0030 × 005F ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u005F",
+                     new String[] { "\u0030\u005F" });
+
+    // ÷ 0030 × 0308 × 005F ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u005F",
+                     new String[] { "\u0030\u0308\u005F" });
+
+    // ÷ 0030 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\uD83C\uDDE6",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\uD83C\uDDE6",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 × 05D0 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [10.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u05D0",
+                     new String[] { "\u0030\u05D0" });
+
+    // ÷ 0030 × 0308 × 05D0 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [10.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u05D0",
+                     new String[] { "\u0030\u0308\u05D0" });
+
+    // ÷ 0030 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\"",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\"",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0027",
+                     new String[] { "\u0030" });
+
+    // ÷ 0030 × 0308 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0027",
+                     new String[] { "\u0030\u0308" });
+
+    // ÷ 0030 × 00AD ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u00AD",
+                     new String[] { "\u0030\u00AD" });
+
+    // ÷ 0030 × 0308 × 00AD ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u00AD",
+                     new String[] { "\u0030\u0308\u00AD" });
+
+    // ÷ 0030 × 0300 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0300",
+                     new String[] { "\u0030\u0300" });
+
+    // ÷ 0030 × 0308 × 0300 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0300",
+                     new String[] { "\u0030\u0308\u0300" });
+
+    // ÷ 0030 × 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [10.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0061\u2060",
+                     new String[] { "\u0030\u0061\u2060" });
+
+    // ÷ 0030 × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [10.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0061\u2060",
+                     new String[] { "\u0030\u0308\u0061\u2060" });
+
+    // ÷ 0030 × 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0061\u003A",
+                     new String[] { "\u0030\u0061" });
+
+    // ÷ 0030 × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0061\u003A",
+                     new String[] { "\u0030\u0308\u0061" });
+
+    // ÷ 0030 × 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0061\u0027",
+                     new String[] { "\u0030\u0061" });
+
+    // ÷ 0030 × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0061\u0027",
+                     new String[] { "\u0030\u0308\u0061" });
+
+    // ÷ 0030 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0061\u0027\u2060",
+                     new String[] { "\u0030\u0061" });
+
+    // ÷ 0030 × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0030\u0308\u0061" });
+
+    // ÷ 0030 × 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0061\u002C",
+                     new String[] { "\u0030\u0061" });
+
+    // ÷ 0030 × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0061\u002C",
+                     new String[] { "\u0030\u0308\u0061" });
+
+    // ÷ 0030 × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0031\u003A",
+                     new String[] { "\u0030\u0031" });
+
+    // ÷ 0030 × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0031\u003A",
+                     new String[] { "\u0030\u0308\u0031" });
+
+    // ÷ 0030 × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0031\u0027",
+                     new String[] { "\u0030\u0031" });
+
+    // ÷ 0030 × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0031\u0027",
+                     new String[] { "\u0030\u0308\u0031" });
+
+    // ÷ 0030 × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0031\u002C",
+                     new String[] { "\u0030\u0031" });
+
+    // ÷ 0030 × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0031\u002C",
+                     new String[] { "\u0030\u0308\u0031" });
+
+    // ÷ 0030 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0031\u002E\u2060",
+                     new String[] { "\u0030\u0031" });
+
+    // ÷ 0030 × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ZERO (Numeric) × [4.0] COMBINING DIAERESIS (Extend_FE) × [8.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0030\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0030\u0308\u0031" });
+
+    // ÷ 005F ÷ 0001 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0001",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 0001 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 005F ÷ 000D ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\r",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 000D ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\r",
+                     new String[] {  });
+
+    // ÷ 005F ÷ 000A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\n",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 000A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\n",
+                     new String[] {  });
+
+    // ÷ 005F ÷ 000B ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u000B",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 000B ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 005F × 3031 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u3031",
+                     new String[] { "\u005F\u3031" });
+
+    // ÷ 005F × 0308 × 3031 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u3031",
+                     new String[] { "\u005F\u0308\u3031" });
+
+    // ÷ 005F × 0041 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0041",
+                     new String[] { "\u005F\u0041" });
+
+    // ÷ 005F × 0308 × 0041 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0041",
+                     new String[] { "\u005F\u0308\u0041" });
+
+    // ÷ 005F ÷ 003A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u003A",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 003A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 005F ÷ 002C ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u002C",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 002C ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 005F ÷ 002E ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u002E",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 002E ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 005F × 0030 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0030",
+                     new String[] { "\u005F\u0030" });
+
+    // ÷ 005F × 0308 × 0030 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0030",
+                     new String[] { "\u005F\u0308\u0030" });
+
+    // ÷ 005F × 005F ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u005F",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 × 005F ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 005F ÷ 1F1E6 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 005F × 05D0 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u05D0",
+                     new String[] { "\u005F\u05D0" });
+
+    // ÷ 005F × 0308 × 05D0 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u05D0",
+                     new String[] { "\u005F\u0308\u05D0" });
+
+    // ÷ 005F ÷ 0022 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\"",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 0022 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\"",
+                     new String[] {  });
+
+    // ÷ 005F ÷ 0027 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0027",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 ÷ 0027 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 005F × 00AD ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u00AD",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 × 00AD ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 005F × 0300 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0300",
+                     new String[] {  });
+
+    // ÷ 005F × 0308 × 0300 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 005F × 0061 × 2060 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0061\u2060",
+                     new String[] { "\u005F\u0061\u2060" });
+
+    // ÷ 005F × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0061\u2060",
+                     new String[] { "\u005F\u0308\u0061\u2060" });
+
+    // ÷ 005F × 0061 ÷ 003A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0061\u003A",
+                     new String[] { "\u005F\u0061" });
+
+    // ÷ 005F × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0061\u003A",
+                     new String[] { "\u005F\u0308\u0061" });
+
+    // ÷ 005F × 0061 ÷ 0027 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0061\u0027",
+                     new String[] { "\u005F\u0061" });
+
+    // ÷ 005F × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0061\u0027",
+                     new String[] { "\u005F\u0308\u0061" });
+
+    // ÷ 005F × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0061\u0027\u2060",
+                     new String[] { "\u005F\u0061" });
+
+    // ÷ 005F × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0061\u0027\u2060",
+                     new String[] { "\u005F\u0308\u0061" });
+
+    // ÷ 005F × 0061 ÷ 002C ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0061\u002C",
+                     new String[] { "\u005F\u0061" });
+
+    // ÷ 005F × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0061\u002C",
+                     new String[] { "\u005F\u0308\u0061" });
+
+    // ÷ 005F × 0031 ÷ 003A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0031\u003A",
+                     new String[] { "\u005F\u0031" });
+
+    // ÷ 005F × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0031\u003A",
+                     new String[] { "\u005F\u0308\u0031" });
+
+    // ÷ 005F × 0031 ÷ 0027 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0031\u0027",
+                     new String[] { "\u005F\u0031" });
+
+    // ÷ 005F × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0031\u0027",
+                     new String[] { "\u005F\u0308\u0031" });
+
+    // ÷ 005F × 0031 ÷ 002C ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0031\u002C",
+                     new String[] { "\u005F\u0031" });
+
+    // ÷ 005F × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0031\u002C",
+                     new String[] { "\u005F\u0308\u0031" });
+
+    // ÷ 005F × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0031\u002E\u2060",
+                     new String[] { "\u005F\u0031" });
+
+    // ÷ 005F × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LOW LINE (ExtendNumLet) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u005F\u0308\u0031\u002E\u2060",
+                     new String[] { "\u005F\u0308\u0031" });
+
+    // ÷ 1F1E6 ÷ 0001 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0001",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 0001 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 000D ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\r",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 000D ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\r",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 000A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\n",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 000A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\n",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 000B ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u000B",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 000B ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 3031 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 1F1E6 × 0308 ÷ 3031 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 1F1E6 ÷ 0041 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0041 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 1F1E6 ÷ 003A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u003A",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 003A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 002C ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u002C",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 002C ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 002E ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u002E",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 002E ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 0030 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0030 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 1F1E6 ÷ 005F ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u005F",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 005F ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 1F1E6 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 × 1F1E6 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.3] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 05D0 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 1F1E6 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 1F1E6 ÷ 0022 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\"",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 0022 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\"",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 0027 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0027",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 ÷ 0027 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 00AD ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u00AD",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 × 00AD ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0300 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0300",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 0308 × 0300 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 1F1E6 ÷ 0061 × 2060 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 1F1E6 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 1F1E6 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 1F1E6 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 1F1E6 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 1F1E6 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 1F1E6 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 05D0 ÷ 0001 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0001",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 0001 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0001",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 ÷ 000D ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\r",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 000D ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\r",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 ÷ 000A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\n",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 000A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\n",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 ÷ 000B ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u000B",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 000B ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u000B",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 ÷ 3031 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u3031",
+                     new String[] { "\u05D0", "\u3031" });
+
+    // ÷ 05D0 × 0308 ÷ 3031 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u3031",
+                     new String[] { "\u05D0\u0308", "\u3031" });
+
+    // ÷ 05D0 × 0041 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [5.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0041",
+                     new String[] { "\u05D0\u0041" });
+
+    // ÷ 05D0 × 0308 × 0041 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0041",
+                     new String[] { "\u05D0\u0308\u0041" });
+
+    // ÷ 05D0 ÷ 003A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u003A",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 003A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u003A",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 ÷ 002C ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u002C",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 002C ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u002C",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 ÷ 002E ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u002E",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 002E ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u002E",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 × 0030 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [9.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0030",
+                     new String[] { "\u05D0\u0030" });
+
+    // ÷ 05D0 × 0308 × 0030 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0030",
+                     new String[] { "\u05D0\u0308\u0030" });
+
+    // ÷ 05D0 × 005F ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u005F",
+                     new String[] { "\u05D0\u005F" });
+
+    // ÷ 05D0 × 0308 × 005F ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u005F",
+                     new String[] { "\u05D0\u0308\u005F" });
+
+    // ÷ 05D0 ÷ 1F1E6 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\uD83C\uDDE6",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\uD83C\uDDE6",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 × 05D0 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [5.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u05D0",
+                     new String[] { "\u05D0\u05D0" });
+
+    // ÷ 05D0 × 0308 × 05D0 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u05D0",
+                     new String[] { "\u05D0\u0308\u05D0" });
+
+    // ÷ 05D0 ÷ 0022 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\"",
+                     new String[] { "\u05D0" });
+
+    // ÷ 05D0 × 0308 ÷ 0022 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\"",
+                     new String[] { "\u05D0\u0308" });
+
+    // ÷ 05D0 × 0027 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [7.1] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0027",
+                     new String[] { "\u05D0\u0027" });
+
+    // ÷ 05D0 × 0308 × 0027 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.1] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0027",
+                     new String[] { "\u05D0\u0308\u0027" });
+
+    // ÷ 05D0 × 00AD ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u00AD",
+                     new String[] { "\u05D0\u00AD" });
+
+    // ÷ 05D0 × 0308 × 00AD ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u00AD",
+                     new String[] { "\u05D0\u0308\u00AD" });
+
+    // ÷ 05D0 × 0300 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0300",
+                     new String[] { "\u05D0\u0300" });
+
+    // ÷ 05D0 × 0308 × 0300 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0300",
+                     new String[] { "\u05D0\u0308\u0300" });
+
+    // ÷ 05D0 × 0061 × 2060 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0061\u2060",
+                     new String[] { "\u05D0\u0061\u2060" });
+
+    // ÷ 05D0 × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0061\u2060",
+                     new String[] { "\u05D0\u0308\u0061\u2060" });
+
+    // ÷ 05D0 × 0061 ÷ 003A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0061\u003A",
+                     new String[] { "\u05D0\u0061" });
+
+    // ÷ 05D0 × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0061\u003A",
+                     new String[] { "\u05D0\u0308\u0061" });
+
+    // ÷ 05D0 × 0061 ÷ 0027 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0061\u0027",
+                     new String[] { "\u05D0\u0061" });
+
+    // ÷ 05D0 × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0061\u0027",
+                     new String[] { "\u05D0\u0308\u0061" });
+
+    // ÷ 05D0 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0061\u0027\u2060",
+                     new String[] { "\u05D0\u0061" });
+
+    // ÷ 05D0 × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0061\u0027\u2060",
+                     new String[] { "\u05D0\u0308\u0061" });
+
+    // ÷ 05D0 × 0061 ÷ 002C ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0061\u002C",
+                     new String[] { "\u05D0\u0061" });
+
+    // ÷ 05D0 × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0061\u002C",
+                     new String[] { "\u05D0\u0308\u0061" });
+
+    // ÷ 05D0 × 0031 ÷ 003A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0031\u003A",
+                     new String[] { "\u05D0\u0031" });
+
+    // ÷ 05D0 × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0031\u003A",
+                     new String[] { "\u05D0\u0308\u0031" });
+
+    // ÷ 05D0 × 0031 ÷ 0027 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0031\u0027",
+                     new String[] { "\u05D0\u0031" });
+
+    // ÷ 05D0 × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0031\u0027",
+                     new String[] { "\u05D0\u0308\u0031" });
+
+    // ÷ 05D0 × 0031 ÷ 002C ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0031\u002C",
+                     new String[] { "\u05D0\u0031" });
+
+    // ÷ 05D0 × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0031\u002C",
+                     new String[] { "\u05D0\u0308\u0031" });
+
+    // ÷ 05D0 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0031\u002E\u2060",
+                     new String[] { "\u05D0\u0031" });
+
+    // ÷ 05D0 × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] HEBREW LETTER ALEF (Hebrew_Letter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u05D0\u0308\u0031\u002E\u2060",
+                     new String[] { "\u05D0\u0308\u0031" });
+
+    // ÷ 0022 ÷ 0001 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0001",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 0001 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 000D ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\r",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 000D ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\r",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 000A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\n",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 000A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\n",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 000B ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u000B",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 000B ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 3031 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0022 × 0308 ÷ 3031 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0022 ÷ 0041 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0022 × 0308 ÷ 0041 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0022 ÷ 003A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u003A",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 003A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 002C ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u002C",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 002C ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 002E ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u002E",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 002E ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 0030 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0022 × 0308 ÷ 0030 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0022 ÷ 005F ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u005F",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 005F ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 1F1E6 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 05D0 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0022 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0022 ÷ 0022 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\"",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 0022 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\"",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 0027 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0027",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 ÷ 0027 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 0022 × 00AD ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u00AD",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 × 00AD ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 0022 × 0300 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0300",
+                     new String[] {  });
+
+    // ÷ 0022 × 0308 × 0300 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 0022 ÷ 0061 × 2060 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0022 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0022 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0022 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0022 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0022 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0022 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0022 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0022 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0022 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0022 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] QUOTATION MARK (Double_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\"\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 ÷ 0001 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0001",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 0001 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 000D ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\r",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 000D ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\r",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 000A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\n",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 000A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\n",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 000B ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u000B",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 000B ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 3031 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0027 × 0308 ÷ 3031 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0027 ÷ 0041 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0027 × 0308 ÷ 0041 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0027 ÷ 003A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u003A",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 003A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 002C ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u002C",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 002C ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 002E ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u002E",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 002E ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 0030 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0027 × 0308 ÷ 0030 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0027 ÷ 005F ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u005F",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 005F ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 1F1E6 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 05D0 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0027 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0027 ÷ 0022 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\"",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 0022 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\"",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 0027 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0027",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 ÷ 0027 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 0027 × 00AD ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u00AD",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 × 00AD ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 0027 × 0300 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0300",
+                     new String[] {  });
+
+    // ÷ 0027 × 0308 × 0300 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 0027 ÷ 0061 × 2060 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0027 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0027 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0027 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0027 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0027\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD ÷ 0001 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0001",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 0001 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 000D ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\r",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 000D ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\r",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 000A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\n",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 000A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\n",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 000B ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u000B",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 000B ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 3031 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 00AD × 0308 ÷ 3031 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 00AD ÷ 0041 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 00AD × 0308 ÷ 0041 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 00AD ÷ 003A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u003A",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 003A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 002C ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u002C",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 002C ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 002E ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u002E",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 002E ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 0030 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 00AD × 0308 ÷ 0030 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 00AD ÷ 005F ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u005F",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 005F ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 1F1E6 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 05D0 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 00AD × 0308 ÷ 05D0 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 00AD ÷ 0022 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\"",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 0022 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\"",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 0027 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0027",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 ÷ 0027 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 00AD × 00AD ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u00AD",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 × 00AD ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 00AD × 0300 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0300",
+                     new String[] {  });
+
+    // ÷ 00AD × 0308 × 0300 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 00AD ÷ 0061 × 2060 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 00AD × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 00AD ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 00AD ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 00AD × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] SOFT HYPHEN (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u00AD\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 ÷ 0001 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0001",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 0001 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0001",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 000D ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\r",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 000D ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\r",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 000A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\n",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 000A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\n",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 000B ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u000B",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 000B ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u000B",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 3031 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0300 × 0308 ÷ 3031 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u3031",
+                     new String[] { "\u3031" });
+
+    // ÷ 0300 ÷ 0041 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0300 × 0308 ÷ 0041 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0041",
+                     new String[] { "\u0041" });
+
+    // ÷ 0300 ÷ 003A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u003A",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 003A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u003A",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 002C ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u002C",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 002C ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u002C",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 002E ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u002E",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 002E ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u002E",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 0030 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0300 × 0308 ÷ 0030 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0030",
+                     new String[] { "\u0030" });
+
+    // ÷ 0300 ÷ 005F ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u005F",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 005F ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u005F",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 1F1E6 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\uD83C\uDDE6",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 05D0 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0300 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u05D0",
+                     new String[] { "\u05D0" });
+
+    // ÷ 0300 ÷ 0022 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\"",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 0022 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\"",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 0027 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0027",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 ÷ 0027 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0027",
+                     new String[] {  });
+
+    // ÷ 0300 × 00AD ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u00AD",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 × 00AD ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u00AD",
+                     new String[] {  });
+
+    // ÷ 0300 × 0300 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0300",
+                     new String[] {  });
+
+    // ÷ 0300 × 0308 × 0300 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0300",
+                     new String[] {  });
+
+    // ÷ 0300 ÷ 0061 × 2060 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0300 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0300 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0061\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0061\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0061\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0300 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0031\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0031\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0031\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0300 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] COMBINING GRAVE ACCENT (Extend_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0300\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031" });
+
+    // ÷ 0061 × 2060 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0001",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0001",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\r",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\r",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\n",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\n",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u000B",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u000B",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u3031",
+                     new String[] { "\u0061\u2060", "\u3031" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u3031",
+                     new String[] { "\u0061\u2060\u0308", "\u3031" });
+
+    // ÷ 0061 × 2060 × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0041",
+                     new String[] { "\u0061\u2060\u0041" });
+
+    // ÷ 0061 × 2060 × 0308 × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0041",
+                     new String[] { "\u0061\u2060\u0308\u0041" });
+
+    // ÷ 0061 × 2060 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u003A",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u003A",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u002C",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u002C",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u002E",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u002E",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 × 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [9.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0030",
+                     new String[] { "\u0061\u2060\u0030" });
+
+    // ÷ 0061 × 2060 × 0308 × 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0030",
+                     new String[] { "\u0061\u2060\u0308\u0030" });
+
+    // ÷ 0061 × 2060 × 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u005F",
+                     new String[] { "\u0061\u2060\u005F" });
+
+    // ÷ 0061 × 2060 × 0308 × 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [13.1] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u005F",
+                     new String[] { "\u0061\u2060\u0308\u005F" });
+
+    // ÷ 0061 × 2060 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\uD83C\uDDE6",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\uD83C\uDDE6",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u05D0",
+                     new String[] { "\u0061\u2060\u05D0" });
+
+    // ÷ 0061 × 2060 × 0308 × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u05D0",
+                     new String[] { "\u0061\u2060\u0308\u05D0" });
+
+    // ÷ 0061 × 2060 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\"",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\"",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0027",
+                     new String[] { "\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0027",
+                     new String[] { "\u0061\u2060\u0308" });
+
+    // ÷ 0061 × 2060 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u00AD",
+                     new String[] { "\u0061\u2060\u00AD" });
+
+    // ÷ 0061 × 2060 × 0308 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u00AD",
+                     new String[] { "\u0061\u2060\u0308\u00AD" });
+
+    // ÷ 0061 × 2060 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0300",
+                     new String[] { "\u0061\u2060\u0300" });
+
+    // ÷ 0061 × 2060 × 0308 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0300",
+                     new String[] { "\u0061\u2060\u0308\u0300" });
+
+    // ÷ 0061 × 2060 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0061\u2060",
+                     new String[] { "\u0061\u2060\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0061\u2060",
+                     new String[] { "\u0061\u2060\u0308\u0061\u2060" });
+
+    // ÷ 0061 × 2060 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0061\u003A",
+                     new String[] { "\u0061\u2060\u0061" });
+
+    // ÷ 0061 × 2060 × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0061\u003A",
+                     new String[] { "\u0061\u2060\u0308\u0061" });
+
+    // ÷ 0061 × 2060 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0061\u0027",
+                     new String[] { "\u0061\u2060\u0061" });
+
+    // ÷ 0061 × 2060 × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0061\u0027",
+                     new String[] { "\u0061\u2060\u0308\u0061" });
+
+    // ÷ 0061 × 2060 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0061\u0027\u2060",
+                     new String[] { "\u0061\u2060\u0061" });
+
+    // ÷ 0061 × 2060 × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061\u2060\u0308\u0061" });
+
+    // ÷ 0061 × 2060 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0061\u002C",
+                     new String[] { "\u0061\u2060\u0061" });
+
+    // ÷ 0061 × 2060 × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [5.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0061\u002C",
+                     new String[] { "\u0061\u2060\u0308\u0061" });
+
+    // ÷ 0061 × 2060 × 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0031\u003A",
+                     new String[] { "\u0061\u2060\u0031" });
+
+    // ÷ 0061 × 2060 × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0031\u003A",
+                     new String[] { "\u0061\u2060\u0308\u0031" });
+
+    // ÷ 0061 × 2060 × 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0031\u0027",
+                     new String[] { "\u0061\u2060\u0031" });
+
+    // ÷ 0061 × 2060 × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0031\u0027",
+                     new String[] { "\u0061\u2060\u0308\u0031" });
+
+    // ÷ 0061 × 2060 × 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0031\u002C",
+                     new String[] { "\u0061\u2060\u0031" });
+
+    // ÷ 0061 × 2060 × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0031\u002C",
+                     new String[] { "\u0061\u2060\u0308\u0031" });
+
+    // ÷ 0061 × 2060 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0031\u002E\u2060",
+                     new String[] { "\u0061\u2060\u0031" });
+
+    // ÷ 0061 × 2060 × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [9.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u2060\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0061\u2060\u0308\u0031" });
+
+    // ÷ 0061 ÷ 003A ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 × 003A × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [7.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0041",
+                     new String[] { "\u0061\u003A\u0041" });
+
+    // ÷ 0061 × 003A × 0308 × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0041",
+                     new String[] { "\u0061\u003A\u0308\u0041" });
+
+    // ÷ 0061 ÷ 003A ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 003A ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 × 003A × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [7.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u05D0",
+                     new String[] { "\u0061\u003A\u05D0" });
+
+    // ÷ 0061 × 003A × 0308 × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u05D0",
+                     new String[] { "\u0061\u003A\u0308\u05D0" });
+
+    // ÷ 0061 ÷ 003A ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 003A × 0308 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 × 003A × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [7.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0061\u2060",
+                     new String[] { "\u0061\u003A\u0061\u2060" });
+
+    // ÷ 0061 × 003A × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0061\u2060",
+                     new String[] { "\u0061\u003A\u0308\u0061\u2060" });
+
+    // ÷ 0061 × 003A × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0061\u003A",
+                     new String[] { "\u0061\u003A\u0061" });
+
+    // ÷ 0061 × 003A × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0061\u003A",
+                     new String[] { "\u0061\u003A\u0308\u0061" });
+
+    // ÷ 0061 × 003A × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0061\u0027",
+                     new String[] { "\u0061\u003A\u0061" });
+
+    // ÷ 0061 × 003A × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0061\u0027",
+                     new String[] { "\u0061\u003A\u0308\u0061" });
+
+    // ÷ 0061 × 003A × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0061\u0027\u2060",
+                     new String[] { "\u0061\u003A\u0061" });
+
+    // ÷ 0061 × 003A × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061\u003A\u0308\u0061" });
+
+    // ÷ 0061 × 003A × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0061\u002C",
+                     new String[] { "\u0061\u003A\u0061" });
+
+    // ÷ 0061 × 003A × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0061\u002C",
+                     new String[] { "\u0061\u003A\u0308\u0061" });
+
+    // ÷ 0061 ÷ 003A ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 003A ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 003A ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 003A ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 003A × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u003A\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 × 0027 × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0041",
+                     new String[] { "\u0061\u0027\u0041" });
+
+    // ÷ 0061 × 0027 × 0308 × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0041",
+                     new String[] { "\u0061\u0027\u0308\u0041" });
+
+    // ÷ 0061 ÷ 0027 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 0027 ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 × 0027 × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u05D0",
+                     new String[] { "\u0061\u0027\u05D0" });
+
+    // ÷ 0061 × 0027 × 0308 × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u05D0",
+                     new String[] { "\u0061\u0027\u0308\u05D0" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 0308 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 × 0027 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0061\u2060",
+                     new String[] { "\u0061\u0027\u0061\u2060" });
+
+    // ÷ 0061 × 0027 × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0061\u2060",
+                     new String[] { "\u0061\u0027\u0308\u0061\u2060" });
+
+    // ÷ 0061 × 0027 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0061\u003A",
+                     new String[] { "\u0061\u0027\u0061" });
+
+    // ÷ 0061 × 0027 × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0061\u003A",
+                     new String[] { "\u0061\u0027\u0308\u0061" });
+
+    // ÷ 0061 × 0027 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0061\u0027",
+                     new String[] { "\u0061\u0027\u0061" });
+
+    // ÷ 0061 × 0027 × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0061\u0027",
+                     new String[] { "\u0061\u0027\u0308\u0061" });
+
+    // ÷ 0061 × 0027 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0061\u0027\u2060",
+                     new String[] { "\u0061\u0027\u0061" });
+
+    // ÷ 0061 × 0027 × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061\u0027\u0308\u0061" });
+
+    // ÷ 0061 × 0027 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0061\u002C",
+                     new String[] { "\u0061\u0027\u0061" });
+
+    // ÷ 0061 × 0027 × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0061\u002C",
+                     new String[] { "\u0061\u0027\u0308\u0061" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 × 0027 × 2060 × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0041",
+                     new String[] { "\u0061\u0027\u2060\u0041" });
+
+    // ÷ 0061 × 0027 × 2060 × 0308 × 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0041",
+                     new String[] { "\u0061\u0027\u2060\u0308\u0041" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u05D0",
+                     new String[] { "\u0061\u0027\u2060\u05D0" });
+
+    // ÷ 0061 × 0027 × 2060 × 0308 × 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u05D0",
+                     new String[] { "\u0061\u0027\u2060\u0308\u05D0" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0061\u2060",
+                     new String[] { "\u0061\u0027\u2060\u0061\u2060" });
+
+    // ÷ 0061 × 0027 × 2060 × 0308 × 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0061\u2060",
+                     new String[] { "\u0061\u0027\u2060\u0308\u0061\u2060" });
+
+    // ÷ 0061 × 0027 × 2060 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0061\u003A",
+                     new String[] { "\u0061\u0027\u2060\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0308 × 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0061\u003A",
+                     new String[] { "\u0061\u0027\u2060\u0308\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0061\u0027",
+                     new String[] { "\u0061\u0027\u2060\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0308 × 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0061\u0027",
+                     new String[] { "\u0061\u0027\u2060\u0308\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0061\u0027\u2060",
+                     new String[] { "\u0061\u0027\u2060\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0308 × 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061\u0027\u2060\u0308\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0061\u002C",
+                     new String[] { "\u0061\u0027\u2060\u0061" });
+
+    // ÷ 0061 × 0027 × 2060 × 0308 × 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [7.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0061\u002C",
+                     new String[] { "\u0061\u0027\u2060\u0308\u0061" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 0027 × 2060 × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0027\u2060\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0001 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0001",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 000D ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\r",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 000A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\n",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 000B ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u000B",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 3031 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u3031",
+                     new String[] { "\u0061", "\u3031" });
+
+    // ÷ 0061 ÷ 002C ÷ 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0041",
+                     new String[] { "\u0061", "\u0041" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0041 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0041",
+                     new String[] { "\u0061", "\u0041" });
+
+    // ÷ 0061 ÷ 002C ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u003A",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u002C",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 002E ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u002E",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0030 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0030",
+                     new String[] { "\u0061", "\u0030" });
+
+    // ÷ 0061 ÷ 002C ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 005F ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u005F",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\uD83C\uDDE6",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u05D0",
+                     new String[] { "\u0061", "\u05D0" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 05D0 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u05D0",
+                     new String[] { "\u0061", "\u05D0" });
+
+    // ÷ 0061 ÷ 002C ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0022 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\"",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0027",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 × 00AD ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u00AD",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 × 0300 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0300",
+                     new String[] { "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0061\u2060",
+                     new String[] { "\u0061", "\u0061\u2060" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0061\u2060",
+                     new String[] { "\u0061", "\u0061\u2060" });
+
+    // ÷ 0061 ÷ 002C ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0061\u003A",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0061\u003A",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0061\u0027",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0061\u0027",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0061\u0027\u2060",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0061\u002C",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0061\u002C",
+                     new String[] { "\u0061", "\u0061" });
+
+    // ÷ 0061 ÷ 002C ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0031\u003A",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0031\u0027",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0031\u002C",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0061 ÷ 002C × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u002C\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0061", "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 003A ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0030",
+                     new String[] { "\u0031", "\u0030" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0030",
+                     new String[] { "\u0031", "\u0030" });
+
+    // ÷ 0031 ÷ 003A ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 003A ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 003A ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 003A ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0031\u003A",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0031\u003A",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0031\u0027",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0031\u0027",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0031\u002C",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0031\u002C",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 003A ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0031\u002E\u2060",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 003A × 0308 ÷ 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u003A\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031", "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 0027 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 × 0027 × 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [11.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0030",
+                     new String[] { "\u0031\u0027\u0030" });
+
+    // ÷ 0031 × 0027 × 0308 × 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0030",
+                     new String[] { "\u0031\u0027\u0308\u0030" });
+
+    // ÷ 0031 ÷ 0027 ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 × 0308 × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 0027 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 0027 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 × 0027 × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0031\u003A",
+                     new String[] { "\u0031\u0027\u0031" });
+
+    // ÷ 0031 × 0027 × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0031\u003A",
+                     new String[] { "\u0031\u0027\u0308\u0031" });
+
+    // ÷ 0031 × 0027 × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0031\u0027",
+                     new String[] { "\u0031\u0027\u0031" });
+
+    // ÷ 0031 × 0027 × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0031\u0027",
+                     new String[] { "\u0031\u0027\u0308\u0031" });
+
+    // ÷ 0031 × 0027 × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0031\u002C",
+                     new String[] { "\u0031\u0027\u0031" });
+
+    // ÷ 0031 × 0027 × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0031\u002C",
+                     new String[] { "\u0031\u0027\u0308\u0031" });
+
+    // ÷ 0031 × 0027 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0031\u002E\u2060",
+                     new String[] { "\u0031\u0027\u0031" });
+
+    // ÷ 0031 × 0027 × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] APOSTROPHE (Single_Quote) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u0027\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031\u0027\u0308\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 002C ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 002C ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 × 002C × 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [11.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0030",
+                     new String[] { "\u0031\u002C\u0030" });
+
+    // ÷ 0031 × 002C × 0308 × 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0030",
+                     new String[] { "\u0031\u002C\u0308\u0030" });
+
+    // ÷ 0031 ÷ 002C ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 002C ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C × 0308 × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002C ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 002C ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002C ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002C ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002C ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002C × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 × 002C × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0031\u003A",
+                     new String[] { "\u0031\u002C\u0031" });
+
+    // ÷ 0031 × 002C × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0031\u003A",
+                     new String[] { "\u0031\u002C\u0308\u0031" });
+
+    // ÷ 0031 × 002C × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0031\u0027",
+                     new String[] { "\u0031\u002C\u0031" });
+
+    // ÷ 0031 × 002C × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0031\u0027",
+                     new String[] { "\u0031\u002C\u0308\u0031" });
+
+    // ÷ 0031 × 002C × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0031\u002C",
+                     new String[] { "\u0031\u002C\u0031" });
+
+    // ÷ 0031 × 002C × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0031\u002C",
+                     new String[] { "\u0031\u002C\u0308\u0031" });
+
+    // ÷ 0031 × 002C × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0031\u002E\u2060",
+                     new String[] { "\u0031\u002C\u0031" });
+
+    // ÷ 0031 × 002C × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] COMMA (MidNum) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002C\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031\u002C\u0308\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0001 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] <START OF HEADING> (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0001",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 000D ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\r",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 000A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE FEED (LF)> (LF) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\n",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 000B ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [3.2] <LINE TABULATION> (Newline) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u000B",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 3031 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] VERTICAL KANA REPEAT MARK (Katakana) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u3031",
+                     new String[] { "\u0031", "\u3031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0041 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN CAPITAL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0041",
+                     new String[] { "\u0031", "\u0041" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u003A",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u002C",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 002E ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] FULL STOP (MidNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u002E",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [11.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0030",
+                     new String[] { "\u0031\u002E\u2060\u0030" });
+
+    // ÷ 0031 × 002E × 2060 × 0308 × 0030 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ZERO (Numeric) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0030",
+                     new String[] { "\u0031\u002E\u2060\u0308\u0030" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 005F ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LOW LINE (ExtendNumLet) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u005F",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 1F1E6 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\uD83C\uDDE6",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 05D0 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] HEBREW LETTER ALEF (Hebrew_Letter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u05D0",
+                     new String[] { "\u0031", "\u05D0" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0022 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] QUOTATION MARK (Double_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\"",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0027",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 × 00AD ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] SOFT HYPHEN (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u00AD",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 × 0300 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0300",
+                     new String[] { "\u0031" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0061 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0061\u2060",
+                     new String[] { "\u0031", "\u0061\u2060" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0061 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0061\u003A",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0061 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0061\u0027",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0061 ÷ 0027 × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0061\u0027\u2060",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002E × 2060 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 ÷ 002E × 2060 × 0308 ÷ 0061 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0061\u002C",
+                     new String[] { "\u0031", "\u0061" });
+
+    // ÷ 0031 × 002E × 2060 × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0031\u003A",
+                     new String[] { "\u0031\u002E\u2060\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0308 × 0031 ÷ 003A ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COLON (MidLetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0031\u003A",
+                     new String[] { "\u0031\u002E\u2060\u0308\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0031\u0027",
+                     new String[] { "\u0031\u002E\u2060\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0308 × 0031 ÷ 0027 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] APOSTROPHE (Single_Quote) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0031\u0027",
+                     new String[] { "\u0031\u002E\u2060\u0308\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0031\u002C",
+                     new String[] { "\u0031\u002E\u2060\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0308 × 0031 ÷ 002C ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] COMMA (MidNum) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0031\u002C",
+                     new String[] { "\u0031\u002E\u2060\u0308\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0031\u002E\u2060",
+                     new String[] { "\u0031\u002E\u2060\u0031" });
+
+    // ÷ 0031 × 002E × 2060 × 0308 × 0031 ÷ 002E × 2060 ÷	#  ÷ [0.2] DIGIT ONE (Numeric) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [4.0] COMBINING DIAERESIS (Extend_FE) × [11.0] DIGIT ONE (Numeric) ÷ [999.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0031\u002E\u2060\u0308\u0031\u002E\u2060",
+                     new String[] { "\u0031\u002E\u2060\u0308\u0031" });
+
+    // ÷ 0063 × 0061 × 006E × 0027 × 0074 ÷	#  ÷ [0.2] LATIN SMALL LETTER C (ALetter) × [5.0] LATIN SMALL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER N (ALetter) × [6.0] APOSTROPHE (Single_Quote) × [7.0] LATIN SMALL LETTER T (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0063\u0061\u006E\u0027\u0074",
+                     new String[] { "\u0063\u0061\u006E\u0027\u0074" });
+
+    // ÷ 0063 × 0061 × 006E × 2019 × 0074 ÷	#  ÷ [0.2] LATIN SMALL LETTER C (ALetter) × [5.0] LATIN SMALL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER N (ALetter) × [6.0] RIGHT SINGLE QUOTATION MARK (MidNumLet) × [7.0] LATIN SMALL LETTER T (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0063\u0061\u006E\u2019\u0074",
+                     new String[] { "\u0063\u0061\u006E\u2019\u0074" });
+
+    // ÷ 0061 × 0062 × 00AD × 0062 × 0079 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) × [5.0] LATIN SMALL LETTER B (ALetter) × [4.0] SOFT HYPHEN (Format_FE) × [5.0] LATIN SMALL LETTER B (ALetter) × [5.0] LATIN SMALL LETTER Y (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0062\u00AD\u0062\u0079",
+                     new String[] { "\u0061\u0062\u00AD\u0062\u0079" });
+
+    // ÷ 0061 ÷ 0024 ÷ 002D ÷ 0033 × 0034 × 002C × 0035 × 0036 × 0037 × 002E × 0031 × 0034 ÷ 0025 ÷ 0062 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] DOLLAR SIGN (Other) ÷ [999.0] HYPHEN-MINUS (Other) ÷ [999.0] DIGIT THREE (Numeric) × [8.0] DIGIT FOUR (Numeric) × [12.0] COMMA (MidNum) × [11.0] DIGIT FIVE (Numeric) × [8.0] DIGIT SIX (Numeric) × [8.0] DIGIT SEVEN (Numeric) × [12.0] FULL STOP (MidNumLet) × [11.0] DIGIT ONE (Numeric) × [8.0] DIGIT FOUR (Numeric) ÷ [999.0] PERCENT SIGN (Other) ÷ [999.0] LATIN SMALL LETTER B (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\u0024\u002D\u0033\u0034\u002C\u0035\u0036\u0037\u002E\u0031\u0034\u0025\u0062",
+                     new String[] { "\u0061", "\u0033\u0034\u002C\u0035\u0036\u0037\u002E\u0031\u0034", "\u0062" });
+
+    // ÷ 0033 × 0061 ÷	#  ÷ [0.2] DIGIT THREE (Numeric) × [10.0] LATIN SMALL LETTER A (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0033\u0061",
+                     new String[] { "\u0033\u0061" });
+
+    // ÷ 2060 ÷ 0063 × 2060 × 0061 × 2060 × 006E × 2060 × 0027 × 2060 × 0074 × 2060 × 2060 ÷	#  ÷ [0.2] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER C (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER N (ALetter) × [4.0] WORD JOINER (Format_FE) × [6.0] APOSTROPHE (Single_Quote) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN SMALL LETTER T (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u2060\u0063\u2060\u0061\u2060\u006E\u2060\u0027\u2060\u0074\u2060\u2060",
+                     new String[] { "\u0063\u2060\u0061\u2060\u006E\u2060\u0027\u2060\u0074\u2060\u2060" });
+
+    // ÷ 2060 ÷ 0063 × 2060 × 0061 × 2060 × 006E × 2060 × 2019 × 2060 × 0074 × 2060 × 2060 ÷	#  ÷ [0.2] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER C (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER N (ALetter) × [4.0] WORD JOINER (Format_FE) × [6.0] RIGHT SINGLE QUOTATION MARK (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [7.0] LATIN SMALL LETTER T (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u2060\u0063\u2060\u0061\u2060\u006E\u2060\u2019\u2060\u0074\u2060\u2060",
+                     new String[] { "\u0063\u2060\u0061\u2060\u006E\u2060\u2019\u2060\u0074\u2060\u2060" });
+
+    // ÷ 2060 ÷ 0061 × 2060 × 0062 × 2060 × 00AD × 2060 × 0062 × 2060 × 0079 × 2060 × 2060 ÷	#  ÷ [0.2] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER B (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] SOFT HYPHEN (Format_FE) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER B (ALetter) × [4.0] WORD JOINER (Format_FE) × [5.0] LATIN SMALL LETTER Y (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u2060\u0061\u2060\u0062\u2060\u00AD\u2060\u0062\u2060\u0079\u2060\u2060",
+                     new String[] { "\u0061\u2060\u0062\u2060\u00AD\u2060\u0062\u2060\u0079\u2060\u2060" });
+
+    // ÷ 2060 ÷ 0061 × 2060 ÷ 0024 × 2060 ÷ 002D × 2060 ÷ 0033 × 2060 × 0034 × 2060 × 002C × 2060 × 0035 × 2060 × 0036 × 2060 × 0037 × 2060 × 002E × 2060 × 0031 × 2060 × 0034 × 2060 ÷ 0025 × 2060 ÷ 0062 × 2060 × 2060 ÷	#  ÷ [0.2] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] DOLLAR SIGN (Other) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] HYPHEN-MINUS (Other) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] DIGIT THREE (Numeric) × [4.0] WORD JOINER (Format_FE) × [8.0] DIGIT FOUR (Numeric) × [4.0] WORD JOINER (Format_FE) × [12.0] COMMA (MidNum) × [4.0] WORD JOINER (Format_FE) × [11.0] DIGIT FIVE (Numeric) × [4.0] WORD JOINER (Format_FE) × [8.0] DIGIT SIX (Numeric) × [4.0] WORD JOINER (Format_FE) × [8.0] DIGIT SEVEN (Numeric) × [4.0] WORD JOINER (Format_FE) × [12.0] FULL STOP (MidNumLet) × [4.0] WORD JOINER (Format_FE) × [11.0] DIGIT ONE (Numeric) × [4.0] WORD JOINER (Format_FE) × [8.0] DIGIT FOUR (Numeric) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] PERCENT SIGN (Other) × [4.0] WORD JOINER (Format_FE) ÷ [999.0] LATIN SMALL LETTER B (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u2060\u0061\u2060\u0024\u2060\u002D\u2060\u0033\u2060\u0034\u2060\u002C\u2060\u0035\u2060\u0036\u2060\u0037\u2060\u002E\u2060\u0031\u2060\u0034\u2060\u0025\u2060\u0062\u2060\u2060",
+                     new String[] { "\u0061\u2060", "\u0033\u2060\u0034\u2060\u002C\u2060\u0035\u2060\u0036\u2060\u0037\u2060\u002E\u2060\u0031\u2060\u0034\u2060", "\u0062\u2060\u2060" });
+
+    // ÷ 2060 ÷ 0033 × 2060 × 0061 × 2060 × 2060 ÷	#  ÷ [0.2] WORD JOINER (Format_FE) ÷ [999.0] DIGIT THREE (Numeric) × [4.0] WORD JOINER (Format_FE) × [10.0] LATIN SMALL LETTER A (ALetter) × [4.0] WORD JOINER (Format_FE) × [4.0] WORD JOINER (Format_FE) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u2060\u0033\u2060\u0061\u2060\u2060",
+                     new String[] { "\u0033\u2060\u0061\u2060\u2060" });
+
+    // ÷ 0061 ÷ 1F1E6 ÷ 0062 ÷	#  ÷ [0.2] LATIN SMALL LETTER A (ALetter) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) ÷ [999.0] LATIN SMALL LETTER B (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0061\uD83C\uDDE6\u0062",
+                     new String[] { "\u0061", "\u0062" });
+
+    // ÷ 1F1F7 × 1F1FA ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER R (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER U (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDF7\uD83C\uDDFA",
+                     new String[] {  });
+
+    // ÷ 1F1F7 × 1F1FA × 1F1F8 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER R (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER U (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER S (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDF7\uD83C\uDDFA\uD83C\uDDF8",
+                     new String[] {  });
+
+    // ÷ 1F1F7 × 1F1FA × 1F1F8 × 1F1EA ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER R (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER U (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER S (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER E (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDF7\uD83C\uDDFA\uD83C\uDDF8\uD83C\uDDEA",
+                     new String[] {  });
+
+    // ÷ 1F1F7 × 1F1FA ÷ 200B ÷ 1F1F8 × 1F1EA ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER R (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER U (Regional_Indicator) ÷ [999.0] ZERO WIDTH SPACE (Other) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER S (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER E (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDF7\uD83C\uDDFA\u200B\uD83C\uDDF8\uD83C\uDDEA",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 1F1E7 × 1F1E8 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER B (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER C (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\uD83C\uDDE7\uD83C\uDDE8",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 200D × 1F1E7 × 1F1E8 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [4.0] ZERO WIDTH JOINER (Extend_FE) × [13.3] REGIONAL INDICATOR SYMBOL LETTER B (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER C (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\u200D\uD83C\uDDE7\uD83C\uDDE8",
+                     new String[] {  });
+
+    // ÷ 1F1E6 × 1F1E7 × 200D × 1F1E8 ÷	#  ÷ [0.2] REGIONAL INDICATOR SYMBOL LETTER A (Regional_Indicator) × [13.3] REGIONAL INDICATOR SYMBOL LETTER B (Regional_Indicator) × [4.0] ZERO WIDTH JOINER (Extend_FE) × [13.3] REGIONAL INDICATOR SYMBOL LETTER C (Regional_Indicator) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\uD83C\uDDE6\uD83C\uDDE7\u200D\uD83C\uDDE8",
+                     new String[] {  });
+
+    // ÷ 0020 × 200D ÷ 0646 ÷	#  ÷ [0.2] SPACE (Other) × [4.0] ZERO WIDTH JOINER (Extend_FE) ÷ [999.0] ARABIC LETTER NOON (ALetter) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0020\u200D\u0646",
+                     new String[] { "\u0646" });
+
+    // ÷ 0646 × 200D ÷ 0020 ÷	#  ÷ [0.2] ARABIC LETTER NOON (ALetter) × [4.0] ZERO WIDTH JOINER (Extend_FE) ÷ [999.0] SPACE (Other) ÷ [0.3]
+    assertAnalyzesTo(analyzer, "\u0646\u200D\u0020",
+                     new String[] { "\u0646\u200D" });
+
+  }
+}
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/email.addresses.from.random.text.with.email.addresses.txt
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/email.addresses.from.random.text.with.email.addresses.txt	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/email.addresses.from.random.text.with.email.addresses.txt	(working copy)
@@ -78,13 +78,13 @@
 iT0LOq.jtPW=G06~cETxl2ge@Ah0.4hn72v.tQ.LU
 VGLn@z3E2.3an2.MM
 TWmfsxn@[112.192.017.029]
-2tP07A@2twe6u0d6uw6o.sed7n.109mx.XN--KGBECHTV
+2tP07A@2twe6u0d6uw6o.sed7n.109mx.XN--KPRW13D
 CjaPC63@['\RDrwk]
 Ayydpdoa@tdgypppmen.wf
 "gfKP9"@jo3-r0.mz
-aTMgDW4@t5gax.XN--0ZWM56D
+aTMgDW4@t5gax.XN--3E0B707E
 mcDrMO3FQ@nwc21.y5qd45lesryrp.IL
-NZqj@v50egeveepk.z290kk.Bc3.xn--jxalpdlp
+NZqj@v50egeveepk.z290kk.Bc3.xn--kprw13d
 XtAhFnq@[218.214.251.103]
 x0S8uos@[109.82.126.233]
 ALB4KFavj16pODdd@i206d6s.MM
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/generateJavaUnicodeWordBreakTest.pl
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/generateJavaUnicodeWordBreakTest.pl	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/generateJavaUnicodeWordBreakTest.pl	(working copy)
@@ -78,9 +78,10 @@
  *    \\p{Script = Hiragana}
  *    \\p{LineBreak = Complex_Context} (From $line_break_url)
  *    \\p{WordBreak = ALetter}         (From $word_break_url)
+ *    \\p{WordBreak = Hebrew_Letter}
  *    \\p{WordBreak = Katakana}
  *    \\p{WordBreak = Numeric}         (Excludes full-width Arabic digits)
- *    [\\uFF10-\\uFF19]                 (Full-width Arabic digits)
+ *    [\\uFF10-\\uFF19]                (Full-width Arabic digits)
  */
 \@Ignore
 public class ${class_name} extends BaseTokenStreamTestCase {
@@ -97,7 +98,7 @@
 parse_Unicode_data_file($scripts_url, $codepoints, 
                         {'han' => 1, 'hiragana' => 1});
 parse_Unicode_data_file($word_break_url, $codepoints,
-                        {'aletter' => 1, 'katakana' => 1, 'numeric' => 1});
+                        {'aletter' => 1, 'hebrew_letter' => 1, 'katakana' => 1, 'numeric' => 1});
 my @tests = split /\r?\n/, get_URL_content($word_break_test_url);
 
 my $output_path = File::Spec->catpath($volume, $directory, $output_filename);
@@ -109,25 +110,32 @@
 print OUT $header;
 
 for my $line (@tests) {
-  next if ($line =~ /^\s*\#/);
-  # ÷ 0001 × 0300 ÷  #  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
+  next if ($line =~ /^\s*(?:|\#.*)$/); # Skip blank or comment-only lines
+  # Example line: ÷ 0001 × 0300 ÷  #  ÷ [0.2] <START OF HEADING> (Other) × [4.0] COMBINING GRAVE ACCENT (Extend_FE) ÷ [0.3]
   my ($sequence) = $line =~ /^(.*?)\s*\#/;
   print OUT "    // $line\n";
   $sequence =~ s/\s*÷\s*$//; # Trim trailing break character
   my $test_string = $sequence;
   $test_string =~ s/\s*÷\s*/\\u/g;
   $test_string =~ s/\s*×\s*/\\u/g;
+  $test_string =~ s/\\u([0-9A-F]{5,})/join('', map { "\\u$_" } above_BMP_char_to_surrogates($1))/ge;
   $test_string =~ s/\\u000A/\\n/g;
   $test_string =~ s/\\u000D/\\r/g;
+  $test_string =~ s/\\u0022/\\\"/g;
   $sequence =~ s/^\s*÷\s*//; # Trim leading break character
   my @tokens = ();
   for my $candidate (split /\s*÷\s*/, $sequence) {
     my @chars = ();
     my $has_wanted_char = 0;
     while ($candidate =~ /([0-9A-F]+)/gi) {
-      push @chars, $1;
+      my $hexchar = $1;
+      if (4 == length($hexchar)) {
+        push @chars, $hexchar;
+      } else {
+        push @chars, above_BMP_char_to_surrogates($hexchar);
+      }
       unless ($has_wanted_char) {
-        $has_wanted_char = 1 if (defined($codepoints->[hex($1)]));
+        $has_wanted_char = 1 if (defined($codepoints->[hex($hexchar)]));
       }
     }
     if ($has_wanted_char) {
@@ -144,6 +152,23 @@
 print STDERR "done.\n";
 
 
+# sub above_BMP_char_to_surrogates
+#
+# Converts hex references to chars above the BMP (i.e., greater than 0xFFFF)
+# to the corresponding UTF-16 surrogate pair
+#
+# Assumption: input string is a sequence more than four hex digits
+#
+sub above_BMP_char_to_surrogates {
+  my $ch = hex(shift);
+  my $high_surrogate = 0xD800 + (($ch - 0x10000) >> 10);
+  my $low_surrogate  = 0xDC00 + ($ch & 0x3FF);
+  push my @surrogates, map { sprintf("%04X", $_) } ($high_surrogate, $low_surrogate);
+  print STDERR "Surrogates: ", join(",", @surrogates), "\n";
+  return @surrogates;
+}
+
+
 # sub parse_Unicode_data_file
 #
 # Downloads and parses the specified Unicode data file, parses it, and
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/random.text.with.email.addresses.txt
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/random.text.with.email.addresses.txt	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/random.text.with.email.addresses.txt	(working copy)
@@ -121,14 +121,14 @@
 of LTLNFsgB@[191.56.104.113] all, until it has read it is
 iT0LOq.jtPW=G06~cETxl2ge@Ah0.4hn72v.tQ.LU there. <VGLn@z3E2.3an2.MM> Once
 TWmfsxn@[112.192.017.029] Spiros under the place
-2tP07A@2twe6u0d6uw6o.sed7n.109mx.XN--KGBECHTV as were not a house of the
+2tP07A@2twe6u0d6uw6o.sed7n.109mx.XN--KPRW13D as were not a house of the
 rosebushes and the whateverend, feel her waist. She changes everything. We had
 decided to do you know CjaPC63@['\RDrwk] this, is what did leave, pray; let us
 come to, <Ayydpdoa@tdgypppmen.wf> what history as died. Strange, Spiros with
 delight: That night "gfKP9"@jo3-r0.mz and gold case
-<aTMgDW4@t5gax.XN--0ZWM56D> is spring: the aeon arising, wherein he returned,
+<aTMgDW4@t5gax.XN--3E0B707E> is spring: the aeon arising, wherein he returned,
 retraversing the mcDrMO3FQ@nwc21.y5qd45lesryrp.IL gates, first
-<NZqj@v50egeveepk.z290kk.Bc3.xn--jxalpdlp> to reach session. Initiating first
+<NZqj@v50egeveepk.z290kk.Bc3.xn--kprw13d> to reach session. Initiating first
 part of the main hall toward his own spurs. Hes an <XtAhFnq@[218.214.251.103]>
 Irifix And older ones who wins? ADAM: x0S8uos@[109.82.126.233] The violin and
 reality. The hidden set up to come. ROSE WAKINS: No answer. The
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/random.text.with.urls.txt
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/random.text.with.urls.txt	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/random.text.with.urls.txt	(working copy)
@@ -24,7 +24,7 @@
 almost drove me towards evening. At
 HTTP://173.202.175.16/Md7tF6lj7r/oioJ9TpL8/x%03PjXgMMBC7C3%BDWzoVMzH the
 sergeant and then on the raw
-<Https://yu7v33rbt.vC6U3.XN--JXALPDLP/y%4fMSzkGFlm/wbDF4m> afternoon towards
+<Https://yu7v33rbt.vC6U3.XN--KPRW13D/y%4fMSzkGFlm/wbDF4m> afternoon towards
 the terror, merely wished him as biled
 M19nq.0URV4A.Me.CC/mj0kgt6hue/dRXv8YVLOw9v/CIOqb -- a conciliatory air on in
 <ftp://evzed8zvv.l2xkky.Dq85qcl1.eu:1184/07eY0/3X1OB7gPUk/J8la5OPUY3/y1oTItIs1HFPPp/5Q02N0cPyDH87hSy/jheYGF8s%F3P/%86PmYhi/ViKHoxsHqM8J>
@@ -47,7 +47,7 @@
 behind the answer those aids, I saw him in the same appearance of the convict's
 file:///%C5=.%8by/uuFXEaW8.%7E4/DRM%33Kh2xb8u%7FHizfLn/aoF06#7srWW%2EKoFf
 confession, and bring you see? '
-HTTP://yA2O3F.XN--0ZWM56D/qPDTt/MwMXGQq2S7JT/TJ2iCND said my limbs. Joe in an
+HTTP://yA2O3F.XN--3E0B707E/qPDTt/MwMXGQq2S7JT/TJ2iCND said my limbs. Joe in an
 accusatory manner as well known that Joe Gargery marry her cup. `I wonder and
 there was publicly made it was,
 <file:///Gdx5CDZYW%6cnzMJ/7HJ/J%63BSZDXtS/yfWXqq6#> as lookers on; me, I
@@ -63,7 +63,7 @@
 FTP://Hi144dz6hctql2n3uom.GE/%1A4OBV%63h/DoA4hpXFmqldOw-MB/PNYoaSDJB2F1k5/Nx%BBEDhrHhcMB
 towards evening. At last, and kneaded, and a dead man taking any. There was
 publicly made out there?' said I,
-ftp://w0yaysrl.XN--9T4B11YI5A/y4FFU%c4F0B/Dh9%D1dGK3bN/EqxueQEsX2p5/xgf4Jxr%D9q/2ubmieRM
+ftp://w0yaysrl.XN--CLCHC0EA0B2G2A9GCD/y4FFU%c4F0B/Dh9%D1dGK3bN/EqxueQEsX2p5/xgf4Jxr%D9q/2ubmieRM
 glancing http://t9wa4.rjcahbc06qmyk9jkhu3f.ZA/vIwW3sc3Pg/Bwmeo6KAjkRY at the
 N54l6e.vu/1m2%8bMFjv/oBdy%36.eL;33/N%d21Qvm/ river wound, twenty miles of the
 number called, hears the awful it lights; here and trimmings of Caesar. This
@@ -155,7 +155,7 @@
 at me, and that her walking z3ymb.KM/DdnrqoBz=YtxSB away so much of the
 grievous circumstances foreshadowed. After receiving the way, that I thought,
 if she should go to?' `Good again!' cried the
-FTP://7kgip3z.XN--HGBK6AJ7F53BBA:15983/OYEQzIA0 society of a savoury pork pie,
+FTP://7kgip3z.XN--KPRY57D:15983/OYEQzIA0 society of a savoury pork pie,
 and nezt6awdc.lSZDSU14B1OH.4n6nkmjyyj.cc they challenged, hears nothin' all my
 hands in herself, and bring him by hand. `This,' ftp://085.062.055.011/bopfVV/
 said he wore ftp://Mbbn8n.6ge03fiivyc7of.PS/mvb/X8VNt/5WrMZpw/flC6Rs a dog of
@@ -191,7 +191,7 @@
 from Richard the furthest end of
 http://ch43n.51rkj.rze.mq/pJjrSAiuSv/3x/EK%59ReZM9w both imp and stung by the
 bright fire, another look
-zQFC1SPO96J.Jy20d8.xn--0zwm56d:863/0OWpT4dpkMURAGe/nFg/LQBUr%3E/af7dO1 over her
+zQFC1SPO96J.Jy20d8.xn--3e0b707e:863/0OWpT4dpkMURAGe/nFg/LQBUr%3E/af7dO1 over her
 best use asking questions, and feet,
 <ftp://Xctk9iigg.cat/u3cX1d/Sx6m3dql/d%46;type=d#0i%3cT1yMkZQ> hanging to try
 back was the poker. `It was not warmly. `Seems
@@ -204,7 +204,7 @@
 Ftp://2gifamku.jqv10es.MX/yJ0rhtMYX/Y1Wq%F90RYO1F/NT0%aeAG3/r3Act1 he ate the
 house, end with the Ghost in order): Forty-three pence?' To five hundred
 Gargerys.' `I say, Pip; stay
-7WO6F.XN--11B5BS3A9AJ6G/1L%f9G0NEu/L2lD/mQGNS9UhgCEb out with
+7WO6F.XN--45BRJ9C/1L%f9G0NEu/L2lD/mQGNS9UhgCEb out with
 ftp://mIMU.t4d24n4lyx39.zURN708MCNGK-TJ42GLLBQRJHVENGPO.bw:59930/KmBYQKHfcjNRe/rK3fUjg%0Ad/.zHeVoCaC5/w%A2%F7up9o7J0Eq/ySBVhB
 his shot, and reposing no help to my seat. It was in the kitchen wall, because
 I calculated the sounds by giving me by the name for a rush of Joe's forge
@@ -299,7 +299,7 @@
 wooden hut
 ftp://7vl2w.jp/b%a5fBYyDR/ZN%62LG9aYpjSwn0yWg/nG97gndK%69XZ#fet%55XXZhslTNrq5T
 where it seemed to give Pirrip as
-<79wvzk3.24dyfkxg0f4z-hsqgqqzj2p9n59el0a.XN--DEBA0AD/:8epfLrewivg%488s/2ORX8M3/B0KpeeB/2rbuCnnBF/4P6%1cU6fTGNj/o%3aZMIHdO>
+<79wvzk3.24dyfkxg0f4z-hsqgqqzj2p9n59el0a.XN--FIQS8S/:8epfLrewivg%488s/2ORX8M3/B0KpeeB/2rbuCnnBF/4P6%1cU6fTGNj/o%3aZMIHdO>
 to say, on the guiltily coarse his head, he tried to the
 Uow9.sF.GP/sF3FCFSbCRWGNJY%aaU/DVXA5nIOWmjc6S/FQXdiBw/Y7~cVmpypgft/vU1%D4z
 remark. `There's one sprinkled all I was possible she beggared me. All these
@@ -311,7 +311,7 @@
 he shook her veil so thick nor my milk and would impart all had returned, with
 soap-suds, I had FILE:///#F9Bgl just like thin snow. `Enough of his right side
 of thenceforth sitting
-jyia054.l814D9SNHRRA5RJCCW.kvxga.XN--0ZWM56D/sBbx24%f2Tw2/Sd0Lul0Vg1bbIqW~/lveEw
+jyia054.l814D9SNHRRA5RJCCW.kvxga.XN--3E0B707E/sBbx24%f2Tw2/Sd0Lul0Vg1bbIqW~/lveEw
 in File:///KKfIe63z/BETB.T%C6sG/RcYgnOycg my soul. I sat down on it, I have
 been a spoon that the pie, blacksmith?' asked Estella of it made a mouth wide
 open, and so
@@ -324,7 +324,7 @@
 pointed to Ftp://Gbu5t.HT/xad4fgjaN#GLpU3XQd6%7F(cHIz himself. No glimpse of
 file:///A1omJiPzafgAm/addqzG%dc%62/Lw1mamTg herself, I saw that he would have
 been there, I was too far and uncomfortable by it.
-http://89qw34ksf0qf6iq264of-1nya4ds7qvpixw8c951aw8wcm3.qxk7usa.N8j1frzfgnkbi9y2.XN--9T4B11YI5A/Unwn3/%97gnj0/GQgJC~OFxsdE8ubC7/IWy450/8%7CQVgdI8/soi0BviZt/Zjs%10i5Xh?qi8t9=rBbPok,Si&*Xl=Q+fT&Hx4%D70=84+8W%18+sV2BU6xCDP%47M&Usbms=
+http://89qw34ksf0qf6iq264of-1nya4ds7qvpixw8c951aw8wcm3.qxk7usa.N8j1frzfgnkbi9y2.XN--CLCHC0EA0B2G2A9GCD/Unwn3/%97gnj0/GQgJC~OFxsdE8ubC7/IWy450/8%7CQVgdI8/soi0BviZt/Zjs%10i5Xh?qi8t9=rBbPok,Si&*Xl=Q+fT&Hx4%D70=84+8W%18+sV2BU6xCDP%47M&Usbms=
 Under the Above,' I rather to become transfixed -- he gave me out of the
 kitchen empty-handed, to keep him, I had made a
 Z7tid0uh.eZMOI-M1.umlsyksuzovqdw6wozbd.BW/m%e684OhC/ErAhpGiG subject, if he had
@@ -468,7 +468,7 @@
 had heard it had hesitated as little window, violently plunging and she had
 committed, and had all about the present calling, which the fingers of tea on
 Saturdays than this country, gentlemen, but I could see those,
-https://nWC9-RIA00RPVL4SSWRICWWX3NH5SMQIA7IPMCK174T30VQBL-M6.XN--0ZWM56D/CwE%e2rWaYZmE?X_coOVl=kqGQ&Pli=MjKg-+wO6Eh+lbbcN&x3M=3kQh99m92mRdf&iiO2wXgQ=qyWVG9G
+https://nWC9-RIA00RPVL4SSWRICWWX3NH5SMQIA7IPMCK174T30VQBL-M6.XN--3E0B707E/CwE%e2rWaYZmE?X_coOVl=kqGQ&Pli=MjKg-+wO6Eh+lbbcN&x3M=3kQh99m92mRdf&iiO2wXgQ=qyWVG9G
 too, if you remember what stock she told me again. `But I know what
 file:///enqvF%EFLOBsZhl8h2z wittles is?' `Yes, ma'am.' `Estella, take me again
 and ftp://133.4.130.192/p%b1LgcONfo%bc&kmH/Ibh6Lq%DCJhnswT%1A refractory
@@ -493,7 +493,7 @@
 ftp://zxmv98m49669kfvf24o12w3u93wbovfp-1smo6y90e27n133okplcjqrmv-a.CD/JM5RAAY/sJdBntYWuEY4uB7hz/ozRSmFJD/#Xv22:Xvg
 flaxen curls and tables, and a foot of the blacksmith's.' `Halloa!' said Joe,
 staring at that it had withered like a infunt, and took another look about the
-rum <6S8.Crwllo5e3.jmtz.XN--G6W251D/6InlQn/hnhu2f%ac8tX/apq%0D6o/> out at once.
+rum <6S8.Crwllo5e3.jmtz.XN--GECRJ9C/6InlQn/hnhu2f%ac8tX/apq%0D6o/> out at once.
 Three Jolly Bargemen to think she seemed to tell you were. When we saw the file
 coming at my slice. I have mentioned it with the wooden hut where we had got up
 trying to file:///gVW/nnRNxPfMXKb%72Aq%4A hand. If ever grateful for. If a
@@ -662,7 +662,7 @@
 https://227.086.128.010:64985/MDKuFInA86qto5/_cK=4S%49Ic/SPp76/TlV%0Arlwfx/
 wiped the liquor. He was the bad; and some one
 Ftp://171.160.94.43/ALTgS46I4VM/55PbbK/5N%faTSE another
-Ftp://3zd7z.etw.XN--JXALPDLP/4UztCuTbW2z/LL%2cDI/dTYSi9 turned to put straws
+Ftp://3zd7z.etw.XN--KPRW13D/4UztCuTbW2z/LL%2cDI/dTYSi9 turned to put straws
 down by a most powerfully down
 t6xfr.wxjz5p2t5.zl8m4.MN/2cbpjk/gsdm/5Mvc-j3rc/16Wb65&c7x to me, and all that
 know the window,
@@ -993,7 +993,7 @@
 that Joe's blue file:///EYS2nDf%9671qsm34OZeB%e5lUA/rYBDn0DKs0/ eyes, had an
 hour longer than at me, and dismal, and gloves, and that's further than I
 mpuwl0.BA/MkvAvc?j%11K4=9gE%613&qOOEP0t=g7EXs looked on. `Now, boy!
-g6tylc0.daeczh.4q.XN--9T4B11YI5A/1SbCR9cX1%3D/YfP8CpLKn5KzTL8/Kj11z%B7OuqJU;qM4P
+g6tylc0.daeczh.4q.XN--CLCHC0EA0B2G2A9GCD/1SbCR9cX1%3D/YfP8CpLKn5KzTL8/Kj11z%B7OuqJU;qM4P
 Why, here's a ridiculous old chap. And looked up by hand. `Why don't like
 `sulks.' Therefore, I was in such game?' Everybody, myself drifting down his
 chest and he had made me worse by-and-by. I was a
@@ -1035,7 +1035,7 @@
 <HTTPS://bF2RA.kw/1TA9pTTBg/nM/VSRo%85Kt?%62mxNfo=HDowgwkM3&9oPOLH2=yKOxIe+YNtt>
 for us heavy. `I Bolted, myself, 5.Piba4ac.JE/55M1H/AZXdj and thread, and we
 after him, or to inspire confidence. This was brought you spoke all the act, he
-couldn't m-k6-ej7x.XN--HLCJ6AYA9ESC7A/suVrNQSIj9/TmRhHbe/o&0dbqR/ keep the fire
+couldn't m-k6-ej7x.XN--J6W193G/suVrNQSIj9/TmRhHbe/o&0dbqR/ keep the fire
 between the forge was <ftp://242.228.138.8/o%CC_QjILS%17aYH/%caw8CcVZyPRZ/>
 busy in it. Until
 hGE9YH3D6.SD/m%1EpDJrzO/Tf2Xxqq8L/YJT7BTEY%661PvcMgOr/29ZbuJuWl6q/ she jammed
@@ -1329,7 +1329,7 @@
 FILE://155.24.106.255/3VEZIT7 if it was to him, I might not do not afraid of
 report, and looking rather to make nothing of a confidential voice,
 d1y8zvhwq40bi3tom.hPCZ.gJ-286X.TG/ayWKrgAvF6tn/L4SgquZT6C/1DmNe/CI69rJ/%f6QrzZGkSQ
-as lda5l5wc.XN--HGBK6AJ7F53BBA/pr80SSZ/eNM1%D50lp/Rc%8EimOET if he would be
+as lda5l5wc.XN--KPRY57D/pr80SSZ/eNM1%D50lp/Rc%8EimOET if he would be
 supposed,' said the wind and so we were read the conversation consisted of it
 had so that we saw some bread, some
 l13t2t.sk/O%2BmRkw/@0AgGL@NX/wgt&aggDcp#0IYe'C brandy out: no black velvet
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/core/urls.from.random.text.with.urls.txt
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/core/urls.from.random.text.with.urls.txt	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/core/urls.from.random.text.with.urls.txt	(working copy)
@@ -10,7 +10,7 @@
 file:///2CdsP/U2GCLT
 Http://Pzw978uzb.ai/yB;mt/o8hVKG/%231Y/Xb1%bb6v1fhjfdkfkBvxed?8mq~=OvF&STpJJk=ws0ZO&0DRA=
 HTTP://173.202.175.16/Md7tF6lj7r/oioJ9TpL8/x%03PjXgMMBC7C3%BDWzoVMzH
-Https://yu7v33rbt.vC6U3.XN--JXALPDLP/y%4fMSzkGFlm/wbDF4m
+Https://yu7v33rbt.vC6U3.XN--KPRW13D/y%4fMSzkGFlm/wbDF4m
 M19nq.0URV4A.Me.CC/mj0kgt6hue/dRXv8YVLOw9v/CIOqb
 ftp://evzed8zvv.l2xkky.Dq85qcl1.eu:1184/07eY0/3X1OB7gPUk/J8la5OPUY3/y1oTItIs1HFPPp/5Q02N0cPyDH87hSy/jheYGF8s%F3P/%86PmYhi/ViKHoxsHqM8J
 ftp://213.7.210.47/%e5pFkj6e6Jczc/ypJGG/z%663jYR/37IxLQBPr/Ciq50EUIdueyj
@@ -23,13 +23,13 @@
 FILE:///rKnQkS0MAF#tM%53_2%03%d6ZICH
 ftp://R5ecjkf1yx4wpskfh.tv0y3m90ak.0R605.se:51297/zpWcRRcG/1woSqw7ZUko/
 file:///%C5=.%8by/uuFXEaW8.%7E4/DRM%33Kh2xb8u%7FHizfLn/aoF06#7srWW%2EKoFf
-HTTP://yA2O3F.XN--0ZWM56D/qPDTt/MwMXGQq2S7JT/TJ2iCND
+HTTP://yA2O3F.XN--3E0B707E/qPDTt/MwMXGQq2S7JT/TJ2iCND
 file:///Gdx5CDZYW%6cnzMJ/7HJ/J%63BSZDXtS/yfWXqq6#
 http://1qvgjd1.TP/7oq5gWW/Gwqf8fxBXR4/?Br,q=ayMz0&1IO%370N7=;Sl1czc2L+5bRISfD+w&ygP3FhV%E1w36=2Rx
 ftp://5SCC6BUYP.Knf1cvlc22z9.1dc3rixt5ugyq4/5OnYTSN/QpCdo/t3zqkI/pn5skT/oJgrGy7
 http://2dkbeuwsto3i3e8jaxi6su9wjlmwygtpdp7g65611z-2bbr82uhjqkdv2jrh7.KZ/FiSvI/aaB&dPQ%42kLdM
 FTP://Hi144dz6hctql2n3uom.GE/%1A4OBV%63h/DoA4hpXFmqldOw-MB/PNYoaSDJB2F1k5/Nx%BBEDhrHhcMB
-ftp://w0yaysrl.XN--9T4B11YI5A/y4FFU%c4F0B/Dh9%D1dGK3bN/EqxueQEsX2p5/xgf4Jxr%D9q/2ubmieRM
+ftp://w0yaysrl.XN--CLCHC0EA0B2G2A9GCD/y4FFU%c4F0B/Dh9%D1dGK3bN/EqxueQEsX2p5/xgf4Jxr%D9q/2ubmieRM
 http://t9wa4.rjcahbc06qmyk9jkhu3f.ZA/vIwW3sc3Pg/Bwmeo6KAjkRY
 N54l6e.vu/1m2%8bMFjv/oBdy%36.eL;33/N%d21Qvm/
 http://ah-2d4.ASIA/qmp
@@ -75,7 +75,7 @@
 file:///LdsHfPABFz1vRD1OB6Yl/RS6&1Gmz/mfYul/
 ftp://E1cdf-p.XN--MGBERP4A5D4AR:60510/qMaw4kSSgYM/7jgIuL/gSVW6O91/2bhnsj/kl7R5sgn6&X5EiZdZ0WhTX3T/fa%f3Azz
 z3ymb.KM/DdnrqoBz=YtxSB
-FTP://7kgip3z.XN--HGBK6AJ7F53BBA:15983/OYEQzIA0
+FTP://7kgip3z.XN--KPRY57D:15983/OYEQzIA0
 nezt6awdc.lSZDSU14B1OH.4n6nkmjyyj.cc
 ftp://085.062.055.011/bopfVV/
 ftp://Mbbn8n.6ge03fiivyc7of.PS/mvb/X8VNt/5WrMZpw/flC6Rs
@@ -93,12 +93,12 @@
 bl60k0jqkc9.oow84o1.BF/Xly5cTna/BzoQuHi3r8e/o5BDNrvT/=6HRdBjH/Mrp5%02/p%e9pT2Ae
 ftp://Bs3ceuxd8ii66gt.X8wwdpt.BB:27095/3BfkvfzcmTS/FTffh&S/gIWvJ5Kd/AlOQ%3EnO
 http://ch43n.51rkj.rze.mq/pJjrSAiuSv/3x/EK%59ReZM9w
-zQFC1SPO96J.Jy20d8.xn--0zwm56d:863/0OWpT4dpkMURAGe/nFg/LQBUr%3E/af7dO1
+zQFC1SPO96J.Jy20d8.xn--3e0b707e:863/0OWpT4dpkMURAGe/nFg/LQBUr%3E/af7dO1
 ftp://Xctk9iigg.cat/u3cX1d/Sx6m3dql/d%46;type=d#0i%3cT1yMkZQ
 HTTPS://56aderic0knmip9lkqdqag14.uk:45885/lELiK:/vF%4C5Enwqy/P5NGJ2b/dD6sg1yMV
 ftp://vlt.3g45k63viz2.tcnm3.UA:60664/AJ9iqYk%c1/uKbohn2/K%D1kequ4z8rxFpJ
 Ftp://2gifamku.jqv10es.MX/yJ0rhtMYX/Y1Wq%F90RYO1F/NT0%aeAG3/r3Act1
-7WO6F.XN--11B5BS3A9AJ6G/1L%f9G0NEu/L2lD/mQGNS9UhgCEb
+7WO6F.XN--45BRJ9C/1L%f9G0NEu/L2lD/mQGNS9UhgCEb
 ftp://mIMU.t4d24n4lyx39.zURN708MCNGK-TJ42GLLBQRJHVENGPO.bw:59930/KmBYQKHfcjNRe/rK3fUjg%0Ad/.zHeVoCaC5/w%A2%F7up9o7J0Eq/ySBVhB
 ftp://lv56pdepzu0b0fo-04qtxv5tt2jc0nsaukrhtz5-e3u1vcb517y3b135zl.e0r1hson.dk/3TVoqjp6%1FCFSkt/006VZfho/gxrWxgDawM3Uk
 Ftp://7n977.Niyt.2fgkzfhj.q7-DJ.Ow7a.it/5zfRi3PO8/1zfKT9%421tP/?SazEijJq%710COQKWeLE/TdUc%b2u/2AxBw9%4BUN6Zp4Z/KfUZd1MTdPv/L4m1tI3/WJvcK1
@@ -147,20 +147,20 @@
 file:///IZ47ESCtX%aatQab1/V553gjR?Me/#9%68qPw
 file:///Y?GG/BBqMPBJ/nsxX3qP/8P24WdqBxH
 ftp://7vl2w.jp/b%a5fBYyDR/ZN%62LG9aYpjSwn0yWg/nG97gndK%69XZ#fet%55XXZhslTNrq5T
-79wvzk3.24dyfkxg0f4z-hsqgqqzj2p9n59el0a.XN--DEBA0AD/:8epfLrewivg%488s/2ORX8M3/B0KpeeB/2rbuCnnBF/4P6%1cU6fTGNj/o%3aZMIHdO
+79wvzk3.24dyfkxg0f4z-hsqgqqzj2p9n59el0a.XN--FIQS8S/:8epfLrewivg%488s/2ORX8M3/B0KpeeB/2rbuCnnBF/4P6%1cU6fTGNj/o%3aZMIHdO
 Uow9.sF.GP/sF3FCFSbCRWGNJY%aaU/DVXA5nIOWmjc6S/FQXdiBw/Y7~cVmpypgft/vU1%D4z
 ftp://[fd77:4982:C37F:a0a1:7651:E09C:117.093.145.017]/2l91g/s%79lJmUiZ/%A5R2qsJ
 [62c0::]/d1lmSzoB/5OBVnzn/kOXW%D23
 Http://Ed095eimjy.rlb5698d.kp/_l5uoOO/aA494s?3nSxdIpE=y%79qu+2un1hGR&J%76=8&L%bed=uY5hO+s+IKk1S&Q=HHXEC+Gof86QIRHy&35QY5=
 FILE:///#F9Bgl
-jyia054.l814D9SNHRRA5RJCCW.kvxga.XN--0ZWM56D/sBbx24%f2Tw2/Sd0Lul0Vg1bbIqW~/lveEw
+jyia054.l814D9SNHRRA5RJCCW.kvxga.XN--3E0B707E/sBbx24%f2Tw2/Sd0Lul0Vg1bbIqW~/lveEw
 File:///KKfIe63z/BETB.T%C6sG/RcYgnOycg
 ftp://892f7.oel50j.32.9qj1p-g7lgw.MR:48021/XNKbk2PZQXSvOuGnOAnATDt3/XfHyJtvoC/PW7YrSgf#LmGWJgPw
 http://sisas.ua/4CU60ZLK4VgY8AR89
 FTP://7qf.hlj.TN/IXOeaf/t%c52Jxwy#YkcAy2
 Ftp://Gbu5t.HT/xad4fgjaN#GLpU3XQd6%7F(cHIz
 file:///A1omJiPzafgAm/addqzG%dc%62/Lw1mamTg
-http://89qw34ksf0qf6iq264of-1nya4ds7qvpixw8c951aw8wcm3.qxk7usa.N8j1frzfgnkbi9y2.XN--9T4B11YI5A/Unwn3/%97gnj0/GQgJC~OFxsdE8ubC7/IWy450/8%7CQVgdI8/soi0BviZt/Zjs%10i5Xh?qi8t9=rBbPok,Si&*Xl=Q+fT&Hx4%D70=84+8W%18+sV2BU6xCDP%47M&Usbms=
+http://89qw34ksf0qf6iq264of-1nya4ds7qvpixw8c951aw8wcm3.qxk7usa.N8j1frzfgnkbi9y2.XN--CLCHC0EA0B2G2A9GCD/Unwn3/%97gnj0/GQgJC~OFxsdE8ubC7/IWy450/8%7CQVgdI8/soi0BviZt/Zjs%10i5Xh?qi8t9=rBbPok,Si&*Xl=Q+fT&Hx4%D70=84+8W%18+sV2BU6xCDP%47M&Usbms=
 Z7tid0uh.eZMOI-M1.umlsyksuzovqdw6wozbd.BW/m%e684OhC/ErAhpGiG
 ftp://tw7d-6yu.im:2055/%66qbqzss/OmPGW;type=d
 FTP://zst.tn/QcUpaA/VKvJ2/JN6AKew/iXYIiHm7mfPFmD%21E5/yTQpoiqdbaaS1/LnzOX#VqsobH
@@ -228,7 +228,7 @@
 http://Qhk9z.zm/cOGBen/mBsDycEI5V7L1s%84WUj7863/p%5f~okuRD51b0M?b%F2d%67ujGr=oh8PWUtK&j6uX7baX=&sg3RUocA9W=m5IaF&JWH9G=fyiOtnC3+7RJA+ippw96rvu+BxtGg&F6f1=jmPS&3PE0xX5=TGV%5c5J&%fc@NSEynhuvb=&MkRIt33=
 Http://[98cc:433d:2C25:62dd:54ba:d10b:63d3:4C40]/YlbNrJod/fdjuN/qYqSdqr5/KAbXYHO%F0m7Ws9
 file:///ywFY5HK/XAv@v%66o/M2O4Wlny50hypf5%02A8
-https://nWC9-RIA00RPVL4SSWRICWWX3NH5SMQIA7IPMCK174T30VQBL-M6.XN--0ZWM56D/CwE%e2rWaYZmE?X_coOVl=kqGQ&Pli=MjKg-+wO6Eh+lbbcN&x3M=3kQh99m92mRdf&iiO2wXgQ=qyWVG9G
+https://nWC9-RIA00RPVL4SSWRICWWX3NH5SMQIA7IPMCK174T30VQBL-M6.XN--3E0B707E/CwE%e2rWaYZmE?X_coOVl=kqGQ&Pli=MjKg-+wO6Eh+lbbcN&x3M=3kQh99m92mRdf&iiO2wXgQ=qyWVG9G
 file:///enqvF%EFLOBsZhl8h2z
 ftp://133.4.130.192/p%b1LgcONfo%bc&kmH/Ibh6Lq%DCJhnswT%1A
 ftp://1xf.ipl4f0y6c4.VA/LHuq~/p2nPbE/0YGGNJB%DEje2psef_B/aKOuMl1Q9
@@ -240,7 +240,7 @@
 file:///19%9947/ksd3Sq7W78%27/2K_Ylzcu2q
 r8sht9qzsc1e2wp.ci/8SbPwlW%5ac/qKEqFi0Q
 ftp://zxmv98m49669kfvf24o12w3u93wbovfp-1smo6y90e27n133okplcjqrmv-a.CD/JM5RAAY/sJdBntYWuEY4uB7hz/ozRSmFJD/#Xv22:Xvg
-6S8.Crwllo5e3.jmtz.XN--G6W251D/6InlQn/hnhu2f%ac8tX/apq%0D6o/
+6S8.Crwllo5e3.jmtz.XN--GECRJ9C/6InlQn/hnhu2f%ac8tX/apq%0D6o/
 file:///gVW/nnRNxPfMXKb%72Aq%4A
 file:///Fzza388TQ
 file:///
@@ -314,7 +314,7 @@
 f5ms.jp/%A1FpERWwTd%BFG/ExC8V5aqx5l2CLJr0mJb5u/DgMvEzAr2U/py9Vg/igr9PzANtw/FFiN1E7
 https://227.086.128.010:64985/MDKuFInA86qto5/_cK=4S%49Ic/SPp76/TlV%0Arlwfx/
 Ftp://171.160.94.43/ALTgS46I4VM/55PbbK/5N%faTSE
-Ftp://3zd7z.etw.XN--JXALPDLP/4UztCuTbW2z/LL%2cDI/dTYSi9
+Ftp://3zd7z.etw.XN--KPRW13D/4UztCuTbW2z/LL%2cDI/dTYSi9
 t6xfr.wxjz5p2t5.zl8m4.MN/2cbpjk/gsdm/5Mvc-j3rc/16Wb65&c7x
 ftp://D02-auxxaeqnv9ve-jlmo3.l10vqu.12jl.2mvjwrsqm.BA/r71QLLNu6oGJjG/HbxrX1Grq8/QR%2agZv4hR
 file:///XoCg%EDVf/A3ibJYjU
@@ -476,7 +476,7 @@
 FILE:///Kywof5D5q/0TRS/zayrkrnENB
 file:///EYS2nDf%9671qsm34OZeB%e5lUA/rYBDn0DKs0/
 mpuwl0.BA/MkvAvc?j%11K4=9gE%613&qOOEP0t=g7EXs
-g6tylc0.daeczh.4q.XN--9T4B11YI5A/1SbCR9cX1%3D/YfP8CpLKn5KzTL8/Kj11z%B7OuqJU;qM4P
+g6tylc0.daeczh.4q.XN--CLCHC0EA0B2G2A9GCD/1SbCR9cX1%3D/YfP8CpLKn5KzTL8/Kj11z%B7OuqJU;qM4P
 file:///TJa%86AczeCmM5QMhi/Wox~Ajl/WxUF%5eSA:y%0fD%E21/x%cca%d3Qgx/8iWJ5-h%26/fCK%01nQNrK8#ygTTB
 file:///~%303cUUVYTEaQU5%5DXbogiPKb/favR2rETEh/9TXM%15u/nYCOZpZgL
 file:///mJM%a1/jv5%53QDqE/bFMu0CBp
@@ -496,7 +496,7 @@
 file://ij9anjtok86ro.uN-BGDQ855IB.sDXAQR.5kr8kz.3J3M8XRM.18r3s0g-6.4rjsmwue0lwao0og17d-5-1.F1h3qgkul29yw2t4p4se5clomncxhmoy.g6c9tbz7.pa/5LMtmbl/1tfIF/pBOV7Hc
 HTTPS://bF2RA.kw/1TA9pTTBg/nM/VSRo%85Kt?%62mxNfo=HDowgwkM3&9oPOLH2=yKOxIe+YNtt
 5.Piba4ac.JE/55M1H/AZXdj
-m-k6-ej7x.XN--HLCJ6AYA9ESC7A/suVrNQSIj9/TmRhHbe/o&0dbqR/
+m-k6-ej7x.XN--J6W193G/suVrNQSIj9/TmRhHbe/o&0dbqR/
 ftp://242.228.138.8/o%CC_QjILS%17aYH/%caw8CcVZyPRZ/
 hGE9YH3D6.SD/m%1EpDJrzO/Tf2Xxqq8L/YJT7BTEY%661PvcMgOr/29ZbuJuWl6q/
 Ftp://mez27g2tpmk.MC/%B8AHk%95etDns%46/gXbsCn%6C-/s8_Jmy/DhmfT~Di6KD
@@ -633,7 +633,7 @@
 Http://w9ys35.wb55p6l.hxl.rs/Y97%58Lp8JjLZw/5L
 FILE://155.24.106.255/3VEZIT7
 d1y8zvhwq40bi3tom.hPCZ.gJ-286X.TG/ayWKrgAvF6tn/L4SgquZT6C/1DmNe/CI69rJ/%f6QrzZGkSQ
-lda5l5wc.XN--HGBK6AJ7F53BBA/pr80SSZ/eNM1%D50lp/Rc%8EimOET
+lda5l5wc.XN--KPRY57D/pr80SSZ/eNM1%D50lp/Rc%8EimOET
 l13t2t.sk/O%2BmRkw/@0AgGL@NX/wgt&aggDcp#0IYe'C
 FILE://a6ys9a4.xj.BY/%99BGXp/F=yJtxc71/gvXuHuB9k
 212.072.006.032/6kV8ce%2e/%e7lzm-HB%4artP/zg6tWMW7RIG?U7=HAXw$D3sM%7DyDJ&Gt=
Index: lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory.java
===================================================================
--- lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory.java	(revision 1548223)
+++ lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizerFactory.java	(working copy)
@@ -75,7 +75,7 @@
         + " samba Halta gamba "
         + "ftp://119.220.152.185/JgJgdZ/31aW5c/viWlfQSTs5/1c8U5T/ih5rXx/YfUJ/xBW1uHrQo6.R\n"
         + "M19nq.0URV4A.Me.CC/mj0kgt6hue/dRXv8YVLOw9v/CIOqb\n"
-        + "Https://yu7v33rbt.vC6U3.XN--JXALPDLP/y%4fMSzkGFlm/wbDF4m"
+        + "Https://yu7v33rbt.vC6U3.XN--KPRW13D/y%4fMSzkGFlm/wbDF4m"
         + " inter Locutio "
         + "[c2d4::]/%471j5l/j3KFN%AAAn/Fip-NisKH/\n"
         + "file:///aXvSZS34is/eIgM8s~U5dU4Ifd%c7"
@@ -91,7 +91,7 @@
           "samba", "Halta", "gamba",
           "ftp://119.220.152.185/JgJgdZ/31aW5c/viWlfQSTs5/1c8U5T/ih5rXx/YfUJ/xBW1uHrQo6.R",
           "M19nq.0URV4A.Me.CC/mj0kgt6hue/dRXv8YVLOw9v/CIOqb",
-          "Https://yu7v33rbt.vC6U3.XN--JXALPDLP/y%4fMSzkGFlm/wbDF4m",
+          "Https://yu7v33rbt.vC6U3.XN--KPRW13D/y%4fMSzkGFlm/wbDF4m",
           "inter", "Locutio",
           "[c2d4::]/%471j5l/j3KFN%AAAn/Fip-NisKH/",
           "file:///aXvSZS34is/eIgM8s~U5dU4Ifd%c7",
Index: lucene/analysis/common/src/tools/java/org/apache/lucene/analysis/standard/GenerateJflexTLDMacros.java
===================================================================
--- lucene/analysis/common/src/tools/java/org/apache/lucene/analysis/standard/GenerateJflexTLDMacros.java	(revision 1548223)
+++ lucene/analysis/common/src/tools/java/org/apache/lucene/analysis/standard/GenerateJflexTLDMacros.java	(working copy)
@@ -60,20 +60,21 @@
   
   private static final String APACHE_LICENSE 
     = "/*" + NL
-      + " * Copyright 2001-2005 The Apache Software Foundation." + NL
-      + " *" + NL
-      + " * Licensed under the Apache License, Version 2.0 (the \"License\");" + NL
-      + " * you may not use this file except in compliance with the License." + NL
-      + " * You may obtain a copy of the License at" + NL
-      + " *" + NL
-      + " *      http://www.apache.org/licenses/LICENSE-2.0" + NL
-      + " *" + NL
-      + " * Unless required by applicable law or agreed to in writing, software" + NL
-      + " * distributed under the License is distributed on an \"AS IS\" BASIS," + NL
-      + " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." + NL
-      + " * See the License for the specific language governing permissions and" + NL
-      + " * limitations under the License." + NL
-      + " */" + NL + NL;
+    + " * Licensed to the Apache Software Foundation (ASF) under one or more" + NL
+    + " * contributor license agreements.  See the NOTICE file distributed with" + NL
+    + " * this work for additional information regarding copyright ownership." + NL
+    + " * The ASF licenses this file to You under the Apache License, Version 2.0" + NL
+    + " * (the \"License\"); you may not use this file except in compliance with" + NL
+    + " * the License.  You may obtain a copy of the License at" + NL
+    + " *" + NL
+    + " *     http://www.apache.org/licenses/LICENSE-2.0" + NL
+    + " *" + NL
+    + " * Unless required by applicable law or agreed to in writing, software" + NL
+    + " * distributed under the License is distributed on an \"AS IS\" BASIS," + NL
+    + " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." + NL
+    + " * See the License for the specific language governing permissions and" + NL
+    + " * limitations under the License." + NL
+    + " */" + NL;
     
   private static final Pattern TLD_PATTERN_1 
     = Pattern.compile("([-A-Za-z0-9]+)\\.\\s+NS\\s+.*");
Index: lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateJFlexSupplementaryMacros.java
===================================================================
--- lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateJFlexSupplementaryMacros.java	(revision 1548223)
+++ lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateJFlexSupplementaryMacros.java	(working copy)
@@ -36,40 +36,45 @@
   static {
     DATE_FORMAT.setTimeZone(TimeZone.getTimeZone("UTC"));
   }
-  
-  private static final String APACHE_LICENSE 
-    = "/*" + NL
-      + " * Copyright 2010 The Apache Software Foundation." + NL
+
+  private static final String APACHE_LICENSE
+      = "/*" + NL
+      + " * Licensed to the Apache Software Foundation (ASF) under one or more" + NL
+      + " * contributor license agreements.  See the NOTICE file distributed with" + NL
+      + " * this work for additional information regarding copyright ownership." + NL
+      + " * The ASF licenses this file to You under the Apache License, Version 2.0" + NL
+      + " * (the \"License\"); you may not use this file except in compliance with" + NL
+      + " * the License.  You may obtain a copy of the License at" + NL
       + " *" + NL
-      + " * Licensed under the Apache License, Version 2.0 (the \"License\");" + NL
-      + " * you may not use this file except in compliance with the License." + NL
-      + " * You may obtain a copy of the License at" + NL
+      + " *     http://www.apache.org/licenses/LICENSE-2.0" + NL
       + " *" + NL
-      + " *      http://www.apache.org/licenses/LICENSE-2.0" + NL
-      + " *" + NL
       + " * Unless required by applicable law or agreed to in writing, software" + NL
       + " * distributed under the License is distributed on an \"AS IS\" BASIS," + NL
       + " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied." + NL
       + " * See the License for the specific language governing permissions and" + NL
       + " * limitations under the License." + NL
-      + " */" + NL + NL;
+      + " */" + NL;
     
   
   public static void main(String args[]) {
     outputHeader();
-    outputMacro("ALetterSupp",         "[:WordBreak=ALetter:]");
-    outputMacro("FormatSupp",          "[:WordBreak=Format:]");
-    outputMacro("ExtendSupp",          "[:WordBreak=Extend:]");
-    outputMacro("NumericSupp",         "[:WordBreak=Numeric:]");
-    outputMacro("KatakanaSupp",        "[:WordBreak=Katakana:]");
-    outputMacro("MidLetterSupp",       "[:WordBreak=MidLetter:]");
-    outputMacro("MidNumSupp",          "[:WordBreak=MidNum:]");
-    outputMacro("MidNumLetSupp",       "[:WordBreak=MidNumLet:]");
-    outputMacro("ExtendNumLetSupp",    "[:WordBreak=ExtendNumLet:]");
-    outputMacro("ExtendNumLetSupp",    "[:WordBreak=ExtendNumLet:]");
-    outputMacro("ComplexContextSupp",  "[:LineBreak=Complex_Context:]");
-    outputMacro("HanSupp",             "[:Script=Han:]");
-    outputMacro("HiraganaSupp",        "[:Script=Hiragana:]");
+    outputMacro("ALetterSupp",           "[:WordBreak=ALetter:]");
+    outputMacro("FormatSupp",            "[:WordBreak=Format:]");
+    outputMacro("NumericSupp",           "[:WordBreak=Numeric:]");
+    outputMacro("ExtendSupp",            "[:WordBreak=Extend:]");
+    outputMacro("KatakanaSupp",          "[:WordBreak=Katakana:]");
+    outputMacro("MidLetterSupp",         "[:WordBreak=MidLetter:]");
+    outputMacro("MidNumSupp",            "[:WordBreak=MidNum:]");
+    outputMacro("MidNumLetSupp",         "[:WordBreak=MidNumLet:]");
+    outputMacro("ExtendNumLetSupp",      "[:WordBreak=ExtendNumLet:]");
+    outputMacro("ExtendNumLetSupp",      "[:WordBreak=ExtendNumLet:]");
+    outputMacro("ComplexContextSupp",    "[:LineBreak=Complex_Context:]");
+    outputMacro("HanSupp",               "[:Script=Han:]");
+    outputMacro("HiraganaSupp",          "[:Script=Hiragana:]");
+    outputMacro("SingleQuoteSupp",       "[:WordBreak=Single_Quote:]");
+    outputMacro("DoubleQuoteSupp",       "[:WordBreak=Double_Quote:]");
+    outputMacro("HebrewLetterSupp",      "[:WordBreak=Hebrew_Letter:]");
+    outputMacro("RegionalIndicatorSupp", "[:WordBreak=Regional_Indicator:]");
   }
   
   static void outputHeader() {
Index: lucene/common-build.xml
===================================================================
--- lucene/common-build.xml	(revision 1548223)
+++ lucene/common-build.xml	(working copy)
@@ -476,7 +476,7 @@
     <available property="jflex.present" classname="jflex.anttask.JFlexTask">
       <classpath refid="jflex.classpath"/>
     </available>
-    <fail unless="jflex.present">
+    <fail unless="jflex.present">&#xA0;
       ##################################################################
       JFlex not found.
       JFlex Home: ${jflex.home}
@@ -484,14 +484,14 @@
       Please install the jFlex 1.5 version (currently not released)
       from its SVN repository:
 
-       svn co -r 623 http://jflex.svn.sourceforge.net/svnroot/jflex/trunk jflex
+       svn co -r 722 https://svn.code.sf.net/p/jflex/code/trunk jflex
        cd jflex
        mvn install
 
       Then, create a build.properties file either in your home
       directory, or within the Lucene directory and set the jflex.home
       property to the path where the JFlex trunk checkout is located
-      (in the above example its the directory called "jflex").
+      (in the above example it's the directory called "jflex").
 
       ##################################################################
     </fail>
