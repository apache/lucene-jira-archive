Index: contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java	(working copy)
@@ -37,7 +37,6 @@
  * will not be indexed at all) and an external list of exclusions (word that will
  * not be stemmed, but indexed).
  *
- * @author    Jo&atilde;o Kramer
  */
 public final class BrazilianAnalyzer extends Analyzer {
 
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java	(working copy)
@@ -28,7 +28,6 @@
 /**
  * Based on GermanStemFilter
  *
- * @author Jo&atilde;o Kramer
  */
 public final class BrazilianStemFilter extends TokenFilter {
 
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java	(working copy)
@@ -28,7 +28,6 @@
 /**
  * Filters CJKTokenizer with StopFilter.
  *
- * @author Che, Dong
  */
 public class CJKAnalyzer extends Analyzer {
   //~ Static fields/initializers ---------------------------------------------
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKTokenizer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKTokenizer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKTokenizer.java	(working copy)
@@ -34,7 +34,6 @@
  * please search  <a
  * href="http://www.google.com/search?q=word+chinese+segment">google</a>
  *
- * @author Che, Dong
  */
 public final class CJKTokenizer extends Tokenizer {
     //~ Static fields/initializers ---------------------------------------------
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseAnalyzer.java	(working copy)
@@ -28,7 +28,6 @@
  *   build from a ChineseTokenizer, filtered with ChineseFilter.
  * Copyright:   Copyright (c) 2001
  * Company:
- * @author Yiyi Sun
  * @version 1.0
  *
  */
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseFilter.java	(working copy)
@@ -37,7 +37,6 @@
  *
  * Copyright:    Copyright (c) 2001
  * Company:
- * @author Yiyi Sun
  * @version 1.0
  *
  */
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/cn/ChineseTokenizer.java	(working copy)
@@ -47,7 +47,6 @@
  * C4C2, C1C2C3 ... the ChineseTokenizer works, but the
  * CJKTokenizer will not work.
  *
- * @author Yiyi Sun
  * @version 1.0
  *
  */
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java	(working copy)
@@ -35,7 +35,6 @@
  * A default set of stopwords is used unless an alternative list is specified, the
  * exclusion list is empty by default.
  *
- * @author    Lukas Zapletal [lzap@root.cz]
  */
 public final class CzechAnalyzer extends Analyzer {
 
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekAnalyzer.java	(working copy)
@@ -32,7 +32,6 @@
  * that will not be indexed at all).
  * A default set of stopwords is used unless an alternative list is specified.
  *
- * @author  Panagiotis Astithas, past@ebs.gr
  */
 public final class GreekAnalyzer extends Analyzer
 {
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekCharsets.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekCharsets.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekCharsets.java	(working copy)
@@ -23,7 +23,6 @@
  * including accented ones. One should be able to add other encoding schemes (see RFC 1947) by adding
  * the definition of a new charset as well as the required logic in the toLowerCase() method.
  *
- * @author  Panagiotis Astithas, past@ebs.gr
  */
 public class GreekCharsets
 {
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/el/GreekLowerCaseFilter.java	(working copy)
@@ -23,7 +23,6 @@
 /**
  * Normalizes token text to lower case, analyzing given ("greek") charset.
  *
- * @author  Panagiotis Astithas, past@ebs.gr
  */
 public final class GreekLowerCaseFilter extends TokenFilter
 {
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/fr/ElisionFilter.java	(working copy)
@@ -32,8 +32,7 @@
  * <p>
  * Note that StandardTokenizer sees " ' " as a space, and cuts it out.
  * 
- * @see <a href="http://fr.wikipedia.org/wiki/%C3%89lision">Elision in Wikipedia</a> 
- * @author <a href="mailto:mlecarme@openwide.fr">Mathieu Lecarme</a>
+ * @see <a href="http://fr.wikipedia.org/wiki/%C3%89lision">Elision in Wikipedia</a>
  */
 public class ElisionFilter extends TokenFilter {
   private Set articles = null;
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemFilter.java	(working copy)
@@ -31,7 +31,6 @@
  * not be stemmed at all. The used stemmer can be changed at runtime after the
  * filter object is created (as long as it is a FrenchStemmer).
  *
- * @author    Patrick Talbot (based on Gerhard Schwarz work for German)
  */
 public final class FrenchStemFilter extends TokenFilter {
 
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/fr/FrenchStemmer.java	(working copy)
@@ -23,7 +23,6 @@
  * refer to http://snowball.sourceforge.net/french/stemmer.html<br>
  * (French stemming algorithm) for details
  *
- * @author    Patrick Talbot
  */
 
 public class FrenchStemmer {
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/NGramTokenFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/NGramTokenFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/NGramTokenFilter.java	(working copy)
@@ -26,7 +26,6 @@
 
 /**
  * Tokenizes the input into n-grams of the given size(s).
- * @author Otis Gospodnetic
  */
 public class NGramTokenFilter extends TokenFilter {
   public static final int DEFAULT_MIN_NGRAM_SIZE = 1;
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/ngram/NGramTokenizer.java	(working copy)
@@ -25,7 +25,6 @@
 
 /**
  * Tokenizes the input into n-grams of the given size(s).
- * @author Otis Gospodnetic
  */
 public class NGramTokenizer extends Tokenizer {
   public static final int DEFAULT_MIN_NGRAM_SIZE = 1;
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java	(working copy)
@@ -38,8 +38,7 @@
  * the algorithm (dictionary stemming).
  * A default set of stopwords is used unless an alternative list is specified, the
  * exclusion list is empty by default.
- * 
- * @author Edwin de Jonge
+ *
  */
 public class DutchAnalyzer extends Analyzer {
   /**
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter.java	(working copy)
@@ -31,8 +31,7 @@
  * A filter that stems Dutch words. It supports a table of words that should
  * not be stemmed at all. The stemmer used can be changed at runtime after the
  * filter object is created (as long as it is a DutchStemmer).
- * 
- * @author Edwin de Jonge
+ *
  */
 public final class DutchStemFilter extends TokenFilter {
   /**
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer.java	(working copy)
@@ -24,8 +24,7 @@
  * A stemmer for Dutch words. The algorithm is an implementation of
  * the <a href="http://snowball.tartarus.org/algorithms/dutch/stemmer.html">dutch stemming</a>
  * algorithm in Martin Porter's snowball project.
- * 
- * @author Edwin de Jonge (ejne at cbs.nl)
+ *
  */
 
 public class DutchStemmer {
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader.java	(working copy)
@@ -28,8 +28,7 @@
  *         Loads a text file and adds every line as an entry to a Hashtable. Every line
  *         should contain only one word. If the file is not found or on any error, an
  *         empty table is returned.
- *         
- * @author Gerhard Schwarz
+ *
  * @deprecated use {@link org.apache.lucene.analysis.WordlistLoader} instead
  */
 public class WordlistLoader {
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/th/ThaiAnalyzer.java	(working copy)
@@ -26,7 +26,6 @@
 
 /**
  * Analyzer for Thai language. It uses java.text.BreakIterator to break words.
- * @author Samphan Raruenrom <samphan@osdev.co.th> for To-Be-One Technology Co., Ltd.
  * @version 0.2
  */
 public class ThaiAnalyzer extends Analyzer {
Index: contrib/analyzers/src/java/org/apache/lucene/analysis/th/ThaiWordFilter.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/th/ThaiWordFilter.java	(revision 693686)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/th/ThaiWordFilter.java	(working copy)
@@ -27,7 +27,6 @@
 /**
  * TokenFilter that use java.text.BreakIterator to break each 
  * Token that is Thai into separate Token(s) for each Thai word.
- * @author Samphan Raruenrom <samphan@osdev.co.th> for To-Be-One Technology Co., Ltd.
  * @version 0.2
  */
 public class ThaiWordFilter extends TokenFilter {
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/cn/TestChineseTokenizer.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/cn/TestChineseTokenizer.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/cn/TestChineseTokenizer.java	(working copy)
@@ -24,9 +24,7 @@
 
 import org.apache.lucene.analysis.Token;
 
-/**
- * @author rayt
- */
+
 public class TestChineseTokenizer extends TestCase
 {
     public void testOtherLetterOffset() throws IOException
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/de/TestGermanStemFilter.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/de/TestGermanStemFilter.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/de/TestGermanStemFilter.java	(working copy)
@@ -33,8 +33,7 @@
  * Test the German stemmer. The stemming algorithm is known to work less 
  * than perfect, as it doesn't use any word lists with exceptions. We 
  * also check some of the cases where the algorithm is wrong.
- * 
- * @author Daniel Naber
+ *
  */
 public class TestGermanStemFilter extends TestCase {
 
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest.java	(working copy)
@@ -28,7 +28,6 @@
 /**
  * A unit test class for verifying the correct operation of the GreekAnalyzer.
  *
- * @author past
  */
 public class GreekAnalyzerTest extends TestCase {
 
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestElision.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestElision.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestElision.java	(working copy)
@@ -32,7 +32,6 @@
 import org.apache.lucene.analysis.standard.StandardTokenizer;
 
 /**
- * @author Mathieu Lecarme<mlecarme@openwide.fr>
  * 
  */
 public class TestElision extends TestCase {
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer.java	(working copy)
@@ -65,7 +65,6 @@
 /**
  * Test case for FrenchAnalyzer.
  *
- * @author    Jean-François Halleux
  * @version   $version$
  */
 
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest.java	(working copy)
@@ -27,7 +27,6 @@
 
 /**
  * Tests {@link EdgeNGramTokenFilter} for correctness.
- * @author Otis Gospodnetic
  */
 public class EdgeNGramTokenFilterTest extends TestCase {
   private TokenStream input;
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerTest.java	(working copy)
@@ -25,7 +25,6 @@
 
 /**
  * Tests {@link EdgeNGramTokenizer} for correctness.
- * @author Otis Gospodnetic
  */
 public class EdgeNGramTokenizerTest extends TestCase {
   private StringReader input;
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/NGramTokenFilterTest.java	(working copy)
@@ -28,7 +28,6 @@
 
 /**
  * Tests {@link NGramTokenFilter} for correctness.
- * @author Otis Gospodnetic
  */
 public class NGramTokenFilterTest extends TestCase {
     private TokenStream input;
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/ngram/NGramTokenizerTest.java	(working copy)
@@ -26,7 +26,6 @@
 
 /**
  * Tests {@link NGramTokenizer} for correctness.
- * @author Otis Gospodnetic
  */
 public class NGramTokenizerTest extends TestCase {
     private StringReader input;
Index: contrib/analyzers/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer.java
===================================================================
--- contrib/analyzers/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer.java	(revision 693686)
+++ contrib/analyzers/src/test/org/apache/lucene/analysis/th/TestThaiAnalyzer.java	(working copy)
@@ -26,7 +26,6 @@
 /**
  * Test case for ThaiAnalyzer, modified from TestFrenchAnalyzer
  *
- * @author    Samphan Raruenrom <samphan@osdev.co.th>
  * @version   0.1
  */
 
Index: contrib/ant/src/java/org/apache/lucene/ant/DocumentHandler.java
===================================================================
--- contrib/ant/src/java/org/apache/lucene/ant/DocumentHandler.java	(revision 693686)
+++ contrib/ant/src/java/org/apache/lucene/ant/DocumentHandler.java	(working copy)
@@ -24,7 +24,6 @@
 /**
  *  Allows a class to act as a Lucene document handler
  *
- *@author     Erik Hatcher
  *@since    October 27, 2001
  */
 public interface DocumentHandler {
Index: contrib/ant/src/java/org/apache/lucene/ant/DocumentHandlerException.java
===================================================================
--- contrib/ant/src/java/org/apache/lucene/ant/DocumentHandlerException.java	(revision 693686)
+++ contrib/ant/src/java/org/apache/lucene/ant/DocumentHandlerException.java	(working copy)
@@ -20,8 +20,7 @@
 import java.io.PrintStream;
 import java.io.PrintWriter;
 
-/**
- */
+
 public class DocumentHandlerException extends Exception {
     private Throwable cause;
 
Index: contrib/ant/src/java/org/apache/lucene/ant/FileExtensionDocumentHandler.java
===================================================================
--- contrib/ant/src/java/org/apache/lucene/ant/FileExtensionDocumentHandler.java	(revision 693686)
+++ contrib/ant/src/java/org/apache/lucene/ant/FileExtensionDocumentHandler.java	(working copy)
@@ -26,7 +26,6 @@
  *  based on a files extension.  Currently only .html and .txt
  *  files are handled, other extensions ignored.
  *
- *@author     Erik Hatcher
  *@since      October 28, 2001
  *@todo Implement dynamic document type lookup
  */
Index: contrib/ant/src/java/org/apache/lucene/ant/HtmlDocument.java
===================================================================
--- contrib/ant/src/java/org/apache/lucene/ant/HtmlDocument.java	(revision 693686)
+++ contrib/ant/src/java/org/apache/lucene/ant/HtmlDocument.java	(working copy)
@@ -39,7 +39,6 @@
  *  It does this by using JTidy package. It can take input input
  *  from {@link java.io.File} or {@link java.io.InputStream}.
  *
- *@author     Erik Hatcher
  */
 public class HtmlDocument {
     private Element rawDoc;
Index: contrib/ant/src/java/org/apache/lucene/ant/IndexTask.java
===================================================================
--- contrib/ant/src/java/org/apache/lucene/ant/IndexTask.java	(revision 693686)
+++ contrib/ant/src/java/org/apache/lucene/ant/IndexTask.java	(working copy)
@@ -52,7 +52,6 @@
 /**
  *  Ant task to index files with Lucene
  *
- *@author Erik Hatcher
  */
 public class IndexTask extends Task {
   /**
Index: contrib/ant/src/java/org/apache/lucene/ant/TextDocument.java
===================================================================
--- contrib/ant/src/java/org/apache/lucene/ant/TextDocument.java	(revision 693686)
+++ contrib/ant/src/java/org/apache/lucene/ant/TextDocument.java	(working copy)
@@ -29,7 +29,6 @@
 /**
  *  A utility for making Lucene Documents from a File.
  *
- *@author     Erik Hatcher
  *@since      December 6, 2001
  *@todo       Fix JavaDoc comments here
  */
Index: contrib/ant/src/test/org/apache/lucene/ant/IndexTaskTest.java
===================================================================
--- contrib/ant/src/test/org/apache/lucene/ant/IndexTaskTest.java	(revision 693686)
+++ contrib/ant/src/test/org/apache/lucene/ant/IndexTaskTest.java	(working copy)
@@ -37,7 +37,6 @@
 /**
  *  Test cases for index task
  *
- *@author     Erik Hatcher
  */
 public class IndexTaskTest extends TestCase {
     private final static String docHandler =
Index: contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/MemUsage.java
===================================================================
--- contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/MemUsage.java	(revision 693686)
+++ contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/MemUsage.java	(working copy)
@@ -18,7 +18,6 @@
 /**
  * This class holds a set of memory usage values.
  *
- * @author Andrzej Bialecki &lt;ab@getopt.org&gt;
  */
 public class MemUsage {
   public long maxFree, minFree, avgFree;
Index: contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/QueryData.java
===================================================================
--- contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/QueryData.java	(revision 693686)
+++ contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/QueryData.java	(working copy)
@@ -23,7 +23,6 @@
 /**
  * This class holds parameters for a query benchmark.
  *
- * @author Andrzej Bialecki &lt;ab@getopt.org&gt;
  */
 public class QueryData {
   /** Benchmark id */
Index: contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData.java
===================================================================
--- contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData.java	(revision 693686)
+++ contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestData.java	(working copy)
@@ -36,7 +36,6 @@
  * This class holds together all parameters related to a test. Single test is
  * performed several times, and all results are averaged.
  *
- * @author Andrzej Bialecki &lt;ab@getopt.org&gt;
  */
 public class TestData
 {
Index: contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData.java
===================================================================
--- contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData.java	(revision 693686)
+++ contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TestRunData.java	(working copy)
@@ -26,7 +26,6 @@
  * values may contribute to different measurements, so this class provides also
  * some useful methods to separate them.
  *
- * @author Andrzej Bialecki &lt;ab@getopt.org&gt;
  */
 public class TestRunData {
   private String id;
Index: contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TimeData.java
===================================================================
--- contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TimeData.java	(revision 693686)
+++ contrib/benchmark/src/java/org/apache/lucene/benchmark/stats/TimeData.java	(working copy)
@@ -19,7 +19,6 @@
 /**
  * This class holds a data point measuring speed of processing.
  *
- * @author Andrzej Bialecki &lt;ab@getopt.org&gt;
  */
 public class TimeData {
   /** Name of the data point - usually one of a data series with the same name */
Index: contrib/db/bdb-je/src/java/org/apache/lucene/store/je/Block.java
===================================================================
--- contrib/db/bdb-je/src/java/org/apache/lucene/store/je/Block.java	(revision 693686)
+++ contrib/db/bdb-je/src/java/org/apache/lucene/store/je/Block.java	(working copy)
@@ -24,8 +24,7 @@
 
 /**
  * Port of Andi Vajda's DbDirectory to Java Edition of Berkeley Database
- * 
- * @author Aaron Donovan
+ *
  */
 
 public class Block extends Object {
Index: contrib/db/bdb-je/src/java/org/apache/lucene/store/je/File.java
===================================================================
--- contrib/db/bdb-je/src/java/org/apache/lucene/store/je/File.java	(revision 693686)
+++ contrib/db/bdb-je/src/java/org/apache/lucene/store/je/File.java	(working copy)
@@ -33,8 +33,7 @@
 
 /**
  * Port of Andi Vajda's DbDirectory to Java Edition of Berkeley Database
- * 
- * @author Aaron Donovan
+ *
  */
 
 public class File extends Object {
Index: contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory.java
===================================================================
--- contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory.java	(revision 693686)
+++ contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEDirectory.java	(working copy)
@@ -46,8 +46,7 @@
  * {@link org.apache.lucene.store.Directory Directory}. It uses two
  * {@link com.sleepycat.je.Database Db} database handles, one for storing file
  * records and another for storing file data blocks.
- * 
- * @author Aaron Donovan
+ *
  */
 
 public class JEDirectory extends Directory {
Index: contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexInput.java
===================================================================
--- contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexInput.java	(revision 693686)
+++ contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexInput.java	(working copy)
@@ -22,8 +22,7 @@
 
 /**
  * Port of Andi Vajda's DbDirectory to Java Edition of Berkeley Database
- * 
- * @author Aaron Donovan
+ *
  */
 
 public class JEIndexInput extends IndexInput {
Index: contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexOutput.java
===================================================================
--- contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexOutput.java	(revision 693686)
+++ contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JEIndexOutput.java	(working copy)
@@ -23,8 +23,7 @@
 
 /**
  * Port of Andi Vajda's DbDirectory to Java Edition of Berkeley Database
- * 
- * @author Aaron Donovan
+ *
  */
 
 public class JEIndexOutput extends IndexOutput {
Index: contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JELock.java
===================================================================
--- contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JELock.java	(revision 693686)
+++ contrib/db/bdb-je/src/java/org/apache/lucene/store/je/JELock.java	(working copy)
@@ -21,8 +21,7 @@
 
 /**
  * Port of Andi Vajda's DbDirectory to Java Edition of Berkeley Database
- * 
- * @author Aaron Donovan
+ *
  */
 
 public class JELock extends Lock {
Index: contrib/db/bdb-je/src/test/org/apache/lucene/store/je/JEStoreTest.java
===================================================================
--- contrib/db/bdb-je/src/test/org/apache/lucene/store/je/JEStoreTest.java	(revision 693686)
+++ contrib/db/bdb-je/src/test/org/apache/lucene/store/je/JEStoreTest.java	(working copy)
@@ -44,8 +44,7 @@
  * Tests {@link JEDirectory}.
  * 
  * Adapted from Andi Vajda's org.apache.lucene.db.DbStoreTest.
- * 
- * @author Aaron Donovan
+ *
  */
 public class JEStoreTest extends TestCase {
     protected File dbHome = new File(System.getProperty("java.io.tmpdir"),"index");
Index: contrib/db/bdb/src/java/com/sleepycat/db/DbHandleExtractor.java
===================================================================
--- contrib/db/bdb/src/java/com/sleepycat/db/DbHandleExtractor.java	(revision 693686)
+++ contrib/db/bdb/src/java/com/sleepycat/db/DbHandleExtractor.java	(working copy)
@@ -30,7 +30,6 @@
  * that were the entrypoint objects in the pre-4.3 Java API and that wrap the
  * actual Berkeley DB C objects via SWIG.
  *
- * @author Andi Vajda
  */
 
 public class DbHandleExtractor {
Index: contrib/db/bdb/src/java/org/apache/lucene/store/db/Block.java
===================================================================
--- contrib/db/bdb/src/java/org/apache/lucene/store/db/Block.java	(revision 693686)
+++ contrib/db/bdb/src/java/org/apache/lucene/store/db/Block.java	(working copy)
@@ -24,9 +24,7 @@
 import com.sleepycat.db.internal.DbTxn;
 import com.sleepycat.db.DatabaseException;
 
-/**
- * @author Andi Vajda
- */
+
 
 public class Block extends Object {
     protected DatabaseEntry key, data;
Index: contrib/db/bdb/src/java/org/apache/lucene/store/db/DbDirectory.java
===================================================================
--- contrib/db/bdb/src/java/org/apache/lucene/store/db/DbDirectory.java	(revision 693686)
+++ contrib/db/bdb/src/java/org/apache/lucene/store/db/DbDirectory.java	(working copy)
@@ -50,7 +50,6 @@
  * {@link com.sleepycat.db.internal.Db Db} database handles, one for storing file
  * records and another for storing file data blocks.
  *
- * @author Andi Vajda
  */
 
 public class DbDirectory extends Directory {
Index: contrib/db/bdb/src/java/org/apache/lucene/store/db/DbIndexInput.java
===================================================================
--- contrib/db/bdb/src/java/org/apache/lucene/store/db/DbIndexInput.java	(revision 693686)
+++ contrib/db/bdb/src/java/org/apache/lucene/store/db/DbIndexInput.java	(working copy)
@@ -21,9 +21,7 @@
 import org.apache.lucene.store.IndexInput;
 
 
-/**
- * @author Andi Vajda
- */
+
 
 public class DbIndexInput extends IndexInput {
 
Index: contrib/db/bdb/src/java/org/apache/lucene/store/db/DbIndexOutput.java
===================================================================
--- contrib/db/bdb/src/java/org/apache/lucene/store/db/DbIndexOutput.java	(revision 693686)
+++ contrib/db/bdb/src/java/org/apache/lucene/store/db/DbIndexOutput.java	(working copy)
@@ -21,9 +21,7 @@
 import org.apache.lucene.store.IndexOutput;
 
 
-/**
- * @author Andi Vajda
- */
+
 
 public class DbIndexOutput extends IndexOutput {
 
Index: contrib/db/bdb/src/java/org/apache/lucene/store/db/DbLock.java
===================================================================
--- contrib/db/bdb/src/java/org/apache/lucene/store/db/DbLock.java	(revision 693686)
+++ contrib/db/bdb/src/java/org/apache/lucene/store/db/DbLock.java	(working copy)
@@ -24,7 +24,6 @@
  * trivial as {@link DbDirectory} operations are managed by the Berkeley DB
  * locking system.
  *
- * @author Andi Vajda
  */
 
 public class DbLock extends Lock {
Index: contrib/db/bdb/src/java/org/apache/lucene/store/db/File.java
===================================================================
--- contrib/db/bdb/src/java/org/apache/lucene/store/db/File.java	(revision 693686)
+++ contrib/db/bdb/src/java/org/apache/lucene/store/db/File.java	(working copy)
@@ -31,9 +31,7 @@
 import com.sleepycat.db.internal.DbTxn;
 import com.sleepycat.db.DatabaseException;
 
-/**
- * @author Andi Vajda
- */
+
 
 public class File extends Object {
 
Index: contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest.java
===================================================================
--- contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest.java	(revision 693686)
+++ contrib/db/bdb/src/test/org/apache/lucene/store/db/DbStoreTest.java	(working copy)
@@ -42,7 +42,6 @@
  * Tests {@link DbDirectory}.
  *
  * Adapted from org.apache.lucene.StoreTest with larger files and random bytes.
- * @author Andi Vajda
  */
 public class DbStoreTest extends TestCase {
     protected File dbHome = new File(System.getProperty("java.io.tmpdir"),"index");
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/DefaultEncoder.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/DefaultEncoder.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/DefaultEncoder.java	(working copy)
@@ -17,7 +17,6 @@
 
 /**
  * Simple {@link Encoder} implementation that does not modify the output
- * @author Nicko Cadell
  *
  */
 public class DefaultEncoder implements Encoder
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/Encoder.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/Encoder.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/Encoder.java	(working copy)
@@ -19,7 +19,6 @@
 /**
  * Encodes original text. The Encoder works with the Formatter to generate the output.
  *
- * @author Nicko Cadell
  */
 public interface Encoder
 {
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/Fragmenter.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/Fragmenter.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/Fragmenter.java	(working copy)
@@ -21,8 +21,7 @@
 /**
  * Implements the policy for breaking text into multiple fragments for consideration
  * by the {@link Highlighter} class. A sophisticated implementation may do this on the basis
- * of detecting end of sentences in the text. 
- * @author mark@searcharea.co.uk
+ * of detecting end of sentences in the text.
  */
 public interface Fragmenter
 {
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter.java	(working copy)
@@ -19,8 +19,7 @@
 /**
  * Formats text with different color intensity depending on the score of the
  * term.
- * 
- * @author maharwood
+ *
  */
 public class GradientFormatter implements Formatter
 {
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter.java	(working copy)
@@ -30,7 +30,6 @@
  * Class used to markup highlighted terms found in the best sections of a
  * text, using configurable {@link Fragmenter}, {@link Scorer}, {@link Formatter},
  * {@link Encoder} and tokenizers.
- * @author mark@searcharea.co.uk
  */
 public class Highlighter
 {
@@ -503,8 +502,7 @@
     this.maxDocCharsToAnalyze = maxDocCharsToAnalyze;
   }
 
-  /**
-	 */
+  
 	public Fragmenter getTextFragmenter()
 	{
 		return textFragmenter;
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java	(working copy)
@@ -26,8 +26,7 @@
 /**
  * {@link Scorer} implementation which scores text fragments by the number of unique query terms found.
  * This class uses the {@link QueryTermExtractor} class to process determine the query terms and 
- * their boosts to be used. 
- * @author mark@searcharea.co.uk
+ * their boosts to be used.
  */
 //TODO: provide option to boost score of fragments near beginning of document 
 // based on fragment.getFragNum()
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/Scorer.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/Scorer.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/Scorer.java	(working copy)
@@ -20,7 +20,6 @@
 
 /**
  * Adds to the score for a fragment based on its tokens
- * @author mark@searcharea.co.uk
  */
 public interface Scorer
 {
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleFragmenter.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleFragmenter.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleFragmenter.java	(working copy)
@@ -21,7 +21,6 @@
 /**
  * {@link Fragmenter} implementation which breaks text up into same-size 
  * fragments with no concerns over spotting sentence boundaries.
- * @author mark@searcharea.co.uk
  */
 public class SimpleFragmenter implements Fragmenter
 {
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLEncoder.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLEncoder.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLEncoder.java	(working copy)
@@ -17,7 +17,6 @@
 
 /**
  * Simple {@link Encoder} implementation to escape text for HTML output
- * @author Nicko Cadell
  *
  */
 public class SimpleHTMLEncoder implements Encoder
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/SimpleHTMLFormatter.java	(working copy)
@@ -18,7 +18,6 @@
 
 /**
  * Simple {@link Formatter} implementation to highlight terms with a pre and post tag
- * @author MAHarwood
  *
  */
 public class SimpleHTMLFormatter implements Formatter
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/TextFragment.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/TextFragment.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/TextFragment.java	(working copy)
@@ -20,7 +20,6 @@
 /**
  * Low-level class used to record information about a section of a document 
  * with a score.
- * @author MAHarwood
  *
  * 
  */
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenGroup.java	(working copy)
@@ -20,7 +20,6 @@
 /**
  * One, or several overlapping tokens, along with the score(s) and the
  * scope of the original text
- * @author MAHarwood
  */
 public class TokenGroup
 {
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/TokenSources.java	(working copy)
@@ -38,8 +38,7 @@
 /**
  * Hides implementation issues associated with obtaining a TokenStream for use with
  * the higlighter - can obtain from TermFreqVectors with offsets and (optionally) positions or
- * from Analyzer class reparsing the stored content. 
- * @author maharwood
+ * from Analyzer class reparsing the stored content.
  */
 public class TokenSources
 {
Index: contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedTerm.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedTerm.java	(revision 693686)
+++ contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedTerm.java	(working copy)
@@ -16,8 +16,7 @@
  * limitations under the License.
  */
 
-/** Lightweight class to hold term and a weight value used for scoring this term 
- * @author Mark Harwood
+/** Lightweight class to hold term and a weight value used for scoring this term
  */
 public class WeightedTerm
 {
Index: contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest.java
===================================================================
--- contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest.java	(revision 693686)
+++ contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest.java	(working copy)
@@ -76,8 +76,7 @@
 
 /**
  * JUnit Test for Highlighter class.
- * 
- * @author mark@searcharea.co.uk
+ *
  */
 public class HighlighterTest extends TestCase implements Formatter {
   private IndexReader reader;
@@ -1447,8 +1446,7 @@
 
 /**
  * Expands a token stream with synonyms (TODO - make the synonyms analyzed by choice of analyzer)
- * 
- * @author MAHarwood
+ *
  */
 class SynonymTokenizer extends TokenStream {
   private TokenStream realStream;
Index: contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil.java
===================================================================
--- contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil.java	(revision 693686)
+++ contrib/memory/src/java/org/apache/lucene/index/memory/AnalyzerUtil.java	(working copy)
@@ -38,8 +38,7 @@
 /**
  * Various fulltext analysis utilities avoiding redundant code in several
  * classes.
- * 
- * @author whoschek.AT.lbl.DOT.gov
+ *
  */
 public class AnalyzerUtil {
   
Index: contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
===================================================================
--- contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java	(revision 693686)
+++ contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java	(working copy)
@@ -166,8 +166,7 @@
  * target="_blank"
  * href="http://java.sun.com/developer/technicalArticles/Programming/HPROF.html">
  * hprof tracing </a>).
- * 
- * @author whoschek.AT.lbl.DOT.gov
+ *
  */
 public class MemoryIndex implements Serializable {
 
Index: contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer.java
===================================================================
--- contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer.java	(revision 693686)
+++ contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer.java	(working copy)
@@ -60,8 +60,7 @@
  *     pat.tokenStream("content", "James is running round in the woods"), 
  *     "English"));
  * </pre>
- * 
- * @author whoschek.AT.lbl.DOT.gov
+ *
  */
 public class PatternAnalyzer extends Analyzer {
   
Index: contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap.java
===================================================================
--- contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap.java	(revision 693686)
+++ contrib/memory/src/java/org/apache/lucene/index/memory/SynonymMap.java	(working copy)
@@ -67,8 +67,7 @@
  * wolfish:[edacious, esurient, rapacious, ravening, ravenous, voracious, wolflike]
  * xxxx:[]
  * </pre>
- * 
- * @author whoschek.AT.lbl.DOT.gov
+ *
  * @see <a target="_blank"
  *      href="http://www.cogsci.princeton.edu/~wn/man/prologdb.5WN.html">prologdb
  *      man page </a>
Index: contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter.java
===================================================================
--- contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter.java	(revision 693686)
+++ contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter.java	(working copy)
@@ -27,8 +27,7 @@
  * Injects additional tokens for synonyms of token terms fetched from the
  * underlying child stream; the child stream must deliver lowercase tokens
  * for synonyms to be found.
- * 
- * @author whoschek.AT.lbl.DOT.gov
+ *
  */
 public class SynonymTokenFilter extends TokenFilter {
     
Index: contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest.java
===================================================================
--- contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest.java	(revision 693686)
+++ contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest.java	(working copy)
@@ -196,7 +196,6 @@
 the^3
 </pre>
 
-@author whoschek.AT.lbl.DOT.gov
 */
 public class MemoryIndexTest extends TestCase {
   
Index: contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest.java
===================================================================
--- contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest.java	(revision 693686)
+++ contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest.java	(working copy)
@@ -58,7 +58,6 @@
 Thus the PatternAnalyzer produces correct output, whereas the WhitespaceAnalyzer 
 silently truncates text, and so the comparison results in assertEquals() don't match up. 
 
-@author whoschek.AT.lbl.DOT.gov
 */
 public class PatternAnalyzerTest extends TestCase {
   
Index: contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier.java
===================================================================
--- contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier.java	(revision 693686)
+++ contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier.java	(working copy)
@@ -34,8 +34,6 @@
  * NOTE: This will overwrite any length normalization or field/document boosts.
  * </p>
  *
- * @author Chris Hostetter
- * @author Otis Gospodnetic
  */
 public class FieldNormModifier {
 
Index: contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter.java
===================================================================
--- contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter.java	(revision 693686)
+++ contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter.java	(working copy)
@@ -79,7 +79,6 @@
  * /least computationally-intensive filters first.
  * </p>
  *
- * @author <a href="mailto:kelvint@apache.org">Kelvin Tan</a>
  */
 public class ChainedFilter extends Filter
 {
Index: contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool.java
===================================================================
--- contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool.java	(revision 693686)
+++ contrib/miscellaneous/src/java/org/apache/lucene/misc/IndexMergeTool.java	(working copy)
@@ -27,7 +27,6 @@
 /**
  * Merges indices specified on the command line into the index
  * specified as the first command line argument.
- * @author Erik Hatcher
  * @version $Id$
  */
 public class IndexMergeTool {
Index: contrib/miscellaneous/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java
===================================================================
--- contrib/miscellaneous/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java	(revision 693686)
+++ contrib/miscellaneous/src/java/org/apache/lucene/queryParser/analyzing/AnalyzingQueryParser.java	(working copy)
@@ -39,7 +39,6 @@
  * become <code>h?user</code> when using this parser and thus no match would be found (i.e.
  * using this parser will be no improvement over QueryParser in such cases). 
  *
- * @author  Ronnie Kolehmainen (ronnie.kolehmainen at ub.uu.se)
  * @version $Revision$, $Date$
  */
 public class AnalyzingQueryParser extends org.apache.lucene.queryParser.QueryParser {
Index: contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser.java
===================================================================
--- contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser.java	(revision 693686)
+++ contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser.java	(working copy)
@@ -70,9 +70,6 @@
  * documentation</a>.
  * </p>
  *
- * @author Brian Goetz
- * @author Peter Halacsy
- * @author Tatu Saloranta
  */
 
 public class PrecedenceQueryParser implements PrecedenceQueryParserConstants {
Index: contrib/miscellaneous/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser.java
===================================================================
--- contrib/miscellaneous/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser.java	(revision 693686)
+++ contrib/miscellaneous/src/test/org/apache/lucene/queryParser/analyzing/TestAnalyzingQueryParser.java	(working copy)
@@ -30,7 +30,6 @@
 import org.apache.lucene.queryParser.ParseException;
 
 /**
- * @author  Ronnie Kolehmainen (ronnie.kolehmainen at ub.uu.se)
  * @version $Revision$, $Date$
  */
 public class TestAnalyzingQueryParser extends TestCase {
Index: contrib/queries/src/java/org/apache/lucene/search/BooleanFilter.java
===================================================================
--- contrib/queries/src/java/org/apache/lucene/search/BooleanFilter.java	(revision 693686)
+++ contrib/queries/src/java/org/apache/lucene/search/BooleanFilter.java	(working copy)
@@ -36,7 +36,6 @@
  * SHOULD Filters are OR'd together
  * The resulting Filter is NOT'd with the NOT Filters
  * The resulting Filter is AND'd with the MUST Filters
- * @author BPDThebault
  */
 
 public class BooleanFilter extends Filter
Index: contrib/queries/src/java/org/apache/lucene/search/FilterClause.java
===================================================================
--- contrib/queries/src/java/org/apache/lucene/search/FilterClause.java	(revision 693686)
+++ contrib/queries/src/java/org/apache/lucene/search/FilterClause.java	(working copy)
@@ -24,7 +24,6 @@
  * is used when composed with another filter.
  * (Follows the boolean logic in BooleanClause for composition 
  * of queries.)
- * @author BPDThebault
  */
 
 public class FilterClause implements java.io.Serializable
Index: contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.java
===================================================================
--- contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.java	(revision 693686)
+++ contrib/queries/src/java/org/apache/lucene/search/FuzzyLikeThisQuery.java	(working copy)
@@ -45,8 +45,7 @@
  * TermQuery is used for variants and does not use that variant term's IDF because this would favour rarer 
  * terms eg misspellings. Instead, all variants use the same IDF ranking (the one for the source query 
  * term) and this is factored into the variant's boost. If the source query term does not exist in the
- * index the average IDF of the variants is used. 
- * @author maharwood
+ * index the average IDF of the variants is used.
  */
 public class FuzzyLikeThisQuery extends Query
 {
Index: contrib/queries/src/java/org/apache/lucene/search/TermsFilter.java
===================================================================
--- contrib/queries/src/java/org/apache/lucene/search/TermsFilter.java	(revision 693686)
+++ contrib/queries/src/java/org/apache/lucene/search/TermsFilter.java	(working copy)
@@ -34,8 +34,7 @@
  * a sequence. An example might be a collection of primary keys from a database query result or perhaps 
  * a choice of "category" labels picked by the end user. As a filter, this is much faster than the 
  * equivalent query (a BooleanQuery with many "should" TermQueries)
- * 
- * @author maharwood
+ *
  */
 public class TermsFilter extends Filter
 {
Index: contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis.java
===================================================================
--- contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis.java	(revision 693686)
+++ contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis.java	(working copy)
@@ -143,10 +143,7 @@
  *  - refactor: moved common code into isNoiseWord()
  *  - optimise: when no termvector support available - used maxNumTermsParsed to limit amount of tokenization
  * </pre>
- * 
- * @author David Spencer
- * @author Bruce Ritchie
- * @author Mark Harwood
+ *
  */
 public final class MoreLikeThis {
 
Index: contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery.java
===================================================================
--- contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery.java	(revision 693686)
+++ contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThisQuery.java	(working copy)
@@ -35,7 +35,6 @@
  * A simple wrapper for MoreLikeThis for use in scenarios where a Query object is required eg
  * in custom QueryParser extensions. At query.rewrite() time the reader is used to construct the
  * actual MoreLikeThis object and obtain the real Query object.
- * @author maharwood
  */
 public class MoreLikeThisQuery extends Query
 {
Index: contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary.java
===================================================================
--- contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary.java	(revision 693686)
+++ contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary.java	(working copy)
@@ -35,7 +35,6 @@
  * It first creates a simple index and then a couple of instances of LuceneDictionary
  * on different fields and checks if all the right text comes back.
  *
- * @author Christian Mallwitz
  */
 public class TestLuceneDictionary extends TestCase {
 
Index: contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary.java
===================================================================
--- contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary.java	(revision 693686)
+++ contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestPlainTextDictionary.java	(working copy)
@@ -27,7 +27,6 @@
 /**
  * Test case for PlainTextDictionary
  *
- * @author Daniel Naber
  */
 public class TestPlainTextDictionary extends TestCase {
 
Index: contrib/swing/src/java/org/apache/lucene/swing/models/ListSearcher.java
===================================================================
--- contrib/swing/src/java/org/apache/lucene/swing/models/ListSearcher.java	(revision 693686)
+++ contrib/swing/src/java/org/apache/lucene/swing/models/ListSearcher.java	(working copy)
@@ -36,7 +36,6 @@
 /**
  * See table searcher explanation.
  *
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
  */
 public class ListSearcher extends AbstractListModel {
     private ListModel listModel;
Index: contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher.java
===================================================================
--- contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher.java	(revision 693686)
+++ contrib/swing/src/java/org/apache/lucene/swing/models/TableSearcher.java	(working copy)
@@ -62,7 +62,6 @@
  * at any time by searching with an empty string. Additionally, you can
  * add a button calling the clearSearch() method.
  *
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
  */
 public class TableSearcher extends AbstractTableModel {
 
Index: contrib/swing/src/test/org/apache/lucene/swing/models/BaseListModel.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/BaseListModel.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/BaseListModel.java	(working copy)
@@ -22,9 +22,7 @@
 
 import javax.swing.AbstractListModel;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class BaseListModel extends AbstractListModel {
     private List data = new ArrayList();
 
Index: contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/BaseTableModel.java	(working copy)
@@ -22,9 +22,7 @@
 
 import javax.swing.table.AbstractTableModel;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class BaseTableModel extends AbstractTableModel {
     private List columnNames = new ArrayList();
     private List rows = new ArrayList();
Index: contrib/swing/src/test/org/apache/lucene/swing/models/DataStore.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/DataStore.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/DataStore.java	(working copy)
@@ -22,9 +22,7 @@
 import java.util.Collection;
 import java.util.Iterator;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class DataStore {
 
     private static final String ITALIAN_CATEGORY = "Italian";
Index: contrib/swing/src/test/org/apache/lucene/swing/models/ListSearcherSimulator.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/ListSearcherSimulator.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/ListSearcherSimulator.java	(working copy)
@@ -27,9 +27,7 @@
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class ListSearcherSimulator {
 
     public ListSearcherSimulator() {
Index: contrib/swing/src/test/org/apache/lucene/swing/models/RestaurantInfo.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/RestaurantInfo.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/RestaurantInfo.java	(working copy)
@@ -16,9 +16,7 @@
  * limitations under the License.
  */
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class RestaurantInfo {
     private int id;
     private String name;
Index: contrib/swing/src/test/org/apache/lucene/swing/models/TableSearcherSimulator.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/TableSearcherSimulator.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/TableSearcherSimulator.java	(working copy)
@@ -21,9 +21,7 @@
 import java.awt.event.ActionListener;
 import java.awt.event.ActionEvent;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class TableSearcherSimulator {
 
     public TableSearcherSimulator() {
Index: contrib/swing/src/test/org/apache/lucene/swing/models/TestBasicList.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/TestBasicList.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/TestBasicList.java	(working copy)
@@ -24,7 +24,6 @@
 import junit.framework.TestCase;
 
 /**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
  **/
 public class TestBasicList extends TestCase {
     private ListModel baseListModel;
Index: contrib/swing/src/test/org/apache/lucene/swing/models/TestBasicTable.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/TestBasicTable.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/TestBasicTable.java	(working copy)
@@ -23,9 +23,7 @@
 
 import junit.framework.TestCase;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class TestBasicTable extends TestCase {
     private TableModel baseTableModel;
     private TableSearcher tableSearcher;
Index: contrib/swing/src/test/org/apache/lucene/swing/models/TestSearchingList.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/TestSearchingList.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/TestSearchingList.java	(working copy)
@@ -21,9 +21,7 @@
 import junit.framework.TestCase;
 
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */ 
+ 
 public class TestSearchingList extends TestCase {
     private ListModel baseListModel;
     private ListSearcher listSearcher;
Index: contrib/swing/src/test/org/apache/lucene/swing/models/TestSearchingTable.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/TestSearchingTable.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/TestSearchingTable.java	(working copy)
@@ -20,9 +20,7 @@
 
 import javax.swing.table.TableModel;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class TestSearchingTable extends TestCase {
     private TableModel baseTableModel;
     private TableSearcher tableSearcher;
Index: contrib/swing/src/test/org/apache/lucene/swing/models/TestUpdatingList.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/TestUpdatingList.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/TestUpdatingList.java	(working copy)
@@ -18,9 +18,7 @@
 
 import junit.framework.TestCase;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class TestUpdatingList extends TestCase {
     private BaseListModel baseListModel;
     private ListSearcher listSearcher;
Index: contrib/swing/src/test/org/apache/lucene/swing/models/TestUpdatingTable.java
===================================================================
--- contrib/swing/src/test/org/apache/lucene/swing/models/TestUpdatingTable.java	(revision 693686)
+++ contrib/swing/src/test/org/apache/lucene/swing/models/TestUpdatingTable.java	(working copy)
@@ -18,9 +18,7 @@
 
 import junit.framework.TestCase;
 
-/**
- * @author Jonathan Simon - jonathan_s_simon@yahoo.com
- */
+
 public class TestUpdatingTable extends TestCase {
     private BaseTableModel baseTableModel;
     private TableSearcher tableSearcher;
Index: contrib/wordnet/src/java/org/apache/lucene/wordnet/Syns2Index.java
===================================================================
--- contrib/wordnet/src/java/org/apache/lucene/wordnet/Syns2Index.java	(revision 693686)
+++ contrib/wordnet/src/java/org/apache/lucene/wordnet/Syns2Index.java	(working copy)
@@ -58,7 +58,6 @@
  *
  * This can take 4 minutes to execute and build an index on a "fast" system and the index takes up almost 3 MB.
  *
- * @author Dave Spencer, dave&#064;searchmorph.com
  * @see <a href="http://www.cogsci.princeton.edu/~wn/">WordNet home page</a>
  * @see <a href="http://www.cogsci.princeton.edu/~wn/man/prologdb.5WN.html">prologdb man page</a>
  * @see <a href="http://www.hostmon.com/rfc/advanced.jsp">sample site that uses it</a>
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/CoreParser.java	(working copy)
@@ -45,7 +45,6 @@
  */
 /**
  * Assembles a QueryBuilder which uses only core Lucene Query objects
- * @author Mark
  *
  */
 public class CoreParser implements QueryBuilder
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/FilterBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/FilterBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/FilterBuilder.java	(working copy)
@@ -21,9 +21,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public interface FilterBuilder {
 	 public Filter getFilter(Element e) throws ParserException;
 }
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/FilterBuilderFactory.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/FilterBuilderFactory.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/FilterBuilderFactory.java	(working copy)
@@ -23,9 +23,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public class FilterBuilderFactory implements FilterBuilder {
 
 	HashMap builders=new HashMap();
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/ParserException.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/ParserException.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/ParserException.java	(working copy)
@@ -18,9 +18,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public class ParserException extends Exception {
 
 	/**
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryBuilder.java	(working copy)
@@ -21,7 +21,6 @@
 /**
  * Implemented by objects that produce Lucene Query objects from XML streams. Implementations are
  * expected to be thread-safe so that they can be used to simultaneously parse multiple XML documents.
- * @author maharwood
  */
 public interface QueryBuilder {
 	
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryBuilderFactory.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryBuilderFactory.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryBuilderFactory.java	(working copy)
@@ -23,9 +23,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public class QueryBuilderFactory implements QueryBuilder {
 
 	HashMap builders=new HashMap();
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager.java	(working copy)
@@ -48,8 +48,7 @@
  * Database applications often adopt similar practices by externalizing SQL in template files that can
  * be easily changed/optimized by a DBA.  
  * The static methods can be used on their own or by creating an instance of this class you can store and 
- * re-use compiled stylesheets for fast use (e.g. in a server environment) 
- * @author Mark Harwood
+ * re-use compiled stylesheets for fast use (e.g. in a server environment)
  */
 public class QueryTemplateManager
 {
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder.java	(working copy)
@@ -30,9 +30,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood 
- */
+
 public class BooleanFilterBuilder implements FilterBuilder {
 	
 	private FilterBuilder factory;
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder.java	(working copy)
@@ -29,9 +29,7 @@
  * limitations under the License.
  */
 
-/**
- * @author maharwood 
- */
+
 public class BooleanQueryBuilder implements QueryBuilder {
 	
 	private QueryBuilder factory;
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder.java	(working copy)
@@ -46,8 +46,7 @@
  * 
  * The CoreParser.maxNumCachedFilters property can be used to control the size of the LRU 
  * Cache established during the construction of CoreParser instances.
- * 
- * @author maharwood
+ *
  */
 public class CachedFilterBuilder implements FilterBuilder {
 
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/DuplicateFilterBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/DuplicateFilterBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/DuplicateFilterBuilder.java	(working copy)
@@ -31,9 +31,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood 
- */
+
 public class DuplicateFilterBuilder implements FilterBuilder {
 	
 
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FilteredQueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FilteredQueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/FilteredQueryBuilder.java	(working copy)
@@ -28,9 +28,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public class FilteredQueryBuilder implements QueryBuilder {
 	
 	private FilterBuilder filterFactory;
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/LikeThisQueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/LikeThisQueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/LikeThisQueryBuilder.java	(working copy)
@@ -34,9 +34,7 @@
  * limitations under the License.
  */
 
-/**
- * @author maharwood
- */
+
 public class LikeThisQueryBuilder implements QueryBuilder {
 
 	private Analyzer analyzer;
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/RangeFilterBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/RangeFilterBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/RangeFilterBuilder.java	(working copy)
@@ -27,9 +27,7 @@
  */
 
 
-/**
- * @author maharwood
- */
+
 public class RangeFilterBuilder implements FilterBuilder {
 
 
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/SpanQueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/SpanQueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/SpanQueryBuilder.java	(working copy)
@@ -20,9 +20,7 @@
 import org.apache.lucene.xmlparser.QueryBuilder;
 import org.w3c.dom.Element;
 
-/**
- * @author maharwood
- */
+
 public interface SpanQueryBuilder extends QueryBuilder{
 	
 	public SpanQuery getSpanQuery(Element e) throws ParserException;
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/SpanQueryBuilderFactory.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/SpanQueryBuilderFactory.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/SpanQueryBuilderFactory.java	(working copy)
@@ -22,9 +22,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public class SpanQueryBuilderFactory implements SpanQueryBuilder {
 
 	HashMap builders=new HashMap();
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermQueryBuilder.java	(working copy)
@@ -24,9 +24,7 @@
  * limitations under the License.
  */
 
-/**
- * @author maharwood
- */
+
 public class TermQueryBuilder implements QueryBuilder {
 
 	public Query getQuery(Element e) throws ParserException {
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermsFilterBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermsFilterBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermsFilterBuilder.java	(working copy)
@@ -30,9 +30,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public class TermsFilterBuilder implements FilterBuilder
 {
 	Analyzer analyzer;
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermsQueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermsQueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/TermsQueryBuilder.java	(working copy)
@@ -34,7 +34,6 @@
  */
 /**
  * Builds a BooleanQuery from all of the terms found in the XML element using the choice of analyzer
- * @author maharwood
  */
 public class TermsQueryBuilder implements QueryBuilder {
 
Index: contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder.java
===================================================================
--- contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder.java	(revision 693686)
+++ contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/UserInputQueryBuilder.java	(working copy)
@@ -31,7 +31,6 @@
  * 1) Synchronizing access to "parse" calls on a previously supplied QueryParser
  * or..
  * 2) creating a new QueryParser object for each parse request
- * @author maharwood
  */
 public class UserInputQueryBuilder implements QueryBuilder {
 
Index: contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser.java
===================================================================
--- contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser.java	(revision 693686)
+++ contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser.java	(working copy)
@@ -33,9 +33,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-/**
- * @author maharwood
- */
+
 public class TestParser extends TestCase {
 
 	CoreParser builder;
Index: contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager.java
===================================================================
--- contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager.java	(revision 693686)
+++ contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestQueryTemplateManager.java	(working copy)
@@ -38,8 +38,7 @@
  */
 /**
  * This class illustrates how form input (such as from a web page or Swing gui) can be
- * turned into Lucene queries using a choice of XSL templates for different styles of queries. 
- * @author maharwood
+ * turned into Lucene queries using a choice of XSL templates for different styles of queries.
  */
 public class TestQueryTemplateManager extends TestCase {
 
Index: src/gcj/org/apache/lucene/store/GCJDirectory.java
===================================================================
--- src/gcj/org/apache/lucene/store/GCJDirectory.java	(revision 693686)
+++ src/gcj/org/apache/lucene/store/GCJDirectory.java	(working copy)
@@ -22,7 +22,6 @@
 
 /** Native file-based {@link Directory} implementation, using GCJ.
  *
- * @author Doug Cutting
  */
 public class GCJDirectory extends FSDirectory {
 
Index: src/gcj/org/apache/lucene/store/GCJIndexInput.java
===================================================================
--- src/gcj/org/apache/lucene/store/GCJIndexInput.java	(revision 693686)
+++ src/gcj/org/apache/lucene/store/GCJIndexInput.java	(working copy)
@@ -22,7 +22,6 @@
 
 /** Native file-based {@link IndexInput} implementation, using GCJ.
  *
- * @author Doug Cutting
  */
 public class GCJIndexInput extends IndexInput {
 
Index: src/java/org/apache/lucene/document/MapFieldSelector.java
===================================================================
--- src/java/org/apache/lucene/document/MapFieldSelector.java	(revision 693686)
+++ src/java/org/apache/lucene/document/MapFieldSelector.java	(working copy)
@@ -24,7 +24,6 @@
 /**
  * A FieldSelector based on a Map of field names to FieldSelectorResults
  *
- * @author Chuck Williams
  */
 public class MapFieldSelector implements FieldSelector {
     
Index: src/java/org/apache/lucene/index/IndexFileNameFilter.java
===================================================================
--- src/java/org/apache/lucene/index/IndexFileNameFilter.java	(revision 693686)
+++ src/java/org/apache/lucene/index/IndexFileNameFilter.java	(working copy)
@@ -23,8 +23,7 @@
 
 /**
  * Filename filter that accept filenames and extensions only created by Lucene.
- * 
- * @author Daniel Naber / Bernhard Messer
+ *
  * @version $rcs = ' $Id: Exp $ ' ;
  */
 public class IndexFileNameFilter implements FilenameFilter {
Index: src/java/org/apache/lucene/index/IndexFileNames.java
===================================================================
--- src/java/org/apache/lucene/index/IndexFileNames.java	(revision 693686)
+++ src/java/org/apache/lucene/index/IndexFileNames.java	(working copy)
@@ -19,8 +19,7 @@
 
 /**
  * Useful constants representing filenames and extensions used by lucene
- * 
- * @author Bernhard Messer
+ *
  * @version $rcs = ' $Id: Exp $ ' ;
  */
 final class IndexFileNames {
Index: src/java/org/apache/lucene/index/IndexModifier.java
===================================================================
--- src/java/org/apache/lucene/index/IndexModifier.java	(revision 693686)
+++ src/java/org/apache/lucene/index/IndexModifier.java	(working copy)
@@ -88,7 +88,6 @@
  * want to update 20 documents, you should first delete all those documents,
  * then add all the new documents.
  *
- * @author Daniel Naber
  * @deprecated Please use {@link IndexWriter} instead.
  */
 public class IndexModifier {
Index: src/java/org/apache/lucene/index/MultipleTermPositions.java
===================================================================
--- src/java/org/apache/lucene/index/MultipleTermPositions.java	(revision 693686)
+++ src/java/org/apache/lucene/index/MultipleTermPositions.java	(working copy)
@@ -27,8 +27,7 @@
 
 /**
  * Describe class <code>MultipleTermPositions</code> here.
- * 
- * @author Anders Nielsen
+ *
  * @version 1.0
  */
 public class MultipleTermPositions implements TermPositions {
Index: src/java/org/apache/lucene/index/SegmentTermVector.java
===================================================================
--- src/java/org/apache/lucene/index/SegmentTermVector.java	(revision 693686)
+++ src/java/org/apache/lucene/index/SegmentTermVector.java	(working copy)
@@ -19,8 +19,7 @@
 
 import java.util.*;
 
-/**
- */
+
 class SegmentTermVector implements TermFreqVector {
   private String field;
   private String terms[];
Index: src/java/org/apache/lucene/queryParser/QueryParser.java
===================================================================
--- src/java/org/apache/lucene/queryParser/QueryParser.java	(revision 693686)
+++ src/java/org/apache/lucene/queryParser/QueryParser.java	(working copy)
@@ -94,9 +94,6 @@
  *
  * <p>Note that QueryParser is <em>not</em> thread-safe.</p>
  *
- * @author Brian Goetz
- * @author Peter Halacsy
- * @author Tatu Saloranta
  */
 public class QueryParser implements QueryParserConstants {
 
Index: src/java/org/apache/lucene/search/BooleanQuery.java
===================================================================
--- src/java/org/apache/lucene/search/BooleanQuery.java	(revision 693686)
+++ src/java/org/apache/lucene/search/BooleanQuery.java	(working copy)
@@ -30,9 +30,7 @@
   */
 public class BooleanQuery extends Query {
 
-  /**
-
-   */
+  
   private static int maxClauseCount = 1024;
 
   /** Thrown when an attempt is made to add more than {@link
Index: src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
===================================================================
--- src/java/org/apache/lucene/search/DisjunctionMaxQuery.java	(revision 693686)
+++ src/java/org/apache/lucene/search/DisjunctionMaxQuery.java	(working copy)
@@ -37,7 +37,6 @@
  * The tie breaker capability allows results that include the same term in multiple fields to be judged better than results that
  * include this term in only the best of those multiple fields, without confusing this with the better case of two different terms
  * in the multiple fields.
- * @author Chuck Williams
  */
 public class DisjunctionMaxQuery extends Query {
 
Index: src/java/org/apache/lucene/search/DisjunctionMaxScorer.java
===================================================================
--- src/java/org/apache/lucene/search/DisjunctionMaxScorer.java	(revision 693686)
+++ src/java/org/apache/lucene/search/DisjunctionMaxScorer.java	(working copy)
@@ -24,7 +24,6 @@
  * is generated in document number order.  The score for each document is the maximum of the scores computed
  * by the subquery scorers that generate that document, plus tieBreakerMultiplier times the sum of the scores
  * for the other subqueries that generate the document.
- * @author Chuck Williams
  */
 class DisjunctionMaxScorer extends Scorer {
 
Index: src/java/org/apache/lucene/search/FieldCache.java
===================================================================
--- src/java/org/apache/lucene/search/FieldCache.java	(revision 693686)
+++ src/java/org/apache/lucene/search/FieldCache.java	(working copy)
@@ -25,7 +25,6 @@
  *
  * <p>Created: May 19, 2004 11:13:14 AM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  */
Index: src/java/org/apache/lucene/search/FieldCacheImpl.java
===================================================================
--- src/java/org/apache/lucene/search/FieldCacheImpl.java	(revision 693686)
+++ src/java/org/apache/lucene/search/FieldCacheImpl.java	(working copy)
@@ -34,7 +34,6 @@
  *
  * <p>Created: May 19, 2004 4:40:36 PM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  */
Index: src/java/org/apache/lucene/search/FieldDoc.java
===================================================================
--- src/java/org/apache/lucene/search/FieldDoc.java	(revision 693686)
+++ src/java/org/apache/lucene/search/FieldDoc.java	(working copy)
@@ -33,7 +33,6 @@
  *
  * <p>Created: Feb 11, 2004 1:23:38 PM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  * @see ScoreDoc
Index: src/java/org/apache/lucene/search/FieldDocSortedHitQueue.java
===================================================================
--- src/java/org/apache/lucene/search/FieldDocSortedHitQueue.java	(revision 693686)
+++ src/java/org/apache/lucene/search/FieldDocSortedHitQueue.java	(working copy)
@@ -28,7 +28,6 @@
  *
  * <p>Created: Feb 11, 2004 2:04:21 PM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  */
Index: src/java/org/apache/lucene/search/FieldSortedHitQueue.java
===================================================================
--- src/java/org/apache/lucene/search/FieldSortedHitQueue.java	(revision 693686)
+++ src/java/org/apache/lucene/search/FieldSortedHitQueue.java	(working copy)
@@ -30,7 +30,6 @@
  *
  * <p>Created: Dec 8, 2003 12:56:03 PM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  * @see Searcher#search(Query,Filter,int,Sort)
Index: src/java/org/apache/lucene/search/FilterManager.java
===================================================================
--- src/java/org/apache/lucene/search/FilterManager.java	(revision 693686)
+++ src/java/org/apache/lucene/search/FilterManager.java	(working copy)
@@ -35,7 +35,6 @@
  * 
  * The cache is periodically cleaned up from a separate thread to ensure the
  * cache doesn't exceed the maximum size.
- * @author Matt Ericson
  */
 public class FilterManager {
 
Index: src/java/org/apache/lucene/search/FilteredQuery.java
===================================================================
--- src/java/org/apache/lucene/search/FilteredQuery.java	(revision 693686)
+++ src/java/org/apache/lucene/search/FilteredQuery.java	(working copy)
@@ -33,7 +33,6 @@
  *
  * <p>Created: Apr 20, 2004 8:58:29 AM
  *
- * @author  Tim Jones
  * @since   1.4
  * @version $Id$
  * @see     CachingWrapperFilter
Index: src/java/org/apache/lucene/search/Hit.java
===================================================================
--- src/java/org/apache/lucene/search/Hit.java	(revision 693686)
+++ src/java/org/apache/lucene/search/Hit.java	(working copy)
@@ -26,8 +26,7 @@
  * Wrapper used by {@link HitIterator} to provide a lazily loaded hit
  * from {@link Hits}.
  *
- * @deprecated Hits will be removed in Lucene 3.0. Use {@link TopDocCollector} and {@link TopDocs} instead. 
- * @author Jeremy Rayner
+ * @deprecated Hits will be removed in Lucene 3.0. Use {@link TopDocCollector} and {@link TopDocs} instead.
  */
 public class Hit implements java.io.Serializable {
 
Index: src/java/org/apache/lucene/search/HitIterator.java
===================================================================
--- src/java/org/apache/lucene/search/HitIterator.java	(revision 693686)
+++ src/java/org/apache/lucene/search/HitIterator.java	(working copy)
@@ -26,7 +26,6 @@
  * return a {@link Hit} instance.
  *
  * @deprecated Hits will be removed in Lucene 3.0. Use {@link TopDocCollector} and {@link TopDocs} instead.
- * @author Jeremy Rayner
  */
 public class HitIterator implements Iterator {
   private Hits hits;
Index: src/java/org/apache/lucene/search/MatchAllDocsQuery.java
===================================================================
--- src/java/org/apache/lucene/search/MatchAllDocsQuery.java	(revision 693686)
+++ src/java/org/apache/lucene/search/MatchAllDocsQuery.java	(working copy)
@@ -30,8 +30,7 @@
 
 /**
  * A query that matches all documents.
- * 
- * @author John Wang
+ *
  */
 public class MatchAllDocsQuery extends Query {
 
Index: src/java/org/apache/lucene/search/MultiPhraseQuery.java
===================================================================
--- src/java/org/apache/lucene/search/MultiPhraseQuery.java	(revision 693686)
+++ src/java/org/apache/lucene/search/MultiPhraseQuery.java	(working copy)
@@ -35,7 +35,6 @@
  * prefix using IndexReader.terms(Term), and use MultiPhraseQuery.add(Term[]
  * terms) to add them to the query.
  *
- * @author Anders Nielsen
  * @version 1.0
  */
 public class MultiPhraseQuery extends Query {
Index: src/java/org/apache/lucene/search/RemoteCachingWrapperFilter.java
===================================================================
--- src/java/org/apache/lucene/search/RemoteCachingWrapperFilter.java	(revision 693686)
+++ src/java/org/apache/lucene/search/RemoteCachingWrapperFilter.java	(working copy)
@@ -36,7 +36,6 @@
  * To cache a result you must do something like 
  * RemoteCachingWrapperFilter f = new RemoteCachingWrapperFilter(new CachingWrapperFilter(myFilter));
  * <p/>
- * @author Matt Ericson
  */
 public class RemoteCachingWrapperFilter extends Filter {
   protected Filter filter;
Index: src/java/org/apache/lucene/search/ScoreDocComparator.java
===================================================================
--- src/java/org/apache/lucene/search/ScoreDocComparator.java	(revision 693686)
+++ src/java/org/apache/lucene/search/ScoreDocComparator.java	(working copy)
@@ -22,8 +22,7 @@
  * Expert: Compares two ScoreDoc objects for sorting.
  *
  * <p>Created: Feb 3, 2004 9:00:16 AM 
- * 
- * @author  Tim Jones (Nacimiento Software)
+ *
  * @since   lucene 1.4
  * @version $Id$
  */
Index: src/java/org/apache/lucene/search/Sort.java
===================================================================
--- src/java/org/apache/lucene/search/Sort.java	(revision 693686)
+++ src/java/org/apache/lucene/search/Sort.java	(working copy)
@@ -94,7 +94,6 @@
  *
  * <p>Created: Feb 12, 2004 10:53:57 AM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  */
Index: src/java/org/apache/lucene/search/SortField.java
===================================================================
--- src/java/org/apache/lucene/search/SortField.java	(revision 693686)
+++ src/java/org/apache/lucene/search/SortField.java	(working copy)
@@ -26,7 +26,6 @@
  *
  * <p>Created: Feb 11, 2004 1:25:29 PM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  * @see Sort
Index: src/java/org/apache/lucene/search/TopFieldDocs.java
===================================================================
--- src/java/org/apache/lucene/search/TopFieldDocs.java	(revision 693686)
+++ src/java/org/apache/lucene/search/TopFieldDocs.java	(working copy)
@@ -22,8 +22,7 @@
  * Expert: Returned by low-level sorted search implementations.
  *
  * <p>Created: Feb 12, 2004 8:58:46 AM 
- * 
- * @author  Tim Jones (Nacimiento Software)
+ *
  * @since   lucene 1.4
  * @version $Id$
  * @see Searcher#search(Query,Filter,int,Sort)
Index: src/java/org/apache/lucene/search/function/FieldCacheSource.java
===================================================================
--- src/java/org/apache/lucene/search/function/FieldCacheSource.java	(revision 693686)
+++ src/java/org/apache/lucene/search/function/FieldCacheSource.java	(working copy)
@@ -38,8 +38,7 @@
  * WARNING: The status of the <b>search.function</b> package is experimental. 
  * The APIs introduced here might change in the future and will not be 
  * supported anymore in such a case.</font>
- * 
- * @author yonik
+ *
  */
 public abstract class FieldCacheSource extends ValueSource {
   private String field;
Index: src/java/org/apache/lucene/search/function/FloatFieldSource.java
===================================================================
--- src/java/org/apache/lucene/search/function/FloatFieldSource.java	(revision 693686)
+++ src/java/org/apache/lucene/search/function/FloatFieldSource.java	(working copy)
@@ -36,8 +36,7 @@
  * 
  * @see org.apache.lucene.search.function.FieldCacheSource for requirements 
  * on the field.
- *  
- * @author yonik
+ *
  */
 public class FloatFieldSource extends FieldCacheSource {
   private FieldCache.FloatParser parser;
Index: src/java/org/apache/lucene/search/function/OrdFieldSource.java
===================================================================
--- src/java/org/apache/lucene/search/function/OrdFieldSource.java	(revision 693686)
+++ src/java/org/apache/lucene/search/function/OrdFieldSource.java	(working copy)
@@ -43,8 +43,7 @@
  * WARNING: The status of the <b>search.function</b> package is experimental. 
  * The APIs introduced here might change in the future and will not be 
  * supported anymore in such a case.</font>
- * 
- * @author yonik
+ *
  */
 
 public class OrdFieldSource extends ValueSource {
Index: src/java/org/apache/lucene/search/function/ReverseOrdFieldSource.java
===================================================================
--- src/java/org/apache/lucene/search/function/ReverseOrdFieldSource.java	(revision 693686)
+++ src/java/org/apache/lucene/search/function/ReverseOrdFieldSource.java	(working copy)
@@ -44,8 +44,7 @@
  * WARNING: The status of the <b>search.function</b> package is experimental. 
  * The APIs introduced here might change in the future and will not be 
  * supported anymore in such a case.</font>
- * 
- * @author yonik
+ *
  */
 
 public class ReverseOrdFieldSource extends ValueSource {
Index: src/java/org/apache/lucene/store/Directory.java
===================================================================
--- src/java/org/apache/lucene/store/Directory.java	(revision 693686)
+++ src/java/org/apache/lucene/store/Directory.java	(working copy)
@@ -34,7 +34,6 @@
  * LockFactory}, and can be changed for each Directory
  * instance using {@link #setLockFactory}.
  *
- * @author Doug Cutting
  */
 public abstract class Directory {
 
Index: src/java/org/apache/lucene/store/FSDirectory.java
===================================================================
--- src/java/org/apache/lucene/store/FSDirectory.java	(revision 693686)
+++ src/java/org/apache/lucene/store/FSDirectory.java	(working copy)
@@ -47,7 +47,6 @@
  * synchronization on directories.</p>
  *
  * @see Directory
- * @author Doug Cutting
  */
 public class FSDirectory extends Directory {
     
Index: src/java/org/apache/lucene/util/SmallFloat.java
===================================================================
--- src/java/org/apache/lucene/util/SmallFloat.java	(revision 693686)
+++ src/java/org/apache/lucene/util/SmallFloat.java	(working copy)
@@ -18,7 +18,6 @@
 
 /** Floating point numbers smaller than 32 bits.
  *
- * @author yonik
  * @version $Id$
  */
 public class SmallFloat {
Index: src/test/org/apache/lucene/TestDemo.java
===================================================================
--- src/test/org/apache/lucene/TestDemo.java	(revision 693686)
+++ src/test/org/apache/lucene/TestDemo.java	(working copy)
@@ -36,8 +36,7 @@
 
 /**
  * A very simple demo used in the API documentation (src/java/overview.html).
- * 
- * @author Daniel Naber
+ *
  */
 public class TestDemo extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/analysis/TestStopFilter.java
===================================================================
--- src/test/org/apache/lucene/analysis/TestStopFilter.java	(revision 693686)
+++ src/test/org/apache/lucene/analysis/TestStopFilter.java	(working copy)
@@ -24,9 +24,7 @@
 import java.util.ArrayList;
 import java.util.Set;
 
-/**
- * @author yonik
- */
+
 public class TestStopFilter extends LuceneTestCase {
 
   private final static boolean VERBOSE = false;
Index: src/test/org/apache/lucene/index/TestIndexModifier.java
===================================================================
--- src/test/org/apache/lucene/index/TestIndexModifier.java	(revision 693686)
+++ src/test/org/apache/lucene/index/TestIndexModifier.java	(working copy)
@@ -38,8 +38,7 @@
 /**
  * Tests for the "IndexModifier" class, including accesses from two threads at the
  * same time.
- * 
- * @author Daniel Naber
+ *
  * @deprecated
  */
 public class TestIndexModifier extends LuceneTestCase {
Index: src/test/org/apache/lucene/index/TestIndexWriterLockRelease.java
===================================================================
--- src/test/org/apache/lucene/index/TestIndexWriterLockRelease.java	(revision 693686)
+++ src/test/org/apache/lucene/index/TestIndexWriterLockRelease.java	(working copy)
@@ -28,7 +28,6 @@
  * release its write lock when trying to open an index which does not yet
  * exist).
  *
- * @author mbogosian
  * @version $Id$
  */
 
Index: src/test/org/apache/lucene/index/TestSegmentTermEnum.java
===================================================================
--- src/test/org/apache/lucene/index/TestSegmentTermEnum.java	(revision 693686)
+++ src/test/org/apache/lucene/index/TestSegmentTermEnum.java	(working copy)
@@ -32,9 +32,7 @@
 import org.apache.lucene.store.RAMDirectory;
 import org.apache.lucene.store.MockRAMDirectory;
 
-/**
- * @author goller
- */
+
 public class TestSegmentTermEnum extends LuceneTestCase
 {
   Directory dir = new RAMDirectory();
Index: src/test/org/apache/lucene/index/TestTermdocPerf.java
===================================================================
--- src/test/org/apache/lucene/index/TestTermdocPerf.java	(revision 693686)
+++ src/test/org/apache/lucene/index/TestTermdocPerf.java	(working copy)
@@ -31,7 +31,6 @@
 import java.util.Random;
 
 /**
- * @author yonik
  * @version $Id$
  */
 
Index: src/test/org/apache/lucene/index/store/TestRAMDirectory.java
===================================================================
--- src/test/org/apache/lucene/index/store/TestRAMDirectory.java	(revision 693686)
+++ src/test/org/apache/lucene/index/store/TestRAMDirectory.java	(working copy)
@@ -44,8 +44,7 @@
 /**
  * JUnit testcase to test RAMDirectory. RAMDirectory itself is used in many testcases,
  * but not one of them uses an different constructor other than the default constructor.
- * 
- * @author Bernhard Messer
+ *
  * 
  * @version $Id: RAMDirectory.java 150537 2004-09-28 22:45:26 +0200 (Di, 28 Sep 2004) cutting $
  */
Index: src/test/org/apache/lucene/queryParser/TestMultiAnalyzer.java
===================================================================
--- src/test/org/apache/lucene/queryParser/TestMultiAnalyzer.java	(revision 693686)
+++ src/test/org/apache/lucene/queryParser/TestMultiAnalyzer.java	(working copy)
@@ -33,8 +33,7 @@
  * Test QueryParser's ability to deal with Analyzers that return more
  * than one token per position or that return tokens with a position
  * increment &gt; 1.
- * 
- * @author Daniel Naber
+ *
  */
 public class TestMultiAnalyzer extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser.java
===================================================================
--- src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser.java	(revision 693686)
+++ src/test/org/apache/lucene/queryParser/TestMultiFieldQueryParser.java	(working copy)
@@ -39,7 +39,6 @@
 
 /**
  * Tests QueryParser.
- * @author Daniel Naber
  */
 public class TestMultiFieldQueryParser extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/search/QueryUtils.java
===================================================================
--- src/test/org/apache/lucene/search/QueryUtils.java	(revision 693686)
+++ src/test/org/apache/lucene/search/QueryUtils.java	(working copy)
@@ -25,9 +25,7 @@
  */
 
 
-/**
- * @author yonik
- */
+
 public class QueryUtils {
 
   /** Check the types of things query objects should be able to do. */
Index: src/test/org/apache/lucene/search/RemoteCachingWrapperFilterHelper.java
===================================================================
--- src/test/org/apache/lucene/search/RemoteCachingWrapperFilterHelper.java	(revision 693686)
+++ src/test/org/apache/lucene/search/RemoteCachingWrapperFilterHelper.java	(working copy)
@@ -27,7 +27,6 @@
 /**
  * A unit test helper class to help with RemoteCachingWrapperFilter testing and
  * assert that it is working correctly.
- * @author Matt Ericson
  */
 public class RemoteCachingWrapperFilterHelper extends RemoteCachingWrapperFilter {
 
Index: src/test/org/apache/lucene/search/TestBooleanOr.java
===================================================================
--- src/test/org/apache/lucene/search/TestBooleanOr.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestBooleanOr.java	(working copy)
@@ -34,7 +34,6 @@
 /**
  * Created on 2005. 2. 9.
  * <br>Adapted to Lucene testcase by Paul Elschot.
- * @author appler@gmail.com
  */
 public class TestBooleanOr extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/search/TestCustomSearcherSort.java
===================================================================
--- src/test/org/apache/lucene/search/TestCustomSearcherSort.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestCustomSearcherSort.java	(working copy)
@@ -42,7 +42,6 @@
 /**
  * Unit test for sorting code.
  *
- * @author  Martin Seitz (T-Systems)
  */
 
 public class TestCustomSearcherSort
Index: src/test/org/apache/lucene/search/TestDisjunctionMaxQuery.java
===================================================================
--- src/test/org/apache/lucene/search/TestDisjunctionMaxQuery.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestDisjunctionMaxQuery.java	(working copy)
@@ -48,7 +48,6 @@
      * same as TestRankingSimilarity in TestRanking.zip from
      * http://issues.apache.org/jira/browse/LUCENE-323
      * </p>
-     * @author Williams
      */
     private static class TestSimilarity extends DefaultSimilarity {
 
Index: src/test/org/apache/lucene/search/TestFuzzyQuery.java
===================================================================
--- src/test/org/apache/lucene/search/TestFuzzyQuery.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestFuzzyQuery.java	(working copy)
@@ -30,7 +30,6 @@
 /**
  * Tests {@link FuzzyQuery}.
  *
- * @author Daniel Naber
  */
 public class TestFuzzyQuery extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/search/TestMatchAllDocsQuery.java
===================================================================
--- src/test/org/apache/lucene/search/TestMatchAllDocsQuery.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestMatchAllDocsQuery.java	(working copy)
@@ -29,8 +29,7 @@
 
 /**
  * Tests MatchAllDocsQuery.
- * 
- * @author Daniel Naber
+ *
  */
 public class TestMatchAllDocsQuery extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/search/TestPhraseQuery.java
===================================================================
--- src/test/org/apache/lucene/search/TestPhraseQuery.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestPhraseQuery.java	(working copy)
@@ -32,7 +32,6 @@
  * Tests {@link PhraseQuery}.
  *
  * @see TestPositionIncrement
- * @author Erik Hatcher
  */
 public class TestPhraseQuery extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/search/TestPrefixFilter.java
===================================================================
--- src/test/org/apache/lucene/search/TestPrefixFilter.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestPrefixFilter.java	(working copy)
@@ -28,8 +28,6 @@
 /**
  * Tests {@link PrefixFilter} class.
  *
- * @author Yura Smolsky
- * @author yonik
  */
 public class TestPrefixFilter extends LuceneTestCase {
   public void testPrefixFilter() throws Exception {
Index: src/test/org/apache/lucene/search/TestPrefixQuery.java
===================================================================
--- src/test/org/apache/lucene/search/TestPrefixQuery.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestPrefixQuery.java	(working copy)
@@ -28,7 +28,6 @@
 /**
  * Tests {@link PrefixQuery} class.
  *
- * @author Erik Hatcher
  */
 public class TestPrefixQuery extends LuceneTestCase {
   public void testPrefixQuery() throws Exception {
Index: src/test/org/apache/lucene/search/TestRangeQuery.java
===================================================================
--- src/test/org/apache/lucene/search/TestRangeQuery.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestRangeQuery.java	(working copy)
@@ -27,9 +27,7 @@
 import org.apache.lucene.util.LuceneTestCase;
 import java.io.IOException;
 
-/**
- * @author goller
- */
+
 public class TestRangeQuery extends LuceneTestCase {
 
   private int docCount = 0;
Index: src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter.java
===================================================================
--- src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestRemoteCachingWrapperFilter.java	(working copy)
@@ -32,7 +32,6 @@
 /**
  * Tests that the index is cached on the searcher side of things.
  * NOTE: This is copied from TestRemoteSearchable since it already had a remote index set up.
- * @author Matt Ericson
  */
 public class TestRemoteCachingWrapperFilter extends LuceneTestCase {
   public TestRemoteCachingWrapperFilter(String name) {
Index: src/test/org/apache/lucene/search/TestSort.java
===================================================================
--- src/test/org/apache/lucene/search/TestSort.java	(revision 693686)
+++ src/test/org/apache/lucene/search/TestSort.java	(working copy)
@@ -46,7 +46,6 @@
  *
  * <p>Created: Feb 17, 2004 4:55:10 PM
  *
- * @author  Tim Jones (Nacimiento Software)
  * @since   lucene 1.4
  * @version $Id$
  */
Index: src/test/org/apache/lucene/search/spans/TestBasics.java
===================================================================
--- src/test/org/apache/lucene/search/spans/TestBasics.java	(revision 693686)
+++ src/test/org/apache/lucene/search/spans/TestBasics.java	(working copy)
@@ -42,7 +42,6 @@
  * all and only the correct documents are returned, thus providing end-to-end
  * testing of the indexing and search code.
  *
- * @author Doug Cutting
  */
 public class TestBasics extends LuceneTestCase {
   private IndexSearcher searcher;
Index: src/test/org/apache/lucene/search/spans/TestSpansAdvanced.java
===================================================================
--- src/test/org/apache/lucene/search/spans/TestSpansAdvanced.java	(revision 693686)
+++ src/test/org/apache/lucene/search/spans/TestSpansAdvanced.java	(working copy)
@@ -34,7 +34,6 @@
  * Tests the span query bug in Lucene. It demonstrates that SpanTermQuerys don't
  * work correctly in a BooleanQuery.
  *
- * @author Reece Wilton
  */
 public class TestSpansAdvanced extends LuceneTestCase {
 
Index: src/test/org/apache/lucene/search/spans/TestSpansAdvanced2.java
===================================================================
--- src/test/org/apache/lucene/search/spans/TestSpansAdvanced2.java	(revision 693686)
+++ src/test/org/apache/lucene/search/spans/TestSpansAdvanced2.java	(working copy)
@@ -29,7 +29,6 @@
  * Some expanded tests to make sure my patch doesn't break other SpanTermQuery
  * functionality.
  *
- * @author Reece Wilton
  */
 public class TestSpansAdvanced2 extends TestSpansAdvanced {
     IndexSearcher searcher2;
Index: src/test/org/apache/lucene/util/TestSmallFloat.java
===================================================================
--- src/test/org/apache/lucene/util/TestSmallFloat.java	(revision 693686)
+++ src/test/org/apache/lucene/util/TestSmallFloat.java	(working copy)
@@ -20,7 +20,6 @@
 import java.util.Random;
 
 /**
- * @author yonik
  * @version $Id$
  */
 public class TestSmallFloat extends LuceneTestCase {

