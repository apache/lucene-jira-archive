Index: lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest.java	(revision 1663323)
+++ lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest.java	(revision )
@@ -1178,5 +1178,29 @@
     return sb.toString();
   }
 
+  @Test
+  public void testDuplicates() throws Exception {
+    Input keys[] = new Input[]{
+        new Input("duplicate", 8, new BytesRef("pl1"), asSet("foo", "bar1")),
+        new Input("duplicate", 12, new BytesRef("pl1"), asSet("foo", "bar1")),
+        new Input("duplicate", 12, new BytesRef("pl1"), asSet("foo", "bar1")),
+    };
+
+    Path tempDir = createTempDir("analyzingInfixContext");
+
+    for (int iter = 0; iter < 2; iter++) {
+      AnalyzingInfixSuggester suggester;
+      Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);
+      suggester = new AnalyzingInfixSuggester(newFSDirectory(tempDir), a, a, 3, false);
+      suggester.build(new InputArrayIterator(keys));
+
+      List<LookupResult> results = suggester.lookup(TestUtil.stringToCharSequence("dup", random()), 10, true, true);
+      assertEquals("Wrong number of results. Result was: "+results, 1, results.size());
+      LookupResult result = results.get(0);
+      assertEquals("duplicate", result.key);
+      assertEquals("<b>dup</b>licate", result.highlightKey);
+      assertEquals(12, result.value);
+    }
+  }
 
 }
