Index: lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils.java	(revision 31e8005cb93a62a9595037e6844ee6528af17b7f)
+++ lucene/core/src/java/org/apache/lucene/geo/GeoEncodingUtils.java	(date 1553781356000)
@@ -39,9 +39,9 @@
   public static final short BITS = 32;
 
   private static final double LAT_SCALE = (0x1L<<BITS)/180.0D;
-  private static final double LAT_DECODE = 1/LAT_SCALE;
+  public static final double LAT_DECODE = 1/LAT_SCALE;
   private static final double LON_SCALE = (0x1L<<BITS)/360.0D;
-  private static final double LON_DECODE = 1/LON_SCALE;
+  public static final double LON_DECODE = 1/LON_SCALE;
 
   public static final int MIN_LON_ENCODED = encodeLongitude(MIN_LON_INCL);
   public static final int MAX_LON_ENCODED = encodeLongitude(MAX_LON_INCL);
Index: lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator.java	(revision 31e8005cb93a62a9595037e6844ee6528af17b7f)
+++ lucene/sandbox/src/test/org/apache/lucene/geo/TestTessellator.java	(date 1553781356000)
@@ -29,6 +29,9 @@
   /** test line intersection */
   public void testLinesIntersect() {
     Rectangle rect = nextBoxNotCrossingDateline();
+    while (rect.maxLon - rect.minLon < GeoEncodingUtils.LON_DECODE || rect.maxLat - rect.minLat <  GeoEncodingUtils.LAT_DECODE) {
+      rect = nextBoxNotCrossingDateline();
+    }
     // simple case; test intersecting diagonals
     // note: we don't quantize because the tessellator operates on non quantized vertices
     assertTrue(Tessellator.linesIntersect(rect.minLon, rect.minLat, rect.maxLon, rect.maxLat, rect.maxLon, rect.minLat, rect.minLon, rect.maxLat));
