diff --git a/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java b/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
index 9a4043d1d8a..6deb6470b86 100644
--- a/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
+++ b/lucene/queryparser/src/java/org/apache/lucene/queryparser/complexPhrase/ComplexPhraseQueryParser.java
@@ -404,6 +404,9 @@ public class ComplexPhraseQueryParser extends QueryParser {
         } else if (childQuery instanceof BooleanQuery) {
           BooleanQuery cbq = (BooleanQuery) childQuery;
           addComplexPhraseClause(chosenList, cbq);
+        } else if (childQuery instanceof SynonymQuery) {
+          BooleanQuery cbq = convert((SynonymQuery) childQuery);
+          addComplexPhraseClause(chosenList, cbq);
         } else if (childQuery instanceof MatchNoDocsQuery) {
           // Insert fake term e.g. phrase query was for "Fred Smithe*" and
           // there were no "Smithe*" terms - need to
diff --git a/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java b/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java
index 5935da96048..e8fb425bfaf 100644
--- a/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java
+++ b/lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery.java
@@ -45,6 +45,7 @@ public class TestComplexPhraseQuery extends LuceneTestCase {
       new DocData("hapax neverson", "6", "never matches"),
       new DocData("dog cigar", "7", "just for synonyms"),
       new DocData("dogs don't smoke cigarettes", "8", "just for synonyms"),
+      new DocData("cat cigar", "9", "for nested synonyms"),
   };
 
   private IndexSearcher searcher;
@@ -101,7 +102,8 @@ public class TestComplexPhraseQuery extends LuceneTestCase {
     checkMatches("\"dogs cigar*\"~2","7,8", synonym);
     // synonym is unidirectional
     checkMatches("\"dog cigar*\"~2","7", synonym);
-    
+    // nested synonyms
+    checkMatches("\"(dogs cat) cigar*\"","7,9", synonym);
   }
   
   public void testUnOrderedProximitySearches() throws Exception {

