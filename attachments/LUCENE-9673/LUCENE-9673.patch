Index: lucene/core/src/java/org/apache/lucene/util/IntBlockPool.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lucene/core/src/java/org/apache/lucene/util/IntBlockPool.java b/lucene/core/src/java/org/apache/lucene/util/IntBlockPool.java
--- a/lucene/core/src/java/org/apache/lucene/util/IntBlockPool.java	(revision 5af12b5f149920a627f7bc125d67622c52942447)
+++ b/lucene/core/src/java/org/apache/lucene/util/IntBlockPool.java	(date 1611109835666)
@@ -172,7 +172,7 @@
 
     final int upto = intUpto;
     intUpto += size;
-    buffer[intUpto - 1] = 1;
+    buffer[intUpto - 1] = 16;
     return upto;
   }
 
@@ -200,8 +200,8 @@
 
   /** Allocates a new slice from the given offset */
   private int allocSlice(final int[] slice, final int sliceOffset) {
-    final int level = slice[sliceOffset];
-    final int newLevel = NEXT_LEVEL_ARRAY[level - 1];
+    final int level = slice[sliceOffset] & 15;
+    final int newLevel = NEXT_LEVEL_ARRAY[level];
     final int newSize = LEVEL_SIZE_ARRAY[newLevel];
     // Maybe allocate another block
     if (intUpto > INT_BLOCK_SIZE - newSize) {
@@ -216,7 +216,7 @@
     slice[sliceOffset] = offset;
 
     // Write new level:
-    buffer[intUpto - 1] = newLevel;
+    buffer[intUpto - 1] = (16|newLevel);
 
     return newUpto;
   }
@@ -300,8 +300,7 @@
       bufferUpto = startOffset / INT_BLOCK_SIZE;
       bufferOffset = bufferUpto * INT_BLOCK_SIZE;
       this.end = endOffset;
-      upto = startOffset;
-      level = 1;
+      level = 0;
 
       buffer = pool.buffers[bufferUpto];
       upto = startOffset & INT_BLOCK_MASK;
@@ -339,7 +338,7 @@
     private void nextSlice() {
       // Skip to our next slice
       final int nextIndex = buffer[limit];
-      level = NEXT_LEVEL_ARRAY[level - 1];
+      level = NEXT_LEVEL_ARRAY[level];
       final int newSize = LEVEL_SIZE_ARRAY[level];
 
       bufferUpto = nextIndex / INT_BLOCK_SIZE;
