Index: lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper.java	(revision 1647238)
+++ lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper.java	(working copy)
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.util.Map;
+import java.util.Set;
 
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
@@ -42,12 +43,17 @@
 
   @Override
   public void close() throws IOException {
+    if (closed) {
+      delegate.close(); // don't mask double-close bugs
+      return;
+    }
+    closed = true;
+    
     try {
       // turn on the following to look for leaks closing inputs,
       // after fixing TestTransactions
       // dir.maybeThrowDeterministicException();
     } finally {
-      closed = true;
       delegate.close();
       // Pending resolution on LUCENE-686 we may want to
       // remove the conditional check so we also track that
@@ -184,6 +190,30 @@
   }
 
   @Override
+  public int readZInt() throws IOException {
+    ensureOpen();
+    return delegate.readZInt();
+  }
+
+  @Override
+  public long readZLong() throws IOException {
+    ensureOpen();
+    return delegate.readZLong();
+  }
+
+  @Override
+  public Set<String> readStringSet() throws IOException {
+    ensureOpen();
+    return delegate.readStringSet();
+  }
+
+  @Override
+  public void skipBytes(long numBytes) throws IOException {
+    ensureOpen();
+    super.skipBytes(numBytes);
+  }
+
+  @Override
   public String toString() {
     return "MockIndexInputWrapper(" + delegate + ")";
   }
Index: lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper.java
===================================================================
--- lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper.java	(revision 1647238)
+++ lucene/test-framework/src/java/org/apache/lucene/store/MockIndexOutputWrapper.java	(working copy)
@@ -88,8 +88,16 @@
     }
   }
   
+  private boolean closed;
+  
   @Override
   public void close() throws IOException {
+    if (closed) {
+      delegate.close(); // don't mask double-close bugs
+      return;
+    }
+    closed = true;
+    
     try {
       dir.maybeThrowDeterministicException();
     } finally {
@@ -105,6 +113,12 @@
       dir.removeIndexOutput(this, name);
     }
   }
+  
+  private void ensureOpen() {
+    if (closed) {
+      throw new AlreadyClosedException("Already closed: " + this);
+    }
+  }
 
   @Override
   public void writeByte(byte b) throws IOException {
@@ -114,6 +128,7 @@
   
   @Override
   public void writeBytes(byte[] b, int offset, int len) throws IOException {
+    ensureOpen();
     checkCrashed();
     checkDiskFull(b, offset, null, len);
     
@@ -143,6 +158,7 @@
 
   @Override
   public void copyBytes(DataInput input, long numBytes) throws IOException {
+    ensureOpen();
     checkCrashed();
     checkDiskFull(null, 0, input, numBytes);
     
