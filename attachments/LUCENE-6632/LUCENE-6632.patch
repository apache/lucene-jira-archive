Index: lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircle.java
===================================================================
--- lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircle.java	(revision 1688204)
+++ lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoCircle.java	(working copy)
@@ -67,7 +67,7 @@
       this.edgePoints = new GeoPoint[0];
     } else {
       // Construct normal plane
-      final Plane normalPlane = new Plane(upperPoint, center);
+      final Plane normalPlane = Plane.constructNormalizedVerticalPlane(upperPoint, lowerPoint, center);
       // Construct a sided plane that goes through the two points and whose normal is in the normalPlane.
       this.circlePlane = SidedPlane.constructNormalizedPerpendicularSidedPlane(center, normalPlane, upperPoint, lowerPoint);
       if (circlePlane == null)
Index: lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoPath.java
===================================================================
--- lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoPath.java	(revision 1688204)
+++ lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoPath.java	(working copy)
@@ -463,7 +463,7 @@
     public SegmentEndpoint(final GeoPoint point, final GeoPoint upperPoint, final GeoPoint lowerPoint) {
       this.point = point;
       // Construct normal plane
-      final Plane normalPlane = new Plane(upperPoint, point);
+      final Plane normalPlane = Plane.constructNormalizedVerticalPlane(upperPoint, lowerPoint, point);
       // Construct a sided plane that goes through the two points and whose normal is in the normalPlane.
       this.circlePlane = SidedPlane.constructNormalizedPerpendicularSidedPlane(point, normalPlane, upperPoint, lowerPoint);
       this.cutoffPlanes = new Membership[0];
Index: lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane.java
===================================================================
--- lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane.java	(revision 1688204)
+++ lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane.java	(working copy)
@@ -82,6 +82,23 @@
     this.D = D;
   }
 
+  /** Construct the most accurate normalized, vertical plane given a set of points.  If none of the points can determine
+  * the plane, return null.
+  */
+  public static Plane constructNormalizedVerticalPlane(final Vector... planePoints) {
+    // Pick the best one (with the greatest x-y distance)
+    double bestDistance = 0.0;
+    Vector bestPoint = null;
+    for (final Vector point : planePoints) {
+      final double pointDist = point.x * point.x + point.y * point.y;
+      if (pointDist > bestDistance) {
+        bestDistance = pointDist;
+        bestPoint = point;
+      }
+    }
+    return constructNormalizedVerticalPlane(bestPoint.x, bestPoint.y);
+  }
+
   /** Construct a normalized, vertical plane through an x-y point.  If the x-y point is at (0,0), return null.
   */
   public static Plane constructNormalizedVerticalPlane(final double x, final double y) {
