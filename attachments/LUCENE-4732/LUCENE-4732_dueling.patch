Index: lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs.java
===================================================================
--- lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs.java	(revision 1440003)
+++ lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs.java	(working copy)
@@ -264,12 +264,17 @@
       numPasses++;
     }
     
+    rightEnum = rightTerms.iterator(rightEnum);
+    
     ArrayList<BytesRef> shuffledTests = new ArrayList<BytesRef>(tests);
     Collections.shuffle(shuffledTests, random);
     
     for (BytesRef b : shuffledTests) {
-      leftEnum = leftTerms.iterator(leftEnum);
-      rightEnum = rightTerms.iterator(rightEnum);
+      if (random.nextBoolean()) {
+        // reuse the enums
+        leftEnum = leftTerms.iterator(leftEnum);
+        rightEnum = rightTerms.iterator(rightEnum);
+      }
       
       assertEquals(info, leftEnum.seekExact(b, false), rightEnum.seekExact(b, false));
       assertEquals(info, leftEnum.seekExact(b, true), rightEnum.seekExact(b, true));
@@ -282,6 +287,7 @@
       assertEquals(info, leftStatus, rightStatus);
       if (leftStatus != SeekStatus.END) {
         assertEquals(info, leftEnum.term(), rightEnum.term());
+        assertTermStats(leftEnum, rightEnum);
       }
       
       leftStatus = leftEnum.seekCeil(b, true);
@@ -289,6 +295,7 @@
       assertEquals(info, leftStatus, rightStatus);
       if (leftStatus != SeekStatus.END) {
         assertEquals(info, leftEnum.term(), rightEnum.term());
+        assertTermStats(leftEnum, rightEnum);
       }
     }
   }
