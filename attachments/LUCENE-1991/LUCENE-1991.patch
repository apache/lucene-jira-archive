Index: src/java/org/apache/lucene/search/payloads/PayloadNearQuery.java
===================================================================
--- src/java/org/apache/lucene/search/payloads/PayloadNearQuery.java	(revision 826485)
+++ src/java/org/apache/lucene/search/payloads/PayloadNearQuery.java	(working copy)
@@ -43,13 +43,12 @@
  * {@link org.apache.lucene.search.spans.TermSpans} occurs.
  * <p/>
  * In order to take advantage of this, you must override
- * {@link org.apache.lucene.search.Similarity#scorePayload(String, byte[],int,int)}
+ * {@link org.apache.lucene.search.Similarity#scorePayload(int, String, int, int, byte[], int, int)}
  * which returns 1 by default.
  * <p/>
  * Payload scores are aggregated using a pluggable {@link PayloadFunction}.
  * 
- * @see org.apache.lucene.search.Similarity#scorePayload(String, byte[], int,
- *      int)
+ * @see {@link org.apache.lucene.search.Similarity#scorePayload(int, String, int, int, byte[], int, int)}
  */
 public class PayloadNearQuery extends SpanNearQuery {
   protected String fieldName;
Index: src/java/org/apache/lucene/search/SimilarityDelegator.java
===================================================================
--- src/java/org/apache/lucene/search/SimilarityDelegator.java	(revision 826485)
+++ src/java/org/apache/lucene/search/SimilarityDelegator.java	(working copy)
@@ -62,7 +62,17 @@
     return delegee.coord(overlap, maxOverlap);
   }
 
+  /**
+   * @see #scorePayload(int, String, int, int, byte[], int, int)
+   * @deprecated 
+   */
+  @Deprecated
   public float scorePayload(String fieldName, byte[] payload, int offset, int length) {
     return delegee.scorePayload(fieldName, payload, offset, length);
   }
+  
+  public float scorePayload(int docId, String fieldName, int start, int end, byte [] payload, int offset, int length) {
+    return delegee.scorePayload(docId, fieldName, start, end, payload, offset, length);
+  }
+
 }
