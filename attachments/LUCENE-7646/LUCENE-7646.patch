diff --git a/lucene/core/src/test/org/apache/lucene/util/automaton/TestCompiledAutomaton.java b/lucene/core/src/test/org/apache/lucene/util/automaton/TestCompiledAutomaton.java
index 3a65cb8..4902ad2 100644
--- a/lucene/core/src/test/org/apache/lucene/util/automaton/TestCompiledAutomaton.java
+++ b/lucene/core/src/test/org/apache/lucene/util/automaton/TestCompiledAutomaton.java
@@ -24,8 +24,20 @@ import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
+import org.apache.lucene.document.Document;
+import org.apache.lucene.document.Field;
+import org.apache.lucene.index.AutomatonTermsEnum;
+import org.apache.lucene.index.DirectoryReader;
+import org.apache.lucene.index.Fields;
+import org.apache.lucene.index.IndexWriter;
+import org.apache.lucene.index.IndexWriterConfig;
+import org.apache.lucene.index.MultiFields;
+import org.apache.lucene.index.Terms;
+import org.apache.lucene.index.TermsEnum;
+import org.apache.lucene.store.Directory;
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.BytesRefBuilder;
+import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.lucene.util.TestUtil;
 
@@ -160,4 +172,20 @@ public class TestCompiledAutomaton extends LuceneTestCase {
     CompiledAutomaton ca = new CompiledAutomaton(a, null, true, Integer.MAX_VALUE, false);
     assertEquals(CompiledAutomaton.AUTOMATON_TYPE.SINGLE, ca.type);
   }
+
+  public void testSillyRegexp() throws Exception {
+    Directory dir = newDirectory();
+    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig());
+    Document doc = new Document();
+    doc.add(newTextField("text", "text", Field.Store.NO));
+    w.addDocument(doc);
+    DirectoryReader reader = DirectoryReader.open(w);
+    
+    Fields fields = MultiFields.getFields(reader);
+    Terms terms = fields.terms("text");
+    TermsEnum termsEnum = terms.iterator();
+    CompiledAutomaton automaton = new CompiledAutomaton(new RegExp("..").toAutomaton());
+    TermsEnum termsEnum2 = new AutomatonTermsEnum(termsEnum, automaton);
+    IOUtils.close(reader, w, dir);
+  }  
 }
