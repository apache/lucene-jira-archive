diff --git a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java
index 21ade91..0790035 100644
--- a/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java
+++ b/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecContentSource.java
@@ -147,8 +147,6 @@ public class TrecContentSource extends ContentSource {
         continue;
       }
 
-      line.length();
-
       if (lineStart!=null && line.startsWith(lineStart)) {
         if (collectMatchLine) {
           buf.append(sep).append(line);
diff --git a/lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesFieldUpdates.java b/lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesFieldUpdates.java
index a5b817f..684afef 100644
--- a/lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesFieldUpdates.java
+++ b/lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesFieldUpdates.java
@@ -169,12 +169,12 @@ class BinaryDocValuesFieldUpdates extends DocValuesFieldUpdates {
   @Override
   public void merge(DocValuesFieldUpdates other) {
     BinaryDocValuesFieldUpdates otherUpdates = (BinaryDocValuesFieldUpdates) other;
-    int newSize = size  + otherUpdates.size;
-    if (newSize > Integer.MAX_VALUE) {
+    if (otherUpdates.size > Integer.MAX_VALUE - size) {
       throw new IllegalStateException(
           "cannot support more than Integer.MAX_VALUE doc/value entries; size="
               + size + " other.size=" + otherUpdates.size);
     }
+    final int newSize = size  + otherUpdates.size;
     docs = docs.grow(newSize);
     offsets = offsets.grow(newSize);
     lengths = lengths.grow(newSize);
diff --git a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
index a9be2f7..9d574f3 100644
--- a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
+++ b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java
@@ -567,7 +567,6 @@ public class CheckIndex implements Closeable {
     }
 
     String sFormat = "";
-    boolean skip = false;
 
     result.segmentsFileName = segmentsFileName;
     result.numSegments = numSegments;
@@ -605,11 +604,6 @@ public class CheckIndex implements Closeable {
       msg(infoStream, ":");
     }
 
-    if (skip) {
-      msg(infoStream, "\nERROR: this index appears to be created by a newer version of Lucene than this tool was compiled on; please re-compile this tool on the matching version of Lucene; exiting");
-      result.toolOutOfDate = true;
-      return result;
-    }
 
 
     result.newSegments = sis.clone();
diff --git a/lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.java b/lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.java
index dd6e859..641c594 100644
--- a/lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.java
+++ b/lucene/core/src/java/org/apache/lucene/index/NumericDocValuesFieldUpdates.java
@@ -144,7 +144,7 @@ class NumericDocValuesFieldUpdates extends DocValuesFieldUpdates {
   public void merge(DocValuesFieldUpdates other) {
     assert other instanceof NumericDocValuesFieldUpdates;
     NumericDocValuesFieldUpdates otherUpdates = (NumericDocValuesFieldUpdates) other;
-    if (size  + otherUpdates.size > Integer.MAX_VALUE) {
+    if (otherUpdates.size > Integer.MAX_VALUE - size) {
       throw new IllegalStateException(
           "cannot support more than Integer.MAX_VALUE doc/value entries; size="
               + size + " other.size=" + otherUpdates.size);
