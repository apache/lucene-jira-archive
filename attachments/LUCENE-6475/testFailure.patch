Index: lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane.java
===================================================================
--- lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane.java	(revision 1678705)
+++ lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane.java	(working copy)
@@ -814,7 +814,14 @@
         //System.err.println("Trial point evaluates to: "+(E*trialX*trialX + F*trialY*trialY + G*trialX*trialY + H*trialX + I*trialY + J));
 
         // Check if the origin is within, by substituting x = 0, y = 0 and seeing if less than zero
-        if (Math.abs(J) >= MINIMUM_RESOLUTION && J > 0.0) {
+        if (Math.abs(J) < MINIMUM_RESOLUTION || J < 0.0) {
+          // Origin is within, OR the origin is on the curve.
+          // We can't determine bounds.  As a precaution, mark as unbounded, but only if there
+          // are no constraints.
+          if (bounds.length == 0) {
+            boundsInfo.noLongitudeBound();
+          }
+        } else {
           // The derivative of the curve above is:
           // 2Exdx + 2Fydy + G(xdy+ydx) + Hdx + Idy = 0
           // (2Ex + Gy + H)dx + (2Fy + Gx + I)dy = 0
@@ -867,7 +874,7 @@
             double sqrtClause = b * b - 4.0 * a * c;
             //System.out.println("sqrtClause="+sqrtClause);
 
-            if (Math.abs(sqrtClause) < MINIMUM_RESOLUTION_SQUARED) {
+            if (Math.abs(sqrtClause) < MINIMUM_RESOLUTION_CUBED) {
               //System.err.println(" One solution");
               double y0 = -b / (2.0 * a);
               double x0 = (-2.0 * J - I * y0) / H;
@@ -918,7 +925,7 @@
             //System.out.println("a="+a+" b="+b+" c="+c);
             double sqrtClause = b * b - 4.0 * a * c;
             //System.out.println("sqrtClause="+sqrtClause);
-            if (Math.abs(sqrtClause) < MINIMUM_RESOLUTION_SQUARED) {
+            if (Math.abs(sqrtClause) < MINIMUM_RESOLUTION_CUBED) {
               //System.err.println(" One solution; sqrt clause was "+sqrtClause);
               double x0 = -b / (2.0 * a);
               double y0 = (-2.0 * J - H * x0) / I;
Index: lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector.java
===================================================================
--- lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector.java	(revision 1678705)
+++ lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Vector.java	(working copy)
@@ -34,6 +34,8 @@
    */
   public static final double MINIMUM_RESOLUTION_SQUARED = MINIMUM_RESOLUTION * MINIMUM_RESOLUTION;
 
+  public static final double MINIMUM_RESOLUTION_CUBED = MINIMUM_RESOLUTION_SQUARED * MINIMUM_RESOLUTION;
+
   public final double x;
   public final double y;
   public final double z;
