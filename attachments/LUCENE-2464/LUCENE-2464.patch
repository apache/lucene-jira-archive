Index: contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SingleFragListBuilderTest.java
===================================================================
--- contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SingleFragListBuilderTest.java	(revision 0)
+++ contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SingleFragListBuilderTest.java	(revision 0)
@@ -0,0 +1,52 @@
+package org.apache.lucene.search.vectorhighlight;
+
+import org.apache.lucene.search.Query;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+public class SingleFragListBuilderTest extends AbstractTestCase {
+  
+  public void testNullFieldFragList() throws Exception {
+    SingleFragListBuilder sflb = new SingleFragListBuilder();
+    FieldFragList ffl = sflb.createFieldFragList( fpl( "a", "b c d" ), 100 );
+    assertEquals( 0, ffl.fragInfos.size() );
+  }
+  
+  public void testShortFieldFragList() throws Exception {
+    SingleFragListBuilder sflb = new SingleFragListBuilder();
+    FieldFragList ffl = sflb.createFieldFragList( fpl( "a", "a b c d" ), 100 );
+    assertEquals( 1, ffl.fragInfos.size() );
+    assertEquals( "subInfos=(a((0,1)))/1.0(0,2147483647)", ffl.fragInfos.get( 0 ).toString() );
+  }
+  
+  public void testLongFieldFragList() throws Exception {
+    SingleFragListBuilder sflb = new SingleFragListBuilder();
+    FieldFragList ffl = sflb.createFieldFragList( fpl( "a", "a b c d", "a b c d e f g h i", "j k l m n o p q r s t u v w x y z a b c", "d e f g" ), 100 );
+    assertEquals( 1, ffl.fragInfos.size() );
+    assertEquals( "subInfos=(a((0,1))a((8,9))a((60,61)))/3.0(0,2147483647)", ffl.fragInfos.get( 0 ).toString() );
+  }
+
+  private FieldPhraseList fpl( String queryValue, String... indexValues ) throws Exception {
+    make1dmfIndex( indexValues );
+    Query query = paW.parse( queryValue );
+    FieldQuery fq = new FieldQuery( query, true, true );
+    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );
+    return new FieldPhraseList( stack, fq );
+  }
+
+}
Index: contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SingleFragListBuilder.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SingleFragListBuilder.java	(revision 0)
+++ contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SingleFragListBuilder.java	(revision 0)
@@ -0,0 +1,58 @@
+package org.apache.lucene.search.vectorhighlight;
+
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+import org.apache.lucene.search.vectorhighlight.FieldFragList.WeightedFragInfo;
+import org.apache.lucene.search.vectorhighlight.FieldPhraseList.WeightedPhraseInfo;
+
+/**
+ * An implementation class of {@link FragListBuilder} that generates one {@link WeightedFragInfo} object.
+ * Typical use case of this class is that you can get an entire field contents
+ * by using both of this class and {@link SimpleFragmentsBuilder}.<br/>
+ * <pre>
+ * FastVectorHighlighter h = new FastVectorHighlighter( true, true,
+ *   new SingleFragListBuilder(), new SimpleFragmentsBuilder() );
+ * </pre>
+ */
+public class SingleFragListBuilder implements FragListBuilder {
+
+  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList,
+      int fragCharSize) {
+
+    FieldFragList ffl = new FieldFragList( fragCharSize );
+
+    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();
+    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();
+    WeightedPhraseInfo phraseInfo = null;
+    while( true ){
+      if( !ite.hasNext() ) break;
+      phraseInfo = ite.next();
+      if( phraseInfo == null ) break;
+
+      wpil.add( phraseInfo );
+    }
+    if( wpil.size() > 0 )
+      ffl.add( 0, Integer.MAX_VALUE, wpil );
+    return ffl;
+  }
+
+}
Index: contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder.java
===================================================================
--- contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder.java	(revision 949526)
+++ contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder.java	(working copy)
@@ -24,7 +24,7 @@
 import org.apache.lucene.search.vectorhighlight.FieldPhraseList.WeightedPhraseInfo;
 
 /**
- * A simple implementation of FragListBuilder.
+ * A simple implementation of {@link FragListBuilder}.
  */
 public class SimpleFragListBuilder implements FragListBuilder {
   
