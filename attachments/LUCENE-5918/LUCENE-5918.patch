Index: build.xml
===================================================================
--- build.xml	(revision 1621969)
+++ build.xml	(working copy)
@@ -96,7 +96,6 @@
       <fileset dir="${validate.currDir}">
         <include name="**/*.java"/>
         <include name="**/*.py"/>
-        <exclude name="**/backwards/**"/>
         <or>
           <containsregexp expression="@author\b" casesensitive="yes"/>
           <containsregexp expression="\bno(n|)commit\b" casesensitive="no"/>
@@ -217,7 +216,7 @@
   <target name="netbeans" depends="resolve" description="Setup Netbeans configuration">
     <pathconvert property="netbeans.fileset.sourcefolders" pathsep="|" dirsep="/">
       <dirset dir="${basedir}/lucene" includes="**/src/java, **/src/examples, **/src/test, **/src/resources" 
-              excludes="tools/**, build/**, backwards/**" />
+              excludes="tools/**, build/**" />
       <dirset dir="${basedir}/solr" includes="**/src/java, **/src/examples, **/src/test, **/src/resources" 
               excludes="build/**" />
       <map from="${basedir}/" to=""/>
@@ -260,7 +259,7 @@
     </copy>
     
     <pathconvert property="eclipse.fileset.sourcefolders" pathsep="|" dirsep="/">
-      <dirset dir="${basedir}/lucene" includes="**/src/java, **/src/resources, **/src/test, **/src/test-files, **/src/examples" excludes="tools/**, build/**, backwards/**" />
+      <dirset dir="${basedir}/lucene" includes="**/src/java, **/src/resources, **/src/test, **/src/test-files, **/src/examples" excludes="tools/**, build/**" />
       <dirset dir="${basedir}/solr" includes="**/src/java, **/src/resources, **/src/test, **/src/test-files, **/src/examples" excludes="build/**" />
       <map from="${basedir}/" to=""/>
     </pathconvert>
Index: dev-tools/scripts/smokeTestRelease.py
===================================================================
--- dev-tools/scripts/smokeTestRelease.py	(revision 1621969)
+++ dev-tools/scripts/smokeTestRelease.py	(working copy)
@@ -671,7 +671,7 @@
     # TODO: clean this up to not be a list of modules that we must maintain
     extras = ('analysis', 'backward-codecs', 'benchmark', 'classification', 'codecs', 'core', 'demo', 'docs', 'expressions', 'facet', 'grouping', 'highlighter', 'join', 'memory', 'misc', 'queries', 'queryparser', 'replicator', 'sandbox', 'spatial', 'suggest', 'test-framework', 'licenses')
     if isSrc:
-      extras += ('build.xml', 'common-build.xml', 'module-build.xml', 'ivy-settings.xml', 'ivy-versions.properties', 'ivy-ignore-conflicts.properties', 'version.properties', 'backwards', 'tools', 'site')
+      extras += ('build.xml', 'common-build.xml', 'module-build.xml', 'ivy-settings.xml', 'ivy-versions.properties', 'ivy-ignore-conflicts.properties', 'version.properties', 'tools', 'site')
   else:
     extras = ()
 
Index: extra-targets.xml
===================================================================
--- extra-targets.xml	(revision 1621969)
+++ extra-targets.xml	(working copy)
@@ -59,7 +59,6 @@
     <mkdir dir="${clover.report.dir}"/>
     <fileset dir="." id="clover.test.result.files">
       <include name="*/build/**/test/TEST-*.xml"/>
-      <exclude name="lucene/build/backwards/**"/>
     </fileset>
     <clover-report projectName="Apache Lucene/Solr">
       <current outfile="${clover.report.dir}" title="Apache Lucene/Solr ${version}" numThreads="0">
Index: lucene/backwards/backwards-readme.txt
===================================================================
--- lucene/backwards/backwards-readme.txt	(revision 1621969)
+++ lucene/backwards/backwards-readme.txt	(working copy)
@@ -1,21 +0,0 @@
-This folder contains the src/ folder of the previous Lucene major version.
-
-The test-backwards ANT task compiles the previous version's tests (bundled) against the
-previous released lucene-core.jar file (bundled). After that the compiled test classes
-are run against the new lucene-core.jar file, created by ANT before.
-
-After tagging a new Lucene *major* version (tag name "lucene_solr_X_Y_0") do the following
-(for minor versions never do this); also always use the x.y.0 version for the backwards folder,
-later bugfix releases should not be tested (the reason is that the new version must be backwards
-compatible to the last base version, bugfixes should not taken into account):
-
-* cd lucene/backwards
-* svn rm core/src/test test-framework lib/lucene-core*.jar
-* svn commit (1st commit; you must do this, else you will corrupt your checkout)
-* svn cp https://svn.apache.org/repos/asf/lucene/dev/tags/lucene_solr_X_Y_0/lucene/test-framework ./
-* svn cp https://svn.apache.org/repos/asf/lucene/dev/tags/lucene_solr_X_Y_0/lucene/core/src/test core/src/
-* Copy the lucene-core.jar from the last release tarball to lib.
-* Check that everything is correct: The backwards folder should contain folders "core/src/test/"
-  and "test-framework/". The files should be the ones from the last version.
-* Run "ant test-backwards"
-* Commit the stuff again (2nd commit)
Index: lucene/backwards/backwards-readme.txt
===================================================================
--- lucene/backwards/backwards-readme.txt	(revision 1621969)
+++ lucene/backwards/backwards-readme.txt	(working copy)
@@ -1,21 +0,0 @@
-This folder contains the src/ folder of the previous Lucene major version.
-
-The test-backwards ANT task compiles the previous version's tests (bundled) against the
-previous released lucene-core.jar file (bundled). After that the compiled test classes
-are run against the new lucene-core.jar file, created by ANT before.
-
-After tagging a new Lucene *major* version (tag name "lucene_solr_X_Y_0") do the following
-(for minor versions never do this); also always use the x.y.0 version for the backwards folder,
-later bugfix releases should not be tested (the reason is that the new version must be backwards
-compatible to the last base version, bugfixes should not taken into account):
-
-* cd lucene/backwards
-* svn rm core/src/test test-framework lib/lucene-core*.jar
-* svn commit (1st commit; you must do this, else you will corrupt your checkout)
-* svn cp https://svn.apache.org/repos/asf/lucene/dev/tags/lucene_solr_X_Y_0/lucene/test-framework ./
-* svn cp https://svn.apache.org/repos/asf/lucene/dev/tags/lucene_solr_X_Y_0/lucene/core/src/test core/src/
-* Copy the lucene-core.jar from the last release tarball to lib.
-* Check that everything is correct: The backwards folder should contain folders "core/src/test/"
-  and "test-framework/". The files should be the ones from the last version.
-* Run "ant test-backwards"
-* Commit the stuff again (2nd commit)
Index: lucene/build.xml
===================================================================
--- lucene/build.xml	(revision 1621969)
+++ lucene/build.xml	(working copy)
@@ -52,7 +52,7 @@
   </target>
 
   <!-- "-clover.load" is *not* a useless dependency. do not remove -->
-  <target name="test" depends="-clover.load, -init-totals, test-core, test-modules, test-backwards, -check-totals"
+  <target name="test" depends="-clover.load, -init-totals, test-core, test-modules, -check-totals"
           description="Runs all unit tests (core, modules and back-compat)"
   />
 
@@ -60,88 +60,6 @@
           description="Runs pitests (core, modules and back-compat)"
   />
 
-  <path id="backwards.test.compile.classpath">
-    <path refid="junit-path"/>
-    <path refid="ant-path"/>
-    <fileset dir="${backwards.dir}/lib">
-      <include name="lucene-core*.jar"/>
-    </fileset>
-  </path>
-	
-  <path id="backwards.junit.classpath">
-    <path refid="junit-path"/>
-    <path refid="classpath"/>
-    <pathelement location="${build.dir.backwards}/classes/test"/>
-    <pathelement path="${java.class.path}"/>
-  </path>
-
-  <target name="compile-backwards" depends="compile-core"
-  	description="Runs tests of a previous Lucene version.">
-	<sequential>
-      <mkdir dir="${build.dir.backwards}"/>	  
-      
-      <!-- TODO: separate test-framework from core tests (because META-INF duplicates in trunk) -->
-      
-      <!-- compile branch tests against previous version JAR file -->	
-      <compile-test-macro srcdir="${backwards.dir}/test-framework/src/java" destdir="${build.dir.backwards}/classes/test"
-                  test.classpath="backwards.test.compile.classpath" javac.source="${javac.source.backwards}" javac.target="${javac.target.backwards}"/>
-      <!-- Copy the resources folder (if existent) -->
-      <copy todir="${build.dir.backwards}/classes/test">
-        <fileset dir="${backwards.dir}/test-framework/src/resources" erroronmissingdir="no"/>
-      </copy>
-      <compile-test-macro srcdir="${backwards.dir}/core/src/test" destdir="${build.dir.backwards}/classes/test"
-                  test.classpath="backwards.test.compile.classpath" javac.source="${javac.source.backwards}" javac.target="${javac.target.backwards}"/>
-      
-
-  	</sequential>
-  </target>	
-
-  <target name="backwards-test-warning" depends="check-backwards-params" if="backwards.ignoring.params">
-    <echo>
-       Warning: Ignoring your multiplier and nightly settings for backwards tests.
-       These tests are for API compatibility only!
-    </echo>
-  </target>
-
-  <!--
-  Add dependency after 4.0: depends="compile-backwards, backwards-test-warning"
-  and uncomment inside of this target.
-  -->
-  <target name="test-backwards" depends="install-junit4-taskdef">
-    <!--
-    <mkdir dir="${build.dir.backwards}/test"/>
-    <backwards-test-macro/>
-    -->
-  </target>
-
-  <target name="check-backwards-params">
-    <condition property="backwards.ignoring.params">
-      <or>
-        <istrue value="${tests.nightly}"/>
-        <not><equals arg1="${tests.multiplier}" arg2="1"/></not>
-      </or>
-    </condition>
-  </target>
-
-  <macrodef name="backwards-test-macro">
-  	<attribute name="threadNum" default="1"/>
-  	<attribute name="threadTotal" default="1"/>
-  	<sequential>
-  	  <!-- run branch tests against trunk jar:
-          Note: we disable multiplier/nightly because the purpose is to find API breaks
-          -->
-      <test-macro 
-        dataDir="${backwards.dir}/core/src/test" 
-        workDir="${build.dir.backwards}/test" 
-        junit.classpath="backwards.junit.classpath" 
-        junit.output.dir="${junit.output.dir.backwards}" 
-        tests.nightly="false"
-        tests.multiplier="1"
-        threadNum="@{threadNum}" 
-        threadTotal="@{threadTotal}"/>
-    </sequential>
-  </macrodef>
-
   <target name="compile-core" depends="compile-lucene-core"/>
 
   <!-- lucene/test-framework is excluded from compilation -->
@@ -277,7 +195,7 @@
 
   <target name="process-webpages" depends="resolve-groovy,resolve-pegdown">
     <makeurl property="process-webpages.buildfiles" separator="|">
-      <fileset dir="." includes="**/build.xml" excludes="build.xml,analysis/*,build/**,tools/**,backwards/**,site/**"/>
+      <fileset dir="." includes="**/build.xml" excludes="build.xml,analysis/*,build/**,tools/**,site/**"/>
     </makeurl>
     <property name="Codec.java" location="core/src/java/org/apache/lucene/codecs/Codec.java"/>
     <loadfile srcfile="${Codec.java}" property="defaultCodecPackage">
Index: lucene/common-build.xml
===================================================================
--- lucene/common-build.xml	(revision 1621969)
+++ lucene/common-build.xml	(working copy)
@@ -167,8 +167,6 @@
   <property name="javac.debug" value="on"/>
   <property name="javac.source" value="1.7"/>
   <property name="javac.target" value="1.7"/>
-  <property name="javac.source.backwards" value="1.7"/>
-  <property name="javac.target.backwards" value="1.7"/>
   <property name="javac.args" value="-Xlint -Xlint:-deprecation -Xlint:-serial -Xlint:-options"/>
   <property name="javadoc.link" value="http://download.oracle.com/javase/7/docs/api/"/>
   <property name="javadoc.link.junit" value="http://junit.sourceforge.net/javadoc/"/>
@@ -238,13 +236,8 @@
   <property name="m2.repository.id" value="local"/>
   <property name="m2.credentials.prompt" value="true"/>
 
-  <property name="backwards.dir" location="backwards"/>
-  <property name="build.dir.backwards" location="${build.dir}/backwards"/>
-
   <property name="junit.output.dir" location="${build.dir}/test"/>
-  <property name="junit.output.dir.backwards" location="${build.dir.backwards}/test"/>
   <property name="junit.reports" location="${build.dir}/test/reports"/>
-  <property name="junit.reports.backwards" location="${build.dir.backwards}/test/reports"/>
 
   <property name="manifest.file" location="${build.dir}/MANIFEST.MF"/>
 
@@ -1476,17 +1469,6 @@
       </fileset>
       <report format="frames" todir="${junit.reports}"/>
     </junitreport>
-    
-    <mkdir dir="${junit.reports.backwards}"/>
-    <junitreport todir="${junit.output.dir.backwards}">
-      <!-- this fileset let's the task work for individual modules,
-           as well as the project as a whole
-       -->
-      <fileset dir="${build.dir.backwards}">
-        <include name="**/test/TEST-*.xml"/>
-      </fileset>
-      <report format="frames" todir="${junit.reports.backwards}"/>
-    </junitreport>
   </target>
 
   <target name="jar" depends="jar-core">
