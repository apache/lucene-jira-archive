Index: contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser.java	(revision 889587)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser.java	(working copy)
@@ -133,7 +133,7 @@
     final ParserExtension extension = this.extensions
         .getExtension(splitExtensionField.cud);
     if (extension != null) {
-      return extension.parse(new ExtensionQuery(splitExtensionField.cur,
+      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,
           queryText));
     }
     return super.getFieldQuery(field, queryText);
Index: contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtensionQuery.java
===================================================================
--- contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtensionQuery.java	(revision 889587)
+++ contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtensionQuery.java	(working copy)
@@ -1,5 +1,7 @@
 package org.apache.lucene.queryParser.ext;
 
+import org.apache.lucene.queryParser.QueryParser;
+
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
@@ -29,6 +31,7 @@
 
   private final String field;
   private final String rawQueryString;
+  private final QueryParser topLevelParser;
 
   /**
    * Creates a new {@link ExtensionQuery}
@@ -38,9 +41,10 @@
    * @param rawQueryString
    *          the raw extension query string
    */
-  public ExtensionQuery(String field, String rawQueryString) {
+  public ExtensionQuery(QueryParser topLevelParser, String field, String rawQueryString) {
     this.field = field;
     this.rawQueryString = rawQueryString;
+    this.topLevelParser = topLevelParser;
   }
 
   /**
@@ -60,4 +64,12 @@
   public String getRawQueryString() {
     return rawQueryString;
   }
+  
+  /**
+   * Returns the top level parser which created this {@link ExtensionQuery} 
+   * @return the top level parser which created this {@link ExtensionQuery}
+   */
+  public QueryParser getTopLevelParser() {
+    return topLevelParser;
+  }
 }
