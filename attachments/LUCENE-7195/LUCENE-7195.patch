diff --git a/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest.java b/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest.java
index 33840da..18f5c5c 100755
--- a/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest.java
+++ b/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest.java
@@ -378,4 +378,24 @@ shape:
     final GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, points, null);
   }
   
+  @Test
+  public void testPolygonOrdering() {
+    final List<GeoPoint> points = new ArrayList<>();
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(51.204382859999996), Math.toRadians(0.8747711978759765)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(50.89947531437482), Math.toRadians(0.6509219832137298)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(50.8093624806861), Math.toRadians(0.35960265165247807)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(50.8093624806861), Math.toRadians(0.10290284834752167)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(50.89947531437482), Math.toRadians(-0.18841648321373008)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(51.204382859999996), Math.toRadians(-0.41226569787597667)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(51.51015366140113), Math.toRadians(-0.18960465285650027)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(51.59953838204167), Math.toRadians(0.10285893781346236)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(51.59953838204167), Math.toRadians(0.35964656218653757)));
+    points.add(new GeoPoint(PlanetModel.WGS84, Math.toRadians(51.51015366140113), Math.toRadians(0.6521101528565002)));
+
+    final GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, points, null);
+    
+    final GeoPoint center = new GeoPoint(PlanetModel.WGS84, Math.toRadians(51.204382859999996), Math.toRadians(0.23125274999999992));
+    assertTrue(p.isWithin(center));
+  }
+  
 }
