Index: lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader.java
===================================================================
--- lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader.java	(revision 1605715)
+++ lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader.java	(working copy)
@@ -227,7 +227,7 @@
 
   @Override
   public NumericDocValues getNumericDocValues(String field) throws IOException {
-    Type v = mapping.get(field);
+    Type v = getType(field);
     if (v != null) {
       switch (v) {
         case INTEGER: return FieldCache.DEFAULT.getNumerics(in, field, FieldCache.NUMERIC_UTILS_INT_PARSER, true);
@@ -243,7 +243,7 @@
 
   @Override
   public BinaryDocValues getBinaryDocValues(String field) throws IOException {
-    Type v = mapping.get(field);
+    Type v = getType(field);
     if (v == Type.BINARY) {
       return FieldCache.DEFAULT.getTerms(in, field, true);
     } else if (v != null && v != Type.SORTED) {
@@ -255,7 +255,7 @@
 
   @Override
   public SortedDocValues getSortedDocValues(String field) throws IOException {
-    Type v = mapping.get(field);
+    Type v = getType(field);
     if (v == Type.SORTED) {
       return FieldCache.DEFAULT.getTermsIndex(in, field);
     } else if (v != null) {
@@ -267,7 +267,7 @@
   
   @Override
   public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {
-    Type v = mapping.get(field);
+    Type v = getType(field);
     if (v != null) {
       switch (v) {
         case SORTED_SET_INTEGER:
@@ -289,12 +289,24 @@
 
   @Override
   public Bits getDocsWithField(String field) throws IOException {
-    if (mapping.containsKey(field)) {
+    if (getType(field) != null) {
       return FieldCache.DEFAULT.getDocsWithField(in, field);
     } else {
       return in.getDocsWithField(field);
     }
   }
+  
+  /** 
+   * Returns the field's uninversion type, or null 
+   * if the field doesn't exist or doesn't have a mapping.
+   */
+  private Type getType(String field) {
+    FieldInfo info = fieldInfos.fieldInfo(field);
+    if (info == null || info.hasDocValues() == false) {
+      return null;
+    }
+    return mapping.get(field);
+  }
 
   @Override
   public Object getCoreCacheKey() {
