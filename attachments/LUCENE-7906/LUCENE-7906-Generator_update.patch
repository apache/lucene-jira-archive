Index: lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/RandomGeo3dShapeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/RandomGeo3dShapeGenerator.java	(revision d45ff7b601c2c13618486575def4544836aca7e5)
+++ lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/RandomGeo3dShapeGenerator.java	(revision )
@@ -174,13 +174,13 @@
   public GeoPoint randomGeoPoint(PlanetModel planetModel, Constraints constraints) {
     int iterations = 0;
     while (iterations < MAX_POINT_ITERATIONS) {
-      double lat = randomDouble();
-      if (Math.PI/2 - Math.abs(lat)  <0){
-        continue;
+      double lat = randomDouble() * Math.PI/2;
+      if (random().nextBoolean()) {
+        lat = (-1)*lat;
       }
-      double lon =  randomDouble();
-      if (Math.PI - Math.abs(lat)   <0){
-        continue;
+      double lon =  randomDouble() * Math.PI;
+      if (random().nextBoolean()) {
+        lon = (-1)*lon;
       }
       iterations++;
       GeoPoint point = new GeoPoint(planetModel, lat, lon);
@@ -810,13 +810,7 @@
    * @return the cutoff angle.
    */
   private double randomCutoffAngle() {
-    while(true) {
-      double radius = randomDouble();
-      if (radius <0 || radius > Math.PI){
-        continue;
-      }
-      return radius;
-    }
+    return randomDouble() * Math.PI;
   }
 
   /**
